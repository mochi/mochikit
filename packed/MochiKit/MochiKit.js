/***

    MochiKit.MochiKit 1.3 : PACKED VERSION

    THIS FILE IS AUTOMATICALLY GENERATED.  If creating patches, please
    diff against the source tree, not this file.

    See <http://mochikit.com/> for documentation, downloads, license, etc.

    (c) 2005 Bob Ippolito.  All rights Reserved.

***/

if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Base");
}
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.Base)=="undefined"){
MochiKit.Base={};
}
MochiKit.Base.VERSION="1.3";
MochiKit.Base.NAME="MochiKit.Base";
MochiKit.Base.update=function(_1,_2){
if(_1===null){
_1={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
_1[k]=o[k];
}
}
}
return _1;
};
MochiKit.Base.update(MochiKit.Base,{__repr__:function(){
return "["+this.NAME+" "+this.VERSION+"]";
},toString:function(){
return this.__repr__();
},counter:function(n){
if(arguments.length===0){
n=1;
}
return function(){
return n++;
};
},clone:function(_7){
var me=arguments.callee;
if(arguments.length==1){
me.prototype=_7;
return new me();
}
},flattenArguments:function(_9){
var res=[];
var m=MochiKit.Base;
var _12=m.extend(null,arguments);
while(_12.length){
var o=_12.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
for(var i=o.length-1;i>=0;i--){
_12.unshift(o[i]);
}
}else{
res.push(o);
}
}
return res;
},extend:function(_13,obj,_15){
if(!_15){
_15=0;
}
if(obj){
var l=obj.length;
if(typeof (l)!="number"){
if(typeof (MochiKit.Iter)!="undefined"){
obj=MochiKit.Iter.list(obj);
l=obj.length;
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(!_13){
_13=[];
}
for(var i=_15;i<l;i++){
_13.push(obj[i]);
}
}
return _13;
},updatetree:function(_17,obj){
if(_17===null){
_17={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
var v=o[k];
if(typeof (_17[k])=="object"&&typeof (v)=="object"){
arguments.callee(_17[k],v);
}else{
_17[k]=v;
}
}
}
}
return _17;
},setdefault:function(_19,obj){
if(_19===null){
_19={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
for(var k in o){
if(!(k in _19)){
_19[k]=o[k];
}
}
}
return _19;
},keys:function(obj){
var _20=[];
for(var _21 in obj){
_20.push(_21);
}
return _20;
},items:function(obj){
var _22=[];
var e;
for(var _24 in obj){
var v;
try{
v=obj[_24];
}
catch(e){
continue;
}
_22.push([_24,v]);
}
return _22;
},_newNamedError:function(_25,_26,_27){
_27.prototype=new MochiKit.Base.NamedError(_25.NAME+"."+_26);
_25[_26]=_27;
},operator:{truth:function(a){
return !!a;
},lognot:function(a){
return !a;
},identity:function(a){
return a;
},not:function(a){
return ~a;
},neg:function(a){
return -a;
},add:function(a,b){
return a+b;
},sub:function(a,b){
return a-b;
},div:function(a,b){
return a/b;
},mod:function(a,b){
return a%b;
},mul:function(a,b){
return a*b;
},and:function(a,b){
return a&b;
},or:function(a,b){
return a|b;
},xor:function(a,b){
return a^b;
},lshift:function(a,b){
return a<<b;
},rshift:function(a,b){
return a>>b;
},zrshift:function(a,b){
return a>>>b;
},eq:function(a,b){
return a==b;
},ne:function(a,b){
return a!=b;
},gt:function(a,b){
return a>b;
},ge:function(a,b){
return a>=b;
},lt:function(a,b){
return a<b;
},le:function(a,b){
return a<=b;
},ceq:function(a,b){
return MochiKit.Base.compare(a,b)===0;
},cne:function(a,b){
return MochiKit.Base.compare(a,b)!==0;
},cgt:function(a,b){
return MochiKit.Base.compare(a,b)==1;
},cge:function(a,b){
return MochiKit.Base.compare(a,b)!=-1;
},clt:function(a,b){
return MochiKit.Base.compare(a,b)==-1;
},cle:function(a,b){
return MochiKit.Base.compare(a,b)!=1;
},logand:function(a,b){
return a&&b;
},logor:function(a,b){
return a||b;
},contains:function(a,b){
return b in a;
}},forwardCall:function(_30){
return function(){
return this[_30].apply(this,arguments);
};
},itemgetter:function(_31){
return function(arg){
return arg[_31];
};
},typeMatcher:function(){
var _33={};
for(var i=0;i<arguments.length;i++){
var typ=arguments[i];
_33[typ]=typ;
}
return function(){
for(var i=0;i<arguments.length;i++){
if(!(typeof (arguments[i]) in _33)){
return false;
}
}
return true;
};
},isNull:function(){
for(var i=0;i<arguments.length;i++){
if(arguments[i]!==null){
return false;
}
}
return true;
},isUndefinedOrNull:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(typeof (o)=="undefined"||o===null)){
return false;
}
}
return true;
},isEmpty:function(obj){
return !MochiKit.Base.isNotEmpty.apply(this,arguments);
},isNotEmpty:function(obj){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(o&&o.length)){
return false;
}
}
return true;
},isArrayLike:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
var typ=typeof (o);
if((typ!="object"&&!(typ=="function"&&typeof (o.item)=="function"))||o===null||typeof (o.length)!="number"){
return false;
}
}
return true;
},isDateLike:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="object"||o===null||typeof (o.getTime)!="function"){
return false;
}
}
return true;
},xmap:function(fn){
if(fn===null){
return MochiKit.Base.extend(null,arguments,1);
}
var _36=[];
for(var i=1;i<arguments.length;i++){
_36.push(fn(arguments[i]));
}
return _36;
},map:function(fn,lst){
var m=MochiKit.Base;
var _38=m.isArrayLike;
if(arguments.length<=2){
if(!_38(lst)){
if(MochiKit.Iter){
lst=MochiKit.Iter.list(lst);
if(fn===null){
return lst;
}
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
return m.extend(null,lst);
}
var _39=[];
for(var i=0;i<lst.length;i++){
_39.push(fn(lst[i]));
}
return _39;
}else{
if(fn===null){
fn=Array;
}
var _40=null;
for(i=1;i<arguments.length;i++){
if(!_38(arguments[i])){
if(MochiKit.Iter){
arguments[i]=MochiKit.Iter.list(arguments[i]);
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
var l=arguments[i].length;
if(_40===null||_40>l){
_40=l;
}
}
_39=[];
for(i=0;i<_40;i++){
var _41=[];
for(var j=1;j<arguments.length;j++){
_41.push(arguments[j][i]);
}
_39.push(fn.apply(this,_41));
}
return _39;
}
},xfilter:function(fn){
var _43=[];
if(fn===null){
fn=MochiKit.Base.operator.truth;
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(fn(o)){
_43.push(o);
}
}
return _43;
},filter:function(fn,lst,_44){
var _45=[];
var m=MochiKit.Base;
if(!m.isArrayLike(lst)){
if(MochiKit.Iter){
lst=MochiKit.Iter.list(lst);
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
fn=m.operator.truth;
}
if(typeof (Array.prototype.filter)=="function"){
return Array.prototype.filter.call(lst,fn,_44);
}else{
if(typeof (_44)=="undefined"||_44===null){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(fn(o)){
_45.push(o);
}
}
}else{
for(i=0;i<lst.length;i++){
o=lst[i];
if(fn.call(_44,o)){
_45.push(o);
}
}
}
}
return _45;
},_wrapDumbFunction:function(_46){
return function(){
switch(arguments.length){
case 0:
return _46();
case 1:
return _46(arguments[0]);
case 2:
return _46(arguments[0],arguments[1]);
case 3:
return _46(arguments[0],arguments[1],arguments[2]);
}
var _47=[];
for(var i=0;i<arguments.length;i++){
_47.push("arguments["+i+"]");
}
return eval("(func("+_47.join(",")+"))");
};
},method:function(_48,_49){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([_49,_48],arguments,2));
},bind:function(_50,_51){
if(typeof (_50)=="string"){
_50=_51[_50];
}
var _52=_50.im_func;
var _53=_50.im_preargs;
var _54=_50.im_self;
var m=MochiKit.Base;
if(typeof (_50)=="function"&&typeof (_50.apply)=="undefined"){
_50=m._wrapDumbFunction(_50);
}
if(typeof (_52)!="function"){
_52=_50;
}
if(typeof (_51)!="undefined"){
_54=_51;
}
if(typeof (_53)=="undefined"){
_53=[];
}else{
_53=_53.slice();
}
m.extend(_53,arguments,2);
var _55=function(){
var _56=arguments;
var me=arguments.callee;
if(me.im_preargs.length>0){
_56=m.concat(me.im_preargs,_56);
}
var _51=me.im_self;
if(!_51){
_51=this;
}
return me.im_func.apply(_51,_56);
};
_55.im_self=_54;
_55.im_func=_52;
_55.im_preargs=_53;
return _55;
},bindMethods:function(_57){
var _58=MochiKit.Base.bind;
for(var k in _57){
var _59=_57[k];
if(typeof (_59)=="function"){
_57[k]=_58(_59,_57);
}
}
},registerComparator:function(_60,_61,_62,_63){
MochiKit.Base.comparatorRegistry.register(_60,_61,_62,_63);
},_primitives:{"bool":true,"string":true,"number":true},compare:function(a,b){
if(a==b){
return 0;
}
var _64=(typeof (a)=="undefined"||a===null);
var _65=(typeof (b)=="undefined"||b===null);
if(_64&&_65){
return 0;
}else{
if(_64){
return -1;
}else{
if(_65){
return 1;
}
}
}
var m=MochiKit.Base;
var _66=m._primitives;
if(!(typeof (a) in _66&&typeof (b) in _66)){
try{
return m.comparatorRegistry.match(a,b);
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
}
if(a<b){
return -1;
}else{
if(a>b){
return 1;
}
}
var _67=m.repr;
throw new TypeError(_67(a)+" and "+_67(b)+" can not be compared");
},compareDateLike:function(a,b){
return MochiKit.Base.compare(a.getTime(),b.getTime());
},compareArrayLike:function(a,b){
var _68=MochiKit.Base.compare;
var _69=a.length;
var _70=0;
if(_69>b.length){
_70=1;
_69=b.length;
}else{
if(_69<b.length){
_70=-1;
}
}
for(var i=0;i<_69;i++){
var cmp=_68(a[i],b[i]);
if(cmp){
return cmp;
}
}
return _70;
},registerRepr:function(_72,_73,_74,_75){
MochiKit.Base.reprRegistry.register(_72,_73,_74,_75);
},repr:function(o){
if(typeof (o)=="undefined"){
return "undefined";
}else{
if(o===null){
return "null";
}
}
try{
if(typeof (o.__repr__)=="function"){
return o.__repr__();
}else{
if(typeof (o.repr)=="function"&&o.repr!=arguments.callee){
return o.repr();
}
}
return MochiKit.Base.reprRegistry.match(o);
}
catch(e){
if(typeof (o.NAME)=="string"&&(o.toString==Function.prototype.toString||o.toString==Object.prototype.toString)){
return o.NAME;
}
}
try{
var _76=(o+"");
}
catch(e){
return "["+typeof (o)+"]";
}
if(typeof (o)=="function"){
o=_76.replace(/^\s+/,"");
var idx=o.indexOf("{");
if(idx!=-1){
o=o.substr(0,idx)+"{...}";
}
}
return _76;
},reprArrayLike:function(o){
var m=MochiKit.Base;
return "["+m.map(m.repr,o).join(", ")+"]";
},reprString:function(o){
return ("\""+o.replace(/(["\\])/g,"\\$1")+"\"").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\r]/g,"\\r");
},reprNumber:function(o){
return o+"";
},registerJSON:function(_78,_79,_80,_81){
MochiKit.Base.jsonRegistry.register(_78,_79,_80,_81);
},evalJSON:function(){
return eval("("+arguments[0]+")");
},serializeJSON:function(o){
var _82=typeof (o);
if(_82=="undefined"){
return "undefined";
}else{
if(_82=="number"||_82=="boolean"){
return o+"";
}else{
if(o===null){
return "null";
}
}
}
var m=MochiKit.Base;
var _83=m.reprString;
if(_82=="string"){
return _83(o);
}
var me=arguments.callee;
var _84;
if(typeof (o.__json__)=="function"){
_84=o.__json__();
if(o!==_84){
return me(_84);
}
}
if(typeof (o.json)=="function"){
_84=o.json();
if(o!==_84){
return me(_84);
}
}
if(_82!="function"&&typeof (o.length)=="number"){
var res=[];
for(var i=0;i<o.length;i++){
var val=me(o[i]);
if(typeof (val)!="string"){
val="undefined";
}
res.push(val);
}
return "["+res.join(", ")+"]";
}
try{
_84=m.jsonRegistry.match(o);
return me(_84);
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
if(_82=="function"){
return null;
}
res=[];
for(var k in o){
var _86;
if(typeof (k)=="number"){
_86="\""+k+"\"";
}else{
if(typeof (k)=="string"){
_86=_83(k);
}else{
continue;
}
}
val=me(o[k]);
if(typeof (val)!="string"){
continue;
}
res.push(_86+":"+val);
}
return "{"+res.join(", ")+"}";
},objEqual:function(a,b){
return (MochiKit.Base.compare(a,b)===0);
},arrayEqual:function(_87,arr){
if(_87.length!=arr.length){
return false;
}
return (MochiKit.Base.compare(_87,arr)===0);
},concat:function(){
var _89=[];
var _90=MochiKit.Base.extend;
for(var i=0;i<arguments.length;i++){
_90(_89,arguments[i]);
}
return _89;
},keyComparator:function(key){
var m=MochiKit.Base;
var _92=m.compare;
if(arguments.length==1){
return function(a,b){
return _92(a[key],b[key]);
};
}
var _93=m.extend(null,arguments);
return function(a,b){
var _94=0;
for(var i=0;(_94===0)&&(i<_93.length);i++){
var key=_93[i];
_94=_92(a[key],b[key]);
}
return _94;
};
},reverseKeyComparator:function(key){
var _95=MochiKit.Base.keyComparator.apply(this,arguments);
return function(a,b){
return _95(b,a);
};
},partial:function(_96){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([_96,undefined],arguments,1));
},listMinMax:function(_97,lst){
if(lst.length===0){
return null;
}
var cur=lst[0];
var _99=MochiKit.Base.compare;
for(var i=1;i<lst.length;i++){
var o=lst[i];
if(_99(o,cur)==_97){
cur=o;
}
}
return cur;
},objMax:function(){
return MochiKit.Base.listMinMax(1,arguments);
},objMin:function(){
return MochiKit.Base.listMinMax(-1,arguments);
},findIdentical:function(lst,_100,_101,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
for(var i=(_101||0);i<end;i++){
if(lst[i]===_100){
return i;
}
}
return -1;
},findValue:function(lst,_103,_104,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
var cmp=MochiKit.Base.compare;
for(var i=(_104||0);i<end;i++){
if(cmp(lst[i],_103)===0){
return i;
}
}
return -1;
},nodeWalk:function(node,_106){
var _107=[node];
var _108=MochiKit.Base.extend;
while(_107.length){
var res=_106(_107.shift());
if(res){
_108(_107,res);
}
}
},nameFunctions:function(_109){
var base=_109.NAME;
if(typeof (base)=="undefined"){
base="";
}else{
base=base+".";
}
for(var name in _109){
var o=_109[name];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+name;
}
catch(e){
}
}
}
},queryString:function(_112,_113){
if(typeof (MochiKit.DOM)!="undefined"&&arguments.length==1&&(typeof (_112)=="string"||(typeof (_112.nodeType)!="undefined"&&_112.nodeType>0))){
var kv=MochiKit.DOM.formContents(_112);
_112=kv[0];
_113=kv[1];
}else{
if(arguments.length==1){
var o=_112;
_112=[];
_113=[];
for(var k in o){
var v=o[k];
if(typeof (v)!="function"){
_112.push(k);
_113.push(v);
}
}
}
}
var rval=[];
var len=Math.min(_112.length,_113.length);
var _117=MochiKit.Base.urlEncode;
for(var i=0;i<len;i++){
v=_113[i];
if(typeof (v)!="undefined"&&v!==null){
rval.push(_117(_112[i])+"="+_117(v));
}
}
return rval.join("&");
},parseQueryString:function(_118,_119){
var _120=_118.replace(/\+/g,"%20").split("&");
var o={};
var _121;
if(typeof (decodeURIComponent)!="undefined"){
_121=decodeURIComponent;
}else{
_121=unescape;
}
if(_119){
for(var i=0;i<_120.length;i++){
var pair=_120[i].split("=");
var name=_121(pair[0]);
var arr=o[name];
if(!(arr instanceof Array)){
arr=[];
o[name]=arr;
}
arr.push(_121(pair[1]));
}
}else{
for(i=0;i<_120.length;i++){
pair=_120[i].split("=");
o[_121(pair[0])]=_121(pair[1]);
}
}
return o;
}});
MochiKit.Base.AdapterRegistry=function(){
this.pairs=[];
};
MochiKit.Base.AdapterRegistry.prototype={register:function(name,_123,wrap,_125){
if(_125){
this.pairs.unshift([name,_123,wrap]);
}else{
this.pairs.push([name,_123,wrap]);
}
},match:function(){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[1].apply(this,arguments)){
return pair[2].apply(this,arguments);
}
}
throw MochiKit.Base.NotFound;
},unregister:function(name){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[0]==name){
this.pairs.splice(i,1);
return true;
}
}
return false;
}};
MochiKit.Base.EXPORT=["counter","clone","extend","update","updatetree","setdefault","keys","items","NamedError","operator","forwardCall","itemgetter","typeMatcher","isCallable","isUndefined","isUndefinedOrNull","isNull","isEmpty","isNotEmpty","isArrayLike","isDateLike","xmap","map","xfilter","filter","bind","bindMethods","NotFound","AdapterRegistry","registerComparator","compare","registerRepr","repr","objEqual","arrayEqual","concat","keyComparator","reverseKeyComparator","partial","merge","listMinMax","listMax","listMin","objMax","objMin","nodeWalk","zip","urlEncode","queryString","serializeJSON","registerJSON","evalJSON","parseQueryString","findValue","findIdentical","flattenArguments","method"];
MochiKit.Base.EXPORT_OK=["nameFunctions","comparatorRegistry","reprRegistry","jsonRegistry","compareDateLike","compareArrayLike","reprArrayLike","reprString","reprNumber"];
MochiKit.Base._exportSymbols=function(_126,_127){
if(typeof (MochiKit.__export__)=="undefined"){
MochiKit.__export__=(MochiKit.__compat__||(typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined"));
}
if(!MochiKit.__export__){
return;
}
var all=_127.EXPORT_TAGS[":all"];
for(var i=0;i<all.length;i++){
_126[all[i]]=_127[all[i]];
}
};
MochiKit.Base.__new__=function(){
var m=this;
m.forward=m.forwardCall;
m.find=m.findValue;
if(typeof (encodeURIComponent)!="undefined"){
m.urlEncode=function(_129){
return encodeURIComponent(_129).replace(/\'/g,"%27");
};
}else{
m.urlEncode=function(_130){
return escape(_130).replace(/\+/g,"%2B").replace(/\"/g,"%22").rval.replace(/\'/g,"%27");
};
}
m.NamedError=function(name){
this.message=name;
this.name=name;
};
m.NamedError.prototype=new Error();
m.update(m.NamedError.prototype,{repr:function(){
if(this.message&&this.message!=this.name){
return this.name+"("+m.repr(this.message)+")";
}else{
return this.name+"()";
}
},toString:m.forwardCall("repr")});
m.NotFound=new m.NamedError("MochiKit.Base.NotFound");
m.listMax=m.partial(m.listMinMax,1);
m.listMin=m.partial(m.listMinMax,-1);
m.isCallable=m.typeMatcher("function");
m.isUndefined=m.typeMatcher("undefined");
m.merge=m.partial(m.update,null);
m.zip=m.partial(m.map,null);
m.comparatorRegistry=new m.AdapterRegistry();
m.registerComparator("dateLike",m.isDateLike,m.compareDateLike);
m.registerComparator("arrayLike",m.isArrayLike,m.compareArrayLike);
m.reprRegistry=new m.AdapterRegistry();
m.registerRepr("arrayLike",m.isArrayLike,m.reprArrayLike);
m.registerRepr("string",m.typeMatcher("string"),m.reprString);
m.registerRepr("numbers",m.typeMatcher("number","boolean"),m.reprNumber);
m.jsonRegistry=new m.AdapterRegistry();
var all=m.concat(m.EXPORT,m.EXPORT_OK);
m.EXPORT_TAGS={":common":m.concat(m.EXPORT_OK),":all":all};
m.nameFunctions(this);
};
MochiKit.Base.__new__();
compare=MochiKit.Base.compare;
MochiKit.Base._exportSymbols(this,MochiKit.Base);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Iter");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Iter depends on MochiKit.Base!";
}
if(typeof (MochiKit.Iter)=="undefined"){
MochiKit.Iter={};
}
MochiKit.Iter.NAME="MochiKit.Iter";
MochiKit.Iter.VERSION="1.3";
MochiKit.Base.update(MochiKit.Iter,{__repr__:function(){
return "["+this.NAME+" "+this.VERSION+"]";
},toString:function(){
return this.__repr__();
},registerIteratorFactory:function(name,_131,_132,_133){
MochiKit.Iter.iteratorRegistry.register(name,_131,_132,_133);
},iter:function(_134,_135){
var self=MochiKit.Iter;
if(arguments.length==2){
return self.takewhile(function(a){
return a!=_135;
},_134);
}
if(typeof (_134.next)=="function"){
return _134;
}else{
if(typeof (_134.iter)=="function"){
return _134.iter();
}
}
try{
return self.iteratorRegistry.match(_134);
}
catch(e){
var m=MochiKit.Base;
if(e==m.NotFound){
e=new TypeError(typeof (_134)+": "+m.repr(_134)+" is not iterable");
}
throw e;
}
},count:function(n){
if(!n){
n=0;
}
var m=MochiKit.Base;
return {repr:function(){
return "count("+n+")";
},toString:m.forwardCall("repr"),next:m.counter(n)};
},cycle:function(p){
var self=MochiKit.Iter;
var m=MochiKit.Base;
var lst=[];
var _138=self.iter(p);
return {repr:function(){
return "cycle(...)";
},toString:m.forwardCall("repr"),next:function(){
try{
var rval=_138.next();
lst.push(rval);
return rval;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
if(lst.length===0){
this.next=function(){
throw self.StopIteration;
};
}else{
var i=-1;
this.next=function(){
i=(i+1)%lst.length;
return lst[i];
};
}
return this.next();
}
}};
},repeat:function(elem,n){
var m=MochiKit.Base;
if(typeof (n)=="undefined"){
return {repr:function(){
return "repeat("+m.repr(elem)+")";
},toString:m.forwardCall("repr"),next:function(){
return elem;
}};
}
return {repr:function(){
return "repeat("+m.repr(elem)+", "+n+")";
},toString:m.forwardCall("repr"),next:function(){
if(n<=0){
throw MochiKit.Iter.StopIteration;
}
n-=1;
return elem;
}};
},next:function(_140){
return _140.next();
},izip:function(p,q){
var m=MochiKit.Base;
var next=MochiKit.Iter.next;
var _143=m.map(iter,arguments);
return {repr:function(){
return "izip(...)";
},toString:m.forwardCall("repr"),next:function(){
return m.map(next,_143);
}};
},ifilter:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilter(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(pred(rval)){
return rval;
}
}
return undefined;
}};
},ifilterfalse:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilterfalse(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
return rval;
}
}
return undefined;
}};
},islice:function(seq){
var self=MochiKit.Iter;
var m=MochiKit.Base;
seq=self.iter(seq);
var _146=0;
var stop=0;
var step=1;
var i=-1;
if(arguments.length==2){
stop=arguments[1];
}else{
if(arguments.length==3){
_146=arguments[1];
stop=arguments[2];
}else{
_146=arguments[1];
stop=arguments[2];
step=arguments[3];
}
}
return {repr:function(){
return "islice("+["...",_146,stop,step].join(", ")+")";
},toString:m.forwardCall("repr"),next:function(){
var rval;
while(i<_146){
rval=seq.next();
i++;
}
if(_146>=stop){
throw self.StopIteration;
}
_146+=step;
return rval;
}};
},imap:function(fun,p,q){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var _150=m.map(self.iter,m.extend(null,arguments,1));
var map=m.map;
var next=self.next;
return {repr:function(){
return "imap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(this,map(next,_150));
}};
},applymap:function(fun,seq,self){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
return {repr:function(){
return "applymap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(self,seq.next());
}};
},chain:function(p,q){
var self=MochiKit.Iter;
var m=MochiKit.Base;
if(arguments.length==1){
return self.iter(arguments[0]);
}
var _152=m.map(self.iter,arguments);
return {repr:function(){
return "chain(...)";
},toString:m.forwardCall("repr"),next:function(){
while(_152.length>1){
try{
return _152[0].next();
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
_152.shift();
}
}
if(_152.length==1){
var arg=_152.shift();
this.next=m.bind("next",arg);
return this.next();
}
throw self.StopIteration;
}};
},takewhile:function(pred,seq){
var self=MochiKit.Iter;
seq=self.iter(seq);
return {repr:function(){
return "takewhile(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=seq.next();
if(!pred(rval)){
this.next=function(){
throw self.StopIteration;
};
this.next();
}
return rval;
}};
},dropwhile:function(pred,seq){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
var bind=m.bind;
return {"repr":function(){
return "dropwhile(...)";
},"toString":m.forwardCall("repr"),"next":function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
break;
}
}
this.next=bind("next",seq);
return rval;
}};
},_tee:function(_154,sync,_156){
sync.pos[_154]=-1;
var m=MochiKit.Base;
var _157=m.listMin;
return {repr:function(){
return "tee("+_154+", ...)";
},toString:m.forwardCall("repr"),next:function(){
var rval;
var i=sync.pos[_154];
if(i==sync.max){
rval=_156.next();
sync.deque.push(rval);
sync.max+=1;
sync.pos[_154]+=1;
}else{
rval=sync.deque[i-sync.min];
sync.pos[_154]+=1;
if(i==sync.min&&_157(sync.pos)!=sync.min){
sync.min+=1;
sync.deque.shift();
}
}
return rval;
}};
},tee:function(_158,n){
var rval=[];
var sync={"pos":[],"deque":[],"max":-1,"min":-1};
if(arguments.length==1){
n=2;
}
var self=MochiKit.Iter;
_158=self.iter(_158);
var _tee=self._tee;
for(var i=0;i<n;i++){
rval.push(_tee(i,sync,_158));
}
return rval;
},list:function(_160){
var m=MochiKit.Base;
if(typeof (_160.slice)=="function"){
return _160.slice();
}else{
if(m.isArrayLike(_160)){
return m.concat(_160);
}
}
var self=MochiKit.Iter;
_160=self.iter(_160);
var rval=[];
try{
while(true){
rval.push(_160.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return rval;
}
return undefined;
},reduce:function(fn,_161,_162){
var i=0;
var x=_162;
var self=MochiKit.Iter;
_161=self.iter(_161);
if(arguments.length<3){
try{
x=_161.next();
}
catch(e){
if(e==self.StopIteration){
e=new TypeError("reduce() of empty sequence with no initial value");
}
throw e;
}
i++;
}
try{
while(true){
x=fn(x,_161.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},range:function(){
var _164=0;
var stop=0;
var step=1;
if(arguments.length==1){
stop=arguments[0];
}else{
if(arguments.length==2){
_164=arguments[0];
stop=arguments[1];
}else{
if(arguments.length==3){
_164=arguments[0];
stop=arguments[1];
step=arguments[2];
}else{
throw new TypeError("range() takes 1, 2, or 3 arguments!");
}
}
}
if(step===0){
throw new TypeError("range() step must not be 0");
}
return {next:function(){
if((step>0&&_164>=stop)||(step<0&&_164<=stop)){
throw MochiKit.Iter.StopIteration;
}
var rval=_164;
_164+=step;
return rval;
},repr:function(){
return "range("+[_164,stop,step].join(", ")+")";
},toString:MochiKit.Base.forwardCall("repr")};
},sum:function(_165,_166){
var x=_166||0;
var self=MochiKit.Iter;
_165=self.iter(_165);
try{
while(true){
x+=_165.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},exhaust:function(_167){
var self=MochiKit.Iter;
_167=self.iter(_167);
try{
while(true){
_167.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
},forEach:function(_168,func,self){
var m=MochiKit.Base;
if(arguments.length>2){
func=m.bind(func,self);
}
if(m.isArrayLike(_168)){
try{
for(var i=0;i<_168.length;i++){
func(_168[i]);
}
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
}
}else{
self=MochiKit.Iter;
self.exhaust(self.imap(func,_168));
}
},every:function(_170,func){
var self=MochiKit.Iter;
try{
self.ifilterfalse(func,_170).next();
return false;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return true;
}
},sorted:function(_171,cmp){
var rval=MochiKit.Iter.list(_171);
if(arguments.length==1){
cmp=MochiKit.Base.compare;
}
rval.sort(cmp);
return rval;
},reversed:function(_172){
var rval=MochiKit.Iter.list(_172);
rval.reverse();
return rval;
},some:function(_173,func){
var self=MochiKit.Iter;
try{
self.ifilter(func,_173).next();
return true;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return false;
}
},iextend:function(lst,_174){
if(MochiKit.Base.isArrayLike(_174)){
for(var i=0;i<_174.length;i++){
lst.push(_174[i]);
}
}else{
var self=MochiKit.Iter;
_174=self.iter(_174);
try{
while(true){
lst.push(_174.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
}
return lst;
},groupby:function(_175,_176){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_176=m.operator.identity;
}
_175=self.iter(_175);
var pk=undefined;
var k=undefined;
var v;
function fetch(){
v=_175.next();
k=_176(v);
}
function eat(){
var ret=v;
v=undefined;
return ret;
}
var _179=true;
return {repr:function(){
return "groupby(...)";
},next:function(){
while(k==pk){
fetch();
if(_179){
_179=false;
break;
}
}
pk=k;
return [k,{next:function(){
if(v==undefined){
fetch();
}
if(k!=pk){
throw self.StopIteration;
}
return eat();
}}];
}};
},groupby_as_array:function(_180,_181){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_181=m.operator.identity;
}
_180=self.iter(_180);
var _182=[];
var _183=true;
var _184;
while(true){
try{
var _185=_180.next();
var key=_181(_185);
}
catch(e){
if(e==self.StopIteration){
break;
}
throw e;
}
if(_183||key!=_184){
var _186=[];
_182.push([key,_186]);
}
_186.push(_185);
_183=false;
_184=key;
}
return _182;
},arrayLikeIter:function(_187){
var i=0;
return {repr:function(){
return "arrayLikeIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(i>=_187.length){
throw MochiKit.Iter.StopIteration;
}
return _187[i++];
}};
},hasIterateNext:function(_188){
return (_188&&typeof (_188.iterateNext)=="function");
},iterateNextIter:function(_189){
return {repr:function(){
return "iterateNextIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=_189.iterateNext();
if(rval===null||rval===undefined){
throw MochiKit.Iter.StopIteration;
}
return rval;
}};
}});
MochiKit.Iter.EXPORT_OK=["iteratorRegistry","arrayLikeIter","hasIterateNext","iterateNextIter",];
MochiKit.Iter.EXPORT=["StopIteration","registerIteratorFactory","iter","count","cycle","repeat","next","izip","ifilter","ifilterfalse","islice","imap","applymap","chain","takewhile","dropwhile","tee","list","reduce","range","sum","exhaust","forEach","every","sorted","reversed","some","iextend","groupby","groupby_as_array"];
MochiKit.Iter.__new__=function(){
var m=MochiKit.Base;
this.StopIteration=new m.NamedError("StopIteration");
this.iteratorRegistry=new m.AdapterRegistry();
this.registerIteratorFactory("arrayLike",m.isArrayLike,this.arrayLikeIter);
this.registerIteratorFactory("iterateNext",this.hasIterateNext,this.iterateNextIter);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Iter.__new__();
reduce=MochiKit.Iter.reduce;
MochiKit.Base._exportSymbols(this,MochiKit.Iter);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Logging");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Logging depends on MochiKit.Base!";
}
if(typeof (MochiKit.Logging)=="undefined"){
MochiKit.Logging={};
}
MochiKit.Logging.NAME="MochiKit.Logging";
MochiKit.Logging.VERSION="1.3";
MochiKit.Logging.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Logging.toString=function(){
return this.__repr__();
};
MochiKit.Logging.EXPORT=["LogLevel","LogMessage","Logger","alertListener","logger","log","logError","logDebug","logFatal","logWarning"];
MochiKit.Logging.EXPORT_OK=["logLevelAtLeast","isLogMessage","compareLogMessage"];
MochiKit.Logging.LogMessage=function(num,_191,info){
this.num=num;
this.level=_191;
this.info=info;
this.timestamp=new Date();
};
MochiKit.Logging.LogMessage.prototype={repr:function(){
var m=MochiKit.Base;
return "LogMessage("+m.map(m.repr,[this.num,this.level,this.info]).join(", ")+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Base.update(MochiKit.Logging,{logLevelAtLeast:function(_193){
var self=MochiKit.Logging;
if(typeof (_193)=="string"){
_193=self.LogLevel[_193];
}
return function(msg){
var _195=msg.level;
if(typeof (_195)=="string"){
_195=self.LogLevel[_195];
}
return _195>=_193;
};
},isLogMessage:function(){
var _196=MochiKit.Logging.LogMessage;
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof _196)){
return false;
}
}
return true;
},compareLogMessage:function(a,b){
return MochiKit.Base.compare([a.level,a.info],[b.level,b.info]);
},alertListener:function(msg){
alert("num: "+msg.num+"\nlevel: "+msg.level+"\ninfo: "+msg.info.join(" "));
}});
MochiKit.Logging.Logger=function(_197){
this.counter=0;
if(typeof (_197)=="undefined"||_197===null){
_197=-1;
}
this.maxSize=_197;
this._messages=[];
this.listeners={};
this.useNativeConsole=false;
};
MochiKit.Logging.Logger.prototype={clear:function(){
this._messages.splice(0,this._messages.length);
},logToConsole:function(msg){
if(typeof (window)!="undefined"&&window.console&&window.console.log){
window.console.log(msg);
}else{
if(typeof (opera)!="undefined"&&opera.postError){
opera.postError(msg);
}else{
if(typeof (printfire)=="function"){
printfire(msg);
}
}
}
},dispatchListeners:function(msg){
for(var k in this.listeners){
var pair=this.listeners[k];
if(pair.ident!=k||(pair[0]&&!pair[0](msg))){
continue;
}
pair[1](msg);
}
},addListener:function(_198,_199,_200){
if(typeof (_199)=="string"){
_199=MochiKit.Logging.logLevelAtLeast(_199);
}
var _201=[_199,_200];
_201.ident=_198;
this.listeners[_198]=_201;
},removeListener:function(_202){
delete this.listeners[_202];
},baseLog:function(_203,_204){
var msg=new MochiKit.Logging.LogMessage(this.counter,_203,MochiKit.Base.extend(null,arguments,1));
this._messages.push(msg);
this.dispatchListeners(msg);
if(this.useNativeConsole){
this.logToConsole(msg.level+": "+msg.info.join(" "));
}
this.counter+=1;
while(this.maxSize>=0&&this._messages.length>this.maxSize){
this._messages.shift();
}
},getMessages:function(_205){
var _206=0;
if(!(typeof (_205)=="undefined"||_205===null)){
_206=Math.max(0,this._messages.length-_205);
}
return this._messages.slice(_206);
},getMessageText:function(_207){
if(typeof (_207)=="undefined"||_207===null){
_207=30;
}
var _208=this.getMessages(_207);
if(_208.length){
var lst=map(function(m){
return "\n  ["+m.num+"] "+m.level+": "+m.info.join(" ");
},_208);
lst.unshift("LAST "+_208.length+" MESSAGES:");
return lst.join("");
}
return "";
},debuggingBookmarklet:function(_209){
if(typeof (MochiKit.LoggingPane)=="undefined"){
alert(this.getMessageText());
}else{
MochiKit.LoggingPane.createLoggingPane(_209||false);
}
}};
MochiKit.Logging.__new__=function(){
this.LogLevel={ERROR:40,FATAL:50,WARNING:30,INFO:20,DEBUG:10};
var m=MochiKit.Base;
m.registerComparator("LogMessage",this.isLogMessage,this.compareLogMessage);
var _210=m.partial;
var _211=this.Logger;
var _212=_211.prototype.baseLog;
m.update(this.Logger.prototype,{debug:_210(_212,"DEBUG"),log:_210(_212,"INFO"),error:_210(_212,"ERROR"),fatal:_210(_212,"FATAL"),warning:_210(_212,"WARNING")});
var self=this;
var _213=function(name){
return function(){
self.logger[name].apply(self.logger,arguments);
};
};
this.log=_213("log");
this.logError=_213("error");
this.logDebug=_213("debug");
this.logFatal=_213("fatal");
this.logWarning=_213("warning");
this.logger=new _211();
this.logger.useNativeConsole=true;
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
if(typeof (printfire)=="undefined"&&typeof (document)!="undefined"&&document.createEvent){
function printfire(){
printfire.args=arguments;
var ev=document.createEvent("Events");
ev.initEvent("printfire",false,true);
dispatchEvent(ev);
}
}
MochiKit.Logging.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Logging);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.DateTime");
}
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.DateTime)=="undefined"){
MochiKit.DateTime={};
}
MochiKit.DateTime.NAME="MochiKit.DateTime";
MochiKit.DateTime.VERSION="1.3";
MochiKit.DateTime.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.DateTime.toString=function(){
return this.__repr__();
};
MochiKit.DateTime.isoDate=function(str){
str=str+"";
if(typeof (str)!="string"||str.length===0){
return null;
}
var iso=str.split("-");
if(iso.length===0){
return null;
}
return new Date(iso[0],iso[1]-1,iso[2]);
};
MochiKit.DateTime._isoRegexp=/(\d{4,})(?:-(\d{1,2})(?:-(\d{1,2})(?:[T ](\d{1,2}):(\d{1,2})(?::(\d{1,2})(?:\.(\d+))?)?(?:(Z)|([+-])(\d{1,2})(?::(\d{1,2}))?)?)?)?)?/;
MochiKit.DateTime.isoTimestamp=function(str){
str=str+"";
if(typeof (str)!="string"||str.length===0){
return null;
}
var res=str.match(MochiKit.DateTime._isoRegexp);
if(typeof (res)=="undefined"||res===null){
return null;
}
var year,month,day,hour,min,sec,msec;
year=parseInt(res[1],10);
if(typeof (res[2])=="undefined"||res[2]===""){
return new Date(year);
}
month=parseInt(res[2],10)-1;
day=parseInt(res[3],10);
if(typeof (res[4])=="undefined"||res[4]===""){
return new Date(year,month,day);
}
hour=parseInt(res[4],10);
min=parseInt(res[5],10);
sec=(typeof (res[6])!="undefined"&&res[6]!=="")?parseInt(res[6],10):0;
if(typeof (res[7])!="undefined"&&res[7]!==""){
msec=Math.round(1000*parseFloat("0."+res[7]));
}else{
msec=0;
}
if((typeof (res[8])=="undefined"||res[8]==="")&&(typeof (res[9])=="undefined"||res[9]==="")){
return new Date(year,month,day,hour,min,sec,msec);
}
var ofs;
if(typeof (res[9])!="undefined"&&res[9]!==""){
ofs=parseInt(res[10],10)*3600000;
if(typeof (res[11])!="undefined"&&res[11]!==""){
ofs+=parseInt(res[11],10)*60000;
}
if(res[9]=="-"){
ofs=-ofs;
}
}else{
ofs=0;
}
return new Date(Date.UTC(year,month,day,hour,min,sec,msec)-ofs);
};
MochiKit.DateTime.toISOTime=function(date,_220){
if(typeof (date)=="undefined"||date===null){
return null;
}
var hh=date.getHours();
var mm=date.getMinutes();
var ss=date.getSeconds();
var lst=[((_220&&(hh<10))?"0"+hh:hh),((mm<10)?"0"+mm:mm),((ss<10)?"0"+ss:ss)];
return lst.join(":");
};
MochiKit.DateTime.toISOTimestamp=function(date,_224){
if(typeof (date)=="undefined"||date===null){
return null;
}
var sep=_224?"T":" ";
var foot=_224?"Z":"";
if(_224){
date=new Date(date.getTime()+(date.getTimezoneOffset()*60000));
}
return MochiKit.DateTime.toISODate(date)+sep+MochiKit.DateTime.toISOTime(date,_224)+foot;
};
MochiKit.DateTime.toISODate=function(date){
if(typeof (date)=="undefined"||date===null){
return null;
}
var _227=MochiKit.DateTime._padTwo;
return [date.getFullYear(),_227(date.getMonth()+1),_227(date.getDate())].join("-");
};
MochiKit.DateTime.americanDate=function(d){
d=d+"";
if(typeof (d)!="string"||d.length===0){
return null;
}
var a=d.split("/");
return new Date(a[2],a[0]-1,a[1]);
};
MochiKit.DateTime._padTwo=function(n){
return (n>9)?n:"0"+n;
};
MochiKit.DateTime.toPaddedAmericanDate=function(d){
if(typeof (d)=="undefined"||d===null){
return null;
}
var _229=MochiKit.DateTime._padTwo;
return [_229(d.getMonth()+1),_229(d.getDate()),d.getFullYear()].join("/");
};
MochiKit.DateTime.toAmericanDate=function(d){
if(typeof (d)=="undefined"||d===null){
return null;
}
return [d.getMonth()+1,d.getDate(),d.getFullYear()].join("/");
};
MochiKit.DateTime.EXPORT=["isoDate","isoTimestamp","toISOTime","toISOTimestamp","toISODate","americanDate","toPaddedAmericanDate","toAmericanDate"];
MochiKit.DateTime.EXPORT_OK=[];
MochiKit.DateTime.EXPORT_TAGS={":common":MochiKit.DateTime.EXPORT,":all":MochiKit.DateTime.EXPORT};
MochiKit.DateTime.__new__=function(){
var base=this.NAME+".";
for(var k in this){
var o=this[k];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+k;
}
catch(e){
}
}
}
};
MochiKit.DateTime.__new__();
if(typeof (MochiKit.Base)!="undefined"){
MochiKit.Base._exportSymbols(this,MochiKit.DateTime);
}else{
(function(_230,_231){
if((typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined")||(typeof (MochiKit.__compat__)=="boolean"&&MochiKit.__compat__)){
var all=_231.EXPORT_TAGS[":all"];
for(var i=0;i<all.length;i++){
_230[all[i]]=_231[all[i]];
}
}
})(this,MochiKit.DateTime);
}
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Format");
}
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.Format)=="undefined"){
MochiKit.Format={};
}
MochiKit.Format.NAME="MochiKit.Format";
MochiKit.Format.VERSION="1.3";
MochiKit.Format.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Format.toString=function(){
return this.__repr__();
};
MochiKit.Format._numberFormatter=function(_232,_233,_234,_235,_236,_237,_238,_239,_240){
return function(num){
num=parseFloat(num);
if(typeof (num)=="undefined"||num===null||isNaN(num)){
return _232;
}
var _241=_233;
var _242=_234;
if(num<0){
num=-num;
}else{
_241=_241.replace(/-/,"");
}
var me=arguments.callee;
var fmt=MochiKit.Format.formatLocale(_235);
if(_236){
num=num*100;
_242=fmt.percent+_242;
}
num=MochiKit.Format.roundToFixed(num,_237);
var _244=num.split(/\./);
var _245=_244[0];
var frac=(_244.length==1)?"":_244[1];
var res="";
while(_245.length<_238){
_245="0"+_245;
}
if(_239){
while(_245.length>_239){
var i=_245.length-_239;
res=fmt.separator+_245.substring(i,_245.length)+res;
_245=_245.substring(0,i);
}
}
res=_245+res;
if(_237>0){
while(frac.length<_240){
frac=frac+"0";
}
res=res+fmt.decimal+frac;
}
return _241+res+_242;
};
};
MochiKit.Format.numberFormatter=function(_247,_248,_249){
if(typeof (_248)=="undefined"){
_248="";
}
var _250=_247.match(/((?:[0#]+,)?[0#]+)(?:\.([0#]+))?(%)?/);
if(!_250){
throw TypeError("Invalid pattern");
}
var _251=_247.substr(0,_250.index);
var _252=_247.substr(_250.index+_250[0].length);
if(_251.search(/-/)==-1){
_251=_251+"-";
}
var _253=_250[1];
var frac=(typeof (_250[2])=="string"&&_250[2]!="")?_250[2]:"";
var _254=(typeof (_250[3])=="string"&&_250[3]!="");
var tmp=_253.split(/,/);
var _256;
if(typeof (_249)=="undefined"){
_249="default";
}
if(tmp.length==1){
_256=null;
}else{
_256=tmp[1].length;
}
var _257=_253.length-_253.replace(/0/g,"").length;
var _258=frac.length-frac.replace(/0/g,"").length;
var _259=frac.length;
var rval=MochiKit.Format._numberFormatter(_248,_251,_252,_249,_254,_259,_257,_256,_258);
var m=MochiKit.Base;
if(m){
var fn=arguments.callee;
var args=m.concat(arguments);
rval.repr=function(){
return [self.NAME,"(",map(m.repr,args).join(", "),")"].join("");
};
}
return rval;
};
MochiKit.Format.formatLocale=function(_261){
if(typeof (_261)=="undefined"||_261===null){
_261="default";
}
if(typeof (_261)=="string"){
var rval=MochiKit.Format.LOCALE[_261];
if(typeof (rval)=="string"){
rval=arguments.callee(rval);
MochiKit.Format.LOCALE[_261]=rval;
}
return rval;
}else{
return _261;
}
};
MochiKit.Format.twoDigitAverage=function(_262,_263){
if(_263){
var res=_262/_263;
if(!isNaN(res)){
return MochiKit.Format.twoDigitFloat(_262/_263);
}
}
return "0";
};
MochiKit.Format.twoDigitFloat=function(_264){
var sign=(_264<0?"-":"");
var s=Math.floor(Math.abs(_264)*100).toString();
if(s=="0"){
return s;
}
if(s.length<3){
while(s.charAt(s.length-1)=="0"){
s=s.substring(0,s.length-1);
}
return sign+"0."+s;
}
var head=sign+s.substring(0,s.length-2);
var tail=s.substring(s.length-2,s.length);
if(tail=="00"){
return head;
}else{
if(tail.charAt(1)=="0"){
return head+"."+tail.charAt(0);
}else{
return head+"."+tail;
}
}
};
MochiKit.Format.lstrip=function(str,_269){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_269){
return str.replace(/^\s+/,"");
}else{
return str.replace(new RegExp("^["+_269+"]+"),"");
}
};
MochiKit.Format.rstrip=function(str,_270){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_270){
return str.replace(/\s+$/,"");
}else{
return str.replace(new RegExp("["+_270+"]+$"),"");
}
};
MochiKit.Format.strip=function(str,_271){
var self=MochiKit.Format;
return self.rstrip(self.lstrip(str,_271),_271);
};
MochiKit.Format.truncToFixed=function(_272,_273){
_272=Math.floor(_272*Math.pow(10,_273));
var res=(_272*Math.pow(10,-_273)).toFixed(_273);
if(res.charAt(0)=="."){
res="0"+res;
}
return res;
};
MochiKit.Format.roundToFixed=function(_274,_275){
return MochiKit.Format.truncToFixed(_274+0.5*Math.pow(10,-_275),_275);
};
MochiKit.Format.percentFormat=function(_276){
return MochiKit.Format.twoDigitFloat(100*_276)+"%";
};
MochiKit.Format.EXPORT=["truncToFixed","roundToFixed","numberFormatter","formatLocale","twoDigitAverage","twoDigitFloat","percentFormat","lstrip","rstrip","strip"];
MochiKit.Format.LOCALE={en_US:{separator:",",decimal:".",percent:"%"},de_DE:{separator:".",decimal:",",percent:"%"},fr_FR:{separator:" ",decimal:",",percent:"%"},"default":"en_US"};
MochiKit.Format.EXPORT_OK=[];
MochiKit.Format.EXPORT_TAGS={":all":MochiKit.Format.EXPORT,":common":MochiKit.Format.EXPORT};
MochiKit.Format.__new__=function(){
var base=this.NAME+".";
var k,v,o;
for(k in this.LOCALE){
o=this.LOCALE[k];
if(typeof (o)=="object"){
o.repr=function(){
return this.NAME;
};
o.NAME=base+"LOCALE."+k;
}
}
for(k in this){
o=this[k];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+k;
}
catch(e){
}
}
}
};
MochiKit.Format.__new__();
if(typeof (MochiKit.Base)!="undefined"){
MochiKit.Base._exportSymbols(this,MochiKit.Format);
}else{
(function(_277,_278){
if((typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined")||(typeof (MochiKit.__compat__)=="boolean"&&MochiKit.__compat__)){
var all=_278.EXPORT_TAGS[":all"];
for(var i=0;i<all.length;i++){
_277[all[i]]=_278[all[i]];
}
}
})(this,MochiKit.Format);
}
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Async");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Async depends on MochiKit.Base!";
}
if(typeof (MochiKit.Async)=="undefined"){
MochiKit.Async={};
}
MochiKit.Async.NAME="MochiKit.Async";
MochiKit.Async.VERSION="1.3";
MochiKit.Async.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Async.toString=function(){
return this.__repr__();
};
MochiKit.Async.Deferred=function(_279){
this.chain=[];
this.id=this._nextId();
this.fired=-1;
this.paused=0;
this.results=[null,null];
this.canceller=_279;
this.silentlyCancelled=false;
this.chained=false;
};
MochiKit.Async.Deferred.prototype={repr:function(){
var _280;
if(this.fired==-1){
_280="unfired";
}else{
if(this.fired===0){
_280="success";
}else{
_280="error";
}
}
return "Deferred("+this.id+", "+_280+")";
},toString:MochiKit.Base.forwardCall("repr"),_nextId:MochiKit.Base.counter(),cancel:function(){
var self=MochiKit.Async;
if(this.fired==-1){
if(this.canceller){
this.canceller(this);
}else{
this.silentlyCancelled=true;
}
if(this.fired==-1){
this.errback(new self.CancelledError(this));
}
}else{
if((this.fired===0)&&(this.results[0] instanceof self.Deferred)){
this.results[0].cancel();
}
}
},_pause:function(){
this.paused++;
},_unpause:function(){
this.paused--;
if((this.paused===0)&&(this.fired>=0)){
this._fire();
}
},_continue:function(res){
this._resback(res);
this._unpause();
},_resback:function(res){
this.fired=((res instanceof Error)?1:0);
this.results[this.fired]=res;
this._fire();
},_check:function(){
if(this.fired!=-1){
if(!this.silentlyCancelled){
throw new MochiKit.Async.AlreadyCalledError(this);
}
this.silentlyCancelled=false;
return;
}
},callback:function(res){
this._check();
if(res instanceof MochiKit.Async.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
this._resback(res);
},errback:function(res){
this._check();
var self=MochiKit.Async;
if(res instanceof self.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
if(!(res instanceof Error)){
res=new self.GenericError(res);
}
this._resback(res);
},addBoth:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,fn);
},addCallback:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,null);
},addErrback:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(null,fn);
},addCallbacks:function(cb,eb){
if(this.chained){
throw new Error("Chained Deferreds can not be re-used");
}
this.chain.push([cb,eb]);
if(this.fired>=0){
this._fire();
}
return this;
},_fire:function(){
var _283=this.chain;
var _284=this.fired;
var res=this.results[_284];
var self=this;
var cb=null;
while(_283.length>0&&this.paused===0){
var pair=_283.shift();
var f=pair[_284];
if(f===null){
continue;
}
try{
res=f(res);
_284=((res instanceof Error)?1:0);
if(res instanceof MochiKit.Async.Deferred){
cb=function(res){
self._continue(res);
};
this._pause();
}
}
catch(err){
_284=1;
if(!(err instanceof Error)){
err=new MochiKit.Async.GenericError(err);
}
res=err;
}
}
this.fired=_284;
this.results[_284]=res;
if(cb&&this.paused){
res.addBoth(cb);
res.chained=true;
}
}};
MochiKit.Base.update(MochiKit.Async,{evalJSONRequest:function(){
return eval("("+arguments[0].responseText+")");
},succeed:function(_286){
var d=new MochiKit.Async.Deferred();
d.callback.apply(d,arguments);
return d;
},fail:function(_287){
var d=new MochiKit.Async.Deferred();
d.errback.apply(d,arguments);
return d;
},getXMLHttpRequest:function(){
var self=arguments.callee;
if(!self.XMLHttpRequest){
var _288=[function(){
return new XMLHttpRequest();
},function(){
return new ActiveXObject("Msxml2.XMLHTTP");
},function(){
return new ActiveXObject("Microsoft.XMLHTTP");
},function(){
return new ActiveXObject("Msxml2.XMLHTTP.4.0");
},function(){
throw new MochiKit.Async.BrowserComplianceError("Browser does not support XMLHttpRequest");
}];
for(var i=0;i<_288.length;i++){
var func=_288[i];
try{
self.XMLHttpRequest=func;
return func();
}
catch(e){
}
}
}
return self.XMLHttpRequest();
},sendXMLHttpRequest:function(req,_290){
if(_290===null){
_290="";
}
var _291=function(){
try{
req.onreadystatechange=null;
}
catch(e){
try{
req.onreadystatechange=function(){
};
}
catch(e){
}
}
req.abort();
};
var self=MochiKit.Async;
var d=new self.Deferred(_291);
var _292=function(){
if(req.readyState==4){
try{
req.onreadystatechange=null;
}
catch(e){
try{
req.onreadystatechange=function(){
};
}
catch(e){
}
}
var _293=null;
try{
_293=req.status;
if(!_293&&MochiKit.Base.isNotEmpty(req.responseText)){
_293=304;
}
}
catch(e){
}
if(_293==200||_293==304){
d.callback(req);
}else{
var err=new self.XMLHttpRequestError(req,"Request failed");
if(err.number){
d.errback(err);
}else{
d.errback(err);
}
}
}
};
try{
req.onreadystatechange=_292;
req.send(_290);
}
catch(e){
try{
req.onreadystatechange=null;
}
catch(ignore){
}
d.errback(e);
}
return d;
},doSimpleXMLHttpRequest:function(url){
var self=MochiKit.Async;
var req=self.getXMLHttpRequest();
if(arguments.length>1){
var m=MochiKit.Base;
var qs=m.queryString.apply(null,m.extend(null,arguments,1));
if(qs){
url+="?"+qs;
}
}
req.open("GET",url,true);
return self.sendXMLHttpRequest(req);
},loadJSONDoc:function(url){
var self=MochiKit.Async;
var d=self.doSimpleXMLHttpRequest.apply(self,arguments);
d=d.addCallback(self.evalJSONRequest);
return d;
},wait:function(_297,_298){
var d=new MochiKit.Async.Deferred();
var m=MochiKit.Base;
if(typeof (_298)!="undefined"){
d.addCallback(function(){
return _298;
});
}
var _299=setTimeout(m.bind("callback",d),Math.floor(_297*1000));
d.canceller=function(){
try{
clearTimeout(_299);
}
catch(e){
}
};
return d;
},callLater:function(_300,func){
var m=MochiKit.Base;
var _301=m.partial.apply(m,m.extend(null,arguments,1));
return MochiKit.Async.wait(_300).addCallback(function(res){
return _301();
});
}});
MochiKit.Async.DeferredLock=function(){
this.waiting=[];
this.locked=false;
this.id=this._nextId();
};
MochiKit.Async.DeferredLock.prototype={__class__:MochiKit.Async.DeferredLock,acquire:function(){
d=new MochiKit.Async.Deferred();
if(this.locked){
this.waiting.push(d);
}else{
this.locked=true;
d.callback(this);
}
return d;
},release:function(){
if(!this.locked){
throw TypeError("Tried to release an unlocked DeferredLock");
}
this.locked=false;
if(this.waiting.length>0){
this.locked=true;
this.waiting.shift().callback(this);
}
},_nextId:MochiKit.Base.counter(),repr:function(){
var _302;
if(this.locked){
_302="locked, "+this.waiting.length+" waiting";
}else{
_302="unlocked";
}
return "DeferredLock("+this.id+", "+_302+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Async.DeferredList=function(list,_304,_305,_306,_307){
this.list=list;
this.resultList=new Array(this.list.length);
this.chain=[];
this.id=this._nextId();
this.fired=-1;
this.paused=0;
this.results=[null,null];
this.canceller=_307;
this.silentlyCancelled=false;
if(this.list.length===0&&!_304){
this.callback(this.resultList);
}
this.finishedCount=0;
this.fireOnOneCallback=_304;
this.fireOnOneErrback=_305;
this.consumeErrors=_306;
var _308=0;
MochiKit.Base.map(MochiKit.Base.bind(function(d){
d.addCallback(MochiKit.Base.bind(this._cbDeferred,this),_308,true);
d.addErrback(MochiKit.Base.bind(this._cbDeferred,this),_308,false);
_308+=1;
},this),this.list);
};
MochiKit.Base.update(MochiKit.Async.DeferredList.prototype,MochiKit.Async.Deferred.prototype);
MochiKit.Base.update(MochiKit.Async.DeferredList.prototype,{_cbDeferred:function(_309,_310,_311){
this.resultList[_309]=[_310,_311];
this.finishedCount+=1;
if(this.fired!==0){
if(_310&&this.fireOnOneCallback){
this.callback([_309,_311]);
}else{
if(!_310&&this.fireOnOneErrback){
this.errback(_311);
}else{
if(this.finishedCount==this.list.length){
this.callback(this.resultList);
}
}
}
}
if(!_310&&this.consumeErrors){
_311=null;
}
return _311;
}});
MochiKit.Async.gatherResults=function(_312){
var d=new MochiKit.Async.DeferredList(_312,false,true,false);
d.addCallback(function(_313){
var ret=[];
for(var i=0;i<_313.length;i++){
ret.push(_313[i][1]);
}
return ret;
});
return d;
};
MochiKit.Async.maybeDeferred=function(func){
var self=MochiKit.Async;
var _314;
try{
var r=func.apply(null,MochiKit.Base.extend([],arguments,1));
if(r instanceof self.Deferred){
_314=r;
}else{
if(r instanceof Error){
_314=self.fail(r);
}else{
_314=self.succeed(r);
}
}
}
catch(e){
_314=self.fail(e);
}
return _314;
};
MochiKit.Async.EXPORT=["AlreadyCalledError","CancelledError","BrowserComplianceError","GenericError","XMLHttpRequestError","Deferred","succeed","fail","getXMLHttpRequest","doSimpleXMLHttpRequest","loadJSONDoc","wait","callLater","sendXMLHttpRequest","DeferredLock","DeferredList","gatherResults","maybeDeferred"];
MochiKit.Async.EXPORT_OK=["evalJSONRequest"];
MochiKit.Async.__new__=function(){
var m=MochiKit.Base;
var ne=m.partial(m._newNamedError,this);
ne("AlreadyCalledError",function(_317){
this.deferred=_317;
});
ne("CancelledError",function(_318){
this.deferred=_318;
});
ne("BrowserComplianceError",function(msg){
this.message=msg;
});
ne("GenericError",function(msg){
this.message=msg;
});
ne("XMLHttpRequestError",function(req,msg){
this.req=req;
this.message=msg;
try{
this.number=req.status;
}
catch(e){
}
});
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Async.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Async);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.DOM");
dojo.require("MochiKit.Iter");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Iter",[]);
}
try{
if(typeof (MochiKit.Iter)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.DOM depends on MochiKit.Iter!";
}
if(typeof (MochiKit.DOM)=="undefined"){
MochiKit.DOM={};
}
MochiKit.DOM.NAME="MochiKit.DOM";
MochiKit.DOM.VERSION="1.3";
MochiKit.DOM.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.DOM.toString=function(){
return this.__repr__();
};
MochiKit.DOM.EXPORT=["formContents","currentWindow","currentDocument","withWindow","withDocument","registerDOMConverter","coerceToDOM","createDOM","createDOMFunc","getNodeAttribute","setNodeAttribute","updateNodeAttributes","appendChildNodes","replaceChildNodes","removeElement","swapDOM","BUTTON","TT","PRE","H1","H2","H3","BR","CANVAS","HR","LABEL","TEXTAREA","FORM","STRONG","SELECT","OPTION","OPTGROUP","LEGEND","FIELDSET","P","UL","OL","LI","TD","TR","THEAD","TBODY","TFOOT","TABLE","TH","INPUT","SPAN","A","DIV","IMG","getElement","$","computedStyle","getElementsByTagAndClassName","addToCallStack","addLoadEvent","focusOnLoad","setElementClass","toggleElementClass","addElementClass","removeElementClass","swapElementClass","hasElementClass","escapeHTML","toHTML","emitHTML","setDisplayForElement","hideElement","showElement","scrapeText","elementDimensions","elementPosition","setElementDimensions","setElementPosition","getViewportDimensions","setOpacity"];
MochiKit.DOM.EXPORT_OK=["domConverters"];
MochiKit.DOM.Dimensions=function(w,h){
this.w=w;
this.h=h;
};
MochiKit.DOM.Dimensions.prototype.repr=function(){
var repr=MochiKit.Base.repr;
return "{w: "+repr(this.w)+", h: "+repr(this.h)+"}";
};
MochiKit.DOM.Coordinates=function(x,y){
this.x=x;
this.y=y;
};
MochiKit.DOM.Coordinates.prototype.repr=function(){
var repr=MochiKit.Base.repr;
return "{x: "+repr(this.x)+", y: "+repr(this.y)+"}";
};
MochiKit.DOM.Coordinates.prototype.toString=function(){
return this.repr();
};
MochiKit.Base.update(MochiKit.DOM,{setOpacity:function(elem,o){
elem=MochiKit.DOM.getElement(elem);
MochiKit.DOM.updateNodeAttributes(elem,{"style":{"opacity":o,"-moz-opacity":o,"-khtml-opacity":o,"filter":" alpha(opacity="+(o*100)+")"}});
},getViewportDimensions:function(){
var d=new MochiKit.DOM.Dimensions();
var w=MochiKit.DOM._window;
var b=MochiKit.DOM._document.body;
if(w.innerWidth){
d.w=w.innerWidth;
d.h=w.innerHeight;
}else{
if(b.parentElement.clientWidth){
d.w=b.parentElement.clientWidth;
d.h=b.parentElement.clientHeight;
}else{
if(b&&b.clientWidth){
d.w=b.clientWidth;
d.h=b.clientHeight;
}
}
}
return d;
},elementDimensions:function(elem){
var self=MochiKit.DOM;
if(typeof (elem.w)=="number"||typeof (elem.h)=="number"){
return new self.Dimensions(elem.w||0,elem.h||0);
}
elem=self.getElement(elem);
if(!elem){
return undefined;
}
if(self.computedStyle(elem,"display")!="none"){
return new self.Dimensions(elem.offsetWidth||0,elem.offsetHeight||0);
}
var s=elem.style;
var _323=s.visibility;
var _324=s.position;
s.visibility="hidden";
s.position="absolute";
s.display="";
var _325=elem.offsetWidth;
var _326=elem.offsetHeight;
s.display="none";
s.position=_324;
s.visibility=_323;
return new self.Dimensions(_325,_326);
},elementPosition:function(elem,_327){
var self=MochiKit.DOM;
elem=self.getElement(elem);
if(!elem){
return undefined;
}
var c=new self.Coordinates(0,0);
if(elem.x&&elem.y){
c.x+=elem.x||0;
c.y+=elem.y||0;
return c;
}else{
if(elem.parentNode===null||self.computedStyle(elem,"display")=="none"){
return undefined;
}
}
var box=null;
var _330=null;
var d=MochiKit.DOM._document;
var de=d.documentElement;
var b=d.body;
if(elem.getBoundingClientRect){
box=elem.getBoundingClientRect();
c.x+=box.left+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||b.clientLeft);
c.y+=box.top+(de.scrollTop||b.scrollTop)-(de.clientTop||b.clientTop);
}else{
if(d.getBoxObjectFor){
box=d.getBoxObjectFor(elem);
c.x+=box.x;
c.y+=box.y;
}else{
if(elem.offsetParent){
c.x+=elem.offsetLeft;
c.y+=elem.offsetTop;
_330=elem.offsetParent;
if(_330!=elem){
while(_330){
c.x+=_330.offsetLeft;
c.y+=_330.offsetTop;
_330=_330.offsetParent;
}
}
var ua=navigator.userAgent.toLowerCase();
if((typeof (opera)!="undefined"&&parseFloat(opera.version())<9)||(ua.indexOf("safari")!=-1&&self.computedStyle(elem,"position")=="absolute")){
c.x-=b.offsetLeft;
c.y-=b.offsetTop;
}
}
}
}
if(typeof (_327)!="undefined"){
_327=arguments.callee(_327);
if(_327){
c.x-=(_327.x||0);
c.y-=(_327.y||0);
}
}
if(elem.parentNode){
_330=elem.parentNode;
}else{
_330=null;
}
while(_330&&_330.tagName!="BODY"&&_330.tagName!="HTML"){
c.x-=_330.scrollLeft;
c.y-=_330.scrollTop;
if(_330.parentNode){
_330=_330.parentNode;
}else{
_330=null;
}
}
return c;
},setElementDimensions:function(elem,_333,_334){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_334)=="undefined"){
_334="px";
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":{"width":_333.w+_334,"height":_333.h+_334}});
},setElementPosition:function(elem,_335,_336){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_336)=="undefined"){
_336="px";
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":{"left":_335.x+_336,"top":_335.y+_336}});
},currentWindow:function(){
return MochiKit.DOM._window;
},currentDocument:function(){
return MochiKit.DOM._document;
},withWindow:function(win,func){
var self=MochiKit.DOM;
var _338=self._document;
var _339=self._win;
var rval;
try{
self._window=win;
self._document=win.document;
rval=func();
}
catch(e){
self._window=_339;
self._document=_338;
throw e;
}
self._window=_339;
self._document=_338;
return rval;
},formContents:function(elem){
var _340=[];
var _341=[];
var m=MochiKit.Base;
var self=MochiKit.DOM;
if(typeof (elem)=="undefined"||elem===null){
elem=self._document;
}else{
elem=self.getElement(elem);
}
m.nodeWalk(elem,function(elem){
var name=elem.name;
if(m.isNotEmpty(name)){
var _342=elem.nodeName;
if(_342=="INPUT"&&(elem.type=="radio"||elem.type=="checkbox")&&!elem.checked){
return null;
}
if(_342=="SELECT"){
if(elem.selectedIndex>=0){
var opt=elem.options[elem.selectedIndex];
_340.push(name);
_341.push((opt.value)?opt.value:opt.text);
return null;
}
_340.push(name);
_341.push("");
return null;
}
if(_342=="FORM"||_342=="P"||_342=="SPAN"||_342=="DIV"){
return elem.childNodes;
}
_340.push(name);
_341.push(elem.value||"");
return null;
}
return elem.childNodes;
});
return [_340,_341];
},withDocument:function(doc,func){
var self=MochiKit.DOM;
var _345=self._document;
var rval;
try{
self._document=doc;
rval=func();
}
catch(e){
self._document=_345;
throw e;
}
self._document=_345;
return rval;
},registerDOMConverter:function(name,_346,wrap,_347){
MochiKit.DOM.domConverters.register(name,_346,wrap,_347);
},coerceToDOM:function(node,ctx){
var im=MochiKit.Iter;
var self=MochiKit.DOM;
var iter=im.iter;
var _351=im.repeat;
var imap=im.imap;
var _353=self.domConverters;
var _354=self.coerceToDOM;
var _355=MochiKit.Base.NotFound;
while(true){
if(typeof (node)=="undefined"||node===null){
return null;
}
if(typeof (node.nodeType)!="undefined"&&node.nodeType>0){
return node;
}
if(typeof (node)=="number"||typeof (node)=="bool"){
node=node.toString();
}
if(typeof (node)=="string"){
return self._document.createTextNode(node);
}
if(typeof (node.toDOM)=="function"){
node=node.toDOM(ctx);
continue;
}
if(typeof (node)=="function"){
node=node(ctx);
continue;
}
var _356=null;
try{
_356=iter(node);
}
catch(e){
}
if(_356){
return imap(_354,_356,_351(ctx));
}
try{
node=_353.match(node,ctx);
continue;
}
catch(e){
if(e!=_355){
throw e;
}
}
return self._document.createTextNode(node.toString());
}
return undefined;
},setNodeAttribute:function(node,attr,_358){
var o={};
o[attr]=_358;
try{
return MochiKit.DOM.updateNodeAttributes(node,o);
}
catch(e){
}
return null;
},getNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _359=self.attributeArray.renames[attr];
node=self.getElement(node);
try{
if(_359){
return node[_359];
}
return node.getAttribute(attr);
}
catch(e){
}
return null;
},updateNodeAttributes:function(node,_360){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
if(_360){
var _361=MochiKit.Base.updatetree;
if(self.attributeArray.compliant){
for(var k in _360){
var v=_360[k];
if(typeof (v)=="object"&&typeof (elem[k])=="object"){
_361(elem[k],v);
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}else{
var _362=self.attributeArray.renames;
for(k in _360){
v=_360[k];
var _363=_362[k];
if(k=="style"&&typeof (v)=="string"){
elem.style.cssText=v;
}else{
if(typeof (_363)=="string"){
elem[_363]=v;
}else{
if(typeof (elem[k])=="object"&&typeof (v)=="object"){
_361(elem[k],v);
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}
}
}
}
return elem;
},appendChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _364=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _365=MochiKit.Base.concat;
while(_364.length){
var n=_364.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
elem.appendChild(n);
}else{
_364=_365(n,_364);
}
}
}
return elem;
},replaceChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
arguments[0]=elem;
}
var _366;
while((_366=elem.firstChild)){
elem.removeChild(_366);
}
if(arguments.length<2){
return elem;
}else{
return self.appendChildNodes.apply(this,arguments);
}
},createDOM:function(name,_367){
var elem;
var self=MochiKit.DOM;
var m=MochiKit.Base;
if(typeof (_367)=="string"){
var args=m.extend([name,null],arguments,1);
return arguments.callee.apply(this,args);
}
if(typeof (name)=="string"){
if(_367&&"name" in _367&&!self.attributeArray.compliant){
name=("<"+name+" name=\""+self.escapeHTML(_367.name)+"\">");
}
elem=self._document.createElement(name);
}else{
elem=name;
}
if(_367){
self.updateNodeAttributes(elem,_367);
}
if(arguments.length<=2){
return elem;
}else{
var args=m.extend([elem],arguments,2);
return self.appendChildNodes.apply(this,args);
}
},createDOMFunc:function(){
var m=MochiKit.Base;
return m.partial.apply(this,m.extend([MochiKit.DOM.createDOM],arguments));
},swapDOM:function(dest,src){
var self=MochiKit.DOM;
dest=self.getElement(dest);
var _370=dest.parentNode;
if(src){
src=self.getElement(src);
_370.replaceChild(src,dest);
}else{
_370.removeChild(dest);
}
return src;
},getElement:function(id){
var self=MochiKit.DOM;
if(arguments.length==1){
return ((typeof (id)=="string")?self._document.getElementById(id):id);
}else{
return MochiKit.Base.map(self.getElement,arguments);
}
},computedStyle:function(_372,_373,_374){
if(arguments.length==2){
_374=_373;
}
var self=MochiKit.DOM;
var el=self.getElement(_372);
var _376=self._document;
if(!el||el==_376){
return undefined;
}
if(el.currentStyle){
return el.currentStyle[_373];
}
if(typeof (_376.defaultView)=="undefined"){
return undefined;
}
if(_376.defaultView===null){
return undefined;
}
var _377=_376.defaultView.getComputedStyle(el,null);
if(typeof (_377)=="undefined"||_377===null){
return undefined;
}
return _377.getPropertyValue(_374);
},getElementsByTagAndClassName:function(_378,_379,_380){
var self=MochiKit.DOM;
if(typeof (_378)=="undefined"||_378===null){
_378="*";
}
if(typeof (_380)=="undefined"||_380===null){
_380=self._document;
}
_380=self.getElement(_380);
var _381=(_380.getElementsByTagName(_378)||self._document.all);
if(typeof (_379)=="undefined"||_379===null){
return MochiKit.Base.extend(null,_381);
}
var _382=[];
for(var i=0;i<_381.length;i++){
var _383=_381[i];
var _384=_383.className.split(" ");
for(var j=0;j<_384.length;j++){
if(_384[j]==_379){
_382.push(_383);
break;
}
}
}
return _382;
},_newCallStack:function(path,once){
var rval=function(){
var _387=arguments.callee.callStack;
for(var i=0;i<_387.length;i++){
if(_387[i].apply(this,arguments)===false){
break;
}
}
if(once){
try{
this[path]=null;
}
catch(e){
}
}
};
rval.callStack=[];
return rval;
},addToCallStack:function(_388,path,func,once){
var self=MochiKit.DOM;
var _389=_388[path];
var _390=_389;
if(!(typeof (_389)=="function"&&typeof (_389.callStack)=="object"&&_389.callStack!==null)){
_390=self._newCallStack(path,once);
if(typeof (_389)=="function"){
_390.callStack.push(_389);
}
_388[path]=_390;
}
_390.callStack.push(func);
},addLoadEvent:function(func){
var self=MochiKit.DOM;
self.addToCallStack(self._window,"onload",func,true);
},focusOnLoad:function(_391){
var self=MochiKit.DOM;
self.addLoadEvent(function(){
_391=self.getElement(_391);
if(_391){
_391.focus();
}
});
},setElementClass:function(_392,_393){
var self=MochiKit.DOM;
var obj=self.getElement(_392);
if(self.attributeArray.compliant){
obj.setAttribute("class",_393);
}else{
obj.setAttribute("className",_393);
}
},toggleElementClass:function(_394){
var self=MochiKit.DOM;
for(var i=1;i<arguments.length;i++){
var obj=self.getElement(arguments[i]);
if(!self.addElementClass(obj,_394)){
self.removeElementClass(obj,_394);
}
}
},addElementClass:function(_395,_396){
var self=MochiKit.DOM;
var obj=self.getElement(_395);
var cls=obj.className;
if(cls.length===0){
self.setElementClass(obj,_396);
return true;
}
if(cls==_396){
return false;
}
var _398=obj.className.split(" ");
for(var i=0;i<_398.length;i++){
if(_398[i]==_396){
return false;
}
}
self.setElementClass(obj,cls+" "+_396);
return true;
},removeElementClass:function(_399,_400){
var self=MochiKit.DOM;
var obj=self.getElement(_399);
var cls=obj.className;
if(cls.length===0){
return false;
}
if(cls==_400){
self.setElementClass(obj,"");
return true;
}
var _401=obj.className.split(" ");
for(var i=0;i<_401.length;i++){
if(_401[i]==_400){
_401.splice(i,1);
self.setElementClass(obj,_401.join(" "));
return true;
}
}
return false;
},swapElementClass:function(_402,_403,_404){
var obj=MochiKit.DOM.getElement(_402);
var res=MochiKit.DOM.removeElementClass(obj,_403);
if(res){
MochiKit.DOM.addElementClass(obj,_404);
}
return res;
},hasElementClass:function(_405,_406){
var obj=MochiKit.DOM.getElement(_405);
var _407=obj.className.split(" ");
for(var i=1;i<arguments.length;i++){
var good=false;
for(var j=0;j<_407.length;j++){
if(_407[j]==arguments[i]){
good=true;
break;
}
}
if(!good){
return false;
}
}
return true;
},escapeHTML:function(s){
return s.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/</g,"&lt;").replace(/>/g,"&gt;");
},toHTML:function(dom){
return MochiKit.DOM.emitHTML(dom).join("");
},emitHTML:function(dom,lst){
if(typeof (lst)=="undefined"||lst===null){
lst=[];
}
var _410=[dom];
var self=MochiKit.DOM;
var _411=self.escapeHTML;
var _412=self.attributeArray;
while(_410.length){
dom=_410.pop();
if(typeof (dom)=="string"){
lst.push(dom);
}else{
if(dom.nodeType==1){
lst.push("<"+dom.nodeName.toLowerCase());
var _413=[];
var _414=_412(dom);
for(var i=0;i<_414.length;i++){
var a=_414[i];
_413.push([" ",a.name,"=\"",_411(a.value),"\""]);
}
_413.sort();
for(i=0;i<_413.length;i++){
var _415=_413[i];
for(var j=0;j<_415.length;j++){
lst.push(_415[j]);
}
}
if(dom.hasChildNodes()){
lst.push(">");
_410.push("</"+dom.nodeName.toLowerCase()+">");
var _416=dom.childNodes;
for(i=_416.length-1;i>=0;i--){
_410.push(_416[i]);
}
}else{
lst.push("/>");
}
}else{
if(dom.nodeType==3){
lst.push(_411(dom.nodeValue));
}
}
}
}
return lst;
},setDisplayForElement:function(_417,_418){
var m=MochiKit.Base;
var _419=m.extend(null,arguments,1);
MochiKit.Iter.forEach(m.filter(null,m.map(MochiKit.DOM.getElement,_419)),function(_418){
_418.style.display=_417;
});
},scrapeText:function(node,_420){
var rval=[];
(function(node){
var cn=node.childNodes;
if(cn){
for(var i=0;i<cn.length;i++){
arguments.callee.call(this,cn[i]);
}
}
var _422=node.nodeValue;
if(typeof (_422)=="string"){
rval.push(_422);
}
})(MochiKit.DOM.getElement(node));
if(_420){
return rval;
}else{
return rval.join("");
}
},__new__:function(win){
var m=MochiKit.Base;
this._document=document;
this._window=win;
this.domConverters=new m.AdapterRegistry();
var _423=this._document.createElement("span");
var _424;
if(_423&&_423.attributes&&_423.attributes.length>0){
var _425=m.filter;
_424=function(node){
return _425(_424.ignoreAttrFilter,node.attributes);
};
_424.ignoreAttr={};
MochiKit.Iter.forEach(_423.attributes,function(a){
_424.ignoreAttr[a.name]=a.value;
});
_424.ignoreAttrFilter=function(a){
return (_424.ignoreAttr[a.name]!=a.value);
};
_424.compliant=false;
_424.renames={"class":"className","checked":"defaultChecked","usemap":"useMap","for":"htmlFor"};
}else{
_424=function(node){
return node.attributes;
};
_424.compliant=true;
_424.renames={};
}
this.attributeArray=_424;
var _426=this.createDOMFunc;
this.UL=_426("ul");
this.OL=_426("ol");
this.LI=_426("li");
this.TD=_426("td");
this.TR=_426("tr");
this.TBODY=_426("tbody");
this.THEAD=_426("thead");
this.TFOOT=_426("tfoot");
this.TABLE=_426("table");
this.TH=_426("th");
this.INPUT=_426("input");
this.SPAN=_426("span");
this.A=_426("a");
this.DIV=_426("div");
this.IMG=_426("img");
this.BUTTON=_426("button");
this.TT=_426("tt");
this.PRE=_426("pre");
this.H1=_426("h1");
this.H2=_426("h2");
this.H3=_426("h3");
this.BR=_426("br");
this.HR=_426("hr");
this.LABEL=_426("label");
this.TEXTAREA=_426("textarea");
this.FORM=_426("form");
this.P=_426("p");
this.SELECT=_426("select");
this.OPTION=_426("option");
this.OPTGROUP=_426("optgroup");
this.LEGEND=_426("legend");
this.FIELDSET=_426("fieldset");
this.STRONG=_426("strong");
this.CANVAS=_426("canvas");
this.hideElement=m.partial(this.setDisplayForElement,"none");
this.showElement=m.partial(this.setDisplayForElement,"block");
this.removeElement=this.swapDOM;
this.$=this.getElement;
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
}});
MochiKit.DOM.__new__(((typeof (window)=="undefined")?this:window));
withWindow=MochiKit.DOM.withWindow;
withDocument=MochiKit.DOM.withDocument;
MochiKit.Base._exportSymbols(this,MochiKit.DOM);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.LoggingPane");
dojo.require("MochiKit.Logging");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Logging",[]);
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"||typeof (MochiKit.Logging)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.LoggingPane depends on MochiKit.Base and MochiKit.Logging!";
}
if(typeof (MochiKit.LoggingPane)=="undefined"){
MochiKit.LoggingPane={};
}
MochiKit.LoggingPane.NAME="MochiKit.LoggingPane";
MochiKit.LoggingPane.VERSION="1.3";
MochiKit.LoggingPane.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.LoggingPane.toString=function(){
return this.__repr__();
};
MochiKit.LoggingPane.createLoggingPane=function(_427){
var m=MochiKit.LoggingPane;
_427=!(!_427);
if(m._loggingPane&&m._loggingPane.inline!=_427){
m._loggingPane.closePane();
m._loggingPane=null;
}
if(!m._loggingPane||m._loggingPane.closed){
m._loggingPane=new m.LoggingPane(_427,MochiKit.Logging.logger);
}
return m._loggingPane;
};
MochiKit.LoggingPane.LoggingPane=function(_428,_429){
if(typeof (_429)=="undefined"||_429===null){
_429=MochiKit.Logging.logger;
}
this.logger=_429;
var _430=MochiKit.Base.update;
var _431=MochiKit.Base.updatetree;
var bind=MochiKit.Base.bind;
var _432=MochiKit.Base.clone;
var win=window;
var uid="_MochiKit_LoggingPane";
if(typeof (MochiKit.DOM)!="undefined"){
win=MochiKit.DOM.currentWindow();
}
if(!_428){
var url=win.location.href.split("?")[0].replace(/[:\/.><&]/g,"_");
var name=uid+"_"+url;
var nwin=win.open("",name,"dependent,resizable,height=200");
if(!nwin){
alert("Not able to open debugging window due to pop-up blocking.");
return undefined;
}
nwin.document.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" "+"\"http://www.w3.org/TR/html4/loose.dtd\">"+"<html><head><title>[MochiKit.LoggingPane]</title></head>"+"<body></body></html>");
nwin.document.close();
nwin.document.title+=" "+win.document.title;
win=nwin;
}
var doc=win.document;
this.doc=doc;
var _435=doc.getElementById(uid);
var _436=!!_435;
if(_435&&typeof (_435.loggingPane)!="undefined"){
_435.loggingPane.logger=this.logger;
_435.loggingPane.buildAndApplyFilter();
return _435.loggingPane;
}
if(_436){
var _437;
while((_437=_435.firstChild)){
_435.removeChild(_437);
}
}else{
_435=doc.createElement("div");
_435.id=uid;
}
_435.loggingPane=this;
var _438=doc.createElement("input");
var _439=doc.createElement("input");
var _440=doc.createElement("button");
var _441=doc.createElement("button");
var _442=doc.createElement("button");
var _443=doc.createElement("button");
var _444=doc.createElement("div");
var _445=doc.createElement("div");
var _446=uid+"_Listener";
this.colorTable=_432(this.colorTable);
var _447=[];
var _448=null;
var _449=function(msg){
var _450=msg.level;
if(typeof (_450)=="number"){
_450=MochiKit.Logging.LogLevel[_450];
}
return _450;
};
var _451=function(msg){
return msg.info.join(" ");
};
var _452=bind(function(msg){
var _453=_449(msg);
var text=_451(msg);
var c=this.colorTable[_453];
var p=doc.createElement("span");
p.className="MochiKit-LogMessage MochiKit-LogLevel-"+_453;
p.style.cssText="margin: 0px; white-space: -moz-pre-wrap; white-space: -o-pre-wrap; white-space: pre-wrap; white-space: pre-line; word-wrap: break-word; wrap-option: emergency; z-index: 1000; color: "+c;
p.appendChild(doc.createTextNode(_453+": "+text));
_445.appendChild(p);
_445.appendChild(doc.createElement("br"));
if(_444.offsetHeight>_444.scrollHeight){
_444.scrollTop=0;
}else{
_444.scrollTop=_444.scrollHeight;
}
},this);
var _455=function(msg){
_447[_447.length]=msg;
_452(msg);
};
var _456=function(){
var _457,infore;
try{
_457=new RegExp(_438.value);
infore=new RegExp(_439.value);
}
catch(e){
logDebug("Error in filter regex: "+e.message);
return null;
}
return function(msg){
return (_457.test(_449(msg))&&infore.test(_451(msg)));
};
};
var _458=function(){
while(_445.firstChild){
_445.removeChild(_445.firstChild);
}
};
var _459=function(){
_447=[];
_458();
};
var _460=bind(function(){
if(this.closed){
return;
}
this.closed=true;
if(MochiKit.LoggingPane._loggingPane==this){
MochiKit.LoggingPane._loggingPane=null;
}
this.logger.removeListener(_446);
_435.loggingPane=null;
if(_428){
_435.parentNode.removeChild(_435);
}else{
this.win.close();
}
},this);
var _461=function(){
_458();
for(var i=0;i<_447.length;i++){
var msg=_447[i];
if(_448===null||_448(msg)){
_452(msg);
}
}
};
this.buildAndApplyFilter=function(){
_448=_456();
_461();
this.logger.removeListener(_446);
this.logger.addListener(_446,_448,_455);
};
var _462=bind(function(){
_447=this.logger.getMessages();
_461();
},this);
var _463=bind(function(_464){
_464=_464||window.event;
key=_464.which||_464.keyCode;
if(key==13){
this.buildAndApplyFilter();
}
},this);
var _465="display: block; left: 0px; bottom: 0px; position: fixed; width: 100%; background-color: white; font: "+this.logFont;
if(_428){
_465+="; height: 10em; border-top: 2px solid black";
}else{
_465+="; height: 100%;";
}
_435.style.cssText=_465;
if(!_436){
doc.body.appendChild(_435);
}
_465={"cssText":"width: 33%; display: inline; font: "+this.logFont};
_431(_438,{"value":"FATAL|ERROR|WARNING|INFO|DEBUG","onkeypress":_463,"style":_465});
_435.appendChild(_438);
_431(_439,{"value":".*","onkeypress":_463,"style":_465});
_435.appendChild(_439);
_465="width: 8%; display:inline; font: "+this.logFont;
_440.appendChild(doc.createTextNode("Filter"));
_440.onclick=bind("buildAndApplyFilter",this);
_440.style.cssText=_465;
_435.appendChild(_440);
_441.appendChild(doc.createTextNode("Load"));
_441.onclick=_462;
_441.style.cssText=_465;
_435.appendChild(_441);
_442.appendChild(doc.createTextNode("Clear"));
_442.onclick=_459;
_442.style.cssText=_465;
_435.appendChild(_442);
_443.appendChild(doc.createTextNode("Close"));
_443.onclick=_460;
_443.style.cssText=_465;
_435.appendChild(_443);
_444.style.cssText="overflow: auto; width: 100%";
_445.style.cssText="width: 100%; height: "+(_428?"8em":"100%");
_444.appendChild(_445);
_435.appendChild(_444);
this.buildAndApplyFilter();
_462();
if(_428){
this.win=undefined;
}else{
this.win=win;
}
this.inline=_428;
this.closePane=_460;
this.closed=false;
return this;
};
MochiKit.LoggingPane.LoggingPane.prototype={"logFont":"8pt Verdana,sans-serif","colorTable":{"ERROR":"red","FATAL":"darkred","WARNING":"blue","INFO":"black","DEBUG":"green"}};
MochiKit.LoggingPane.EXPORT_OK=["LoggingPane"];
MochiKit.LoggingPane.EXPORT=["createLoggingPane"];
MochiKit.LoggingPane.__new__=function(){
this.EXPORT_TAGS={":common":this.EXPORT,":all":MochiKit.Base.concat(this.EXPORT,this.EXPORT_OK)};
MochiKit.Base.nameFunctions(this);
MochiKit.LoggingPane._loggingPane=null;
};
MochiKit.LoggingPane.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.LoggingPane);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Color");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Color depends on MochiKit.Base";
}
if(typeof (MochiKit.Color)=="undefined"){
MochiKit.Color={};
}
MochiKit.Color.NAME="MochiKit.Color";
MochiKit.Color.VERSION="1.3";
MochiKit.Color.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Color.toString=function(){
return this.__repr__();
};
MochiKit.Color.Color=function(red,_467,blue,_469){
if(typeof (_469)=="undefined"||_469===null){
_469=1;
}
this.rgb={r:red,g:_467,b:blue,a:_469};
};
MochiKit.Color.Color.prototype={__class__:MochiKit.Color.Color,colorWithAlpha:function(_470){
var rgb=this.rgb;
var m=MochiKit.Color;
return m.Color.fromRGB(rgb.r,rgb.g,rgb.b,_470);
},colorWithHue:function(hue){
var hsl=this.asHSL();
hsl.h=hue;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithSaturation:function(_474){
var hsl=this.asHSL();
hsl.s=_474;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithLightness:function(_475){
var hsl=this.asHSL();
hsl.l=_475;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},darkerColorWithLevel:function(_476){
var hsl=this.asHSL();
hsl.l=Math.max(hsl.l-_476,0);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},lighterColorWithLevel:function(_477){
var hsl=this.asHSL();
hsl.l=Math.min(hsl.l+_477,1);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},blendedColor:function(_478,_479){
if(typeof (_479)=="undefined"||_479===null){
_479=0.5;
}
var sf=1-_479;
var s=this.rgb;
var d=_478.rgb;
var df=_479;
return MochiKit.Color.Color.fromRGB((s.r*sf)+(d.r*df),(s.g*sf)+(d.g*df),(s.b*sf)+(d.b*df),(s.a*sf)+(d.a*df));
},compareRGB:function(_482){
var a=this.asRGB();
var b=_482.asRGB();
return MochiKit.Base.compare([a.r,a.g,a.b,a.a],[b.r,b.g,b.b,b.a]);
},isLight:function(){
return this.asHSL().b>0.5;
},isDark:function(){
return (!this.isLight());
},toHSLString:function(){
var c=this.asHSL();
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hslString;
if(!rval){
var mid=(ccc(c.h,360).toFixed(0)+","+ccc(c.s,100).toPrecision(4)+"%"+","+ccc(c.l,100).toPrecision(4)+"%");
var a=c.a;
if(a>=1){
a=1;
rval="hsl("+mid+")";
}else{
if(a<=0){
a=0;
}
rval="hsla("+mid+","+a+")";
}
this._hslString=rval;
}
return rval;
},toRGBString:function(){
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._rgbString;
if(!rval){
var mid=(ccc(c.r,255).toFixed(0)+","+ccc(c.g,255).toFixed(0)+","+ccc(c.b,255).toFixed(0));
if(c.a!=1){
rval="rgba("+mid+","+c.a+")";
}else{
rval="rgb("+mid+")";
}
this._rgbString=rval;
}
return rval;
},asRGB:function(){
return MochiKit.Base.clone(this.rgb);
},toHexString:function(){
var m=MochiKit.Color;
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hexString;
if(!rval){
rval=("#"+m.toColorPart(ccc(c.r,255))+m.toColorPart(ccc(c.g,255))+m.toColorPart(ccc(c.b,255)));
this._hexString=rval;
}
return rval;
},asHSV:function(){
var hsv=this.hsv;
var c=this.rgb;
if(typeof (hsv)=="undefined"||hsv===null){
hsv=MochiKit.Color.rgbToHSV(this.rgb);
this.hsv=hsv;
}
return MochiKit.Base.clone(hsv);
},asHSL:function(){
var hsl=this.hsl;
var c=this.rgb;
if(typeof (hsl)=="undefined"||hsl===null){
hsl=MochiKit.Color.rgbToHSL(this.rgb);
this.hsl=hsl;
}
return MochiKit.Base.clone(hsl);
},toString:function(){
return this.toRGBString();
},repr:function(){
var c=this.rgb;
var col=[c.r,c.g,c.b,c.a];
return this.__class__.NAME+"("+col.join(", ")+")";
}};
MochiKit.Base.update(MochiKit.Color.Color,{fromRGB:function(red,_487,blue,_488){
var _489=MochiKit.Color.Color;
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_487=rgb.g;
blue=rgb.b;
if(typeof (rgb.a)=="undefined"){
_488=undefined;
}else{
_488=rgb.a;
}
}
return new _489(red,_487,blue,_488);
},fromHSL:function(hue,_490,_491,_492){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hslToRGB.apply(m,arguments));
},fromHSV:function(hue,_493,_494,_495){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hsvToRGB.apply(m,arguments));
},fromName:function(name){
var _496=MochiKit.Color.Color;
if(name.charAt(0)=="\""){
name=name.substr(1,name.length-2);
}
var _497=_496._namedColors[name.toLowerCase()];
if(typeof (_497)=="string"){
return _496.fromHexString(_497);
}else{
if(name=="transparent"){
return _496.transparentColor();
}
}
return null;
},fromString:function(_498){
var self=MochiKit.Color.Color;
var _499=_498.substr(0,3);
if(_499=="rgb"){
return self.fromRGBString(_498);
}else{
if(_499=="hsl"){
return self.fromHSLString(_498);
}else{
if(_498.charAt(0)=="#"){
return self.fromHexString(_498);
}
}
}
return self.fromName(_498);
},fromHexString:function(_500){
if(_500.charAt(0)=="#"){
_500=_500.substring(1);
}
var _501=[];
var i,hex;
if(_500.length==3){
for(i=0;i<3;i++){
hex=_500.substr(i,1);
_501.push(parseInt(hex+hex,16)/255);
}
}else{
for(i=0;i<6;i+=2){
hex=_500.substr(i,2);
_501.push(parseInt(hex,16)/255);
}
}
var _502=MochiKit.Color.Color;
return _502.fromRGB.apply(_502,_501);
},_fromColorString:function(pre,_504,_505,_506){
if(_506.indexOf(pre)===0){
_506=_506.substring(_506.indexOf("(",3)+1,_506.length-1);
}
var _507=_506.split(/\s*,\s*/);
var _508=[];
for(var i=0;i<_507.length;i++){
var c=_507[i];
var val;
var _509=c.substring(c.length-3);
if(c.charAt(c.length-1)=="%"){
val=0.01*parseFloat(c.substring(0,c.length-1));
}else{
if(_509=="deg"){
val=parseFloat(c)/360;
}else{
if(_509=="rad"){
val=parseFloat(c)/(Math.PI*2);
}else{
val=_505[i]*parseFloat(c);
}
}
}
_508.push(val);
}
return this[_504].apply(this,_508);
},fromComputedStyle:function(elem,_510,_511){
var d=MochiKit.DOM;
var cls=MochiKit.Color.Color;
for(elem=d.getElement(elem);elem;elem=elem.parentNode){
var _512=d.computedStyle.apply(d,arguments);
if(!_512){
continue;
}
var _513=cls.fromString(_512);
if(!_513){
break;
}
if(_513.asRGB().a>0){
return _513;
}
}
return null;
},fromBackground:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"backgroundColor","background-color")||cls.whiteColor();
},fromText:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"color","color")||cls.blackColor();
},namedColors:function(){
return MochiKit.Base.clone(MochiKit.Color.Color._namedColors);
}});
MochiKit.Base.update(MochiKit.Color,{clampColorComponent:function(v,_514){
v*=_514;
if(v<0){
return 0;
}else{
if(v>_514){
return _514;
}else{
return v;
}
}
},_hslValue:function(n1,n2,hue){
if(hue>6){
hue-=6;
}else{
if(hue<0){
hue+=6;
}
}
var val;
if(hue<1){
val=n1+(n2-n1)*hue;
}else{
if(hue<3){
val=n2;
}else{
if(hue<4){
val=n1+(n2-n1)*(4-hue);
}else{
val=n1;
}
}
}
return val;
},hsvToRGB:function(hue,_517,_518,_519){
if(arguments.length==1){
var hsv=hue;
hue=hsv.h;
_517=hsv.s;
_518=hsv.v;
_519=hsv.a;
}
var red;
var _520;
var blue;
if(_517===0){
red=0;
_520=0;
blue=0;
}else{
var i=Math.floor(hue*6);
var f=(hue*6)-i;
var p=_518*(1-_517);
var q=_518*(1-(_517*f));
var t=_518*(1-(_517*(1-f)));
switch(i){
case 1:
red=q;
_520=_518;
blue=p;
break;
case 2:
red=p;
_520=_518;
blue=t;
break;
case 3:
red=p;
_520=q;
blue=_518;
break;
case 4:
red=t;
_520=p;
blue=_518;
break;
case 5:
red=_518;
_520=p;
blue=q;
break;
case 6:
case 0:
red=_518;
_520=t;
blue=p;
break;
}
}
return {r:red,g:_520,b:blue,a:_519};
},hslToRGB:function(hue,_522,_523,_524){
if(arguments.length==1){
var hsl=hue;
hue=hsl.h;
_522=hsl.s;
_523=hsl.l;
_524=hsl.a;
}
var red;
var _525;
var blue;
if(_522===0){
red=_523;
_525=_523;
blue=_523;
}else{
var m2;
if(_523<=0.5){
m2=_523*(1+_522);
}else{
m2=_523+_522-(_523*_522);
}
var m1=(2*_523)-m2;
var f=MochiKit.Color._hslValue;
var h6=hue*6;
red=f(m1,m2,h6+2);
_525=f(m1,m2,h6);
blue=f(m1,m2,h6-2);
}
return {r:red,g:_525,b:blue,a:_524};
},rgbToHSV:function(red,_529,blue,_530){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_529=rgb.g;
blue=rgb.b;
_530=rgb.a;
}
var max=Math.max(Math.max(red,_529),blue);
var min=Math.min(Math.min(red,_529),blue);
var hue;
var _533;
var _534=max;
if(min==max){
hue=0;
_533=0;
}else{
var _535=(max-min);
_533=_535/max;
if(red==max){
hue=(_529-blue)/_535;
}else{
if(_529==max){
hue=2+((blue-red)/_535);
}else{
hue=4+((red-_529)/_535);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_533,v:_534,a:_530};
},rgbToHSL:function(red,_536,blue,_537){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_536=rgb.g;
blue=rgb.b;
_537=rgb.a;
}
var max=Math.max(red,Math.max(_536,blue));
var min=Math.min(red,Math.min(_536,blue));
var hue;
var _538;
var _539=(max+min)/2;
var _540=max-min;
if(_540===0){
hue=0;
_538=0;
}else{
if(_539<=0.5){
_538=_540/(max+min);
}else{
_538=_540/(2-max-min);
}
if(red==max){
hue=(_536-blue)/_540;
}else{
if(_536==max){
hue=2+((blue-red)/_540);
}else{
hue=4+((red-_536)/_540);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_538,l:_539,a:_537};
},toColorPart:function(num){
num=Math.round(num);
var _541=num.toString(16);
if(num<16){
return "0"+_541;
}
return _541;
},__new__:function(){
var m=MochiKit.Base;
this.Color.fromRGBString=m.bind(this.Color._fromColorString,this.Color,"rgb","fromRGB",[1/255,1/255,1/255,1]);
this.Color.fromHSLString=m.bind(this.Color._fromColorString,this.Color,"hsl","fromHSL",[1/360,0.01,0.01,1]);
var _542=1/3;
var _543={black:[0,0,0],blue:[0,0,1],brown:[0.6,0.4,0.2],cyan:[0,1,1],darkGray:[_542,_542,_542],gray:[0.5,0.5,0.5],green:[0,1,0],lightGray:[2*_542,2*_542,2*_542],magenta:[1,0,1],orange:[1,0.5,0],purple:[0.5,0,0.5],red:[1,0,0],transparent:[0,0,0,0],white:[1,1,1],yellow:[1,1,0]};
var _544=function(name,r,g,b,a){
var rval=this.fromRGB(r,g,b,a);
this[name]=function(){
return rval;
};
return rval;
};
for(var k in _543){
var name=k+"Color";
var _546=m.concat([_544,this.Color,name],_543[k]);
this.Color[name]=m.bind.apply(null,_546);
}
var _547=function(){
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof Color)){
return false;
}
}
return true;
};
var _548=function(a,b){
return a.compareRGB(b);
};
m.nameFunctions(this);
m.registerComparator(this.Color.NAME,_547,_548);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
}});
MochiKit.Color.EXPORT=["Color"];
MochiKit.Color.EXPORT_OK=["clampColorComponent","rgbToHSL","hslToRGB","rgbToHSV","hsvToRGB","toColorPart"];
MochiKit.Color.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Color);
MochiKit.Color.Color._namedColors={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"};
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Signal");
dojo.require("MochiKit.Base");
dojo.require("MochiKit.DOM");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
JSAN.use("MochiKit.DOM",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Signal depends on MochiKit.Base!";
}
try{
if(typeof (MochiKit.DOM)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Signal depends on MochiKit.DOM!";
}
if(typeof (MochiKit.Signal)=="undefined"){
MochiKit.Signal={};
}
MochiKit.Signal.NAME="MochiKit.Signal";
MochiKit.Signal.VERSION="1.3";
MochiKit.Signal._observers=[];
MochiKit.Signal.Event=function(e){
this._event=e||window.event;
};
MochiKit.Base.update(MochiKit.Signal.Event.prototype,{__repr__:function(){
var repr=MochiKit.Base.repr;
var str="{event(): "+repr(this.event())+", type(): "+repr(this.type())+", target(): "+repr(this.target())+", modifier(): "+"{alt: "+repr(this.modifier().alt)+", ctrl: "+repr(this.modifier().ctrl)+", meta: "+repr(this.modifier().meta)+", shift: "+repr(this.modifier().shift)+", any: "+repr(this.modifier().any)+"}";
if(this.type()&&this.type().indexOf("key")===0){
str+=", key(): {code: "+repr(this.key().code)+", string: "+repr(this.key().string)+"}";
}
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
str+=", mouse(): {page: "+repr(this.mouse().page)+", client: "+repr(this.mouse().client);
if(this.type()!="mousemove"){
str+=", button: {left: "+repr(this.mouse().button.left)+", middle: "+repr(this.mouse().button.middle)+", right: "+repr(this.mouse().button.right)+"}}";
}else{
str+="}";
}
}
if(this.type()=="mouseover"||this.type()=="mouseout"){
str+=", relatedTarget(): "+repr(this.relatedTarget());
}
str+="}";
return str;
},toString:function(){
return this.__repr__();
},event:function(){
return this._event;
},type:function(){
return this._event.type||undefined;
},target:function(){
return this._event.target||this._event.srcElement;
},relatedTarget:function(){
if(this.type()=="mouseover"){
return (this._event.relatedTarget||this._event.fromElement);
}else{
if(this.type()=="mouseout"){
return (this._event.relatedTarget||this._event.toElement);
}
}
throw new Error("No related target");
},modifier:function(){
var m={};
m.alt=this._event.altKey;
m.ctrl=this._event.ctrlKey;
m.meta=this._event.metaKey||false;
m.shift=this._event.shiftKey;
m.any=m.alt||m.ctrl||m.shift||m.meta;
return m;
},key:function(){
var k={};
if(this.type()&&this.type().indexOf("key")===0){
if(this.type()=="keydown"||this.type()=="keyup"){
k.code=this._event.keyCode;
k.string=(MochiKit.Signal._specialKeys[k.code]||"KEY_UNKNOWN");
return k;
}else{
if(this.type()=="keypress"){
k.code=0;
k.string="";
if(typeof (this._event.charCode)!="undefined"&&this._event.charCode!==0&&!MochiKit.Signal._specialMacKeys[this._event.charCode]){
k.code=this._event.charCode;
k.string=String.fromCharCode(k.code);
}else{
if(this._event.keyCode&&typeof (this._event.charCode)=="undefined"){
k.code=this._event.keyCode;
k.string=String.fromCharCode(k.code);
}
}
return k;
}
}
}
throw new Error("This is not a key event");
},mouse:function(){
var m={};
var e=this._event;
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
m.client=new MochiKit.DOM.Coordinates(0,0);
if(e.clientX||e.clientY){
m.client.x=(!e.clientX||e.clientX<0)?0:e.clientX;
m.client.y=(!e.clientY||e.clientY<0)?0:e.clientY;
}
m.page=new MochiKit.DOM.Coordinates(0,0);
if(e.pageX||e.pageY){
m.page.x=(!e.pageX||e.pageX<0)?0:e.pageX;
m.page.y=(!e.pageY||e.pageY<0)?0:e.pageY;
}else{
var de=MochiKit.DOM._document.documentElement;
var b=MochiKit.DOM._document.body;
m.page.x=e.clientX+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||b.clientLeft);
m.page.y=e.clientY+(de.scrollTop||b.scrollTop)-(de.clientTop||b.clientTop);
}
if(this.type()!="mousemove"){
m.button={};
m.button.left=false;
m.button.right=false;
m.button.middle=false;
if(e.which){
m.button.left=(e.which==1);
m.button.middle=(e.which==2);
m.button.right=(e.which==3);
}else{
m.button.left=!!(e.button&1);
m.button.right=!!(e.button&2);
m.button.middle=!!(e.button&4);
}
}
return m;
}
throw new Error("This is not a mouse event");
},stop:function(){
this.stopPropagation();
this.preventDefault();
},stopPropagation:function(){
if(this._event.stopPropagation){
this._event.stopPropagation();
}else{
this._event.cancelBubble=true;
}
},preventDefault:function(){
if(this._event.preventDefault){
this._event.preventDefault();
}else{
this._event.returnValue=false;
}
}});
MochiKit.Signal._specialMacKeys={3:"KEY_ENTER",63289:"KEY_NUM_PAD_CLEAR",63276:"KEY_PAGE_UP",63277:"KEY_PAGE_DOWN",63275:"KEY_END",63273:"KEY_HOME",63234:"KEY_ARROW_LEFT",63232:"KEY_ARROW_UP",63235:"KEY_ARROW_RIGHT",63233:"KEY_ARROW_DOWN",63302:"KEY_INSERT",63272:"KEY_DELETE"};
for(i=63236;i<=63242;i++){
MochiKit.Signal._specialMacKeys[i]="KEY_F"+(i-63236+1);
}
MochiKit.Signal._specialKeys={8:"KEY_BACKSPACE",9:"KEY_TAB",12:"KEY_NUM_PAD_CLEAR",13:"KEY_ENTER",16:"KEY_SHIFT",17:"KEY_CTRL",18:"KEY_ALT",19:"KEY_PAUSE",20:"KEY_CAPS_LOCK",27:"KEY_ESCAPE",32:"KEY_SPACEBAR",33:"KEY_PAGE_UP",34:"KEY_PAGE_DOWN",35:"KEY_END",36:"KEY_HOME",37:"KEY_ARROW_LEFT",38:"KEY_ARROW_UP",39:"KEY_ARROW_RIGHT",40:"KEY_ARROW_DOWN",44:"KEY_PRINT_SCREEN",45:"KEY_INSERT",46:"KEY_DELETE",59:"KEY_SEMICOLON",91:"KEY_WINDOWS_LEFT",92:"KEY_WINDOWS_RIGHT",93:"KEY_SELECT",106:"KEY_NUM_PAD_ASTERISK",107:"KEY_NUM_PAD_PLUS_SIGN",109:"KEY_NUM_PAD_HYPHEN-MINUS",110:"KEY_NUM_PAD_FULL_STOP",111:"KEY_NUM_PAD_SOLIDUS",144:"KEY_NUM_LOCK",145:"KEY_SCROLL_LOCK",186:"KEY_SEMICOLON",187:"KEY_EQUALS_SIGN",188:"KEY_COMMA",189:"KEY_HYPHEN-MINUS",190:"KEY_FULL_STOP",191:"KEY_SOLIDUS",192:"KEY_GRAVE_ACCENT",219:"KEY_LEFT_SQUARE_BRACKET",220:"KEY_REVERSE_SOLIDUS",221:"KEY_RIGHT_SQUARE_BRACKET",222:"KEY_APOSTROPHE"};
for(var i=48;i<=57;i++){
MochiKit.Signal._specialKeys[i]="KEY_"+(i-48);
}
for(i=65;i<=90;i++){
MochiKit.Signal._specialKeys[i]="KEY_"+String.fromCharCode(i);
}
for(i=96;i<=105;i++){
MochiKit.Signal._specialKeys[i]="KEY_NUM_PAD_"+(i-96);
}
for(i=112;i<=123;i++){
MochiKit.Signal._specialKeys[i]="KEY_F"+(i-112+1);
}
MochiKit.Base.update(MochiKit.Signal,{__repr__:function(){
return "["+this.NAME+" "+this.VERSION+"]";
},toString:function(){
return this.__repr__();
},_unloadCache:function(){
var self=MochiKit.Signal;
var _549=self._observers;
for(var i=0;i<_549.length;i++){
self._disconnect(_549[i]);
}
delete self._observers;
try{
window.onload=undefined;
}
catch(e){
}
try{
window.onunload=undefined;
}
catch(e){
}
},_listener:function(func,obj,_550){
if(!_550){
return MochiKit.Base.bind(func,obj);
}else{
if(typeof (func)=="string"){
return function(_551){
obj[func].apply(obj,[new MochiKit.Signal.Event(_551)]);
};
}else{
return function(_552){
func.apply(obj,[new MochiKit.Signal.Event(_552)]);
};
}
}
},connect:function(src,sig,_554,_555){
src=MochiKit.DOM.getElement(src);
var self=MochiKit.Signal;
if(typeof (sig)!="string"){
throw new Error("'sig' must be a string");
}
var obj=null;
var func=null;
if(typeof (_555)!="undefined"){
obj=_554;
func=_555;
if(typeof (_555)=="string"){
if(typeof (_554[_555])!="function"){
throw new Error("'funcOrStr' must be a function on 'objOrFunc'");
}
}else{
if(typeof (_555)!="function"){
throw new Error("'funcOrStr' must be a function or string");
}
}
}else{
if(typeof (_554)!="function"){
throw new Error("'objOrFunc' must be a function if 'funcOrStr' is not given");
}else{
func=_554;
}
}
var _556=!!(src.addEventListener||src.attachEvent);
var _557=self._listener(func,obj,_556);
if(src.addEventListener){
src.addEventListener(sig.substr(2),_557,false);
}else{
if(src.attachEvent){
src.attachEvent(sig,_557);
}
}
var _558=[src,sig,_557,_556,_554,_555];
self._observers.push(_558);
return _558;
},_disconnect:function(_559){
if(!_559[3]){
return;
}
var src=_559[0];
var sig=_559[1];
var _560=_559[2];
if(src.removeEventListener){
src.removeEventListener(sig.substr(2),_560,false);
}else{
if(src.detachEvent){
src.detachEvent(sig,_560);
}else{
throw new Error("'src' must be a DOM element");
}
}
},disconnect:function(_561){
var self=MochiKit.Signal;
var _562=self._observers;
var m=MochiKit.Base;
if(arguments.length>1){
var src=MochiKit.DOM.getElement(arguments[0]);
var sig=arguments[1];
var obj=arguments[2];
var func=arguments[3];
for(var i=_562.length-1;i>=0;i--){
var o=_562[i];
if(o[0]===src&&o[1]===sig&&o[4]===obj&&o[5]===func){
self._disconnect(o);
_562.splice(i,1);
return true;
}
}
}else{
var idx=m.findIdentical(_562,_561);
if(idx>=0){
self._disconnect(_561);
_562.splice(idx,1);
return true;
}
}
return false;
},disconnectAll:function(src,sig){
src=MochiKit.DOM.getElement(src);
var m=MochiKit.Base;
var _563=m.flattenArguments(m.extend(null,arguments,1));
var self=MochiKit.Signal;
var _564=self._disconnect;
var _565=self._observers;
if(_563.length===0){
for(var i=_565.length-1;i>=0;i--){
var _566=_565[i];
if(_566[0]===src){
_564(_566);
_565.splice(i,1);
}
}
}else{
var sigs={};
for(var i=0;i<_563.length;i++){
sigs[_563[i]]=true;
}
for(var i=_565.length-1;i>=0;i--){
var _566=_565[i];
if(_566[0]===src&&_566[1] in sigs){
_564(_566);
_565.splice(i,1);
}
}
}
},signal:function(src,sig){
var _568=MochiKit.Signal._observers;
src=MochiKit.DOM.getElement(src);
var args=MochiKit.Base.extend(null,arguments,2);
var _569=[];
for(var i=0;i<_568.length;i++){
var _570=_568[i];
if(_570[0]===src&&_570[1]===sig){
try{
_570[2].apply(src,args);
}
catch(e){
_569.push(e);
}
}
}
if(_569.length==1){
throw _569[0];
}else{
if(_569.length>1){
var e=new Error("Multiple errors thrown in handling 'sig', see errors property");
e.errors=_569;
throw e;
}
}
}});
MochiKit.Signal.EXPORT_OK=[];
MochiKit.Signal.EXPORT=["connect","disconnect","signal","disconnectAll"];
MochiKit.Signal.__new__=function(win){
var m=MochiKit.Base;
this._document=document;
this._window=win;
try{
this.connect(window,"onunload",this._unloadCache);
}
catch(e){
}
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Signal.__new__(this);
connect=MochiKit.Signal.connect;
disconnect=MochiKit.Signal.disconnect;
disconnectAll=MochiKit.Signal.disconnectAll;
signal=MochiKit.Signal.signal;
MochiKit.Base._exportSymbols(this,MochiKit.Signal);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Visual");
dojo.require("MochiKit.Base");
dojo.require("MochiKit.DOM");
dojo.require("MochiKit.Color");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
JSAN.use("MochiKit.DOM",[]);
JSAN.use("MochiKit.Color",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"||typeof (MochiKit.DOM)=="undefined"||typeof (MochiKit.Color)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Visual depends on MochiKit.Base, MochiKit.DOM and MochiKit.Color!";
}
if(typeof (MochiKit.Visual)=="undefined"){
MochiKit.Visual={};
}
MochiKit.Visual.NAME="MochiKit.Visual";
MochiKit.Visual.VERSION="1.3";
MochiKit.Visual.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Visual.toString=function(){
return this.__repr__();
};
MochiKit.Visual._RoundCorners=function(e,_571){
e=MochiKit.DOM.getElement(e);
this._setOptions(_571);
if(this.options.__unstable__wrapElement){
e=this._doWrap(e);
}
var _572=this.options.color;
var C=MochiKit.Color.Color;
if(this.options.color=="fromElement"){
_572=C.fromBackground(e);
}else{
if(!(_572 instanceof C)){
_572=C.fromString(_572);
}
}
this.isTransparent=(_572.asRGB().a<=0);
var _574=this.options.bgColor;
if(this.options.bgColor=="fromParent"){
_574=C.fromBackground(e.offsetParent);
}else{
if(!(_574 instanceof C)){
_574=C.fromString(_574);
}
}
this._roundCornersImpl(e,_572,_574);
};
MochiKit.Visual._RoundCorners.prototype={_doWrap:function(e){
var _575=e.parentNode;
var doc=MochiKit.DOM.currentDocument();
if(typeof (doc.defaultView)=="undefined"||doc.defaultView===null){
return e;
}
var _576=doc.defaultView.getComputedStyle(e,null);
if(typeof (_576)=="undefined"||_576===null){
return e;
}
var _577=MochiKit.DOM.DIV({"style":{display:"block",marginTop:_576.getPropertyValue("padding-top"),marginRight:_576.getPropertyValue("padding-right"),marginBottom:_576.getPropertyValue("padding-bottom"),marginLeft:_576.getPropertyValue("padding-left"),padding:"0px"}});
_577.innerHTML=e.innerHTML;
e.innerHTML="";
e.appendChild(_577);
return e;
},_roundCornersImpl:function(e,_578,_579){
if(this.options.border){
this._renderBorder(e,_579);
}
if(this._isTopRounded()){
this._roundTopCorners(e,_578,_579);
}
if(this._isBottomRounded()){
this._roundBottomCorners(e,_578,_579);
}
},_renderBorder:function(el,_580){
var _581="1px solid "+this._borderColor(_580);
var _582="border-left: "+_581;
var _583="border-right: "+_581;
var _584="style='"+_582+";"+_583+"'";
el.innerHTML="<div "+_584+">"+el.innerHTML+"</div>";
},_roundTopCorners:function(el,_585,_586){
var _587=this._createCorner(_586);
for(var i=0;i<this.options.numSlices;i++){
_587.appendChild(this._createCornerSlice(_585,_586,i,"top"));
}
el.style.paddingTop=0;
el.insertBefore(_587,el.firstChild);
},_roundBottomCorners:function(el,_588,_589){
var _590=this._createCorner(_589);
for(var i=(this.options.numSlices-1);i>=0;i--){
_590.appendChild(this._createCornerSlice(_588,_589,i,"bottom"));
}
el.style.paddingBottom=0;
el.appendChild(_590);
},_createCorner:function(_591){
var dom=MochiKit.DOM;
return dom.DIV({style:{backgroundColor:_591.toString()}});
},_createCornerSlice:function(_592,_593,n,_594){
var _595=MochiKit.DOM.SPAN();
var _596=_595.style;
_596.backgroundColor=_592.toString();
_596.display="block";
_596.height="1px";
_596.overflow="hidden";
_596.fontSize="1px";
var _597=this._borderColor(_592,_593);
if(this.options.border&&n===0){
_596.borderTopStyle="solid";
_596.borderTopWidth="1px";
_596.borderLeftWidth="0px";
_596.borderRightWidth="0px";
_596.borderBottomWidth="0px";
_596.height="0px";
_596.borderColor=_597.toString();
}else{
if(_597){
_596.borderColor=_597.toString();
_596.borderStyle="solid";
_596.borderWidth="0px 1px";
}
}
if(!this.options.compact&&(n==(this.options.numSlices-1))){
_596.height="2px";
}
this._setMargin(_595,n,_594);
this._setBorder(_595,n,_594);
return _595;
},_setOptions:function(_598){
this.options={corners:"all",color:"fromElement",bgColor:"fromParent",blend:true,border:false,compact:false,__unstable__wrapElement:false};
MochiKit.Base.update(this.options,_598);
this.options.numSlices=(this.options.compact?2:4);
},_whichSideTop:function(){
var _599=this.options.corners;
if(this._hasString(_599,"all","top")){
return "";
}
var _600=(_599.indexOf("tl")!=-1);
var _601=(_599.indexOf("tr")!=-1);
if(_600&&_601){
return "";
}
if(_600){
return "left";
}
if(_601){
return "right";
}
return "";
},_whichSideBottom:function(){
var _602=this.options.corners;
if(this._hasString(_602,"all","bottom")){
return "";
}
var _603=(_602.indexOf("bl")!=-1);
var _604=(_602.indexOf("br")!=-1);
if(_603&&_604){
return "";
}
if(_603){
return "left";
}
if(_604){
return "right";
}
return "";
},_borderColor:function(_605,_606){
if(_605=="transparent"){
return _606;
}else{
if(this.options.border){
return this.options.border;
}else{
if(this.options.blend){
return _606.blendedColor(_605);
}
}
}
return "";
},_setMargin:function(el,n,_607){
var _608=this._marginSize(n)+"px";
var _609=(_607=="top"?this._whichSideTop():this._whichSideBottom());
var _610=el.style;
if(_609=="left"){
_610.marginLeft=_608;
_610.marginRight="0px";
}else{
if(_609=="right"){
_610.marginRight=_608;
_610.marginLeft="0px";
}else{
_610.marginLeft=_608;
_610.marginRight=_608;
}
}
},_setBorder:function(el,n,_611){
var _612=this._borderSize(n)+"px";
var _613=(_611=="top"?this._whichSideTop():this._whichSideBottom());
var _614=el.style;
if(_613=="left"){
_614.borderLeftWidth=_612;
_614.borderRightWidth="0px";
}else{
if(_613=="right"){
_614.borderRightWidth=_612;
_614.borderLeftWidth="0px";
}else{
_614.borderLeftWidth=_612;
_614.borderRightWidth=_612;
}
}
},_marginSize:function(n){
if(this.isTransparent){
return 0;
}
var o=this.options;
if(o.compact&&o.blend){
var _615=[1,0];
return _615[n];
}else{
if(o.compact){
var _616=[2,1];
return _616[n];
}else{
if(o.blend){
var _617=[3,2,1,0];
return _617[n];
}else{
var _618=[5,3,2,1];
return _618[n];
}
}
}
},_borderSize:function(n){
var o=this.options;
var _619;
if(o.compact&&(o.blend||this.isTransparent)){
return 1;
}else{
if(o.compact){
_619=[1,0];
}else{
if(o.blend){
_619=[2,1,1,1];
}else{
if(o.border){
_619=[0,2,0,0];
}else{
if(this.isTransparent){
_619=[5,3,2,1];
}else{
return 0;
}
}
}
}
}
return _619[n];
},_hasString:function(str){
for(var i=1;i<arguments.length;i++){
if(str.indexOf(arguments[i])!=-1){
return true;
}
}
return false;
},_isTopRounded:function(){
return this._hasString(this.options.corners,"all","top","tl","tr");
},_isBottomRounded:function(){
return this._hasString(this.options.corners,"all","bottom","bl","br");
},_hasSingleTextChild:function(el){
return (el.childNodes.length==1&&el.childNodes[0].nodeType==3);
}};
MochiKit.Visual.roundElement=function(e,_620){
new MochiKit.Visual._RoundCorners(e,_620);
};
MochiKit.Visual.roundClass=function(_621,_622,_623){
var _624=MochiKit.DOM.getElementsByTagAndClassName(_621,_622);
for(var i=0;i<_624.length;i++){
MochiKit.Visual.roundElement(_624[i],_623);
}
};
MochiKit.Visual.Color=MochiKit.Color.Color;
MochiKit.Visual.getElementsComputedStyle=MochiKit.DOM.computedStyle;
MochiKit.Visual.__new__=function(){
var m=MochiKit.Base;
m.nameFunctions(this);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
};
MochiKit.Visual.EXPORT=["roundElement","roundClass"];
MochiKit.Visual.EXPORT_OK=[];
MochiKit.Visual.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Visual);
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.MochiKit)=="undefined"){
MochiKit.MochiKit={};
}
MochiKit.MochiKit.NAME="MochiKit.MochiKit";
MochiKit.MochiKit.VERSION="1.3";
MochiKit.MochiKit.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.MochiKit.toString=function(){
return this.__repr__();
};
MochiKit.MochiKit.SUBMODULES=["Base","Iter","Logging","DateTime","Format","Async","DOM","LoggingPane","Color","Signal","Visual"];
if(typeof (JSAN)!="undefined"||typeof (dojo)!="undefined"){
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.MochiKit");
dojo.require("MochiKit.*");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
JSAN.use("MochiKit.Iter",[]);
JSAN.use("MochiKit.Logging",[]);
JSAN.use("MochiKit.DateTime",[]);
JSAN.use("MochiKit.Format",[]);
JSAN.use("MochiKit.Async",[]);
JSAN.use("MochiKit.DOM",[]);
JSAN.use("MochiKit.LoggingPane",[]);
JSAN.use("MochiKit.Color",[]);
JSAN.use("MochiKit.Signal",[]);
JSAN.use("MochiKit.Visual",[]);
}
(function(){
var _625=MochiKit.Base.extend;
var self=MochiKit.MochiKit;
var _626=self.SUBMODULES;
var _627=[];
var _628=[];
var _629={};
var i,k,m,all;
for(i=0;i<_626.length;i++){
m=MochiKit[_626[i]];
_625(_627,m.EXPORT);
_625(_628,m.EXPORT_OK);
for(k in m.EXPORT_TAGS){
_629[k]=_625(_629[k],m.EXPORT_TAGS[k]);
}
all=m.EXPORT_TAGS[":all"];
if(!all){
all=_625(null,m.EXPORT,m.EXPORT_OK);
}
var j;
for(j=0;j<all.length;j++){
k=all[j];
self[k]=m[k];
}
}
self.EXPORT=_627;
self.EXPORT_OK=_628;
self.EXPORT_TAGS=_629;
}());
}else{
if(typeof (MochiKit.__compat__)=="undefined"){
MochiKit.__compat__=true;
}
(function(){
var _630=document.getElementsByTagName("script");
var _631="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
var base=null;
var _632=null;
var _633={};
var i;
for(i=0;i<_630.length;i++){
var src=_630[i].getAttribute("src");
if(!src){
continue;
}
_633[src]=true;
if(src.match(/MochiKit.js$/)){
base=src.substring(0,src.lastIndexOf("MochiKit.js"));
_632=_630[i];
}
}
if(base===null){
return;
}
var _634=MochiKit.MochiKit.SUBMODULES;
for(var i=0;i<_634.length;i++){
if(MochiKit[_634[i]]){
continue;
}
var uri=base+_634[i]+".js";
if(uri in _633){
continue;
}
if(document.documentElement&&document.documentElement.namespaceURI==_631){
var s=document.createElementNS(_631,"script");
s.setAttribute("id","MochiKit_"+base+_634[i]);
s.setAttribute("src",uri);
s.setAttribute("type","application/x-javascript");
_632.parentNode.appendChild(s);
}else{
document.write("<script src=\""+uri+"\" type=\"text/javascript\"></script>");
}
}
})();
}


