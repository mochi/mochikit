/***

    MochiKit.MochiKit 1.0 : PACKED VERSION

    THIS FILE IS AUTOMATICALLY GENERATED.  If creating patches, please
    diff against the source tree, not this file.

    See <http://mochikit.com/> for documentation, downloads, license, etc.

    (c) 2005 Bob Ippolito.  All rights Reserved.

***/

if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Base");
}
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.Base)=="undefined"){
MochiKit.Base={};
}
MochiKit.Base.VERSION="1.0";
MochiKit.Base.NAME="MochiKit.Base";
MochiKit.Base.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Base.toString=function(){
return this.__repr__();
};
MochiKit.Base.counter=function(n){
if(arguments.length==0){
n=1;
}
return function(){
return n++;
};
};
MochiKit.Base.clone=function(_2){
var me=arguments.callee;
if(arguments.length==1){
me.prototype=_2;
return new me();
}
};
MochiKit.Base.extend=function(_4,_5,_6){
if(!_6){
_6=0;
}
if(_5){
var l=_5.length;
if(typeof (l)!="number"){
if(MochiKit.Iter){
_5=MochiKit.Iter.list(_5);
l=_5.length;
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(!_4){
_4=[];
}
for(var i=_6;i<l;i++){
_4.push(_5[i]);
}
}
return _4;
};
MochiKit.Base.updatetree=function(_9,obj){
if(_9==null){
_9={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!=null){
for(var k in o){
var v=o[k];
if(typeof (_9[k])=="object"&&typeof (v)=="object"){
arguments.callee(_9[k],v);
}else{
_9[k]=v;
}
}
}
}
return _9;
};
MochiKit.Base.update=function(_14,obj){
if(_14==null){
_14={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!=null){
for(var k in o){
_14[k]=o[k];
}
}
}
return _14;
};
MochiKit.Base.setdefault=function(_15,obj){
if(_15==null){
_15={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
for(var k in o){
if(!(k in _15)){
_15[k]=o[k];
}
}
}
return _15;
};
MochiKit.Base.keys=function(obj){
var _16=[];
for(var _17 in obj){
_16.push(_17);
}
return _16;
};
MochiKit.Base.items=function(obj){
var _18=[];
for(var _19 in obj){
_18.push([_19,obj[_19]]);
}
return _18;
};
MochiKit.Base.NamedError=function(_20){
this.message=_20;
this.name=_20;
};
MochiKit.Base.NamedError.prototype=new Error();
MochiKit.Base.NamedError.prototype.repr=function(){
if(this.message&&this.message!=this.name){
return this.name+"("+repr(this.message)+")";
}else{
return this.name+"()";
}
};
MochiKit.Base.NamedError.prototype.toString=function(){
return this.repr();
};
MochiKit.Base._newNamedError=function(_21,_22,_23){
_23.prototype=new MochiKit.Base.NamedError(_21.NAME+"."+_22);
_21[_22]=_23;
};
MochiKit.Base.operator={"truth":function(a){
return !!a;
},"lognot":function(a){
return !a;
},"identity":function(a){
return a;
},"not":function(a){
return ~a;
},"neg":function(a){
return -a;
},"add":function(a,b){
return a+b;
},"sub":function(a,b){
return a-b;
},"div":function(a,b){
return a/b;
},"mod":function(a,b){
return a%b;
},"and":function(a,b){
return a&b;
},"or":function(a,b){
return a|b;
},"xor":function(a,b){
return a^b;
},"lshift":function(a,b){
return a<<b;
},"rshift":function(a,b){
return a>>b;
},"zrshift":function(a,b){
return a>>>b;
},"eq":function(a,b){
return a==b;
},"ne":function(a,b){
return a!=b;
},"gt":function(a,b){
return a>b;
},"ge":function(a,b){
return a>=b;
},"lt":function(a,b){
return a<b;
},"le":function(a,b){
return a<=b;
},"ceq":function(a,b){
return MochiKit.Base.compare(a,b)==0;
},"cne":function(a,b){
return MochiKit.Base.compare(a,b)!=0;
},"cgt":function(a,b){
return MochiKit.Base.compare(a,b)==1;
},"cge":function(a,b){
return MochiKit.Base.compare(a,b)!=-1;
},"clt":function(a,b){
return MochiKit.Base.compare(a,b)==-1;
},"cle":function(a,b){
return MochiKit.Base.compare(a,b)!=1;
},"logand":function(a,b){
return a&&b;
},"logor":function(a,b){
return a||b;
},"contains":function(a,b){
return b in a;
}};
MochiKit.Base.forward=function(_26){
return function(){
return this[_26].apply(this,arguments);
};
};
MochiKit.Base.itemgetter=function(_27){
return function(arg){
return arg[_27];
};
};
MochiKit.Base.typeMatcher=function(){
var _29={};
for(var i=0;i<arguments.length;i++){
var typ=arguments[i];
_29[typ]=typ;
}
return function(){
for(var i=0;i<arguments.length;i++){
if(!(typeof (arguments[i]) in _29)){
return false;
}
}
return true;
};
};
MochiKit.Base.isNull=function(){
for(var i=0;i<arguments.length;i++){
if(arguments[i]!=null){
return false;
}
}
return true;
};
MochiKit.Base.isUndefinedOrNull=function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(typeof (o)=="undefined"||o==null)){
return false;
}
}
return true;
};
MochiKit.Base.isNotEmpty=function(obj){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(o&&o.length)){
return false;
}
}
return true;
};
MochiKit.Base.isArrayLike=function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
var typ=typeof (o);
if((typ!="object"&&!(typ=="function"&&typeof (o.item)=="function"))||o==null||typeof (o.length)!="number"){
return false;
}
}
return true;
};
MochiKit.Base.isDateLike=function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="object"||typeof (o.getTime)!="function"){
return false;
}
}
return true;
};
MochiKit.Base.xmap=function(fn){
if(fn==null){
return MochiKit.Base.extend(null,arguments,1);
}
var _32=[];
for(var i=1;i<arguments.length;i++){
_32.push(fn(arguments[i]));
}
return _32;
};
MochiKit.Base.map=function(fn,lst){
var _34=MochiKit.Base.isArrayLike;
if(arguments.length<=2){
if(!_34(lst)){
if(MochiKit.Iter){
lst=MochiKit.Iter.list(lst);
if(fn==null){
return lst;
}
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn==null){
return MochiKit.Base.extend(null,lst);
}
if(false&&typeof (Array.prototype.map)=="function"){
return Array.prototype.map.call(lst,fn);
}
var _35=[];
for(var i=0;i<lst.length;i++){
_35.push(fn(lst[i]));
}
return _35;
}else{
if(fn==null){
fn=Array;
}
var _36=null;
for(i=1;i<arguments.length;i++){
if(!_34(arguments[i])){
if(MochiKit.Iter){
arguments[i]=MochiKit.Iter.list(arguments[i]);
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
var l=arguments[i].length;
if(_36==null||_36>l){
_36=l;
}
}
_35=[];
for(i=0;i<_36;i++){
var _37=[];
for(var j=1;j<arguments.length;j++){
_37.push(arguments[j][i]);
}
_35.push(fn.apply(this,_37));
}
return _35;
}
};
MochiKit.Base.xfilter=function(fn){
var _39=[];
if(fn==null){
fn=MochiKit.Base.operator.truth;
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(fn(o)){
_39.push(o);
}
}
return _39;
};
MochiKit.Base.filter=function(fn,lst,_40){
var _41=[];
if(!MochiKit.Base.isArrayLike(lst)){
if(MochiKit.Iter){
lst=MochiKit.Iter.list(lst);
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn==null){
fn=MochiKit.Base.operator.truth;
}
if(typeof (Array.prototype.filter)=="function"){
return Array.prototype.filter.call(lst,fn,_40);
}else{
if(typeof (_40)=="undefined"||_40==null){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(fn(o)){
_41.push(o);
}
}
}else{
for(i=0;i<lst.length;i++){
o=lst[i];
if(fn.call(_40,o)){
_41.push(o);
}
}
}
}
return _41;
};
MochiKit.Base._wrapDumbFunction=function(_42){
return function(){
switch(arguments.length){
case 0:
return _42();
case 1:
return _42(arguments[0]);
case 2:
return _42(arguments[0],arguments[1]);
case 3:
return _42(arguments[0],arguments[1],arguments[2]);
}
var _43=[];
for(var i=0;i<arguments.length;i++){
_43.push("arguments["+i+"]");
}
return eval("(func("+_43.join(",")+"))");
};
};
MochiKit.Base.bind=function(_44,_45){
var _46=_44.im_func;
var _47=_44.im_preargs;
var _48=_44.im_self;
if(typeof (_44)=="function"&&typeof (_44.apply)=="undefined"){
_44=MochiKit.Base._wrapDumbFunction(_44);
}
if(typeof (_46)!="function"){
_46=_44;
}
if(typeof (_45)!="undefined"){
_48=_45;
}
if(typeof (_47)=="undefined"){
_47=[];
}else{
_47=_47.slice();
}
MochiKit.Base.extend(_47,arguments,2);
var _49=function(){
var _50=arguments;
var me=arguments.callee;
if(me.im_preargs.length>0){
_50=MochiKit.Base.concat(me.im_preargs,_50);
}
var _45=me.im_self;
if(!_45){
_45=this;
}
return me.im_func.apply(_45,_50);
};
_49.im_self=_48;
_49.im_func=_46;
_49.im_preargs=_47;
return _49;
};
MochiKit.Base.bindMethods=function(_51){
for(var k in _51){
var _52=_51[k];
if(typeof (_52)=="function"){
_51[k]=bind(_52,_51);
}
}
};
MochiKit.Base.NotFound=new MochiKit.Base.NamedError("MochiKit.Base.NotFound");
MochiKit.Base.AdapterRegistry=function(){
this.pairs=[];
};
MochiKit.Base.AdapterRegistry.prototype.register=function(_53,_54,_55,_56){
if(_56){
this.pairs.unshift([_53,_54,_55]);
}else{
this.pairs.push([_53,_54,_55]);
}
};
MochiKit.Base.AdapterRegistry.prototype.match=function(){
for(var i=0;i<this.pairs.length;i++){
var _57=this.pairs[i];
if(_57[1].apply(this,arguments)){
return _57[2].apply(this,arguments);
}
}
throw MochiKit.Base.NotFound;
};
MochiKit.Base.AdapterRegistry.prototype.unregister=function(_58){
for(var i=0;i<this.pairs.length;i++){
var _59=this.pairs[i];
if(_59[0]==_58){
this.pairs.splice(i,1);
return true;
}
}
return false;
};
MochiKit.Base.registerComparator=function(_60,_61,_62,_63){
MochiKit.Base.comparatorRegistry.register(_60,_61,_62,_63);
};
MochiKit.Base.compare=function(a,b){
if(a==b){
return 0;
}
var _64=(typeof (a)=="undefined"||a==null);
var _65=(typeof (b)=="undefined"||b==null);
if(_64&&_65){
return 0;
}else{
if(_64){
return -1;
}else{
if(_65){
return 1;
}
}
}
try{
return MochiKit.Base.comparatorRegistry.match(a,b);
}
catch(e){
if(e!=MochiKit.Base.NotFound){
throw e;
}
if(a<b){
return -1;
}else{
if(a>b){
return 1;
}
}
var _66=MochiKit.Base.repr;
throw new TypeError(_66(a)+" and "+_66(b)+" can not be compared");
}
};
MochiKit.Base.compareDateLike=function(a,b){
a=a.getTime();
b=b.getTime();
if(a==b){
return 0;
}else{
if(a<b){
return -1;
}else{
if(a>b){
return 1;
}
}
}
var _67=MochiKit.Base.repr;
throw new TypeError(_67(a)+" and "+_67(b)+" can not be compared");
};
MochiKit.Base.compareArrayLike=function(a,b){
var _68=MochiKit.Base.compare;
var _69=a.length;
var _70=0;
if(_69>b.length){
_70=1;
_69=b.length;
}else{
if(_69<b.length){
_70=-1;
}
}
for(var i=0;i<_69;i++){
var cmp=_68(a[i],b[i]);
if(cmp){
return cmp;
}
}
return _70;
};
MochiKit.Base.registerRepr=function(_72,_73,_74,_75){
MochiKit.Base.reprRegistry.register(_72,_73,_74,_75);
};
MochiKit.Base.repr=function(o){
if(typeof (o)=="undefined"){
return "undefined";
}else{
if(o===null){
return "null";
}
}
try{
if(typeof (o.__repr__)=="function"){
return o.__repr__();
}else{
if(typeof (o.repr)=="function"&&o.repr!=arguments.callee){
return o.repr();
}
}
return MochiKit.Base.reprRegistry.match(o);
}
catch(e){
if(typeof (o.NAME)=="string"&&(o.toString==Function.prototype.toString||o.toString==Object.prototype.toString)){
return o.NAME;
}
}
if(typeof (o)=="function"){
o=(o+"");
o=o.replace(/^\s+/,"");
o=o.replace(/\s+$/,"");
var idx=o.indexOf("{");
if(idx!=-1){
o=o.substr(0,idx)+"{...}";
}
}
return o+"";
};
MochiKit.Base.reprArrayLike=function(o){
return "["+MochiKit.Base.map(MochiKit.Base.repr,o).join(", ")+"]";
};
MochiKit.Base.reprString=function(o){
return ("\""+o.replace(/(["\\])/g,"\\$1")+"\"").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\r]/g,"\\r");
};
MochiKit.Base.reprNumber=function(o){
return o.toString();
};
MochiKit.Base.registerJSON=function(_77,_78,_79,_80){
MochiKit.Base.jsonRegistry.register(_77,_78,_79,_80);
};
MochiKit.Base.evalJSON=function(o){
return eval("("+o+")");
};
MochiKit.Base.serializeJSON=function(o){
var _81=typeof (o);
if(_81=="undefined"){
return "undefined";
}else{
if(_81=="number"||_81=="boolean"){
return o.toString();
}else{
if(o===null){
return "null";
}
}
}
var _82=MochiKit.Base.reprString;
if(_81=="string"){
return _82(o);
}
var me=arguments.callee;
var _83;
if(typeof (o.__json__)=="function"){
_83=o.__json__();
if(o!==_83){
return me(_83);
}
}
if(typeof (o.json)=="function"){
_83=o.json();
if(o!==_83){
return me(_83);
}
}
if(_81!="function"&&typeof (o.length)=="number"){
var res=[];
for(var i=0;i<o.length;i++){
var val=me(o[i]);
if(typeof (val)!="string"){
val="undefined";
}
res.push(val);
}
return "["+res.join(",")+"]";
}
try{
_83=MochiKit.Base.jsonRegistry.match(o);
return me(_83);
}
catch(e){
if(e!=MochiKit.Base.NotFound){
throw e;
}
}
if(_81=="function"){
return null;
}
res=[];
for(var k in o){
var _86;
if(typeof (k)=="number"){
_86="\""+k.toString()+"\"";
}else{
if(typeof (k)=="string"){
_86=_82(k);
}else{
continue;
}
}
val=me(o[k]);
if(typeof (val)!="string"){
continue;
}
res.push(_86+":"+val);
}
return "{"+res.join(",")+"}";
};
MochiKit.Base.objEqual=function(a,b){
return (MochiKit.Base.compare(a,b)==0);
};
MochiKit.Base.arrayEqual=function(_87,arr){
if(_87.length!=arr.length){
return false;
}
return (MochiKit.Base.compare(_87,arr)==0);
};
MochiKit.Base.concat=function(){
var _89=[];
var _90=MochiKit.Base.extend;
for(var i=0;i<arguments.length;i++){
_90(_89,arguments[i]);
}
return _89;
};
MochiKit.Base.keyComparator=function(key){
var _92=MochiKit.Base.compare;
if(arguments.length==1){
return function(a,b){
return _92(a[key],b[key]);
};
}
var _93=MochiKit.Base.extend(null,arguments);
return function(a,b){
var _94=0;
for(var i=0;(_94==0)&&(i<_93.length);i++){
var key=_93[i];
_94=_92(a[key],b[key]);
}
return _94;
};
};
MochiKit.Base.reverseKeyComparator=function(key){
var _95=MochiKit.Base.keyComparator.apply(this,arguments);
return function(a,b){
return _95(b,a);
};
};
MochiKit.Base.partial=function(_96){
return MochiKit.Base.bind.apply(this,MochiKit.Base.extend([_96,undefined],arguments,1));
};
MochiKit.Base.listMinMax=function(_97,lst){
if(lst.length==0){
return null;
}
var cur=lst[0];
var _99=MochiKit.Base.compare;
for(var i=1;i<lst.length;i++){
var o=lst[i];
if(_99(o,cur)==_97){
cur=o;
}
}
return cur;
};
MochiKit.Base.objMax=function(){
return MochiKit.Base.listMinMax(1,arguments);
};
MochiKit.Base.objMin=function(){
return MochiKit.Base.listMinMax(-1,arguments);
};
MochiKit.Base.nodeWalk=function(node,_101){
var _102=[node];
var _103=MochiKit.Base.extend;
while(_102.length){
var res=_101(_102.shift());
if(res){
_103(_102,res);
}
}
};
MochiKit.Base.nameFunctions=function(_104){
var base=_104.NAME;
if(typeof (base)=="undefined"){
base="";
}else{
base=base+".";
}
for(var name in _104){
var o=_104[name];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+name;
}
catch(e){
}
}
}
};
if(typeof (encodeURIComponent)!="undefined"){
MochiKit.Base.urlEncode=function(_107){
var rval=encodeURIComponent(_107);
return rval.replace(/\'/g,"%27");
};
}else{
MochiKit.Base.urlEncode=function(_109){
var rval=escape(_109).replace(/\+/g,"%2B").replace(/\"/g,"%22");
return rval.replace(/\'/g,"%27");
};
}
MochiKit.Base.queryString=function(_110,_111){
if(arguments.length==1){
var o=_110;
_110=[];
_111=[];
for(var k in o){
var v=o[k];
if(typeof (v)!="function"){
_110.push(k);
_111.push(v);
}
}
}
var rval=[];
var len=Math.min(_110.length,_111.length);
var _113=MochiKit.Base.urlEncode;
for(var i=0;i<len;i++){
v=_111[i];
if(typeof (v)!="undefined"&&v!=null){
rval.push(_113(_110[i])+"="+_113(v));
}
}
return rval.join("&");
};
MochiKit.Base.parseQueryString=function(_114,_115){
var _116=_114.replace(/\+/g,"%20").split("&");
var o={};
var _117;
if(typeof (decodeURIComponent)!="undefined"){
_117=decodeURIComponent;
}else{
_117=unescape;
}
if(_115){
for(var i=0;i<_116.length;i++){
var pair=_116[i].split("=");
var name=_117(pair[0]);
var arr=o[name];
if(!(arr instanceof Array)){
arr=[];
o[name]=arr;
}
arr.push(_117(pair[1]));
}
}else{
for(i=0;i<_116.length;i++){
pair=_116[i].split("=");
o[_117(pair[0])]=_117(pair[1]);
}
}
return o;
};
MochiKit.Base.EXPORT=["counter","clone","extend","update","updatetree","setdefault","keys","items","NamedError","operator","forward","itemgetter","typeMatcher","isCallable","isUndefined","isUndefinedOrNull","isNull","isNotEmpty","isArrayLike","isDateLike","xmap","map","xfilter","filter","bind","bindMethods","NotFound","AdapterRegistry","registerComparator","compare","registerRepr","repr","objEqual","arrayEqual","concat","keyComparator","reverseKeyComparator","partial","merge","listMinMax","listMax","listMin","objMax","objMin","nodeWalk","zip","urlEncode","queryString","serializeJSON","registerJSON","evalJSON","parseQueryString"];
MochiKit.Base.EXPORT_OK=["nameFunctions","comparatorRegistry","reprRegistry","jsonRegistry","compareDateLike","compareArrayLike","reprArrayLike","reprString","reprNumber"];
MochiKit.Base._exportSymbols=function(_119,_120){
if((typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined")||(typeof (MochiKit.__compat__)=="boolean"&&MochiKit.__compat__)){
var all=_120.EXPORT_TAGS[":all"];
for(var i=0;i<all.length;i++){
_119[all[i]]=_120[all[i]];
}
}
};
MochiKit.Base.__new__=function(){
this.listMax=this.partial(this.listMinMax,1);
this.listMin=this.partial(this.listMinMax,-1);
this.isCallable=this.typeMatcher("function");
this.isUndefined=this.typeMatcher("undefined");
this.merge=this.partial(this.update,null);
this.zip=this.partial(this.map,null);
this.comparatorRegistry=new this.AdapterRegistry();
this.registerComparator("dateLike",this.isDateLike,this.compareDateLike);
this.registerComparator("arrayLike",this.isArrayLike,this.compareArrayLike);
this.reprRegistry=new this.AdapterRegistry();
this.registerRepr("arrayLike",this.isArrayLike,this.reprArrayLike);
this.registerRepr("string",this.typeMatcher("string"),this.reprString);
this.registerRepr("numbers",this.typeMatcher("number","boolean"),this.reprNumber);
this.jsonRegistry=new this.AdapterRegistry();
var all=this.concat(this.EXPORT,this.EXPORT_OK);
this.EXPORT_TAGS={":common":this.concat(this.EXPORT_OK),":all":all};
this.nameFunctions(this);
};
MochiKit.Base.__new__();
compare=MochiKit.Base.compare;
MochiKit.Base._exportSymbols(this,MochiKit.Base);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Iter");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Iter depends on MochiKit.Base!";
}
if(typeof (MochiKit.Iter)=="undefined"){
MochiKit.Iter={};
}
MochiKit.Iter.NAME="MochiKit.Iter";
MochiKit.Iter.VERSION="1.0";
MochiKit.Iter.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Iter.toString=function(){
return this.__repr__();
};
MochiKit.Iter.registerIteratorFactory=function(name,_122,_123,_124){
MochiKit.Iter.iteratorRegistry.register(name,_122,_123,_124);
};
MochiKit.Iter.iter=function(_125,_126){
if(arguments.length==2){
return MochiKit.Iter.takewhile(function(a){
return a!=_126;
},_125);
}
if(typeof (_125.next)=="function"){
return _125;
}else{
if(typeof (_125.iter)=="function"){
return _125.iter();
}
}
try{
return MochiKit.Iter.iteratorRegistry.match(_125);
}
catch(e){
if(e==MochiKit.Base.NotFound){
e=new TypeError(typeof (_125)+": "+MochiKit.Base.repr(_125)+" is not iterable");
}
throw e;
}
};
MochiKit.Iter.count=function(n){
if(!n){
n=0;
}
return {"repr":function(){
return "count("+n+")";
},"toString":MochiKit.Base.forward("repr"),"next":MochiKit.Base.counter(n)};
};
MochiKit.Iter.cycle=function(p){
var lst=[];
var _128=MochiKit.Iter.iter(p);
return {"repr":function(){
return "cycle(...)";
},"toString":MochiKit.Base.forward("repr"),"next":function(){
try{
var rval=_128.next();
lst.push(rval);
return rval;
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
if(lst.length==0){
this.next=function(){
throw MochiKit.Iter.StopIteration;
};
}else{
var i=-1;
this.next=function(){
i=(i+1)%lst.length;
return lst[i];
};
}
return this.next();
}
}};
};
MochiKit.Iter.repeat=function(elem,n){
if(typeof (n)=="undefined"){
return {"repr":function(){
return "repeat("+MochiKit.Base.repr(elem)+")";
},"toString":MochiKit.Base.forward("repr"),"next":function(){
return elem;
}};
}
return {"repr":function(){
return "repeat("+MochiKit.Base.repr(elem)+", "+n+")";
},"toString":MochiKit.Base.forward("repr"),"next":function(){
if(n<=0){
throw MochiKit.Iter.StopIteration;
}
n-=1;
return elem;
}};
};
MochiKit.Iter.next=function(_130){
return _130.next();
};
MochiKit.Iter.izip=function(p,q){
var map=MochiKit.Base.map;
var next=MochiKit.Iter.next;
var _134=map(iter,arguments);
return {"repr":function(){
return "izip(...)";
},"toString":MochiKit.Base.forward("repr"),"next":function(){
return map(next,_134);
}};
};
MochiKit.Iter.ifilter=function(pred,seq){
seq=MochiKit.Iter.iter(seq);
if(pred==null){
pred=MochiKit.Base.operator.truth;
}
return {"repr":function(){
return "ifilter(...)";
},"toString":MochiKit.Base.forward("repr"),"next":function(){
while(true){
var rval=seq.next();
if(pred(rval)){
return rval;
}
}
return undefined;
}};
};
MochiKit.Iter.ifilterfalse=function(pred,seq){
seq=MochiKit.Iter.iter(seq);
if(pred==null){
pred=MochiKit.Base.operator.truth;
}
return {"repr":function(){
return "ifilterfalse(...)";
},"toString":MochiKit.Base.forward("repr"),"next":function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
return rval;
}
}
return undefined;
}};
};
MochiKit.Iter.islice=function(seq){
seq=MochiKit.Iter.iter(seq);
var _137=0;
var stop=0;
var step=1;
var i=-1;
if(arguments.length==2){
stop=arguments[1];
}else{
if(arguments.length==3){
_137=arguments[1];
stop=arguments[2];
}else{
_137=arguments[1];
stop=arguments[2];
step=arguments[3];
}
}
return {"repr":function(){
return "islice("+["...",_137,stop,step].join(", ")+")";
},"toString":MochiKit.Base.forward("repr"),"next":function(){
var rval;
while(i<_137){
rval=seq.next();
i++;
}
if(_137>=stop){
throw MochiKit.Iter.StopIteration;
}
_137+=step;
return rval;
}};
};
MochiKit.Iter.imap=function(fun,p,q){
var map=MochiKit.Base.map;
var _141=map(MochiKit.Iter.iter,MochiKit.Base.extend(null,arguments,1));
var next=MochiKit.Iter.next;
return {"repr":function(){
return "imap(...)";
},"toString":MochiKit.Base.forward("repr"),"next":function(){
return fun.apply(this,map(next,_141));
}};
};
MochiKit.Iter.applymap=function(fun,seq,self){
seq=MochiKit.Iter.iter(seq);
return {"repr":function(){
return "applymap(...)";
},"toString":MochiKit.Base.forward("repr"),"next":function(){
return fun.apply(self,seq.next());
}};
};
MochiKit.Iter.chain=function(p,q){
var iter=MochiKit.Iter.iter;
if(arguments.length==1){
return iter(arguments[0]);
}
var _144=MochiKit.Base.map(iter,arguments);
var bind=MochiKit.Base.bind;
return {"repr":function(){
return "chain(...)";
},"toString":MochiKit.Base.forward("repr"),"next":function(){
while(_144.length>1){
try{
return _144[0].next();
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
_144.shift();
}
}
if(_144.length==1){
var arg=_144.shift();
this.next=bind(arg.next,arg);
return this.next();
}
throw MochiKit.Iter.StopIteration;
}};
};
MochiKit.Iter.takewhile=function(pred,seq){
seq=MochiKit.Iter.iter(seq);
return {"repr":function(){
return "takewhile(...)";
},"toString":MochiKit.Base.forward("repr"),"next":function(){
var rval=seq.next();
if(!pred(rval)){
this.next=function(){
throw MochiKit.Iter.StopIteration;
};
throw MochiKit.Iter.StopIteration;
}
return rval;
}};
};
MochiKit.Iter.dropwhile=function(pred,seq){
seq=MochiKit.Iter.iter(seq);
var bind=MochiKit.Base.bind;
return {"repr":function(){
return "dropwhile(...)";
},"toString":MochiKit.Base.forward("repr"),"next":function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
break;
}
}
this.next=bind(seq.next,seq);
return rval;
}};
};
MochiKit.Iter._tee=function(_146,sync,_148){
sync.pos[_146]=-1;
var _149=MochiKit.Base.listMin;
return {"repr":function(){
return "tee("+_146+", ...)";
},"toString":MochiKit.Base.forward("repr"),"next":function(){
var rval;
var i=sync.pos[_146];
if(i==sync.max){
rval=_148.next();
sync.deque.push(rval);
sync.max+=1;
sync.pos[_146]+=1;
}else{
rval=sync.deque[i-sync.min];
sync.pos[_146]+=1;
if(i==sync.min&&_149(sync.pos)!=sync.min){
sync.min+=1;
sync.deque.shift();
}
}
return rval;
}};
};
MochiKit.Iter.tee=function(_150,n){
var rval=[];
var sync={"pos":[],"deque":[],"max":-1,"min":-1};
if(arguments.length==1){
n=2;
}
_150=MochiKit.Iter.iter(_150);
var _tee=MochiKit.Iter._tee;
for(var i=0;i<n;i++){
rval.push(_tee(i,sync,_150));
}
return rval;
};
MochiKit.Iter.list=function(_152){
if(typeof (_152.slice)=="function"){
return _152.slice();
}else{
if(MochiKit.Base.isArrayLike(_152)){
return MochiKit.Base.concat(_152);
}
}
_152=MochiKit.Iter.iter(_152);
var rval=[];
try{
while(true){
rval.push(_152.next());
}
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
return rval;
}
return undefined;
};
MochiKit.Iter.reduce=function(fn,_153,_154){
var i=0;
var x=_154;
_153=MochiKit.Iter.iter(_153);
if(arguments.length<3){
try{
x=_153.next();
}
catch(e){
if(e==MochiKit.Iter.StopIteration){
e=new TypeError("reduce() of empty sequence with no initial value");
}
throw e;
}
i++;
}
try{
while(true){
x=fn(x,_153.next());
}
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
}
return x;
};
MochiKit.Iter.range=function(){
var _156=0;
var stop=0;
var step=1;
if(arguments.length==1){
stop=arguments[0];
}else{
if(arguments.length==2){
_156=arguments[0];
stop=arguments[1];
}else{
if(arguments.length==3){
_156=arguments[0];
stop=arguments[1];
step=arguments[2];
}else{
throw TypeError("range() takes 1, 2, or 3 arguments!");
}
}
}
if(step==0){
throw TypeError("range() step must not be 0");
}
return {"next":function(){
if((step>0&&_156>=stop)||(step<0&&_156<=stop)){
throw MochiKit.Iter.StopIteration;
}
var rval=_156;
_156+=step;
return rval;
},"repr":function(){
return "range("+[_156,stop,step].join(", ")+")";
},"toString":MochiKit.Base.forward("repr")};
};
MochiKit.Iter.sum=function(_157,_158){
var x=_158?_158:0;
_157=MochiKit.Iter.iter(_157);
try{
while(true){
x+=_157.next();
}
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
}
return x;
};
MochiKit.Iter.exhaust=function(_159){
_159=MochiKit.Iter.iter(_159);
try{
while(true){
_159.next();
}
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
}
};
MochiKit.Iter.forEach=function(_160,func,self){
if(arguments.length>2){
func=MochiKit.Base.bind(func,self);
}
if(MochiKit.Base.isArrayLike(_160)){
for(var i=0;i<_160.length;i++){
func(_160[i]);
}
}else{
MochiKit.Iter.exhaust(MochiKit.Iter.imap(func,_160));
}
};
MochiKit.Iter.every=function(_162,func){
try{
MochiKit.Iter.ifilterfalse(func,_162).next();
return false;
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
return true;
}
};
MochiKit.Iter.sorted=function(_163,cmp){
var rval=MochiKit.Iter.list(_163);
if(arguments.length==1){
cmp=MochiKit.Base.compare;
}
rval.sort(cmp);
return rval;
};
MochiKit.Iter.reversed=function(_164){
var rval=MochiKit.Iter.list(_164);
rval.reverse();
return rval;
};
MochiKit.Iter.some=function(_165,func){
try{
MochiKit.Iter.ifilter(func,_165).next();
return true;
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
return false;
}
};
MochiKit.Iter.iextend=function(lst,_166){
if(MochiKit.Base.isArrayLike(_166)){
for(var i=0;i<_166.length;i++){
lst.push(_166[i]);
}
}else{
_166=MochiKit.Iter.iter(_166);
try{
while(true){
lst.push(_166.next());
}
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
}
}
return lst;
};
MochiKit.Iter.arrayLikeIter=function(_167){
var i=0;
return {"repr":function(){
return "arrayLikeIter(...)";
},"toString":MochiKit.Base.forward("repr"),"next":function(){
if(i>=_167.length){
throw MochiKit.Iter.StopIteration;
}
return _167[i++];
}};
};
MochiKit.Iter.EXPORT_OK=["iteratorRegistry","arrayLikeIter"];
MochiKit.Iter.EXPORT=["StopIteration","registerIteratorFactory","iter","count","cycle","repeat","next","izip","ifilter","ifilterfalse","islice","imap","applymap","chain","takewhile","dropwhile","tee","list","reduce","range","sum","exhaust","forEach","every","sorted","reversed","some","iextend"];
MochiKit.Iter.__new__=function(){
this.StopIteration=new MochiKit.Base.NamedError("StopIteration");
this.iteratorRegistry=new MochiKit.Base.AdapterRegistry();
this.registerIteratorFactory("arrayLike",MochiKit.Base.isArrayLike,this.arrayLikeIter);
this.EXPORT_TAGS={":common":this.EXPORT,":all":MochiKit.Base.concat(this.EXPORT,this.EXPORT_OK)};
MochiKit.Base.nameFunctions(this);
};
MochiKit.Iter.__new__();
reduce=MochiKit.Iter.reduce;
MochiKit.Base._exportSymbols(this,MochiKit.Iter);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Logging");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Logging depends on MochiKit.Base!";
}
if(typeof (MochiKit.Logging)=="undefined"){
MochiKit.Logging={};
}
MochiKit.Logging.NAME="MochiKit.Logging";
MochiKit.Logging.VERSION="1.0";
MochiKit.Logging.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Logging.toString=function(){
return this.__repr__();
};
MochiKit.Logging.EXPORT=["LogLevel","LogMessage","Logger","alertListener","logger","log","logError","logDebug","logFatal","logWarning"];
MochiKit.Logging.EXPORT_OK=["logLevelAtLeast","isLogMessage","compareLogMessage"];
MochiKit.Logging.logLevelAtLeast=function(_168){
if(typeof (_168)=="string"){
_168=MochiKit.Logging.LogLevel[_168];
}
return function(msg){
var _170=msg.level;
if(typeof (_170)=="string"){
_170=MochiKit.Logging.LogLevel[_170];
}
return _170>=_168;
};
};
MochiKit.Logging.LogMessage=function(num,_172,info){
this.num=num;
this.level=_172;
this.info=info;
this.timestamp=new Date();
};
MochiKit.Logging.LogMessage.prototype.repr=function(){
return "LogMessage("+MochiKit.Base.map(MochiKit.Base.repr,[this.num,this.level,this.info]).join(", ")+")";
};
MochiKit.Logging.LogMessage.prototype.toString=function(){
return this.repr();
};
MochiKit.Logging.isLogMessage=function(){
var _174=MochiKit.Logging.LogMessage;
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof _174)){
return false;
}
}
return true;
};
MochiKit.Logging.compareLogMessage=function(a,b){
return MochiKit.Base.compare([a.level,a.info],[b.level,b.info]);
};
MochiKit.Logging.Logger=function(_175){
this.counter=0;
if(typeof (_175)=="undefined"||_175==null){
_175=-1;
}
this.maxSize=_175;
this._messages=[];
this.listeners={};
};
MochiKit.Logging.Logger.prototype.clear=function(){
this._messages.splice(0,this._messages.length);
};
MochiKit.Logging.Logger.prototype.dispatchListeners=function(msg){
for(var k in this.listeners){
var pair=this.listeners[k];
if(pair[0]&&!pair[0](msg)){
continue;
}
pair[1](msg);
}
};
MochiKit.Logging.Logger.prototype.addListener=function(_176,_177,_178){
if(typeof (_177)=="string"){
_177=MochiKit.Logging.logLevelAtLeast(_177);
}
this.listeners[_176]=[_177,_178];
};
MochiKit.Logging.Logger.prototype.removeListener=function(_179){
delete this.listeners[_179];
};
MochiKit.Logging.Logger.prototype.baseLog=function(_180,_181){
var msg=new MochiKit.Logging.LogMessage(this.counter,_180,MochiKit.Base.extend(null,arguments,1));
this._messages.push(msg);
this.dispatchListeners(msg);
this.counter+=1;
while(this.maxSize>=0&&this._messages.length>this.maxSize){
this._messges.shift();
}
};
MochiKit.Logging.Logger.prototype.getMessages=function(_182){
var _183=0;
if(!(typeof (_182)=="undefined"||_182==null)){
_183=Math.max(0,this._messages.length-_182);
}
return this._messages.slice(_183);
};
MochiKit.Logging.Logger.prototype.getMessageText=function(_184){
if(typeof (_184)=="undefined"||_184==null){
_184=30;
}
var _185=this.getMessages(_184);
if(_185.length){
var lst=map(function(m){
return "\n  ["+m.num+"] "+m.level+": "+m.info.join(" ");
},_185);
lst.unshift("LAST "+_185.length+" MESSAGES:");
return lst.join("");
}
return "";
};
MochiKit.Logging.Logger.prototype.debuggingBookmarklet=function(_187){
if(typeof (MochiKit.LoggingPane)=="undefined"){
alert(this.getMessageText());
}else{
MochiKit.LoggingPane.createLoggingPane(_187||false);
}
};
MochiKit.Logging.alertListener=function(msg){
alert("num: "+msg.num+"\nlevel: "+msg.level+"\ninfo: "+msg.info.join(" "));
};
MochiKit.Logging.__new__=function(){
this.LogLevel={"ERROR":40,"FATAL":50,"WARNING":30,"INFO":20,"DEBUG":10};
MochiKit.Base.registerComparator("LogMessage",this.isLogMessage,this.compareLogMessage);
var _188=MochiKit.Base.partial;
var _189=this.Logger;
_189.prototype.debug=_188(_189.prototype.baseLog,"DEBUG");
_189.prototype.log=_188(_189.prototype.baseLog,"INFO");
_189.prototype.error=_188(_189.prototype.baseLog,"ERROR");
_189.prototype.fatal=_188(_189.prototype.baseLog,"FATAL");
_189.prototype.warning=_188(_189.prototype.baseLog,"WARNING");
var self=this;
var _190=function(name){
return function(){
self.logger[name].apply(self.logger,arguments);
};
};
this.log=_190("log");
this.logError=_190("error");
this.logDebug=_190("debug");
this.logFatal=_190("fatal");
this.logWarning=_190("warning");
this.logger=new _189();
this.EXPORT_TAGS={":common":this.EXPORT,":all":MochiKit.Base.concat(this.EXPORT,this.EXPORT_OK)};
MochiKit.Base.nameFunctions(this);
};
MochiKit.Logging.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Logging);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.DateTime");
}
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.DateTime)=="undefined"){
MochiKit.DateTime={};
}
MochiKit.DateTime.NAME="MochiKit.DateTime";
MochiKit.DateTime.VERSION="1.0";
MochiKit.DateTime.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.DateTime.toString=function(){
return this.__repr__();
};
MochiKit.DateTime.isoDate=function(str){
str=str+"";
if(typeof (str)!="string"||str.length==0){
return null;
}
var iso=str.split("-");
if(iso.length==0){
return null;
}
return new Date(iso[0],iso[1]-1,iso[2]);
};
MochiKit.DateTime._isoRegexp=/(\d{4,})(?:-(\d{1,2})(?:-(\d{1,2})(?:[T ](\d{1,2}):(\d{1,2})(?::(\d{1,2})(?:\.(\d+))?)?(?:(Z)|([+-])(\d{1,2})(?::(\d{1,2}))?)?)?)?)?/;
MochiKit.DateTime.isoTimestamp=function(str){
str=str+"";
if(typeof (str)!="string"||str.length==0){
return null;
}
var res=str.match(MochiKit.DateTime._isoRegexp);
if(typeof (res)=="undefined"||res==null){
return null;
}
var year,month,day,hour,min,sec,msec;
year=parseInt(res[1],10);
if(typeof (res[2])=="undefined"||res[2]==""){
return new Date(year);
}
month=parseInt(res[2],10)-1;
day=parseInt(res[3],10);
if(typeof (res[4])=="undefined"||res[4]==""){
return new Date(year,month,day);
}
hour=parseInt(res[4],10);
min=parseInt(res[5],10);
sec=(typeof (res[6])!="undefined"&&res[6]!="")?parseInt(res[6],10):0;
if(typeof (res[7])!="undefined"&&res[7]!=""){
msec=Math.round(1000*parseFloat("0."+res[7]));
}else{
msec=0;
}
if((typeof (res[8])=="undefined"||res[8]=="")&&(typeof (res[9])=="undefined"||res[9]=="")){
return new Date(year,month,day,hour,min,sec,msec);
}
var ofs;
if(typeof (res[9])!="undefined"&&res[9]!=""){
ofs=parseInt(res[10],10)*3600;
if(typeof (res[11])!="undefined"&&res[11]!=""){
ofs+=parseInt(res[11],10)*60;
}
if(res[9]=="-"){
ofs=-ofs;
}
}else{
ofs=0;
}
return new Date(Date.UTC(year,month,day,hour,min,sec,msec)+ofs);
};
MochiKit.DateTime.toISOTime=function(date,_196){
if(typeof (date)=="undefined"||date==null){
return null;
}
var hh=date.getHours();
var mm=date.getMinutes();
var ss=date.getSeconds();
var lst=[((padHours&&(hh<10))?"0"+hh:hh),((mm<10)?"0"+mm:mm),((ss<10)?"0"+ss:ss)];
return lst.join(":");
};
MochiKit.DateTime.toISOTimestamp=function(date,_200){
if(typeof (date)=="undefined"||date==null){
return null;
}
var sep=_200?"T":" ";
var foot=_200?"Z":"";
if(_200){
date=new Date(date.getTime()+(date.getTimezoneOffset()*60000));
}
return MochiKit.DateTime.toISODate(date)+sep+MochiKit.DateTime.toISOTime(date,_200)+foot;
};
MochiKit.DateTime.toISODate=function(date){
if(typeof (date)=="undefined"||date==null){
return null;
}
var _203=MochiKit.DateTime._padTwo;
return [date.getFullYear(),_203(date.getMonth()+1),_203(date.getDate())].join("-");
};
MochiKit.DateTime.americanDate=function(d){
d=d+"";
if(typeof (d)!="string"||d.length==0){
return null;
}
var a=d.split("/");
return new Date(a[2],a[0]-1,a[1]);
};
MochiKit.DateTime._padTwo=function(n){
return (n>9)?n:"0"+n;
};
MochiKit.DateTime.toPaddedAmericanDate=function(d){
if(typeof (d)=="undefined"||d==null){
return null;
}
var _205=MochiKit.DateTime._padTwo;
return [_205(d.getMonth()+1),_205(d.getDate()),d.getFullYear()].join("/");
};
MochiKit.DateTime.toAmericanDate=function(d){
if(typeof (d)=="undefined"||d==null){
return null;
}
return [d.getMonth()+1,d.getDate(),d.getFullYear()].join("/");
};
MochiKit.DateTime.EXPORT=["isoDate","isoTimestamp","toISOTime","toISOTimestamp","toISODate","americanDate","toPaddedAmericanDate","toAmericanDate"];
MochiKit.DateTime.EXPORT_OK=[];
MochiKit.DateTime.EXPORT_TAGS={":common":MochiKit.DateTime.EXPORT,":all":MochiKit.DateTime.EXPORT};
MochiKit.DateTime.__new__=function(){
var base=this.NAME+".";
for(var k in this){
var o=this[k];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+k;
}
catch(e){
}
}
}
};
MochiKit.DateTime.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.DateTime);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Format");
}
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.Format)=="undefined"){
MochiKit.Format={};
}
MochiKit.Format.NAME="MochiKit.Format";
MochiKit.Format.VERSION="1.0";
MochiKit.Format.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Format.toString=function(){
return this.__repr__();
};
MochiKit.Format._numberFormatter=function(_206,_207,_208,_209,_210,_211,_212,_213,_214){
return function(num){
num=parseFloat(num);
if(typeof (num)=="undefined"||num==null||isNaN(num)){
return _206;
}
var _215=_207;
var _216=_208;
if(num<0){
num=-num;
}else{
_215=_215.replace(/-/,"");
}
var me=arguments.callee;
var fmt=MochiKit.Format.formatLocale(_209);
if(_210){
num=num*100;
_216=fmt.percent+_216;
}
num=MochiKit.Format.roundToFixed(num,_211);
var _218=num.split(/\./);
var _219=_218[0];
var frac=(_218.length==1)?"":_218[1];
var res="";
while(_219.length<_212){
_219="0"+_219;
}
if(_213){
while(_219.length>_213){
var i=_219.length-_213;
res=res+fmt.separator+_219.substring(i,_219.length);
_219=_219.substring(0,i);
}
}
res=_219+res;
if(_211>0){
while(frac.length<_214){
frac=frac+"0";
}
res=res+fmt.decimal+frac;
}
return _215+res+_216;
};
};
MochiKit.Format.numberFormatter=function(_221,_222,_223){
if(typeof (_222)=="undefined"){
_222="";
}
var _224=_221.match(/((?:[0#]+,)?[0#]+)(?:\.([0#]+))?(%)?/);
if(!_224){
throw TypeError("Invalid pattern");
}
var _225=_221.substr(0,_224.index);
var _226=_221.substr(_224.index+_224[0].length);
if(_225.search(/-/)==-1){
_225=_225+"-";
}
var _227=_224[1];
var frac=(typeof (_224[2])=="string"&&_224[2]!="")?_224[2]:"";
var _228=(typeof (_224[3])=="string"&&_224[3]!="");
var tmp=_227.split(/,/);
var _230;
if(typeof (_223)=="undefined"){
_223="default";
}
if(tmp.length==1){
_230=null;
}else{
_230=tmp[1].length;
}
var _231=_227.length-_227.replace(/0/g,"").length;
var _232=frac.length-frac.replace(/0/g,"").length;
var _233=frac.length;
return MochiKit.Format._numberFormatter(_222,_225,_226,_223,_228,_233,_231,_230,_232);
};
MochiKit.Format.formatLocale=function(_234){
if(typeof (_234)=="undefined"||_234==null){
_234="default";
}
if(typeof (_234)=="string"){
var rval=MochiKit.Format.LOCALE[_234];
if(typeof (rval)=="string"){
rval=arguments.callee(rval);
MochiKit.Format.LOCALE[_234]=rval;
}
return rval;
}else{
return _234;
}
};
MochiKit.Format.twoDigitAverage=function(_235,_236){
if(_236){
var res=_235/_236;
if(!isNaN(res)){
return MochiKit.Format.twoDigitFloat(_235/_236);
}
}
return "0";
};
MochiKit.Format.twoDigitFloat=function(_237){
var sign=(_237<0?"-":"");
var s=Math.floor(Math.abs(_237)*100).toString();
if(s=="0"){
return s;
}
if(s.length<3){
while(s.charAt(s.length-1)=="0"){
s=s.substring(0,s.length-1);
}
return sign+"0."+s;
}
var head=sign+s.substring(0,s.length-2);
var tail=s.substring(s.length-2,s.length);
if(tail=="00"){
return head;
}else{
if(tail.charAt(1)=="0"){
return head+"."+tail.charAt(0);
}else{
return head+"."+tail;
}
}
};
MochiKit.Format.lstrip=function(str,_242){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_242){
return str.replace(/^\s+/,"");
}else{
return str.replace(new RegExp("^["+_242+"]+"),"");
}
};
MochiKit.Format.rstrip=function(str,_243){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_243){
return str.replace(/\s+$/,"");
}else{
return str.replace(new RegExp("["+_243+"]+$"),"");
}
};
MochiKit.Format.strip=function(str,_244){
var self=MochiKit.Format;
return self.rstrip(self.lstrip(str,_244),_244);
};
MochiKit.Format.truncToFixed=function(_245,_246){
_245=Math.floor(_245*Math.pow(10,_246));
var res=(_245*Math.pow(10,-_246)).toFixed(_246);
if(res.charAt(0)=="."){
res="0"+res;
}
return res;
};
MochiKit.Format.roundToFixed=function(_247,_248){
return MochiKit.Format.truncToFixed(_247+0.5*Math.pow(10,-_248),_248);
};
MochiKit.Format.percentFormat=function(_249){
return MochiKit.Format.twoDigitFloat(100*_249)+"%";
};
MochiKit.Format.EXPORT=["truncToFixed","roundToFixed","numberFormatter","formatLocale","twoDigitAverage","twoDigitFloat","percentFormat","lstrip","rstrip","strip"];
MochiKit.Format.LOCALE={"en_US":{"separator":",","decimal":".","percent":"%"},"de_DE":{"separator":".","decimal":",","percent":"%"},"fr_FR":{"separator":" ","decimal":",","percent":"%"},"default":"en_US"};
MochiKit.Format.EXPORT_OK=[];
MochiKit.Format.EXPORT_TAGS={":all":MochiKit.Format.EXPORT,":common":MochiKit.Format.EXPORT};
MochiKit.Format.__new__=function(){
var base=this.NAME+".";
for(var k in this){
var o=this[k];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+k;
}
catch(e){
}
}
}
};
MochiKit.Format.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Format);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Async");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Async depends on MochiKit.Base!";
}
if(typeof (MochiKit.Async)=="undefined"){
MochiKit.Async={};
}
MochiKit.Async.NAME="MochiKit.Async";
MochiKit.Async.VERSION="1.0";
MochiKit.Async.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Async.toString=function(){
return this.__repr__();
};
MochiKit.Async.Deferred=function(_250){
this.chain=[];
this.id=this._nextId();
this.fired=-1;
this.paused=0;
this.results=[null,null];
this.canceller=_250;
this.silentlyCancelled=false;
};
MochiKit.Async.Deferred.prototype={repr:function(){
var _251;
if(this.fired==-1){
_251="unfired";
}else{
if(this.fired==0){
_251="success";
}else{
_251="error";
}
}
return "Deferred("+this.id+", "+_251+")";
},toString:MochiKit.Base.forward("repr"),_nextId:MochiKit.Base.counter(),cancel:function(){
if(this.fired==-1){
if(this.canceller){
this.canceller(this);
}else{
this.silentlyCancelled=true;
}
if(this.fired==-1){
this.errback(new MochiKit.Async.CancelledError(this));
}
}else{
if((this.fired==0)&&(this.results[0] instanceof MochiKit.Async.Deferred)){
this.results[0].cancel();
}
}
},_pause:function(){
this.paused++;
},_unpause:function(){
this.paused--;
if((this.paused==0)&&(this.fired>=0)){
this._fire();
}
},_continue:function(res){
this._resback(res);
this._unpause();
},_resback:function(res){
this.fired=((res instanceof Error)?1:0);
this.results[this.fired]=res;
this._fire();
},_check:function(){
if(this.fired!=-1){
if(!this.silentlyCancelled){
throw new MochiKit.Async.AlreadyCalledError(this);
}
this.silentlyCancelled=false;
return;
}
},callback:function(res){
this._check();
this._resback(res);
},errback:function(res){
this._check();
if(!(res instanceof Error)){
res=new MochiKit.Async.GenericError(res);
}
this._resback(res);
},addBoth:function(fn){
return this.addCallbacks(fn,fn);
},addCallback:function(fn){
return this.addCallbacks(fn,null);
},addErrback:function(fn){
return this.addCallbacks(null,fn);
},addCallbacks:function(cb,eb){
this.chain.push([cb,eb]);
if(this.fired>=0){
this._fire();
}
return this;
},_fire:function(){
var _254=this.chain;
var _255=this.fired;
var res=this.results[_255];
var self=this;
var cb=null;
while(_254.length>0&&this.paused==0){
var pair=_254.shift();
var f=pair[_255];
if(f==null){
continue;
}
try{
res=f(res);
_255=((res instanceof Error)?1:0);
if(res instanceof MochiKit.Async.Deferred){
cb=function(res){
self._continue(res);
};
this._pause();
}
}
catch(err){
_255=1;
res=err;
}
}
this.fired=_255;
this.results[_255]=res;
if(cb&&this.paused){
res.addBoth(cb);
}
}};
MochiKit.Async.evalJSONRequest=function(req){
return eval("("+req.responseText+")");
};
MochiKit.Async.succeed=function(_258){
var d=new MochiKit.Async.Deferred();
d.callback.apply(d,arguments);
return d;
};
MochiKit.Async.fail=function(_259){
var d=new MochiKit.Async.Deferred();
d.errback.apply(d,arguments);
return d;
};
MochiKit.Async.getXMLHttpRequest=function(){
var self=arguments.callee;
if(!self.XMLHttpRequest){
var _260=[function(){
return new XMLHttpRequest();
},function(){
return new ActiveXObject("Msxml2.XMLHTTP");
},function(){
return new ActiveXObject("Microsoft.XMLHTTP");
},function(){
return new ActiveXObject("Msxml2.XMLHTTP.4.0");
},function(){
throw new MochiKit.Async.BrowserComplianceError("Browser does not support XMLHttpRequest");
}];
for(var i=0;i<_260.length;i++){
var func=_260[i];
try{
self.XMLHttpRequest=func;
return func();
}
catch(e){
}
}
}
return self.XMLHttpRequest();
};
MochiKit.Async.sendXMLHttpRequest=function(req,_261){
if(typeof (_261)=="undefined"){
send=null;
}
var _262=function(){
try{
req.onreadystatechange=null;
}
catch(e){
try{
req.onreadystatechange=function(){
};
}
catch(e){
}
}
req.abort();
};
var d=new MochiKit.Async.Deferred(_262);
var _263=function(){
if(req.readyState==4){
try{
req.onreadystatechange=null;
}
catch(e){
try{
req.onreadystatechange=function(){
};
}
catch(e){
}
}
var _264=null;
try{
_264=req.status;
if(!_264&&MochiKit.Base.isNotEmpty(req.responseText)){
_264=304;
}
}
catch(e){
}
if(_264==200||_264==304){
d.callback(req);
}else{
var err=new MochiKit.Async.XMLHttpRequestError(req,"Request failed");
if(err.number){
d.errback(err);
}else{
d.errback(err);
}
}
}
};
try{
req.onreadystatechange=_263;
req.send(_261);
}
catch(e){
try{
req.onreadystatechange=null;
}
catch(ignore){
}
d.errback(e);
}
return d;
};
MochiKit.Async.doSimpleXMLHttpRequest=function(url){
var req=MochiKit.Async.getXMLHttpRequest();
req.open("GET",url,true);
return MochiKit.Async.sendXMLHttpRequest(req);
};
MochiKit.Async.loadJSONDoc=function(url){
var d=MochiKit.Async.doSimpleXMLHttpRequest(url);
d=d.addCallback(MochiKit.Async.evalJSONRequest);
return d;
};
MochiKit.Async.wait=function(_267,_268){
var d=new MochiKit.Async.Deferred();
var bind=MochiKit.Base.bind;
var _269=MochiKit.Base.partial;
if(typeof (_268)!="undefined"){
d.addCallback(function(){
return _268;
});
}
var _270=setTimeout(bind(d.callback,d),Math.floor(_267*1000));
d.canceller=function(){
try{
clearTimeout(_270);
}
catch(e){
}
};
return d;
};
MochiKit.Async.callLater=function(_271,func){
var m=MochiKit.Base;
var _272=m.partial.apply(null,m.extend(null,arguments,1));
return MochiKit.Async.wait(_271).addCallback(function(res){
return _272();
});
};
MochiKit.Async.DeferredLock=function(){
this.waiting=[];
this.locked=false;
this.id=this._nextId();
};
MochiKit.Async.DeferredLock.prototype={__class__:MochiKit.Async.DeferredLock,acquire:function(){
d=new MochiKit.Async.Deferred();
if(this.locked){
this.waiting.push(d);
}else{
this.locked=true;
d.callback(this);
}
return d;
},release:function(){
if(!this.locked){
throw TypeError("Tried to release an unlocked DeferredLock");
}
this.locked=false;
if(this.waiting.length>0){
this.locked=true;
this.waiting.shift().callback(this);
}
},_nextId:MochiKit.Base.counter(),repr:function(){
var _273;
if(this.locked){
_273="locked, "+this.waiting.length+" waiting";
}else{
_273="unlocked";
}
return "DeferredLock("+this.id+", "+_273+")";
},toString:MochiKit.Base.forward("repr")};
MochiKit.Async.EXPORT=["AlreadyCalledError","CancelledError","BrowserComplianceError","GenericError","XMLHttpRequestError","Deferred","succeed","fail","getXMLHttpRequest","doSimpleXMLHttpRequest","loadJSONDoc","wait","callLater","sendXMLHttpRequest","DeferredLock"];
MochiKit.Async.EXPORT_OK=["evalJSONRequest"];
MochiKit.Async.__new__=function(){
var m=MochiKit.Base;
var ne=m.partial(m._newNamedError,this);
ne("AlreadyCalledError",function(_275){
this.deferred=_275;
});
ne("CancelledError",function(_276){
this.deferred=_276;
});
ne("BrowserComplianceError",function(msg){
this.message=msg;
});
ne("GenericError",function(msg){
this.message=msg;
});
ne("XMLHttpRequestError",function(req,msg){
this.req=req;
this.message=msg;
try{
this.number=req.status;
}
catch(e){
}
});
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Async.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Async);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.DOM");
dojo.require("MochiKit.Iter");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Iter",[]);
}
try{
if(typeof (MochiKit.Iter)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.DOM depends on MochiKit.Iter!";
}
if(typeof (MochiKit.DOM)=="undefined"){
MochiKit.DOM={};
}
MochiKit.DOM.NAME="MochiKit.DOM";
MochiKit.DOM.VERSION="1.0";
MochiKit.DOM.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.DOM.toString=function(){
return this.__repr__();
};
MochiKit.DOM.EXPORT=["registerDOMConverter","coerceToDOM","createDOM","createDOMFunc","getNodeAttribute","setNodeAttribute","updateNodeAttributes","appendChildNodes","replaceChildNodes","removeElement","swapDOM","BUTTON","TT","PRE","H1","H2","H3","BR","HR","LABEL","TEXTAREA","FORM","P","UL","OL","LI","TD","TR","THEAD","TBODY","TFOOT","TABLE","TH","INPUT","SPAN","A","DIV","IMG","getElement","$","getComputedStyle","getElementsByTagAndClassName","addToCallStack","addLoadEvent","focusOnLoad","setElementClass","toggleElementClass","addElementClass","removeElementClass","swapElementClass","hasElementClass","escapeHTML","toHTML","emitHTML","setDisplayForElement","hideElement","showElement","scrapeText"];
MochiKit.DOM.EXPORT_OK=["domConverters"];
MochiKit.DOM.registerDOMConverter=function(name,_277,wrap,_279){
MochiKit.DOM.domConverters.register(name,_277,wrap,_279);
};
MochiKit.DOM.coerceToDOM=function(node,ctx){
var iter=MochiKit.Iter.iter;
var _281=MochiKit.Iter.repeat;
var imap=MochiKit.Iter.imap;
var _283=MochiKit.DOM.domConverters;
var _284=MochiKit.DOM.coerceToDOM;
var _285=MochiKit.Base.NotFound;
while(true){
if(typeof (node)=="undefined"||node==null){
return null;
}
if(typeof (node.nodeType)!="undefined"&&node.nodeType>0){
return node;
}
if(typeof (node)=="number"||typeof (node)=="bool"){
node=node.toString();
}
if(typeof (node)=="string"){
return document.createTextNode(node);
}
if(typeof (node.toDOM)=="function"){
node=node.toDOM(ctx);
continue;
}
if(typeof (node)=="function"){
node=node(ctx);
continue;
}
var _286=null;
try{
_286=iter(node);
}
catch(e){
}
if(_286){
return imap(_284,_286,_281(ctx));
}
try{
node=_283.match(node,ctx);
continue;
}
catch(e){
if(e!=_285){
throw e;
}
}
return document.createTextNode(node.toString());
}
return undefined;
};
MochiKit.DOM.setNodeAttribute=function(node,attr,_288){
var o={};
o.attr=_288;
try{
return MochiKit.DOM.updateNodeAttributes(node,o);
}
catch(e){
}
return null;
};
MochiKit.DOM.getNodeAttribute=function(node,attr){
var _289=MochiKit.DOM.attributeArray.renames[attr];
node=MochiKit.DOM.getElement(node);
try{
if(_289){
return node[_289];
}
return node.getAttribute(attr);
}
catch(e){
}
return null;
};
MochiKit.DOM.updateNodeAttributes=function(node,_290){
var elem=node;
if(typeof (node)=="string"){
elem=MochiKit.DOM.getElement(node);
}
if(_290){
var _291=MochiKit.Base.updatetree;
if(MochiKit.DOM.attributeArray.compliant){
for(var k in _290){
var v=_290[k];
if(typeof (v)=="object"&&typeof (elem[k])=="object"){
_291(elem[k],v);
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}else{
var _292=MochiKit.DOM.attributeArray.renames;
for(k in _290){
v=_290[k];
var _293=_292[k];
if(typeof (_293)=="string"){
elem[_293]=v;
}else{
if(typeof (elem[k])=="object"&&typeof (v)=="object"){
_291(elem[k],v);
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}
}
}
return elem;
};
MochiKit.DOM.appendChildNodes=function(node){
var elem=node;
if(typeof (node)=="string"){
elem=MochiKit.DOM.getElement(node);
}
var _294=[MochiKit.DOM.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _295=MochiKit.Iter.iextend;
while(_294.length){
var n=_294.shift();
if(typeof (n)=="undefined"||n==null){
}else{
if(typeof (n.nodeType)=="number"){
elem.appendChild(n);
}else{
_295(_294,n);
}
}
}
return elem;
};
MochiKit.DOM.replaceChildNodes=function(node){
var elem=node;
if(typeof (node)=="string"){
elem=MochiKit.DOM.getElement(node);
arguments[0]=elem;
}
var _296;
while((_296=elem.firstChild)){
elem.removeChild(_296);
}
if(arguments.length<2){
return elem;
}else{
return MochiKit.DOM.appendChildNodes.apply(this,arguments);
}
};
MochiKit.DOM.createDOM=function(name,_297){
var elem;
if(typeof (name)=="string"){
elem=document.createElement(name);
}else{
elem=name;
}
if(_297){
MochiKit.DOM.updateNodeAttributes(elem,_297);
}
if(arguments.length<=2){
return elem;
}else{
var args=MochiKit.Base.extend([elem],arguments,2);
return MochiKit.DOM.appendChildNodes.apply(this,args);
}
};
MochiKit.DOM.createDOMFunc=function(){
return MochiKit.Base.partial.apply(this,MochiKit.Base.extend([MochiKit.DOM.createDOM],arguments));
};
MochiKit.DOM.swapDOM=function(dest,src){
dest=MochiKit.DOM.getElement(dest);
var _301=dest.parentNode;
if(src){
src=MochiKit.DOM.getElement(src);
_301.replaceChild(src,dest);
}else{
_301.removeChild(dest);
}
return src;
};
MochiKit.DOM.getElement=function(id){
if(arguments.length==1){
return ((typeof (id)=="string")?document.getElementById(id):id);
}else{
return MochiKit.Base.map(getElement,arguments);
}
};
MochiKit.DOM.getComputedStyle=function(_303,_304,_305){
if(arguments.length==2){
_305=_304;
}
var el=MochiKit.DOM.getElement(_303);
if(!el||el==document){
return undefined;
}
if(el.currentStyle){
return el.currentStyle[_304];
}
if(typeof (document.defaultView)=="undefined"){
return undefined;
}
if(document.defaultView==null){
return undefined;
}
var _307=document.defaultView.getComputedStyle(el,null);
if(typeof (_307)=="undefined"||_307==null){
return undefined;
}
return _307.getPropertyValue(_305);
};
MochiKit.DOM.getElementsByTagAndClassName=function(_308,_309,_310){
if(typeof (_308)=="undefined"||_308==null){
_308="*";
}
if(typeof (_310)=="undefined"||_310==null){
_310=document;
}
_310=MochiKit.DOM.getElement(_310);
var _311=_310.getElementsByTagName(_308)||document.all;
if(typeof (_309)=="undefined"||_309==null){
return MochiKit.Base.extend(null,_311);
}
var _312=[];
for(var i=0;i<_311.length;i++){
var _313=_311[i];
var _314=_313.className.split(" ");
for(var j=0;j<_314.length;j++){
if(_314[j]==_309){
_312.push(_313);
break;
}
}
}
return _312;
};
MochiKit.DOM._newCallStack=function(once){
var rval=function(){
var _316=arguments.callee.callStack;
for(var i=0;i<_316.length;i++){
if(_316[i].apply(this,arguments)===false){
break;
}
}
if(once){
try{
this[path]=null;
}
catch(e){
}
}
};
rval.callStack=[];
return rval;
};
MochiKit.DOM.addToCallStack=function(_317,path,func,once){
var _319=_317[path];
var _320=_319;
if(!(typeof (_319)=="function"&&typeof (_319.callStack)=="object"&&_319.callStack!=null)){
_320=MochiKit.DOM._newCallStack(once);
if(typeof (_319)=="function"){
_320.callStack.push(_319);
}
_317[path]=_320;
}
_320.callStack.push(func);
};
MochiKit.DOM.addLoadEvent=function(func){
MochiKit.DOM.addToCallStack(window,"onload",func,true);
};
MochiKit.DOM.focusOnLoad=function(_321){
MochiKit.DOM.addLoadEvent(function(){
_321=MochiKit.DOM.getElement(_321);
if(_321){
_321.focus();
}
});
};
MochiKit.DOM.setElementClass=function(_322,_323){
var obj=MochiKit.DOM.getElement(_322);
if(MochiKit.DOM.attributeArray.compliant){
obj.setAttribute("class",_323);
}else{
obj.setAttribute("className",_323);
}
};
MochiKit.DOM.toggleElementClass=function(_324){
var _325=MochiKit.DOM.getElement;
var _326=MochiKit.DOM.addElementClass;
var _327=MochiKit.DOM.removeElementClass;
for(var i=1;i<arguments.length;i++){
var obj=_325(arguments[i]);
if(!_326(obj,_324)){
_327(obj,_324);
}
}
};
MochiKit.DOM.addElementClass=function(_328,_329){
var obj=MochiKit.DOM.getElement(_328);
var cls=obj.className;
if(cls.length==0){
MochiKit.DOM.setElementClass(obj,_329);
return true;
}
if(cls==_329){
return false;
}
var _331=obj.className.split(" ");
for(var i=0;i<_331.length;i++){
if(_331[i]==_329){
return false;
}
}
MochiKit.DOM.setElementClass(obj,cls+" "+_329);
return true;
};
MochiKit.DOM.removeElementClass=function(_332,_333){
var obj=MochiKit.DOM.getElement(_332);
var cls=obj.className;
if(cls.length==0){
return false;
}
if(cls==_333){
MochiKit.DOM.setElementClass(obj,"");
return true;
}
var _334=obj.className.split(" ");
for(var i=0;i<_334.length;i++){
if(_334[i]==_333){
_334.splice(i,1);
MochiKit.DOM.setElementClass(obj,_334.join(" "));
return true;
}
}
return false;
};
MochiKit.DOM.swapElementClass=function(_335,_336,_337){
var obj=MochiKit.DOM.getElement(_335);
var res=MochiKit.DOM.removeElementClass(obj,_336);
if(res){
MochiKit.DOM.addElementClass(obj,_337);
}
return res;
};
MochiKit.DOM.hasElementClass=function(_338,_339){
var obj=MochiKit.DOM.getElement(_338);
var _340=obj.className.split(" ");
for(var i=1;i<arguments.length;i++){
var good=false;
for(var j=0;j<_340.length;j++){
if(_340[j]==arguments[i]){
good=true;
break;
}
}
if(!good){
return false;
}
}
return true;
};
MochiKit.DOM.escapeHTML=function(s){
var buf=[];
var _343=MochiKit.DOM._TRANSTABLE;
for(var i=0;i<s.length;i++){
var c=s.charAt(i);
var o=_343[c];
if(o){
c=o;
}
buf.push(c);
}
return buf.join("");
};
MochiKit.DOM.toHTML=function(dom){
return MochiKit.DOM.emitHTML(dom).join("");
};
MochiKit.DOM.emitHTML=function(dom,lst){
if(typeof (lst)=="undefined"||lst==null){
lst=[];
}
var _346=[dom];
var _347=MochiKit.DOM.escapeHTML;
var _348=MochiKit.DOM.attributeArray;
while(_346.length){
dom=_346.pop();
if(typeof (dom)=="string"){
lst.push(dom);
}else{
if(dom.nodeType==1){
lst.push("<"+dom.nodeName.toLowerCase());
var _349=[];
var _350=_348(dom);
for(var i=0;i<_350.length;i++){
var a=_350[i];
_349.push([" ",a.name,"=\"",_347(a.value),"\""]);
}
_349.sort();
for(i=0;i<_349.length;i++){
var _351=_349[i];
for(var j=0;j<_351.length;j++){
lst.push(_351[j]);
}
}
if(dom.hasChildNodes()){
lst.push(">");
_346.push("</"+dom.nodeName.toLowerCase()+">");
var _352=dom.childNodes;
for(i=_352.length-1;i>=0;i--){
_346.push(_352[i]);
}
}else{
lst.push("/>");
}
}else{
if(dom.nodeType==3){
lst.push(_347(dom.nodeValue));
}
}
}
}
return lst;
};
MochiKit.DOM.setDisplayForElement=function(_353,_354){
var _355=MochiKit.Base.extend(null,arguments,1);
MochiKit.Iter.forEach(MochiKit.Base.filter(null,MochiKit.Base.map(getElement,_355)),function(_354){
_354.style.display=_353;
});
};
MochiKit.DOM.scrapeText=function(node,_356){
var rval=[];
MochiKit.Base.nodeWalk(node,function(node){
var _357=node.nodeValue;
if(typeof (_357)=="string"){
rval.push(_357);
}
return node.childNodes;
});
if(_356){
return rval;
}else{
return rval.join("");
}
};
MochiKit.DOM.__new__=function(){
this.domConverters=new MochiKit.Base.AdapterRegistry();
var _358=document.createElement("span");
var _359;
if(_358.attributes.length>0){
var _360=MochiKit.Base.filter;
_359=function(node){
return _360(_359.ignoreAttrFilter,node.attributes);
};
_359.ignoreAttr={};
MochiKit.Iter.forEach(_358.attributes,function(a){
_359.ignoreAttr[a.name]=a.value;
});
_359.ignoreAttrFilter=function(a){
return (_359.ignoreAttr[a.name]!=a.value);
};
_359.compliant=false;
_359.renames={"class":"className","checked":"defaultChecked"};
}else{
_359=function(node){
return node.attributes;
};
_359.compliant=true;
_359.renames={};
}
this.attributeArray=_359;
var _361=this.createDOMFunc;
this.UL=_361("ul");
this.OL=_361("ol");
this.LI=_361("li");
this.TD=_361("td");
this.TR=_361("tr");
this.TBODY=_361("tbody");
this.THEAD=_361("thead");
this.TFOOT=_361("tfoot");
this.TABLE=_361("table");
this.TH=_361("th");
this.INPUT=_361("input");
this.SPAN=_361("span");
this.A=_361("a");
this.DIV=_361("div");
this.IMG=_361("img");
this.BUTTON=_361("button");
this.TT=_361("tt");
this.PRE=_361("pre");
this.H1=_361("h1");
this.H2=_361("h2");
this.H3=_361("h3");
this.BR=_361("br");
this.HR=_361("hr");
this.LABEL=_361("label");
this.TEXTAREA=_361("textarea");
this.FORM=_361("form");
this.P=_361("p");
this._TRANSTABLE={"<":"&lt;",">":"&gt;","&":"&amp;","'":"&#39;","\"":"&quot;"};
var _362=MochiKit.Base.partial;
this.hideElement=_362(this.setDisplayForElement,"none");
this.showElement=_362(this.setDisplayForElement,"block");
this.removeElement=this.swapDOM;
this.$=this.getElement;
this.EXPORT_TAGS={":common":this.EXPORT,":all":MochiKit.Base.concat(this.EXPORT,this.EXPORT_OK)};
MochiKit.Base.nameFunctions(this);
};
MochiKit.DOM.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.DOM);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.LoggingPane");
dojo.require("MochiKit.Logging");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Logging",[]);
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"||typeof (MochiKit.Logging)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.LoggingPane depends on MochiKit.Base and MochiKit.Logging!";
}
if(typeof (MochiKit.LoggingPane)=="undefined"){
MochiKit.LoggingPane={};
}
MochiKit.LoggingPane.NAME="MochiKit.LoggingPane";
MochiKit.LoggingPane.VERSION="1.0";
MochiKit.LoggingPane.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.LoggingPane.toString=function(){
return this.__repr__();
};
MochiKit.LoggingPane.createLoggingPane=function(_363){
var m=MochiKit.LoggingPane;
_363=!(!_363);
if(m._loggingPane&&m._loggingPane.inline!=_363){
m._loggingPane.closePane();
m._loggingPane=null;
}
if(!m._loggingPane||m._loggingPane.closed){
m._loggingPane=new m.LoggingPane(_363,MochiKit.Logging.logger);
}
return m._loggingPane;
};
MochiKit.LoggingPane.LoggingPane=function(_364,_365){
var doc=document;
if(typeof (_365)=="undefined"||_365==null){
MochiKit.Logging.logger;
}
var _367=MochiKit.Base.update;
var _368=MochiKit.Base.updatetree;
var bind=MochiKit.Base.bind;
var _369=MochiKit.Base.clone;
var win;
if(!_364){
win=window.open("","","dependent,resizable,height=200");
if(!win){
alert("Not able to open debugging window due to pop-up blocking.");
return;
}
doc=win.document;
}
this.doc=doc;
var _371=doc.createElement("div");
var _372=doc.createElement("input");
var _373=doc.createElement("input");
var _374=doc.createElement("button");
var _375=doc.createElement("button");
var _376=doc.createElement("button");
var _377=doc.createElement("button");
var _378=doc.createElement("div");
var _379=doc.createElement("div");
var _380="_debugPaneListener";
this.colorTable=_369(this.colorTable);
var _381=[];
var _382=null;
var _383=function(msg){
var _384=msg.level;
if(typeof (_384)=="number"){
_384=MochiKit.Logging.LogLevel[_384];
}
return _384;
};
var _385=function(msg){
return msg.info.join(" ");
};
var _386=bind(function(msg){
var _387=_383(msg);
var text=_385(msg);
var c=this.colorTable[_387];
var p=doc.createElement("span");
p.style.color=c;
p.style.margin="0";
p.appendChild(doc.createTextNode(_387+": "+text));
_379.appendChild(p);
_379.appendChild(doc.createElement("br"));
if(_378.offsetHeight>_378.scrollHeight){
_378.scrollTop=0;
}else{
_378.scrollTop=_378.scrollHeight;
}
},this);
var _389=function(msg){
_381[_381.length]=msg;
_386(msg);
};
var _390=function(){
var _391,infore;
try{
_391=new RegExp(_372.value);
infore=new RegExp(_373.value);
}
catch(e){
logDebug("Error in filter regex: "+e.message);
return null;
}
return function(msg){
return (_391.test(_383(msg))&&infore.test(_385(msg)));
};
};
var _392=function(){
while(_379.firstChild){
_379.removeChild(_379.firstChild);
}
};
var _393=function(){
_381=[];
_392();
};
var _394=bind(function(){
if(this.closed){
return;
}
this.closed=true;
if(MochiKit.LoggingPane._loggingPane==this){
MochiKit.LoggingPane._loggingPane=null;
}
_365.removeListener(_380);
if(_364){
_371.parentNode.removeChild(_371);
}else{
this.win.close();
}
},this);
var _395=function(){
_392();
for(var i=0;i<_381.length;i++){
var msg=_381[i];
if(_382==null||_382(msg)){
_386(msg);
}
}
};
var _396=function(){
_382=_390();
_395();
_365.removeListener(_380);
_365.addListener(_380,_382,_389);
};
var _397=function(){
_381=_365.getMessages();
_395();
};
var _398=function(_399){
_399=_399||window.event;
key=_399.which||_399.keyCode;
if(key==13){
_396();
}
};
var _400={"display":"block","position":"fixed","left":"0px","bottom":"0px","font":this.logFont,"width":"100%","height":"100%","backgroundColor":"white"};
if(_364){
_400.height="10em";
_400.borderTop="2px solid black";
}
_367(_371.style,_400);
doc.body.appendChild(_371);
_400={"width":"33%","display":"inline","font":this.logFont};
_368(_372,{"value":"FATAL|ERROR|WARNING|INFO|DEBUG","onkeypress":_398,"style":_400});
_371.appendChild(_372);
_368(_373,{"value":".*","onkeypress":_398,"style":_400});
_371.appendChild(_373);
_400={"width":"8%","display":"inline","font":this.logFont};
_374.appendChild(doc.createTextNode("Filter"));
_374.onclick=_396;
_367(_374.style,_400);
_371.appendChild(_374);
_375.appendChild(doc.createTextNode("Load"));
_375.onclick=_397;
_367(_375.style,_400);
_371.appendChild(_375);
_376.appendChild(doc.createTextNode("Clear"));
_376.onclick=_393;
_367(_376.style,_400);
_371.appendChild(_376);
_377.appendChild(doc.createTextNode("Close"));
_377.onclick=_394;
_367(_377.style,_400);
_371.appendChild(_377);
_371.style.display="block";
_378.style.overflow="auto";
_378.style.width="100%";
_379.style.whitespace="preserve";
_379.style.width="100%";
_379.style.height="8em";
_378.appendChild(_379);
_371.appendChild(_378);
_396();
_397();
this.win=win;
this.inline=_364;
this.closePane=_394;
this.closed=false;
};
MochiKit.LoggingPane.LoggingPane.prototype={"logFont":"8pt Verdana,sans-serif","colorTable":{"ERROR":"red","FATAL":"darkred","WARNING":"blue","INFO":"black","DEBUG":"green"}};
MochiKit.LoggingPane.EXPORT_OK=["LoggingPane"];
MochiKit.LoggingPane.EXPORT=["createLoggingPane"];
MochiKit.LoggingPane.__new__=function(){
this.EXPORT_TAGS={":common":this.EXPORT,":all":MochiKit.Base.concat(this.EXPORT,this.EXPORT_OK)};
MochiKit.Base.nameFunctions(this);
MochiKit.LoggingPane._loggingPane=null;
};
MochiKit.LoggingPane.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.LoggingPane);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Color");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Color depends on MochiKit.Base";
}
if(typeof (MochiKit.Color)=="undefined"){
MochiKit.Color={};
}
MochiKit.Color.NAME="MochiKit.Color";
MochiKit.Color.VERSION="1.0";
MochiKit.Color.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Color.toString=function(){
return this.__repr__();
};
MochiKit.Color.Color=function(red,_402,blue,_404){
if(typeof (_404)=="undefined"||_404==null){
_404=1;
}
this.rgb={r:red,g:_402,b:blue,a:_404};
};
MochiKit.Color.Color.prototype={__class__:MochiKit.Color.Color,colorWithAlpha:function(_405){
var rgb=this.rgb;
var m=MochiKit.Color;
return m.Color.fromRGB(rgb.r,rgb.g,rgb.b,_405);
},colorWithHue:function(hue){
var hsl=this.asHSL();
hsl.h=hue;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithSaturation:function(_409){
var hsl=this.asHSL();
hsl.s=_409;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithLightness:function(_410){
var hsl=this.asHSL();
hsl.l=_410;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},darkerColorWithLevel:function(_411){
var hsl=this.asHSL();
hsl.l=Math.max(hsl.l-_411,0);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},lighterColorWithLevel:function(_412){
var hsl=this.asHSL();
Math.min(hsl.l+_412,1);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},blendedColor:function(_413,_414){
if(typeof (_414)=="undefined"||_414==null){
_414=0.5;
}
var sf=1-_414;
var s=this.rgb;
var d=_413.rgb;
var df=_414;
return MochiKit.Color.Color.fromRGB((s.r*sf)+(d.r*df),(s.g*sf)+(d.g*df),(s.b*sf)+(d.b*df),(s.a*sf)+(d.a*df));
},compareRGB:function(_417){
var a=this.asRGB();
var b=_417.asRGB();
return MochiKit.Base.compare([a.r,a.g,a.b,a.a],[b.r,b.g,b.b,b.a]);
},isLight:function(){
return this.asHSL().b>0.5;
},isDark:function(){
return (!this.isLight());
},toHSLString:function(){
var c=this.asHSL();
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hslString;
if(!rval){
var mid=(ccc(c.h,360).toFixed(0)+","+ccc(c.s,100).toPrecision(4)+"%"+","+ccc(c.l,100).toPrecision(4)+"%");
var a=c.a;
if(a>=1){
a=1;
rval="hsl("+mid+")";
}else{
if(a<=0){
a=0;
}
rval="hsla("+mid+","+a+")";
}
this._hslString=rval;
}
return rval;
},toRGBString:function(){
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._rgbString;
if(!rval){
var mid=(ccc(c.r,255).toFixed(0)+","+ccc(c.g,255).toFixed(0)+","+ccc(c.b,255).toFixed(0));
if(c.a!=1){
rval="rgba("+mid+","+c.a+")";
}else{
rval="rgb("+mid+")";
}
this._rgbString=rval;
}
return rval;
},asRGB:function(){
return MochiKit.Base.clone(this.rgb);
},toHexString:function(){
var m=MochiKit.Color;
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hexString;
if(!rval){
rval=("#"+m.toColorPart(ccc(c.r,255))+m.toColorPart(ccc(c.g,255))+m.toColorPart(ccc(c.b,255)));
this._hexString=rval;
}
return rval;
},asHSV:function(){
var hsv=this.hsv;
var c=this.rgb;
if(typeof (hsv)=="undefined"||hsv==null){
hsv=MochiKit.Color.rgbToHSV(this.rgb);
this.hsv=hsv;
}
return MochiKit.Base.clone(hsv);
},asHSL:function(){
var hsl=this.hsl;
var c=this.rgb;
if(typeof (hsl)=="undefined"||hsl==null){
hsl=MochiKit.Color.rgbToHSL(this.rgb);
this.hsl=hsl;
}
return MochiKit.Base.clone(hsl);
},toString:function(){
return this.toRGBString();
},repr:function(){
var c=this.rgb;
var col=[c.r,c.g,c.b,c.a];
return this.__class__.NAME+"("+col.join(", ")+")";
}};
MochiKit.Base.update(MochiKit.Color.Color,{fromRGB:function(red,_422,blue,_423){
var _424=MochiKit.Color.Color;
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_422=rgb.g;
blue=rgb.b;
if(typeof (rgb.a)=="undefined"){
_423=undefined;
}else{
_423=rgb.a;
}
}
return new _424(red,_422,blue,_423);
},fromHSL:function(hue,_425,_426,_427){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hslToRGB.apply(m,arguments));
},fromHSV:function(hue,_428,_429,_430){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hsvToRGB.apply(m,arguments));
},fromName:function(name){
var _431=MochiKit.Color.Color;
var _432=_431._namedColors[name.toLowerCase()];
if(typeof (_432)=="string"){
return _431.fromHexString(_432);
}else{
if(name=="transparent"){
return _431.transparentColor();
}
}
return null;
},fromString:function(_433){
var self=MochiKit.Color.Color;
var _434=_433.substr(0,3);
if(_434=="rgb"){
return self.fromRGBString(_433);
}else{
if(_434=="hsl"){
return self.fromHSLString(_433);
}else{
if(_433.charAt(0)=="#"){
return self.fromHexString(_433);
}
}
}
return self.fromName(_433);
},fromHexString:function(_435){
if(_435.charAt(0)=="#"){
_435=_435.substring(1);
}
var _436=[];
var i,hex;
if(_435.length==3){
for(i=0;i<3;i++){
hex=_435.substr(i,1);
_436.push(parseInt(hex+hex,16)/255);
}
}else{
for(i=0;i<6;i+=2){
hex=_435.substr(i,2);
_436.push(parseInt(hex,16)/255);
}
}
var _437=MochiKit.Color.Color;
return _437.fromRGB.apply(_437,_436);
},_fromColorString:function(pre,_439,_440,_441){
if(_441.indexOf(pre)==0){
_441=_441.substring(_441.indexOf("(",3)+1,_441.length-1);
}
var _442=_441.split(/\s*,\s*/);
var _443=[];
for(var i=0;i<_442.length;i++){
var c=_442[i];
var val;
var _444=c.substring(c.length-3);
if(c.charAt(c.length-1)=="%"){
val=0.01*parseFloat(c.substring(0,c.length-1));
}else{
if(_444=="deg"){
val=parseFloat(c)/360;
}else{
if(_444=="rad"){
val=parseFloat(c)/(Math.PI*2);
}else{
val=_440[i]*parseFloat(c);
}
}
}
_443.push(val);
}
return this[_439].apply(this,_443);
},fromBackground:function(elem){
var m=MochiKit.Color;
var d=MochiKit.DOM;
for(elem=d.getElement(elem);elem;elem=elem.parentNode){
var _445=d.getComputedStyle(elem,"backgroundColor","background-color");
if(!_445){
continue;
}
var _446=m.Color.fromString(_445);
if(!_446){
break;
}
if(_446.asRGB().a>0){
return _446;
}
}
return m.Color.whiteColor();
},namedColors:function(){
return MochiKit.Base.clone(MochiKit.Color.Color._namedColors);
}});
MochiKit.Base.update(MochiKit.Color,{clampColorComponent:function(v,_447){
v*=_447;
if(v<0){
return 0;
}else{
if(v>_447){
return _447;
}else{
return v;
}
}
},_hslValue:function(n1,n2,hue){
if(hue>6){
hue-=6;
}else{
if(hue<0){
hue+=6;
}
}
var val;
if(hue<1){
val=n1+(n2-n1)*hue;
}else{
if(hue<3){
val=n2;
}else{
if(hue<4){
val=n1+(n2-n1)*(4-hue);
}else{
val=n1;
}
}
}
return val;
},hsvToRGB:function(hue,_450,_451,_452){
if(arguments.length==1){
var hsv=hue;
hue=hsv.h;
_450=hsv.s;
_451=hsv.v;
_452=hsv.a;
}
var red;
var _453;
var blue;
if(_450==0){
red=0;
_453=0;
blue=0;
}else{
var i=Math.floor(hue*6);
var f=(hue*6)-i;
var p=_451*(1-_450);
var q=_451*(1-(_450*f));
var t=_451*(1-(_450*(1-f)));
switch(i){
case 1:
red=q;
_453=_451;
blue=p;
break;
case 2:
red=p;
_453=_451;
blue=t;
break;
case 3:
red=p;
_453=q;
blue=_451;
break;
case 4:
red=t;
_453=p;
blue=_451;
break;
case 5:
red=_451;
_453=p;
blue=q;
break;
case 6:
case 0:
red=_451;
_453=t;
blue=p;
break;
}
}
return {r:red,g:_453,b:blue,a:_452};
},hslToRGB:function(hue,_455,_456,_457){
if(arguments.length==1){
var hsl=hue;
hue=hsl.h;
_455=hsl.s;
_456=hsl.l;
_457=hsl.a;
}
var red;
var _458;
var blue;
if(_455==0){
red=_456;
_458=_456;
blue=_456;
}else{
var m2;
if(_456<=0.5){
m2=_456*(1+_455);
}else{
m2=_456+_455-(_456*_455);
}
var m1=(2*_456)-m2;
var f=MochiKit.Color._hslValue;
var h6=hue*6;
red=f(m1,m2,h6+2);
_458=f(m1,m2,h6);
blue=f(m1,m2,h6-2);
}
return {r:red,g:_458,b:blue,a:_457};
},rgbToHSV:function(red,_462,blue,_463){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_462=rgb.g;
blue=rgb.b;
_463=rgb.a;
}
var max=Math.max(Math.max(red,_462),blue);
var min=Math.min(Math.min(red,_462),blue);
var hue;
var _466;
var _467=max;
if(min==max){
hue=0;
_466=0;
}else{
var _468=(max-min);
_466=_468/max;
if(red==max){
hue=(_462-blue)/_468;
}else{
if(_462==max){
hue=2+((blue-red)/_468);
}else{
hue=4+((red-_462)/_468);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_466,v:_467,a:_463};
},rgbToHSL:function(red,_469,blue,_470){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_469=rgb.g;
blue=rgb.b;
_470=rgb.a;
}
var max=Math.max(red,Math.max(_469,blue));
var min=Math.min(red,Math.min(_469,blue));
var hue;
var _471;
var _472=(max+min)/2;
var _473=max-min;
if(_473==0){
hue=0;
_471=0;
}else{
if(_472<=0.5){
_471=_473/(max+min);
}else{
_471=_473/(2-max-min);
}
if(red==max){
hue=(_469-blue)/_473;
}else{
if(_469==max){
hue=2+((blue-red)/_473);
}else{
hue=4+((red-_469)/_473);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_471,l:_472,a:_470};
},toColorPart:function(num){
var _474=Math.round(num).toString(16);
if(num<16){
return "0"+_474;
}
return _474;
},__new__:function(){
var m=MochiKit.Base;
this.Color.fromRGBString=m.bind(this.Color._fromColorString,this.Color,"rgb","fromRGB",[1/255,1/255,1/255,1]);
this.Color.fromHSLString=m.bind(this.Color._fromColorString,this.Color,"hsl","fromHSL",[1/360,0.01,0.01,1]);
var _475=1/3;
var _476={black:[0,0,0],blue:[0,0,1],brown:[0.6,0.4,0.2],cyan:[0,1,1],darkGray:[_475,_475,_475],gray:[0.5,0.5,0.5],green:[0,1,0],lightGray:[2*_475,2*_475,2*_475],magenta:[1,0,1],orange:[1,0.5,0],purple:[0.5,0,0.5],red:[1,0,0],transparent:[0,0,0,0],white:[1,1,1],yellow:[1,1,0]};
var _477=function(name,r,g,b,a){
var rval=this.fromRGB(r,g,b,a);
this[name]=function(){
return rval;
};
return rval;
};
for(var k in _476){
var name=k+"Color";
var _480=m.concat([_477,this.Color,name],_476[k]);
this.Color[name]=m.bind.apply(null,_480);
}
var _481=function(){
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof Color)){
return false;
}
}
return true;
};
var _482=function(a,b){
return a.compareRGB(b);
};
m.nameFunctions(this);
m.registerComparator(this.Color.NAME,_481,_482);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
}});
MochiKit.Color.EXPORT=["Color"];
MochiKit.Color.EXPORT_OK=["clampColorComponent","rgbToHSL","hslToRGB","rgbToHSV","hsvToRGB","toColorPart"];
MochiKit.Color.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Color);
MochiKit.Color.Color._namedColors={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"};
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Visual");
dojo.require("MochiKit.Base");
dojo.require("MochiKit.DOM");
dojo.require("MochiKit.Color");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
JSAN.use("MochiKit.DOM",[]);
JSAN.use("MochiKit.Color",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"||typeof (MochiKit.DOM)=="undefined"||typeof (MochiKit.Color)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Visual depends on MochiKit.Base, MochiKit.DOM and MochiKit.Color!";
}
if(typeof (MochiKit.Visual)=="undefined"){
MochiKit.Visual={};
}
MochiKit.Visual.NAME="MochiKit.Visual";
MochiKit.Visual.VERSION="1.0";
MochiKit.Visual.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Visual.toString=function(){
return this.__repr__();
};
MochiKit.Visual._RoundCorners=function(e,_484){
e=MochiKit.DOM.getElement(e);
this._setOptions(_484);
if(this.options.__unstable__wrapElement){
e=this._doWrap(e);
}
var _485=this.options.color;
var C=MochiKit.Color.Color;
if(this.options.color=="fromElement"){
_485=C.fromBackground(e);
}else{
if(!(_485 instanceof C)){
_485=C.fromString(_485);
}
}
this.isTransparent=(_485.asRGB().a<=0);
var _487=this.options.bgColor;
if(this.options.bgColor=="fromParent"){
_487=C.fromBackground(e.offsetParent);
}else{
if(!(_487 instanceof C)){
_487=C.fromString(_487);
}
}
this._roundCornersImpl(e,_485,_487);
};
MochiKit.Visual._RoundCorners.prototype={_doWrap:function(e){
var _488=e.parentNode;
if(typeof (document.defaultView)=="undefined"||document.defaultView==null){
return e;
}
var _489=document.defaultView.getComputedStyle(e,null);
if(typeof (_489)=="undefined"||_489==null){
return e;
}
var _490=MochiKit.DOM.DIV({"style":{display:"block",marginTop:_489.getPropertyValue("padding-top"),marginRight:_489.getPropertyValue("padding-right"),marginBottom:_489.getPropertyValue("padding-bottom"),marginLeft:_489.getPropertyValue("padding-left"),padding:"0px"}});
_490.innerHTML=e.innerHTML;
e.innerHTML="";
e.appendChild(_490);
return e;
},_roundCornersImpl:function(e,_491,_492){
if(this.options.border){
this._renderBorder(e,_492);
}
if(this._isTopRounded()){
this._roundTopCorners(e,_491,_492);
}
if(this._isBottomRounded()){
this._roundBottomCorners(e,_491,_492);
}
},_renderBorder:function(el,_493){
var _494="1px solid "+this._borderColor(_493);
var _495="border-left: "+_494;
var _496="border-right: "+_494;
var _497="style='"+_495+";"+_496+"'";
el.innerHTML="<div "+_497+">"+el.innerHTML+"</div>";
},_roundTopCorners:function(el,_498,_499){
var _500=this._createCorner(_499);
for(var i=0;i<this.options.numSlices;i++){
_500.appendChild(this._createCornerSlice(_498,_499,i,"top"));
}
el.style.paddingTop=0;
el.insertBefore(_500,el.firstChild);
},_roundBottomCorners:function(el,_501,_502){
var _503=this._createCorner(_502);
for(var i=(this.options.numSlices-1);i>=0;i--){
_503.appendChild(this._createCornerSlice(_501,_502,i,"bottom"));
}
el.style.paddingBottom=0;
el.appendChild(_503);
},_createCorner:function(_504){
var _505=document.createElement("div");
_505.style.backgroundColor=_504.toString();
return _505;
},_createCornerSlice:function(_506,_507,n,_508){
var _509=document.createElement("span");
var _510=_509.style;
_510.backgroundColor=_506.toString();
_510.display="block";
_510.height="1px";
_510.overflow="hidden";
_510.fontSize="1px";
var _511=this._borderColor(_506,_507);
if(this.options.border&&n==0){
_510.borderTopStyle="solid";
_510.borderTopWidth="1px";
_510.borderLeftWidth="0px";
_510.borderRightWidth="0px";
_510.borderBottomWidth="0px";
_510.height="0px";
_510.borderColor=_511.toString();
}else{
if(_511){
_510.borderColor=_511.toString();
_510.borderStyle="solid";
_510.borderWidth="0px 1px";
}
}
if(!this.options.compact&&(n==(this.options.numSlices-1))){
_510.height="2px";
}
this._setMargin(_509,n,_508);
this._setBorder(_509,n,_508);
return _509;
},_setOptions:function(_512){
this.options={corners:"all",color:"fromElement",bgColor:"fromParent",blend:true,border:false,compact:false,__unstable__wrapElement:false};
MochiKit.Base.update(this.options,_512);
this.options.numSlices=(this.options.compact?2:4);
},_whichSideTop:function(){
var _513=this.options.corners;
if(this._hasString(_513,"all","top")){
return "";
}
var _514=(_513.indexOf("tl")!=-1);
var _515=(_513.indexOf("tr")!=-1);
if(_514&&_515){
return "";
}
if(_514){
return "left";
}
if(_515){
return "right";
}
return "";
},_whichSideBottom:function(){
var _516=this.options.corners;
if(this._hasString(_516,"all","bottom")){
return "";
}
var _517=(_516.indexOf("bl")!=-1);
var _518=(_516.indexOf("br")!=-1);
if(_517&&_518){
return "";
}
if(_517){
return "left";
}
if(_518){
return "right";
}
return "";
},_borderColor:function(_519,_520){
if(_519=="transparent"){
return _520;
}else{
if(this.options.border){
return this.options.border;
}else{
if(this.options.blend){
return _520.blendedColor(_519);
}
}
}
return "";
},_setMargin:function(el,n,_521){
var _522=this._marginSize(n)+"px";
var _523=(_521=="top"?this._whichSideTop():this._whichSideBottom());
var _524=el.style;
if(_523=="left"){
_524.marginLeft=_522;
_524.marginRight="0px";
}else{
if(_523=="right"){
_524.marginRight=_522;
_524.marginLeft="0px";
}else{
_524.marginLeft=_522;
_524.marginRight=_522;
}
}
},_setBorder:function(el,n,_525){
var _526=this._borderSize(n)+"px";
var _527=(_525=="top"?this._whichSideTop():this._whichSideBottom());
var _528=el.style;
if(_527=="left"){
_528.borderLeftWidth=_526;
_528.borderRightWidth="0px";
}else{
if(_527=="right"){
_528.borderRightWidth=_526;
_528.borderLeftWidth="0px";
}else{
_528.borderLeftWidth=_526;
_528.borderRightWidth=_526;
}
}
},_marginSize:function(n){
if(this.isTransparent){
return 0;
}
var o=this.options;
if(o.compact&&o.blend){
var _529=[1,0];
return _529[n];
}else{
if(o.compact){
var _530=[2,1];
return _530[n];
}else{
if(o.blend){
var _531=[3,2,1,0];
return _531[n];
}else{
var _532=[5,3,2,1];
return _532[n];
}
}
}
},_borderSize:function(n){
var o=this.options;
var _533;
if(o.compact&&(o.blend||this.isTransparent)){
return 1;
}else{
if(o.compact){
_533=[1,0];
}else{
if(o.blend){
_533=[2,1,1,1];
}else{
if(o.border){
_533=[0,2,0,0];
}else{
if(this.isTransparent){
_533=[5,3,2,1];
}else{
return 0;
}
}
}
}
}
return _533[n];
},_hasString:function(str){
for(var i=1;i<arguments.length;i++){
if(str.indexOf(arguments[i])!=-1){
return true;
}
}
return false;
},_isTopRounded:function(){
return this._hasString(this.options.corners,"all","top","tl","tr");
},_isBottomRounded:function(){
return this._hasString(this.options.corners,"all","bottom","bl","br");
},_hasSingleTextChild:function(el){
return (el.childNodes.length==1&&el.childNodes[0].nodeType==3);
}};
MochiKit.Visual.roundElement=function(e,_534){
new MochiKit.Visual._RoundCorners(e,_534);
};
MochiKit.Visual.roundClass=function(_535,_536,_537){
var _538=MochiKit.DOM.getElementsByTagAndClassName(_535,_536);
for(var i=0;i<_538.length;i++){
MochiKit.Visual.roundElement(_538[i],_537);
}
};
MochiKit.Visual.Color=MochiKit.Color.Color;
MochiKit.Visual.getElementsComputedStyle=MochiKit.DOM.getComputedStyle;
MochiKit.Visual.__new__=function(){
var m=MochiKit.Base;
m.nameFunctions(this);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
};
MochiKit.Visual.EXPORT=["roundElement","roundClass"];
MochiKit.Visual.EXPORT_OK=[];
MochiKit.Visual.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Visual);
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.MochiKit)=="undefined"){
MochiKit.MochiKit={};
}
MochiKit.MochiKit.NAME="MochiKit.MochiKit";
MochiKit.MochiKit.VERSION="1.0";
MochiKit.MochiKit.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.MochiKit.toString=function(){
return this.__repr__();
};
MochiKit.MochiKit.SUBMODULES=["Base","Iter","Logging","DateTime","Format","Async","DOM","LoggingPane","Color","Visual"];
if(typeof (JSAN)!="undefined"||typeof (dojo)!="undefined"){
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.MochiKit");
dojo.require("MochiKit.*");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
JSAN.use("MochiKit.Iter",[]);
JSAN.use("MochiKit.Logging",[]);
JSAN.use("MochiKit.DateTime",[]);
JSAN.use("MochiKit.Format",[]);
JSAN.use("MochiKit.Async",[]);
JSAN.use("MochiKit.DOM",[]);
JSAN.use("MochiKit.LoggingPane",[]);
JSAN.use("MochiKit.Color",[]);
JSAN.use("MochiKit.Visual",[]);
}
(function(){
var _539=MochiKit.Base.extend;
var self=MochiKit.MochiKit;
var _540=self.SUBMODULES;
var _541=[];
var _542=[];
var _543={};
var i,k,m,all;
for(i=0;i<_540.length;i++){
m=MochiKit[_540[i]];
_539(_541,m.EXPORT);
_539(_542,m.EXPORT_OK);
for(k in m.EXPORT_TAGS){
_543[k]=_539(_543[k],m.EXPORT_TAGS[k]);
}
all=m.EXPORT_TAGS[":all"];
if(!all){
all=_539(null,m.EXPORT,m.EXPORT_OK);
}
for(i=0;i<all.length;i++){
k=all[i];
self[k]=m[k];
}
}
self.EXPORT=_541;
self.EXPORT_OK=_542;
self.EXPORT_TAGS=_543;
}());
}else{
if(typeof (MochiKit.__compat__)=="undefined"){
MochiKit.__compat__=true;
}
(function(){
var _544=document.getElementsByTagName("script");
var _545="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
var base=null;
var _546=null;
var _547={};
var i;
for(i=0;i<_544.length;i++){
var src=_544[i].getAttribute("src");
if(!src){
continue;
}
_547[src]=true;
if(src.match(/MochiKit.js$/)){
base=src.substring(0,src.lastIndexOf("MochiKit.js"));
_546=_544[i];
}
}
if(base==null){
return;
}
var _548=MochiKit.MochiKit.SUBMODULES;
for(i=0;i<_548.length;i++){
if(MochiKit[_548[i]]){
continue;
}
var uri=base+_548[i]+".js";
if(uri in _547){
continue;
}
if(document.documentElement&&document.documentElement.namespaceURI==_545){
var s=document.createElementNS(_545,"script");
s.setAttribute("id","MochiKit_"+base+_548[i]);
s.setAttribute("src",uri);
s.setAttribute("type","application/x-javascript");
_546.parentNode.appendChild(s);
}else{
var tag="<"+"script src=\""+uri+"\" type=\"text/javascript\""+">"+"<"+"/script"+">";
document.write(tag);
}
}
})();
}


