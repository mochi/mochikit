/***

    MochiKit.MochiKit 1.1 : PACKED VERSION

    THIS FILE IS AUTOMATICALLY GENERATED.  If creating patches, please
    diff against the source tree, not this file.

    See <http://mochikit.com/> for documentation, downloads, license, etc.

    (c) 2005 Bob Ippolito.  All rights Reserved.

***/

if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Base");
}
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.Base)=="undefined"){
MochiKit.Base={};
}
MochiKit.Base.VERSION="1.1";
MochiKit.Base.NAME="MochiKit.Base";
MochiKit.Base.update=function(_1,_2){
if(_1==null){
_1={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!=null){
for(var k in o){
_1[k]=o[k];
}
}
}
return _1;
};
MochiKit.Base.update(MochiKit.Base,{__repr__:function(){
return "["+this.NAME+" "+this.VERSION+"]";
},toString:function(){
return this.__repr__();
},counter:function(n){
if(arguments.length==0){
n=1;
}
return function(){
return n++;
};
},clone:function(_7){
var me=arguments.callee;
if(arguments.length==1){
me.prototype=_7;
return new me();
}
},extend:function(_9,obj,_11){
if(!_11){
_11=0;
}
if(obj){
var l=obj.length;
if(typeof (l)!="number"){
if(typeof (MochiKit.Iter)!="undefined"){
obj=MochiKit.Iter.list(obj);
l=obj.length;
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(!_9){
_9=[];
}
for(var i=_11;i<l;i++){
_9.push(obj[i]);
}
}
return _9;
},updatetree:function(_13,obj){
if(_13==null){
_13={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!=null){
for(var k in o){
var v=o[k];
if(typeof (_13[k])=="object"&&typeof (v)=="object"){
arguments.callee(_13[k],v);
}else{
_13[k]=v;
}
}
}
}
return _13;
},setdefault:function(_15,obj){
if(_15==null){
_15={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
for(var k in o){
if(!(k in _15)){
_15[k]=o[k];
}
}
}
return _15;
},keys:function(obj){
var _16=[];
for(var _17 in obj){
_16.push(_17);
}
return _16;
},items:function(obj){
var _18=[];
var e;
for(var _20 in obj){
var v;
try{
v=obj[_20];
}
catch(e){
continue;
}
_18.push([_20,v]);
}
return _18;
},_newNamedError:function(_21,_22,_23){
_23.prototype=new MochiKit.Base.NamedError(_21.NAME+"."+_22);
_21[_22]=_23;
},operator:{truth:function(a){
return !!a;
},lognot:function(a){
return !a;
},identity:function(a){
return a;
},not:function(a){
return ~a;
},neg:function(a){
return -a;
},add:function(a,b){
return a+b;
},sub:function(a,b){
return a-b;
},div:function(a,b){
return a/b;
},mod:function(a,b){
return a%b;
},and:function(a,b){
return a&b;
},or:function(a,b){
return a|b;
},xor:function(a,b){
return a^b;
},lshift:function(a,b){
return a<<b;
},rshift:function(a,b){
return a>>b;
},zrshift:function(a,b){
return a>>>b;
},eq:function(a,b){
return a==b;
},ne:function(a,b){
return a!=b;
},gt:function(a,b){
return a>b;
},ge:function(a,b){
return a>=b;
},lt:function(a,b){
return a<b;
},le:function(a,b){
return a<=b;
},ceq:function(a,b){
return MochiKit.Base.compare(a,b)==0;
},cne:function(a,b){
return MochiKit.Base.compare(a,b)!=0;
},cgt:function(a,b){
return MochiKit.Base.compare(a,b)==1;
},cge:function(a,b){
return MochiKit.Base.compare(a,b)!=-1;
},clt:function(a,b){
return MochiKit.Base.compare(a,b)==-1;
},cle:function(a,b){
return MochiKit.Base.compare(a,b)!=1;
},logand:function(a,b){
return a&&b;
},logor:function(a,b){
return a||b;
},contains:function(a,b){
return b in a;
}},forward:function(_26){
return function(){
return this[_26].apply(this,arguments);
};
},itemgetter:function(_27){
return function(arg){
return arg[_27];
};
},typeMatcher:function(){
var _29={};
for(var i=0;i<arguments.length;i++){
var typ=arguments[i];
_29[typ]=typ;
}
return function(){
for(var i=0;i<arguments.length;i++){
if(!(typeof (arguments[i]) in _29)){
return false;
}
}
return true;
};
},isNull:function(){
for(var i=0;i<arguments.length;i++){
if(arguments[i]!=null){
return false;
}
}
return true;
},isUndefinedOrNull:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(typeof (o)=="undefined"||o==null)){
return false;
}
}
return true;
},isNotEmpty:function(obj){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(o&&o.length)){
return false;
}
}
return true;
},isArrayLike:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
var typ=typeof (o);
if((typ!="object"&&!(typ=="function"&&typeof (o.item)=="function"))||o==null||typeof (o.length)!="number"){
return false;
}
}
return true;
},isDateLike:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="object"||typeof (o.getTime)!="function"){
return false;
}
}
return true;
},xmap:function(fn){
if(fn==null){
return MochiKit.Base.extend(null,arguments,1);
}
var _32=[];
for(var i=1;i<arguments.length;i++){
_32.push(fn(arguments[i]));
}
return _32;
},map:function(fn,lst){
var m=MochiKit.Base;
var _35=m.isArrayLike;
if(arguments.length<=2){
if(!_35(lst)){
if(MochiKit.Iter){
lst=MochiKit.Iter.list(lst);
if(fn==null){
return lst;
}
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn==null){
return m.extend(null,lst);
}
var _36=[];
for(var i=0;i<lst.length;i++){
_36.push(fn(lst[i]));
}
return _36;
}else{
if(fn==null){
fn=Array;
}
var _37=null;
for(i=1;i<arguments.length;i++){
if(!_35(arguments[i])){
if(MochiKit.Iter){
arguments[i]=MochiKit.Iter.list(arguments[i]);
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
var l=arguments[i].length;
if(_37==null||_37>l){
_37=l;
}
}
_36=[];
for(i=0;i<_37;i++){
var _38=[];
for(var j=1;j<arguments.length;j++){
_38.push(arguments[j][i]);
}
_36.push(fn.apply(this,_38));
}
return _36;
}
},xfilter:function(fn){
var _40=[];
if(fn==null){
fn=MochiKit.Base.operator.truth;
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(fn(o)){
_40.push(o);
}
}
return _40;
},filter:function(fn,lst,_41){
var _42=[];
var m=MochiKit.Base;
if(!m.isArrayLike(lst)){
if(MochiKit.Iter){
lst=MochiKit.Iter.list(lst);
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn==null){
fn=m.operator.truth;
}
if(typeof (Array.prototype.filter)=="function"){
return Array.prototype.filter.call(lst,fn,_41);
}else{
if(typeof (_41)=="undefined"||_41==null){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(fn(o)){
_42.push(o);
}
}
}else{
for(i=0;i<lst.length;i++){
o=lst[i];
if(fn.call(_41,o)){
_42.push(o);
}
}
}
}
return _42;
},_wrapDumbFunction:function(_43){
return function(){
switch(arguments.length){
case 0:
return _43();
case 1:
return _43(arguments[0]);
case 2:
return _43(arguments[0],arguments[1]);
case 3:
return _43(arguments[0],arguments[1],arguments[2]);
}
var _44=[];
for(var i=0;i<arguments.length;i++){
_44.push("arguments["+i+"]");
}
return eval("(func("+_44.join(",")+"))");
};
},bind:function(_45,_46){
var _47=_45.im_func;
var _48=_45.im_preargs;
var _49=_45.im_self;
var m=MochiKit.Base;
if(typeof (_45)=="function"&&typeof (_45.apply)=="undefined"){
_45=m._wrapDumbFunction(_45);
}
if(typeof (_47)!="function"){
_47=_45;
}
if(typeof (_46)!="undefined"){
_49=_46;
}
if(typeof (_48)=="undefined"){
_48=[];
}else{
_48=_48.slice();
}
m.extend(_48,arguments,2);
var _50=function(){
var _51=arguments;
var me=arguments.callee;
if(me.im_preargs.length>0){
_51=m.concat(me.im_preargs,_51);
}
var _46=me.im_self;
if(!_46){
_46=this;
}
return me.im_func.apply(_46,_51);
};
_50.im_self=_49;
_50.im_func=_47;
_50.im_preargs=_48;
return _50;
},bindMethods:function(_52){
var _53=MochiKit.Base.bind;
for(var k in _52){
var _54=_52[k];
if(typeof (_54)=="function"){
_52[k]=_53(_54,_52);
}
}
},registerComparator:function(_55,_56,_57,_58){
MochiKit.Base.comparatorRegistry.register(_55,_56,_57,_58);
},compare:function(a,b){
if(a==b){
return 0;
}
var _59=(typeof (a)=="undefined"||a==null);
var _60=(typeof (b)=="undefined"||b==null);
if(_59&&_60){
return 0;
}else{
if(_59){
return -1;
}else{
if(_60){
return 1;
}
}
}
var m=MochiKit.Base;
try{
return m.comparatorRegistry.match(a,b);
}
catch(e){
if(e!=m.NotFound){
throw e;
}
if(a<b){
return -1;
}else{
if(a>b){
return 1;
}
}
var _61=m.repr;
throw new TypeError(_61(a)+" and "+_61(b)+" can not be compared");
}
},compareDateLike:function(a,b){
a=a.getTime();
b=b.getTime();
if(a==b){
return 0;
}else{
if(a<b){
return -1;
}else{
if(a>b){
return 1;
}
}
}
var _62=MochiKit.Base.repr;
throw new TypeError(_62(a)+" and "+_62(b)+" can not be compared");
},compareArrayLike:function(a,b){
var _63=MochiKit.Base.compare;
var _64=a.length;
var _65=0;
if(_64>b.length){
_65=1;
_64=b.length;
}else{
if(_64<b.length){
_65=-1;
}
}
for(var i=0;i<_64;i++){
var cmp=_63(a[i],b[i]);
if(cmp){
return cmp;
}
}
return _65;
},registerRepr:function(_67,_68,_69,_70){
MochiKit.Base.reprRegistry.register(_67,_68,_69,_70);
},repr:function(o){
if(typeof (o)=="undefined"){
return "undefined";
}else{
if(o===null){
return "null";
}
}
try{
if(typeof (o.__repr__)=="function"){
return o.__repr__();
}else{
if(typeof (o.repr)=="function"&&o.repr!=arguments.callee){
return o.repr();
}
}
return MochiKit.Base.reprRegistry.match(o);
}
catch(e){
if(typeof (o.NAME)=="string"&&(o.toString==Function.prototype.toString||o.toString==Object.prototype.toString)){
return o.NAME;
}
}
try{
var _71=(o+"");
}
catch(e){
return "["+typeof (o)+"]";
}
if(typeof (o)=="function"){
o=_71.replace(/^\s+/,"");
var idx=o.indexOf("{");
if(idx!=-1){
o=o.substr(0,idx)+"{...}";
}
}
return _71;
},reprArrayLike:function(o){
var m=MochiKit.Base;
return "["+m.map(m.repr,o).join(", ")+"]";
},reprString:function(o){
return ("\""+o.replace(/(["\\])/g,"\\$1")+"\"").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\r]/g,"\\r");
},reprNumber:function(o){
return o+"";
},registerJSON:function(_73,_74,_75,_76){
MochiKit.Base.jsonRegistry.register(_73,_74,_75,_76);
},evalJSON:function(){
return eval("("+arguments[0]+")");
},serializeJSON:function(o){
var _77=typeof (o);
if(_77=="undefined"){
return "undefined";
}else{
if(_77=="number"||_77=="boolean"){
return o+"";
}else{
if(o===null){
return "null";
}
}
}
var m=MochiKit.Base;
var _78=m.reprString;
if(_77=="string"){
return _78(o);
}
var me=arguments.callee;
var _79;
if(typeof (o.__json__)=="function"){
_79=o.__json__();
if(o!==_79){
return me(_79);
}
}
if(typeof (o.json)=="function"){
_79=o.json();
if(o!==_79){
return me(_79);
}
}
if(_77!="function"&&typeof (o.length)=="number"){
var res=[];
for(var i=0;i<o.length;i++){
var val=me(o[i]);
if(typeof (val)!="string"){
val="undefined";
}
res.push(val);
}
return "["+res.join(",")+"]";
}
try{
_79=m.jsonRegistry.match(o);
return me(_79);
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
if(_77=="function"){
return null;
}
res=[];
for(var k in o){
var _82;
if(typeof (k)=="number"){
_82="\""+k+"\"";
}else{
if(typeof (k)=="string"){
_82=_78(k);
}else{
continue;
}
}
val=me(o[k]);
if(typeof (val)!="string"){
continue;
}
res.push(_82+":"+val);
}
return "{"+res.join(",")+"}";
},objEqual:function(a,b){
return (MochiKit.Base.compare(a,b)==0);
},arrayEqual:function(_83,arr){
if(_83.length!=arr.length){
return false;
}
return (MochiKit.Base.compare(_83,arr)==0);
},concat:function(){
var _85=[];
var _86=MochiKit.Base.extend;
for(var i=0;i<arguments.length;i++){
_86(_85,arguments[i]);
}
return _85;
},keyComparator:function(key){
var m=MochiKit.Base;
var _88=m.compare;
if(arguments.length==1){
return function(a,b){
return _88(a[key],b[key]);
};
}
var _89=m.extend(null,arguments);
return function(a,b){
var _90=0;
for(var i=0;(_90==0)&&(i<_89.length);i++){
var key=_89[i];
_90=_88(a[key],b[key]);
}
return _90;
};
},reverseKeyComparator:function(key){
var _91=MochiKit.Base.keyComparator.apply(this,arguments);
return function(a,b){
return _91(b,a);
};
},partial:function(_92){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([_92,undefined],arguments,1));
},listMinMax:function(_93,lst){
if(lst.length==0){
return null;
}
var cur=lst[0];
var _95=MochiKit.Base.compare;
for(var i=1;i<lst.length;i++){
var o=lst[i];
if(_95(o,cur)==_93){
cur=o;
}
}
return cur;
},objMax:function(){
return MochiKit.Base.listMinMax(1,arguments);
},objMin:function(){
return MochiKit.Base.listMinMax(-1,arguments);
},nodeWalk:function(_96,_97){
var _98=[_96];
var _99=MochiKit.Base.extend;
while(_98.length){
var res=_97(_98.shift());
if(res){
_99(_98,res);
}
}
},nameFunctions:function(_100){
var base=_100.NAME;
if(typeof (base)=="undefined"){
base="";
}else{
base=base+".";
}
for(var name in _100){
var o=_100[name];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+name;
}
catch(e){
}
}
}
},queryString:function(_103,_104){
if(typeof (MochiKit.DOM)!="undefined"&&arguments.length==1&&(typeof (_103)=="string"||(typeof (_103.nodeType)!="undefined"&&_103.nodeType>0))){
var kv=MochiKit.DOM.formContents(_103);
_103=kv[0];
_104=kv[1];
}else{
if(arguments.length==1){
var o=_103;
_103=[];
_104=[];
for(var k in o){
var v=o[k];
if(typeof (v)!="function"){
_103.push(k);
_104.push(v);
}
}
}
}
var rval=[];
var len=Math.min(_103.length,_104.length);
var _108=MochiKit.Base.urlEncode;
for(var i=0;i<len;i++){
v=_104[i];
if(typeof (v)!="undefined"&&v!=null){
rval.push(_108(_103[i])+"="+_108(v));
}
}
return rval.join("&");
},parseQueryString:function(_109,_110){
var _111=_109.replace(/\+/g,"%20").split("&");
var o={};
var _112;
if(typeof (decodeURIComponent)!="undefined"){
_112=decodeURIComponent;
}else{
_112=unescape;
}
if(_110){
for(var i=0;i<_111.length;i++){
var pair=_111[i].split("=");
var name=_112(pair[0]);
var arr=o[name];
if(!(arr instanceof Array)){
arr=[];
o[name]=arr;
}
arr.push(_112(pair[1]));
}
}else{
for(i=0;i<_111.length;i++){
pair=_111[i].split("=");
o[_112(pair[0])]=_112(pair[1]);
}
}
return o;
}});
MochiKit.Base.AdapterRegistry=function(){
this.pairs=[];
};
MochiKit.Base.AdapterRegistry.prototype={register:function(name,_114,wrap,_116){
if(_116){
this.pairs.unshift([name,_114,wrap]);
}else{
this.pairs.push([name,_114,wrap]);
}
},match:function(){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[1].apply(this,arguments)){
return pair[2].apply(this,arguments);
}
}
throw MochiKit.Base.NotFound;
},unregister:function(name){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[0]==name){
this.pairs.splice(i,1);
return true;
}
}
return false;
}};
MochiKit.Base.EXPORT=["counter","clone","extend","update","updatetree","setdefault","keys","items","NamedError","operator","forward","itemgetter","typeMatcher","isCallable","isUndefined","isUndefinedOrNull","isNull","isNotEmpty","isArrayLike","isDateLike","xmap","map","xfilter","filter","bind","bindMethods","NotFound","AdapterRegistry","registerComparator","compare","registerRepr","repr","objEqual","arrayEqual","concat","keyComparator","reverseKeyComparator","partial","merge","listMinMax","listMax","listMin","objMax","objMin","nodeWalk","zip","urlEncode","queryString","serializeJSON","registerJSON","evalJSON","parseQueryString"];
MochiKit.Base.EXPORT_OK=["nameFunctions","comparatorRegistry","reprRegistry","jsonRegistry","compareDateLike","compareArrayLike","reprArrayLike","reprString","reprNumber"];
MochiKit.Base._exportSymbols=function(_117,_118){
if((typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined")||(typeof (MochiKit.__compat__)=="boolean"&&MochiKit.__compat__)){
var all=_118.EXPORT_TAGS[":all"];
for(var i=0;i<all.length;i++){
_117[all[i]]=_118[all[i]];
}
}
};
MochiKit.Base.__new__=function(){
var m=this;
if(typeof (encodeURIComponent)!="undefined"){
m.urlEncode=function(_120){
return encodeURIComponent(_120).replace(/\'/g,"%27");
};
}else{
m.urlEncode=function(_121){
return escape(_121).replace(/\+/g,"%2B").replace(/\"/g,"%22").rval.replace(/\'/g,"%27");
};
}
m.NamedError=function(name){
this.message=name;
this.name=name;
};
m.NamedError.prototype=new Error();
m.update(m.NamedError.prototype,{repr:function(){
if(this.message&&this.message!=this.name){
return this.name+"("+m.repr(this.message)+")";
}else{
return this.name+"()";
}
},toString:m.forward("repr")});
m.NotFound=new m.NamedError("MochiKit.Base.NotFound");
m.listMax=m.partial(m.listMinMax,1);
m.listMin=m.partial(m.listMinMax,-1);
m.isCallable=m.typeMatcher("function");
m.isUndefined=m.typeMatcher("undefined");
m.merge=m.partial(m.update,null);
m.zip=m.partial(m.map,null);
m.comparatorRegistry=new m.AdapterRegistry();
m.registerComparator("dateLike",m.isDateLike,m.compareDateLike);
m.registerComparator("arrayLike",m.isArrayLike,m.compareArrayLike);
m.reprRegistry=new m.AdapterRegistry();
m.registerRepr("arrayLike",m.isArrayLike,m.reprArrayLike);
m.registerRepr("string",m.typeMatcher("string"),m.reprString);
m.registerRepr("numbers",m.typeMatcher("number","boolean"),m.reprNumber);
m.jsonRegistry=new m.AdapterRegistry();
var all=m.concat(m.EXPORT,m.EXPORT_OK);
m.EXPORT_TAGS={":common":m.concat(m.EXPORT_OK),":all":all};
m.nameFunctions(this);
};
MochiKit.Base.__new__();
compare=MochiKit.Base.compare;
MochiKit.Base._exportSymbols(this,MochiKit.Base);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Iter");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Iter depends on MochiKit.Base!";
}
if(typeof (MochiKit.Iter)=="undefined"){
MochiKit.Iter={};
}
MochiKit.Iter.NAME="MochiKit.Iter";
MochiKit.Iter.VERSION="1.1";
MochiKit.Base.update(MochiKit.Iter,{__repr__:function(){
return "["+this.NAME+" "+this.VERSION+"]";
},toString:function(){
return this.__repr__();
},registerIteratorFactory:function(name,_122,_123,_124){
MochiKit.Iter.iteratorRegistry.register(name,_122,_123,_124);
},iter:function(_125,_126){
var self=MochiKit.Iter;
if(arguments.length==2){
return self.takewhile(function(a){
return a!=_126;
},_125);
}
if(typeof (_125.next)=="function"){
return _125;
}else{
if(typeof (_125.iter)=="function"){
return _125.iter();
}
}
try{
return self.iteratorRegistry.match(_125);
}
catch(e){
var m=MochiKit.Base;
if(e==m.NotFound){
e=new TypeError(typeof (_125)+": "+m.repr(_125)+" is not iterable");
}
throw e;
}
},count:function(n){
if(!n){
n=0;
}
var m=MochiKit.Base;
return {repr:function(){
return "count("+n+")";
},toString:m.forward("repr"),next:m.counter(n)};
},cycle:function(p){
var self=MochiKit.Iter;
var m=MochiKit.Base;
var lst=[];
var _129=self.iter(p);
return {repr:function(){
return "cycle(...)";
},toString:m.forward("repr"),next:function(){
try{
var rval=_129.next();
lst.push(rval);
return rval;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
if(lst.length==0){
this.next=function(){
throw self.StopIteration;
};
}else{
var i=-1;
this.next=function(){
i=(i+1)%lst.length;
return lst[i];
};
}
return this.next();
}
}};
},repeat:function(elem,n){
var m=MochiKit.Base;
if(typeof (n)=="undefined"){
return {repr:function(){
return "repeat("+m.repr(elem)+")";
},toString:m.forward("repr"),next:function(){
return elem;
}};
}
return {repr:function(){
return "repeat("+m.repr(elem)+", "+n+")";
},toString:m.forward("repr"),next:function(){
if(n<=0){
throw MochiKit.Iter.StopIteration;
}
n-=1;
return elem;
}};
},next:function(_131){
return _131.next();
},izip:function(p,q){
var m=MochiKit.Base;
var next=MochiKit.Iter.next;
var _134=m.map(iter,arguments);
return {repr:function(){
return "izip(...)";
},toString:m.forward("repr"),next:function(){
return m.map(next,_134);
}};
},ifilter:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred==null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilter(...)";
},toString:m.forward("repr"),next:function(){
while(true){
var rval=seq.next();
if(pred(rval)){
return rval;
}
}
return undefined;
}};
},ifilterfalse:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred==null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilterfalse(...)";
},toString:m.forward("repr"),next:function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
return rval;
}
}
return undefined;
}};
},islice:function(seq){
var self=MochiKit.Iter;
var m=MochiKit.Base;
seq=self.iter(seq);
var _137=0;
var stop=0;
var step=1;
var i=-1;
if(arguments.length==2){
stop=arguments[1];
}else{
if(arguments.length==3){
_137=arguments[1];
stop=arguments[2];
}else{
_137=arguments[1];
stop=arguments[2];
step=arguments[3];
}
}
return {repr:function(){
return "islice("+["...",_137,stop,step].join(", ")+")";
},toString:m.forward("repr"),next:function(){
var rval;
while(i<_137){
rval=seq.next();
i++;
}
if(_137>=stop){
throw self.StopIteration;
}
_137+=step;
return rval;
}};
},imap:function(fun,p,q){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var _141=m.map(self.iter,m.extend(null,arguments,1));
var map=m.map;
var next=self.next;
return {repr:function(){
return "imap(...)";
},toString:m.forward("repr"),next:function(){
return fun.apply(this,map(next,_141));
}};
},applymap:function(fun,seq,self){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
return {repr:function(){
return "applymap(...)";
},toString:m.forward("repr"),next:function(){
return fun.apply(self,seq.next());
}};
},chain:function(p,q){
var self=MochiKit.Iter;
var m=MochiKit.Base;
if(arguments.length==1){
return self.iter(arguments[0]);
}
var _143=m.map(self.iter,arguments);
return {repr:function(){
return "chain(...)";
},toString:m.forward("repr"),next:function(){
while(_143.length>1){
try{
return _143[0].next();
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
_143.shift();
}
}
if(_143.length==1){
var arg=_143.shift();
this.next=m.bind(arg.next,arg);
return this.next();
}
throw self.StopIteration;
}};
},takewhile:function(pred,seq){
var self=MochiKit.Iter;
seq=self.iter(seq);
return {repr:function(){
return "takewhile(...)";
},toString:MochiKit.Base.forward("repr"),next:function(){
var rval=seq.next();
if(!pred(rval)){
this.next=function(){
throw self.StopIteration;
};
this.next();
}
return rval;
}};
},dropwhile:function(pred,seq){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
var bind=m.bind;
return {"repr":function(){
return "dropwhile(...)";
},"toString":m.forward("repr"),"next":function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
break;
}
}
this.next=bind(seq.next,seq);
return rval;
}};
},_tee:function(_145,sync,_147){
sync.pos[_145]=-1;
var m=MochiKit.Base;
var _148=m.listMin;
return {repr:function(){
return "tee("+_145+", ...)";
},toString:m.forward("repr"),next:function(){
var rval;
var i=sync.pos[_145];
if(i==sync.max){
rval=_147.next();
sync.deque.push(rval);
sync.max+=1;
sync.pos[_145]+=1;
}else{
rval=sync.deque[i-sync.min];
sync.pos[_145]+=1;
if(i==sync.min&&_148(sync.pos)!=sync.min){
sync.min+=1;
sync.deque.shift();
}
}
return rval;
}};
},tee:function(_149,n){
var rval=[];
var sync={"pos":[],"deque":[],"max":-1,"min":-1};
if(arguments.length==1){
n=2;
}
var self=MochiKit.Iter;
_149=self.iter(_149);
var _tee=self._tee;
for(var i=0;i<n;i++){
rval.push(_tee(i,sync,_149));
}
return rval;
},list:function(_151){
var m=MochiKit.Base;
if(typeof (_151.slice)=="function"){
return _151.slice();
}else{
if(m.isArrayLike(_151)){
return m.concat(_151);
}
}
var self=MochiKit.Iter;
_151=self.iter(_151);
var rval=[];
try{
while(true){
rval.push(_151.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return rval;
}
return undefined;
},reduce:function(fn,_152,_153){
var i=0;
var x=_153;
var self=MochiKit.Iter;
_152=self.iter(_152);
if(arguments.length<3){
try{
x=_152.next();
}
catch(e){
if(e==self.StopIteration){
e=new TypeError("reduce() of empty sequence with no initial value");
}
throw e;
}
i++;
}
try{
while(true){
x=fn(x,_152.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},range:function(){
var _155=0;
var stop=0;
var step=1;
if(arguments.length==1){
stop=arguments[0];
}else{
if(arguments.length==2){
_155=arguments[0];
stop=arguments[1];
}else{
if(arguments.length==3){
_155=arguments[0];
stop=arguments[1];
step=arguments[2];
}else{
throw new TypeError("range() takes 1, 2, or 3 arguments!");
}
}
}
if(step==0){
throw new TypeError("range() step must not be 0");
}
return {next:function(){
if((step>0&&_155>=stop)||(step<0&&_155<=stop)){
throw MochiKit.Iter.StopIteration;
}
var rval=_155;
_155+=step;
return rval;
},repr:function(){
return "range("+[_155,stop,step].join(", ")+")";
},toString:MochiKit.Base.forward("repr")};
},sum:function(_156,_157){
var x=_157||0;
var self=MochiKit.Iter;
_156=self.iter(_156);
try{
while(true){
x+=_156.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},exhaust:function(_158){
var self=MochiKit.Iter;
_158=self.iter(_158);
try{
while(true){
_158.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
},forEach:function(_159,func,self){
var m=MochiKit.Base;
if(arguments.length>2){
func=m.bind(func,self);
}
if(m.isArrayLike(_159)){
for(var i=0;i<_159.length;i++){
func(_159[i]);
}
}else{
self=MochiKit.Iter;
self.exhaust(self.imap(func,_159));
}
},every:function(_161,func){
var self=MochiKit.Iter;
try{
self.ifilterfalse(func,_161).next();
return false;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return true;
}
},sorted:function(_162,cmp){
var rval=MochiKit.Iter.list(_162);
if(arguments.length==1){
cmp=MochiKit.Base.compare;
}
rval.sort(cmp);
return rval;
},reversed:function(_163){
var rval=MochiKit.Iter.list(_163);
rval.reverse();
return rval;
},some:function(_164,func){
var self=MochiKit.Iter;
try{
self.ifilter(func,_164).next();
return true;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return false;
}
},iextend:function(lst,_165){
if(MochiKit.Base.isArrayLike(_165)){
for(var i=0;i<_165.length;i++){
lst.push(_165[i]);
}
}else{
var self=MochiKit.Iter;
_165=self.iter(_165);
try{
while(true){
lst.push(_165.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
}
return lst;
},arrayLikeIter:function(_166){
var i=0;
return {repr:function(){
return "arrayLikeIter(...)";
},toString:MochiKit.Base.forward("repr"),next:function(){
if(i>=_166.length){
throw MochiKit.Iter.StopIteration;
}
return _166[i++];
}};
},hasIterateNext:function(_167){
return (_167&&typeof (_167.iterateNext)=="function");
},iterateNextIter:function(_168){
return {repr:function(){
return "iterateNextIter(...)";
},toString:MochiKit.Base.forward("repr"),next:function(){
var rval=_168.iterateNext();
if(rval===null||rval===undefined){
throw MochiKit.Iter.StopIteration;
}
return rval;
}};
}});
MochiKit.Iter.EXPORT_OK=["iteratorRegistry","arrayLikeIter","hasIterateNext","iterateNextIter",];
MochiKit.Iter.EXPORT=["StopIteration","registerIteratorFactory","iter","count","cycle","repeat","next","izip","ifilter","ifilterfalse","islice","imap","applymap","chain","takewhile","dropwhile","tee","list","reduce","range","sum","exhaust","forEach","every","sorted","reversed","some","iextend"];
MochiKit.Iter.__new__=function(){
var m=MochiKit.Base;
this.StopIteration=new m.NamedError("StopIteration");
this.iteratorRegistry=new m.AdapterRegistry();
this.registerIteratorFactory("arrayLike",m.isArrayLike,this.arrayLikeIter);
this.registerIteratorFactory("iterateNext",this.hasIterateNext,this.iterateNextIter);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Iter.__new__();
reduce=MochiKit.Iter.reduce;
MochiKit.Base._exportSymbols(this,MochiKit.Iter);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Logging");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Logging depends on MochiKit.Base!";
}
if(typeof (MochiKit.Logging)=="undefined"){
MochiKit.Logging={};
}
MochiKit.Logging.NAME="MochiKit.Logging";
MochiKit.Logging.VERSION="1.1";
MochiKit.Logging.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Logging.toString=function(){
return this.__repr__();
};
MochiKit.Logging.EXPORT=["LogLevel","LogMessage","Logger","alertListener","logger","log","logError","logDebug","logFatal","logWarning"];
MochiKit.Logging.EXPORT_OK=["logLevelAtLeast","isLogMessage","compareLogMessage"];
MochiKit.Logging.LogMessage=function(num,_170,info){
this.num=num;
this.level=_170;
this.info=info;
this.timestamp=new Date();
};
MochiKit.Logging.LogMessage.prototype={repr:function(){
var m=MochiKit.Base;
return "LogMessage("+m.map(m.repr,[this.num,this.level,this.info]).join(", ")+")";
},toString:MochiKit.Base.forward("repr")};
MochiKit.Base.update(MochiKit.Logging,{logLevelAtLeast:function(_172){
var self=MochiKit.Logging;
if(typeof (_172)=="string"){
_172=self.LogLevel[_172];
}
return function(msg){
var _174=msg.level;
if(typeof (_174)=="string"){
_174=self.LogLevel[_174];
}
return _174>=_172;
};
},isLogMessage:function(){
var _175=MochiKit.Logging.LogMessage;
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof _175)){
return false;
}
}
return true;
},compareLogMessage:function(a,b){
return MochiKit.Base.compare([a.level,a.info],[b.level,b.info]);
},alertListener:function(msg){
alert("num: "+msg.num+"\nlevel: "+msg.level+"\ninfo: "+msg.info.join(" "));
}});
MochiKit.Logging.Logger=function(_176){
this.counter=0;
if(typeof (_176)=="undefined"||_176==null){
_176=-1;
}
this.maxSize=_176;
this._messages=[];
this.listeners={};
};
MochiKit.Logging.Logger.prototype={clear:function(){
this._messages.splice(0,this._messages.length);
},dispatchListeners:function(msg){
for(var k in this.listeners){
var pair=this.listeners[k];
if(pair[0]&&!pair[0](msg)){
continue;
}
pair[1](msg);
}
},addListener:function(_177,_178,_179){
if(typeof (_178)=="string"){
_178=MochiKit.Logging.logLevelAtLeast(_178);
}
this.listeners[_177]=[_178,_179];
},removeListener:function(_180){
delete this.listeners[_180];
},baseLog:function(_181,_182){
var msg=new MochiKit.Logging.LogMessage(this.counter,_181,MochiKit.Base.extend(null,arguments,1));
this._messages.push(msg);
this.dispatchListeners(msg);
this.counter+=1;
while(this.maxSize>=0&&this._messages.length>this.maxSize){
this._messges.shift();
}
},getMessages:function(_183){
var _184=0;
if(!(typeof (_183)=="undefined"||_183==null)){
_184=Math.max(0,this._messages.length-_183);
}
return this._messages.slice(_184);
},getMessageText:function(_185){
if(typeof (_185)=="undefined"||_185==null){
_185=30;
}
var _186=this.getMessages(_185);
if(_186.length){
var lst=map(function(m){
return "\n  ["+m.num+"] "+m.level+": "+m.info.join(" ");
},_186);
lst.unshift("LAST "+_186.length+" MESSAGES:");
return lst.join("");
}
return "";
},debuggingBookmarklet:function(_187){
if(typeof (MochiKit.LoggingPane)=="undefined"){
alert(this.getMessageText());
}else{
MochiKit.LoggingPane.createLoggingPane(_187||false);
}
}};
MochiKit.Logging.__new__=function(){
this.LogLevel={ERROR:40,FATAL:50,WARNING:30,INFO:20,DEBUG:10};
var m=MochiKit.Base;
m.registerComparator("LogMessage",this.isLogMessage,this.compareLogMessage);
var _188=m.partial;
var _189=this.Logger;
var _190=_189.prototype.baseLog;
m.update(this.Logger.prototype,{debug:_188(_190,"DEBUG"),log:_188(_190,"INFO"),error:_188(_190,"ERROR"),fatal:_188(_190,"FATAL"),warning:_188(_190,"WARNING")});
var self=this;
var _191=function(name){
return function(){
self.logger[name].apply(self.logger,arguments);
};
};
this.log=_191("log");
this.logError=_191("error");
this.logDebug=_191("debug");
this.logFatal=_191("fatal");
this.logWarning=_191("warning");
this.logger=new _189();
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Logging.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Logging);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.DateTime");
}
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.DateTime)=="undefined"){
MochiKit.DateTime={};
}
MochiKit.DateTime.NAME="MochiKit.DateTime";
MochiKit.DateTime.VERSION="1.1";
MochiKit.DateTime.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.DateTime.toString=function(){
return this.__repr__();
};
MochiKit.DateTime.isoDate=function(str){
str=str+"";
if(typeof (str)!="string"||str.length==0){
return null;
}
var iso=str.split("-");
if(iso.length==0){
return null;
}
return new Date(iso[0],iso[1]-1,iso[2]);
};
MochiKit.DateTime._isoRegexp=/(\d{4,})(?:-(\d{1,2})(?:-(\d{1,2})(?:[T ](\d{1,2}):(\d{1,2})(?::(\d{1,2})(?:\.(\d+))?)?(?:(Z)|([+-])(\d{1,2})(?::(\d{1,2}))?)?)?)?)?/;
MochiKit.DateTime.isoTimestamp=function(str){
str=str+"";
if(typeof (str)!="string"||str.length==0){
return null;
}
var res=str.match(MochiKit.DateTime._isoRegexp);
if(typeof (res)=="undefined"||res==null){
return null;
}
var year,month,day,hour,min,sec,msec;
year=parseInt(res[1],10);
if(typeof (res[2])=="undefined"||res[2]==""){
return new Date(year);
}
month=parseInt(res[2],10)-1;
day=parseInt(res[3],10);
if(typeof (res[4])=="undefined"||res[4]==""){
return new Date(year,month,day);
}
hour=parseInt(res[4],10);
min=parseInt(res[5],10);
sec=(typeof (res[6])!="undefined"&&res[6]!="")?parseInt(res[6],10):0;
if(typeof (res[7])!="undefined"&&res[7]!=""){
msec=Math.round(1000*parseFloat("0."+res[7]));
}else{
msec=0;
}
if((typeof (res[8])=="undefined"||res[8]=="")&&(typeof (res[9])=="undefined"||res[9]=="")){
return new Date(year,month,day,hour,min,sec,msec);
}
var ofs;
if(typeof (res[9])!="undefined"&&res[9]!=""){
ofs=parseInt(res[10],10)*3600000;
if(typeof (res[11])!="undefined"&&res[11]!=""){
ofs+=parseInt(res[11],10)*60000;
}
if(res[9]=="-"){
ofs=-ofs;
}
}else{
ofs=0;
}
return new Date(Date.UTC(year,month,day,hour,min,sec,msec)-ofs);
};
MochiKit.DateTime.toISOTime=function(date,_197){
if(typeof (date)=="undefined"||date==null){
return null;
}
var hh=date.getHours();
var mm=date.getMinutes();
var ss=date.getSeconds();
var lst=[((_197&&(hh<10))?"0"+hh:hh),((mm<10)?"0"+mm:mm),((ss<10)?"0"+ss:ss)];
return lst.join(":");
};
MochiKit.DateTime.toISOTimestamp=function(date,_201){
if(typeof (date)=="undefined"||date==null){
return null;
}
var sep=_201?"T":" ";
var foot=_201?"Z":"";
if(_201){
date=new Date(date.getTime()+(date.getTimezoneOffset()*60000));
}
return MochiKit.DateTime.toISODate(date)+sep+MochiKit.DateTime.toISOTime(date,_201)+foot;
};
MochiKit.DateTime.toISODate=function(date){
if(typeof (date)=="undefined"||date==null){
return null;
}
var _204=MochiKit.DateTime._padTwo;
return [date.getFullYear(),_204(date.getMonth()+1),_204(date.getDate())].join("-");
};
MochiKit.DateTime.americanDate=function(d){
d=d+"";
if(typeof (d)!="string"||d.length==0){
return null;
}
var a=d.split("/");
return new Date(a[2],a[0]-1,a[1]);
};
MochiKit.DateTime._padTwo=function(n){
return (n>9)?n:"0"+n;
};
MochiKit.DateTime.toPaddedAmericanDate=function(d){
if(typeof (d)=="undefined"||d==null){
return null;
}
var _206=MochiKit.DateTime._padTwo;
return [_206(d.getMonth()+1),_206(d.getDate()),d.getFullYear()].join("/");
};
MochiKit.DateTime.toAmericanDate=function(d){
if(typeof (d)=="undefined"||d==null){
return null;
}
return [d.getMonth()+1,d.getDate(),d.getFullYear()].join("/");
};
MochiKit.DateTime.EXPORT=["isoDate","isoTimestamp","toISOTime","toISOTimestamp","toISODate","americanDate","toPaddedAmericanDate","toAmericanDate"];
MochiKit.DateTime.EXPORT_OK=[];
MochiKit.DateTime.EXPORT_TAGS={":common":MochiKit.DateTime.EXPORT,":all":MochiKit.DateTime.EXPORT};
MochiKit.DateTime.__new__=function(){
var base=this.NAME+".";
for(var k in this){
var o=this[k];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+k;
}
catch(e){
}
}
}
};
MochiKit.DateTime.__new__();
(function(_207,_208){
if((typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined")||(typeof (MochiKit.__compat__)=="boolean"&&MochiKit.__compat__)){
var all=_208.EXPORT_TAGS[":all"];
for(var i=0;i<all.length;i++){
_207[all[i]]=_208[all[i]];
}
}
})(this,MochiKit.DateTime);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Format");
}
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.Format)=="undefined"){
MochiKit.Format={};
}
MochiKit.Format.NAME="MochiKit.Format";
MochiKit.Format.VERSION="1.1";
MochiKit.Format.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Format.toString=function(){
return this.__repr__();
};
MochiKit.Format._numberFormatter=function(_209,_210,_211,_212,_213,_214,_215,_216,_217){
return function(num){
num=parseFloat(num);
if(typeof (num)=="undefined"||num==null||isNaN(num)){
return _209;
}
var _218=_210;
var _219=_211;
if(num<0){
num=-num;
}else{
_218=_218.replace(/-/,"");
}
var me=arguments.callee;
var fmt=MochiKit.Format.formatLocale(_212);
if(_213){
num=num*100;
_219=fmt.percent+_219;
}
num=MochiKit.Format.roundToFixed(num,_214);
var _221=num.split(/\./);
var _222=_221[0];
var frac=(_221.length==1)?"":_221[1];
var res="";
while(_222.length<_215){
_222="0"+_222;
}
if(_216){
while(_222.length>_216){
var i=_222.length-_216;
res=res+fmt.separator+_222.substring(i,_222.length);
_222=_222.substring(0,i);
}
}
res=_222+res;
if(_214>0){
while(frac.length<_217){
frac=frac+"0";
}
res=res+fmt.decimal+frac;
}
return _218+res+_219;
};
};
MochiKit.Format.numberFormatter=function(_224,_225,_226){
if(typeof (_225)=="undefined"){
_225="";
}
var _227=_224.match(/((?:[0#]+,)?[0#]+)(?:\.([0#]+))?(%)?/);
if(!_227){
throw TypeError("Invalid pattern");
}
var _228=_224.substr(0,_227.index);
var _229=_224.substr(_227.index+_227[0].length);
if(_228.search(/-/)==-1){
_228=_228+"-";
}
var _230=_227[1];
var frac=(typeof (_227[2])=="string"&&_227[2]!="")?_227[2]:"";
var _231=(typeof (_227[3])=="string"&&_227[3]!="");
var tmp=_230.split(/,/);
var _233;
if(typeof (_226)=="undefined"){
_226="default";
}
if(tmp.length==1){
_233=null;
}else{
_233=tmp[1].length;
}
var _234=_230.length-_230.replace(/0/g,"").length;
var _235=frac.length-frac.replace(/0/g,"").length;
var _236=frac.length;
return MochiKit.Format._numberFormatter(_225,_228,_229,_226,_231,_236,_234,_233,_235);
};
MochiKit.Format.formatLocale=function(_237){
if(typeof (_237)=="undefined"||_237==null){
_237="default";
}
if(typeof (_237)=="string"){
var rval=MochiKit.Format.LOCALE[_237];
if(typeof (rval)=="string"){
rval=arguments.callee(rval);
MochiKit.Format.LOCALE[_237]=rval;
}
return rval;
}else{
return _237;
}
};
MochiKit.Format.twoDigitAverage=function(_238,_239){
if(_239){
var res=_238/_239;
if(!isNaN(res)){
return MochiKit.Format.twoDigitFloat(_238/_239);
}
}
return "0";
};
MochiKit.Format.twoDigitFloat=function(_240){
var sign=(_240<0?"-":"");
var s=Math.floor(Math.abs(_240)*100).toString();
if(s=="0"){
return s;
}
if(s.length<3){
while(s.charAt(s.length-1)=="0"){
s=s.substring(0,s.length-1);
}
return sign+"0."+s;
}
var head=sign+s.substring(0,s.length-2);
var tail=s.substring(s.length-2,s.length);
if(tail=="00"){
return head;
}else{
if(tail.charAt(1)=="0"){
return head+"."+tail.charAt(0);
}else{
return head+"."+tail;
}
}
};
MochiKit.Format.lstrip=function(str,_245){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_245){
return str.replace(/^\s+/,"");
}else{
return str.replace(new RegExp("^["+_245+"]+"),"");
}
};
MochiKit.Format.rstrip=function(str,_246){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_246){
return str.replace(/\s+$/,"");
}else{
return str.replace(new RegExp("["+_246+"]+$"),"");
}
};
MochiKit.Format.strip=function(str,_247){
var self=MochiKit.Format;
return self.rstrip(self.lstrip(str,_247),_247);
};
MochiKit.Format.truncToFixed=function(_248,_249){
_248=Math.floor(_248*Math.pow(10,_249));
var res=(_248*Math.pow(10,-_249)).toFixed(_249);
if(res.charAt(0)=="."){
res="0"+res;
}
return res;
};
MochiKit.Format.roundToFixed=function(_250,_251){
return MochiKit.Format.truncToFixed(_250+0.5*Math.pow(10,-_251),_251);
};
MochiKit.Format.percentFormat=function(_252){
return MochiKit.Format.twoDigitFloat(100*_252)+"%";
};
MochiKit.Format.EXPORT=["truncToFixed","roundToFixed","numberFormatter","formatLocale","twoDigitAverage","twoDigitFloat","percentFormat","lstrip","rstrip","strip"];
MochiKit.Format.LOCALE={"en_US":{"separator":",","decimal":".","percent":"%"},"de_DE":{"separator":".","decimal":",","percent":"%"},"fr_FR":{"separator":" ","decimal":",","percent":"%"},"default":"en_US"};
MochiKit.Format.EXPORT_OK=[];
MochiKit.Format.EXPORT_TAGS={":all":MochiKit.Format.EXPORT,":common":MochiKit.Format.EXPORT};
MochiKit.Format.__new__=function(){
var base=this.NAME+".";
for(var k in this){
var o=this[k];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+k;
}
catch(e){
}
}
}
};
MochiKit.Format.__new__();
(function(_253,_254){
if((typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined")||(typeof (MochiKit.__compat__)=="boolean"&&MochiKit.__compat__)){
var all=_254.EXPORT_TAGS[":all"];
for(var i=0;i<all.length;i++){
_253[all[i]]=_254[all[i]];
}
}
})(this,MochiKit.Format);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Async");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Async depends on MochiKit.Base!";
}
if(typeof (MochiKit.Async)=="undefined"){
MochiKit.Async={};
}
MochiKit.Async.NAME="MochiKit.Async";
MochiKit.Async.VERSION="1.1";
MochiKit.Async.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Async.toString=function(){
return this.__repr__();
};
MochiKit.Async.Deferred=function(_255){
this.chain=[];
this.id=this._nextId();
this.fired=-1;
this.paused=0;
this.results=[null,null];
this.canceller=_255;
this.silentlyCancelled=false;
};
MochiKit.Async.Deferred.prototype={repr:function(){
var _256;
if(this.fired==-1){
_256="unfired";
}else{
if(this.fired==0){
_256="success";
}else{
_256="error";
}
}
return "Deferred("+this.id+", "+_256+")";
},toString:MochiKit.Base.forward("repr"),_nextId:MochiKit.Base.counter(),cancel:function(){
var self=MochiKit.Async;
if(this.fired==-1){
if(this.canceller){
this.canceller(this);
}else{
this.silentlyCancelled=true;
}
if(this.fired==-1){
this.errback(new self.CancelledError(this));
}
}else{
if((this.fired==0)&&(this.results[0] instanceof self.Deferred)){
this.results[0].cancel();
}
}
},_pause:function(){
this.paused++;
},_unpause:function(){
this.paused--;
if((this.paused==0)&&(this.fired>=0)){
this._fire();
}
},_continue:function(res){
this._resback(res);
this._unpause();
},_resback:function(res){
this.fired=((res instanceof Error)?1:0);
this.results[this.fired]=res;
this._fire();
},_check:function(){
if(this.fired!=-1){
if(!this.silentlyCancelled){
throw new MochiKit.Async.AlreadyCalledError(this);
}
this.silentlyCancelled=false;
return;
}
},callback:function(res){
this._check();
this._resback(res);
},errback:function(res){
this._check();
if(!(res instanceof Error)){
res=new MochiKit.Async.GenericError(res);
}
this._resback(res);
},addBoth:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,fn);
},addCallback:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,null);
},addErrback:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(null,fn);
},addCallbacks:function(cb,eb){
this.chain.push([cb,eb]);
if(this.fired>=0){
this._fire();
}
return this;
},_fire:function(){
var _259=this.chain;
var _260=this.fired;
var res=this.results[_260];
var self=this;
var cb=null;
while(_259.length>0&&this.paused==0){
var pair=_259.shift();
var f=pair[_260];
if(f==null){
continue;
}
try{
res=f(res);
_260=((res instanceof Error)?1:0);
if(res instanceof MochiKit.Async.Deferred){
cb=function(res){
self._continue(res);
};
this._pause();
}
}
catch(err){
_260=1;
res=err;
}
}
this.fired=_260;
this.results[_260]=res;
if(cb&&this.paused){
res.addBoth(cb);
}
}};
MochiKit.Base.update(MochiKit.Async,{evalJSONRequest:function(){
return eval("("+arguments[0].responseText+")");
},succeed:function(_262){
var d=new MochiKit.Async.Deferred();
d.callback.apply(d,arguments);
return d;
},fail:function(_263){
var d=new MochiKit.Async.Deferred();
d.errback.apply(d,arguments);
return d;
},getXMLHttpRequest:function(){
var self=arguments.callee;
if(!self.XMLHttpRequest){
var _264=[function(){
return new XMLHttpRequest();
},function(){
return new ActiveXObject("Msxml2.XMLHTTP");
},function(){
return new ActiveXObject("Microsoft.XMLHTTP");
},function(){
return new ActiveXObject("Msxml2.XMLHTTP.4.0");
},function(){
throw new MochiKit.Async.BrowserComplianceError("Browser does not support XMLHttpRequest");
}];
for(var i=0;i<_264.length;i++){
var func=_264[i];
try{
self.XMLHttpRequest=func;
return func();
}
catch(e){
}
}
}
return self.XMLHttpRequest();
},sendXMLHttpRequest:function(req,_266){
if(typeof (_266)=="undefined"){
_266=null;
}
var _267=function(){
try{
req.onreadystatechange=null;
}
catch(e){
try{
req.onreadystatechange=function(){
};
}
catch(e){
}
}
req.abort();
};
var self=MochiKit.Async;
var d=new self.Deferred(_267);
var _268=function(){
if(req.readyState==4){
try{
req.onreadystatechange=null;
}
catch(e){
try{
req.onreadystatechange=function(){
};
}
catch(e){
}
}
var _269=null;
try{
_269=req.status;
if(!_269&&MochiKit.Base.isNotEmpty(req.responseText)){
_269=304;
}
}
catch(e){
}
if(_269==200||_269==304){
d.callback(req);
}else{
var err=new self.XMLHttpRequestError(req,"Request failed");
if(err.number){
d.errback(err);
}else{
d.errback(err);
}
}
}
};
try{
req.onreadystatechange=_268;
req.send(_266);
}
catch(e){
try{
req.onreadystatechange=null;
}
catch(ignore){
}
d.errback(e);
}
return d;
},doSimpleXMLHttpRequest:function(url){
var self=MochiKit.Async;
var req=self.getXMLHttpRequest();
if(arguments.length>1){
var m=MochiKit.Base;
url+="?"+m.queryString.apply(null,m.extend(null,arguments,1));
}
req.open("GET",url,true);
return self.sendXMLHttpRequest(req);
},loadJSONDoc:function(url){
var self=MochiKit.Async;
var d=self.doSimpleXMLHttpRequest.apply(self,arguments);
d=d.addCallback(self.evalJSONRequest);
return d;
},wait:function(_272,_273){
var d=new MochiKit.Async.Deferred();
var m=MochiKit.Base;
if(typeof (_273)!="undefined"){
d.addCallback(function(){
return _273;
});
}
var _274=setTimeout(m.bind(d.callback,d),Math.floor(_272*1000));
d.canceller=function(){
try{
clearTimeout(_274);
}
catch(e){
}
};
return d;
},callLater:function(_275,func){
var m=MochiKit.Base;
var _276=m.partial.apply(m,m.extend(null,arguments,1));
return MochiKit.Async.wait(_275).addCallback(function(res){
return _276();
});
}});
MochiKit.Async.DeferredLock=function(){
this.waiting=[];
this.locked=false;
this.id=this._nextId();
};
MochiKit.Async.DeferredLock.prototype={__class__:MochiKit.Async.DeferredLock,acquire:function(){
d=new MochiKit.Async.Deferred();
if(this.locked){
this.waiting.push(d);
}else{
this.locked=true;
d.callback(this);
}
return d;
},release:function(){
if(!this.locked){
throw TypeError("Tried to release an unlocked DeferredLock");
}
this.locked=false;
if(this.waiting.length>0){
this.locked=true;
this.waiting.shift().callback(this);
}
},_nextId:MochiKit.Base.counter(),repr:function(){
var _277;
if(this.locked){
_277="locked, "+this.waiting.length+" waiting";
}else{
_277="unlocked";
}
return "DeferredLock("+this.id+", "+_277+")";
},toString:MochiKit.Base.forward("repr")};
MochiKit.Async.EXPORT=["AlreadyCalledError","CancelledError","BrowserComplianceError","GenericError","XMLHttpRequestError","Deferred","succeed","fail","getXMLHttpRequest","doSimpleXMLHttpRequest","loadJSONDoc","wait","callLater","sendXMLHttpRequest","DeferredLock"];
MochiKit.Async.EXPORT_OK=["evalJSONRequest"];
MochiKit.Async.__new__=function(){
var m=MochiKit.Base;
var ne=m.partial(m._newNamedError,this);
ne("AlreadyCalledError",function(_279){
this.deferred=_279;
});
ne("CancelledError",function(_280){
this.deferred=_280;
});
ne("BrowserComplianceError",function(msg){
this.message=msg;
});
ne("GenericError",function(msg){
this.message=msg;
});
ne("XMLHttpRequestError",function(req,msg){
this.req=req;
this.message=msg;
try{
this.number=req.status;
}
catch(e){
}
});
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Async.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Async);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.DOM");
dojo.require("MochiKit.Iter");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Iter",[]);
}
try{
if(typeof (MochiKit.Iter)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.DOM depends on MochiKit.Iter!";
}
if(typeof (MochiKit.DOM)=="undefined"){
MochiKit.DOM={};
}
MochiKit.DOM.NAME="MochiKit.DOM";
MochiKit.DOM.VERSION="1.1";
MochiKit.DOM.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.DOM.toString=function(){
return this.__repr__();
};
MochiKit.DOM.EXPORT=["formContents","currentWindow","currentDocument","withWindow","withDocument","registerDOMConverter","coerceToDOM","createDOM","createDOMFunc","getNodeAttribute","setNodeAttribute","updateNodeAttributes","appendChildNodes","replaceChildNodes","removeElement","swapDOM","BUTTON","TT","PRE","H1","H2","H3","BR","HR","LABEL","TEXTAREA","FORM","SELECT","OPTION","OPTGROUP","LEGEND","FIELDSET","P","UL","OL","LI","TD","TR","THEAD","TBODY","TFOOT","TABLE","TH","INPUT","SPAN","A","DIV","IMG","getElement","$","computedStyle","getElementsByTagAndClassName","addToCallStack","addLoadEvent","focusOnLoad","setElementClass","toggleElementClass","addElementClass","removeElementClass","swapElementClass","hasElementClass","escapeHTML","toHTML","emitHTML","setDisplayForElement","hideElement","showElement","scrapeText"];
MochiKit.DOM.EXPORT_OK=["domConverters"];
MochiKit.DOM.currentWindow=function(){
return MochiKit.DOM._window;
};
MochiKit.DOM.currentDocument=function(){
return MochiKit.DOM._document;
};
MochiKit.DOM.withWindow=function(win,func){
var self=MochiKit.DOM;
var _282=self._document;
var _283=self._win;
var rval;
try{
self._window=win;
self._document=win.document;
rval=func();
}
catch(e){
self._window=_283;
self._document=_282;
throw e;
}
self._window=_283;
self._document=_282;
return rval;
};
MochiKit.DOM.formContents=function(elem){
var _284=[];
var _285=[];
var m=MochiKit.Base;
var self=MochiKit.DOM;
if(typeof (elem)=="undefined"||elem==null){
elem=self._document;
}else{
elem=self.getElement(elem);
}
m.nodeWalk(elem,function(elem){
var name=elem.name;
var _286=elem.value;
if(m.isNotEmpty(name,_286)){
_284.push(name);
_285.push(_286);
return null;
}
return elem.childNodes;
});
return [_284,_285];
};
MochiKit.DOM.withDocument=function(doc,func){
var self=MochiKit.DOM;
var _288=self._document;
var rval;
try{
self._document=doc;
rval=func();
}
catch(e){
self._document=_288;
throw e;
}
self._document=_288;
return rval;
};
MochiKit.DOM.registerDOMConverter=function(name,_289,wrap,_290){
MochiKit.DOM.domConverters.register(name,_289,wrap,_290);
};
MochiKit.DOM.coerceToDOM=function(node,ctx){
var im=MochiKit.Iter;
var self=MochiKit.DOM;
var iter=im.iter;
var _295=im.repeat;
var imap=im.imap;
var _297=self.domConverters;
var _298=self.coerceToDOM;
var _299=MochiKit.Base.NotFound;
while(true){
if(typeof (node)=="undefined"||node==null){
return null;
}
if(typeof (node.nodeType)!="undefined"&&node.nodeType>0){
return node;
}
if(typeof (node)=="number"||typeof (node)=="bool"){
node=node.toString();
}
if(typeof (node)=="string"){
return self._document.createTextNode(node);
}
if(typeof (node.toDOM)=="function"){
node=node.toDOM(ctx);
continue;
}
if(typeof (node)=="function"){
node=node(ctx);
continue;
}
var _300=null;
try{
_300=iter(node);
}
catch(e){
}
if(_300){
return imap(_298,_300,_295(ctx));
}
try{
node=_297.match(node,ctx);
continue;
}
catch(e){
if(e!=_299){
throw e;
}
}
return self._document.createTextNode(node.toString());
}
return undefined;
};
MochiKit.DOM.setNodeAttribute=function(node,attr,_302){
var o={};
o.attr=_302;
try{
return MochiKit.DOM.updateNodeAttributes(node,o);
}
catch(e){
}
return null;
};
MochiKit.DOM.getNodeAttribute=function(node,attr){
var _303=MochiKit.DOM.attributeArray.renames[attr];
node=MochiKit.DOM.getElement(node);
try{
if(_303){
return node[_303];
}
return node.getAttribute(attr);
}
catch(e){
}
return null;
};
MochiKit.DOM.updateNodeAttributes=function(node,_304){
var elem=node;
if(typeof (node)=="string"){
elem=MochiKit.DOM.getElement(node);
}
if(_304){
var _305=MochiKit.Base.updatetree;
if(MochiKit.DOM.attributeArray.compliant){
for(var k in _304){
var v=_304[k];
if(typeof (v)=="object"&&typeof (elem[k])=="object"){
_305(elem[k],v);
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}else{
var _306=MochiKit.DOM.attributeArray.renames;
for(k in _304){
v=_304[k];
var _307=_306[k];
if(typeof (_307)=="string"){
elem[_307]=v;
}else{
if(typeof (elem[k])=="object"&&typeof (v)=="object"){
_305(elem[k],v);
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}
}
}
return elem;
};
MochiKit.DOM.appendChildNodes=function(node){
var elem=node;
if(typeof (node)=="string"){
elem=MochiKit.DOM.getElement(node);
}
var _308=[MochiKit.DOM.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _309=MochiKit.Iter.iextend;
while(_308.length){
var n=_308.shift();
if(typeof (n)=="undefined"||n==null){
}else{
if(typeof (n.nodeType)=="number"){
elem.appendChild(n);
}else{
_309(_308,n);
}
}
}
return elem;
};
MochiKit.DOM.replaceChildNodes=function(node){
var elem=node;
if(typeof (node)=="string"){
elem=MochiKit.DOM.getElement(node);
arguments[0]=elem;
}
var _310;
while((_310=elem.firstChild)){
elem.removeChild(_310);
}
if(arguments.length<2){
return elem;
}else{
return MochiKit.DOM.appendChildNodes.apply(this,arguments);
}
};
MochiKit.DOM.createDOM=function(name,_311){
var elem;
var self=MochiKit.DOM;
if(typeof (name)=="string"){
elem=self._document.createElement(name);
}else{
elem=name;
}
if(_311){
self.updateNodeAttributes(elem,_311);
}
if(arguments.length<=2){
return elem;
}else{
var args=MochiKit.Base.extend([elem],arguments,2);
return self.appendChildNodes.apply(this,args);
}
};
MochiKit.DOM.createDOMFunc=function(){
return MochiKit.Base.partial.apply(this,MochiKit.Base.extend([MochiKit.DOM.createDOM],arguments));
};
MochiKit.DOM.swapDOM=function(dest,src){
dest=MochiKit.DOM.getElement(dest);
var _315=dest.parentNode;
if(src){
src=MochiKit.DOM.getElement(src);
_315.replaceChild(src,dest);
}else{
_315.removeChild(dest);
}
return src;
};
MochiKit.DOM.getElement=function(id){
var self=MochiKit.DOM;
if(arguments.length==1){
return ((typeof (id)=="string")?self._document.getElementById(id):id);
}else{
return MochiKit.Base.map(self.getElement,arguments);
}
};
MochiKit.DOM.computedStyle=function(_317,_318,_319){
if(arguments.length==2){
_319=_318;
}
var self=MochiKit.DOM;
var el=self.getElement(_317);
var _321=self._document;
if(!el||el==_321){
return undefined;
}
if(el.currentStyle){
return el.currentStyle[_318];
}
if(typeof (_321.defaultView)=="undefined"){
return undefined;
}
if(_321.defaultView==null){
return undefined;
}
var _322=_321.defaultView.getComputedStyle(el,null);
if(typeof (_322)=="undefined"||_322==null){
return undefined;
}
return _322.getPropertyValue(_319);
};
MochiKit.DOM.getElementsByTagAndClassName=function(_323,_324,_325){
var self=MochiKit.DOM;
if(typeof (_323)=="undefined"||_323==null){
_323="*";
}
if(typeof (_325)=="undefined"||_325==null){
_325=self._document;
}
_325=MochiKit.DOM.getElement(_325);
var _326=_325.getElementsByTagName(_323)||self._document.all;
if(typeof (_324)=="undefined"||_324==null){
return MochiKit.Base.extend(null,_326);
}
var _327=[];
for(var i=0;i<_326.length;i++){
var _328=_326[i];
var _329=_328.className.split(" ");
for(var j=0;j<_329.length;j++){
if(_329[j]==_324){
_327.push(_328);
break;
}
}
}
return _327;
};
MochiKit.DOM._newCallStack=function(path,once){
var rval=function(){
var _332=arguments.callee.callStack;
for(var i=0;i<_332.length;i++){
if(_332[i].apply(this,arguments)===false){
break;
}
}
if(once){
try{
this[path]=null;
}
catch(e){
}
}
};
rval.callStack=[];
return rval;
};
MochiKit.DOM.addToCallStack=function(_333,path,func,once){
var _334=_333[path];
var _335=_334;
if(!(typeof (_334)=="function"&&typeof (_334.callStack)=="object"&&_334.callStack!=null)){
_335=MochiKit.DOM._newCallStack(path,once);
if(typeof (_334)=="function"){
_335.callStack.push(_334);
}
_333[path]=_335;
}
_335.callStack.push(func);
};
MochiKit.DOM.addLoadEvent=function(func){
var self=MochiKit.DOM;
self.addToCallStack(self._window,"onload",func,true);
};
MochiKit.DOM.focusOnLoad=function(_336){
MochiKit.DOM.addLoadEvent(function(){
_336=MochiKit.DOM.getElement(_336);
if(_336){
_336.focus();
}
});
};
MochiKit.DOM.setElementClass=function(_337,_338){
var obj=MochiKit.DOM.getElement(_337);
if(MochiKit.DOM.attributeArray.compliant){
obj.setAttribute("class",_338);
}else{
obj.setAttribute("className",_338);
}
};
MochiKit.DOM.toggleElementClass=function(_339){
var _340=MochiKit.DOM.getElement;
var _341=MochiKit.DOM.addElementClass;
var _342=MochiKit.DOM.removeElementClass;
for(var i=1;i<arguments.length;i++){
var obj=_340(arguments[i]);
if(!_341(obj,_339)){
_342(obj,_339);
}
}
};
MochiKit.DOM.addElementClass=function(_343,_344){
var obj=MochiKit.DOM.getElement(_343);
var cls=obj.className;
if(cls.length==0){
MochiKit.DOM.setElementClass(obj,_344);
return true;
}
if(cls==_344){
return false;
}
var _346=obj.className.split(" ");
for(var i=0;i<_346.length;i++){
if(_346[i]==_344){
return false;
}
}
MochiKit.DOM.setElementClass(obj,cls+" "+_344);
return true;
};
MochiKit.DOM.removeElementClass=function(_347,_348){
var obj=MochiKit.DOM.getElement(_347);
var cls=obj.className;
if(cls.length==0){
return false;
}
if(cls==_348){
MochiKit.DOM.setElementClass(obj,"");
return true;
}
var _349=obj.className.split(" ");
for(var i=0;i<_349.length;i++){
if(_349[i]==_348){
_349.splice(i,1);
MochiKit.DOM.setElementClass(obj,_349.join(" "));
return true;
}
}
return false;
};
MochiKit.DOM.swapElementClass=function(_350,_351,_352){
var obj=MochiKit.DOM.getElement(_350);
var res=MochiKit.DOM.removeElementClass(obj,_351);
if(res){
MochiKit.DOM.addElementClass(obj,_352);
}
return res;
};
MochiKit.DOM.hasElementClass=function(_353,_354){
var obj=MochiKit.DOM.getElement(_353);
var _355=obj.className.split(" ");
for(var i=1;i<arguments.length;i++){
var good=false;
for(var j=0;j<_355.length;j++){
if(_355[j]==arguments[i]){
good=true;
break;
}
}
if(!good){
return false;
}
}
return true;
};
MochiKit.DOM.escapeHTML=function(s){
return s.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/</g,"&lt;").replace(/>/g,"&gt;");
};
MochiKit.DOM.toHTML=function(dom){
return MochiKit.DOM.emitHTML(dom).join("");
};
MochiKit.DOM.emitHTML=function(dom,lst){
if(typeof (lst)=="undefined"||lst==null){
lst=[];
}
var _358=[dom];
var _359=MochiKit.DOM.escapeHTML;
var _360=MochiKit.DOM.attributeArray;
while(_358.length){
dom=_358.pop();
if(typeof (dom)=="string"){
lst.push(dom);
}else{
if(dom.nodeType==1){
lst.push("<"+dom.nodeName.toLowerCase());
var _361=[];
var _362=_360(dom);
for(var i=0;i<_362.length;i++){
var a=_362[i];
_361.push([" ",a.name,"=\"",_359(a.value),"\""]);
}
_361.sort();
for(i=0;i<_361.length;i++){
var _363=_361[i];
for(var j=0;j<_363.length;j++){
lst.push(_363[j]);
}
}
if(dom.hasChildNodes()){
lst.push(">");
_358.push("</"+dom.nodeName.toLowerCase()+">");
var _364=dom.childNodes;
for(i=_364.length-1;i>=0;i--){
_358.push(_364[i]);
}
}else{
lst.push("/>");
}
}else{
if(dom.nodeType==3){
lst.push(_359(dom.nodeValue));
}
}
}
}
return lst;
};
MochiKit.DOM.setDisplayForElement=function(_365,_366){
var _367=MochiKit.Base.extend(null,arguments,1);
MochiKit.Iter.forEach(MochiKit.Base.filter(null,MochiKit.Base.map(getElement,_367)),function(_366){
_366.style.display=_365;
});
};
MochiKit.DOM.scrapeText=function(node,_368){
var rval=[];
MochiKit.Base.nodeWalk(node,function(node){
var _369=node.nodeValue;
if(typeof (_369)=="string"){
rval.push(_369);
}
return node.childNodes;
});
if(_368){
return rval;
}else{
return rval.join("");
}
};
MochiKit.DOM.__new__=function(win){
this._document=document;
this._window=win;
this.domConverters=new MochiKit.Base.AdapterRegistry();
var _370=this._document.createElement("span");
var _371;
if(_370.attributes.length>0){
var _372=MochiKit.Base.filter;
_371=function(node){
return _372(_371.ignoreAttrFilter,node.attributes);
};
_371.ignoreAttr={};
MochiKit.Iter.forEach(_370.attributes,function(a){
_371.ignoreAttr[a.name]=a.value;
});
_371.ignoreAttrFilter=function(a){
return (_371.ignoreAttr[a.name]!=a.value);
};
_371.compliant=false;
_371.renames={"class":"className","checked":"defaultChecked"};
}else{
_371=function(node){
return node.attributes;
};
_371.compliant=true;
_371.renames={};
}
this.attributeArray=_371;
var _373=this.createDOMFunc;
this.UL=_373("ul");
this.OL=_373("ol");
this.LI=_373("li");
this.TD=_373("td");
this.TR=_373("tr");
this.TBODY=_373("tbody");
this.THEAD=_373("thead");
this.TFOOT=_373("tfoot");
this.TABLE=_373("table");
this.TH=_373("th");
this.INPUT=_373("input");
this.SPAN=_373("span");
this.A=_373("a");
this.DIV=_373("div");
this.IMG=_373("img");
this.BUTTON=_373("button");
this.TT=_373("tt");
this.PRE=_373("pre");
this.H1=_373("h1");
this.H2=_373("h2");
this.H3=_373("h3");
this.BR=_373("br");
this.HR=_373("hr");
this.LABEL=_373("label");
this.TEXTAREA=_373("textarea");
this.FORM=_373("form");
this.P=_373("p");
this.SELECT=_373("select");
this.OPTION=_373("option");
this.OPTGROUP=_373("optgroup");
this.LEGEND=_373("legend");
this.FIELDSET=_373("fieldset");
var _374=MochiKit.Base.partial;
this.hideElement=_374(this.setDisplayForElement,"none");
this.showElement=_374(this.setDisplayForElement,"block");
this.removeElement=this.swapDOM;
this.$=this.getElement;
this.EXPORT_TAGS={":common":this.EXPORT,":all":MochiKit.Base.concat(this.EXPORT,this.EXPORT_OK)};
MochiKit.Base.nameFunctions(this);
};
MochiKit.DOM.__new__(this);
MochiKit.Base._exportSymbols(this,MochiKit.DOM);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.LoggingPane");
dojo.require("MochiKit.Logging");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Logging",[]);
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"||typeof (MochiKit.Logging)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.LoggingPane depends on MochiKit.Base and MochiKit.Logging!";
}
if(typeof (MochiKit.LoggingPane)=="undefined"){
MochiKit.LoggingPane={};
}
MochiKit.LoggingPane.NAME="MochiKit.LoggingPane";
MochiKit.LoggingPane.VERSION="1.1";
MochiKit.LoggingPane.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.LoggingPane.toString=function(){
return this.__repr__();
};
MochiKit.LoggingPane.createLoggingPane=function(_375){
var m=MochiKit.LoggingPane;
_375=!(!_375);
if(m._loggingPane&&m._loggingPane.inline!=_375){
m._loggingPane.closePane();
m._loggingPane=null;
}
if(!m._loggingPane||m._loggingPane.closed){
m._loggingPane=new m.LoggingPane(_375,MochiKit.Logging.logger);
}
return m._loggingPane;
};
MochiKit.LoggingPane.LoggingPane=function(_376,_377){
if(typeof (_377)=="undefined"||_377==null){
_377=MochiKit.Logging.logger;
}
this.logger=_377;
var _378=MochiKit.Base.update;
var _379=MochiKit.Base.updatetree;
var bind=MochiKit.Base.bind;
var _380=MochiKit.Base.clone;
var win=window;
if(typeof (MochiKit.DOM)!="undefined"){
win=MochiKit.DOM.currentWindow();
}
if(!_376){
var url=win.location.href.split("?")[0];
var name="MochiKit.LoggingPane."+url;
win=win.open("",name,"dependent,resizable,height=200");
if(!win){
alert("Not able to open debugging window due to pop-up blocking.");
return;
}
}
var doc=win.document;
this.doc=doc;
var _381=doc.getElementById("_debugPane");
if(_381&&typeof (_381.loggingPane)!="undefined"){
_381.loggingPane.logger=this.logger;
_381.loggingPane.buildAndApplyFilter();
return _381.loggingPane;
}
_381=doc.createElement("div");
_381.id="_debugPane";
_381.loggingPane=this;
var _382=doc.createElement("input");
var _383=doc.createElement("input");
var _384=doc.createElement("button");
var _385=doc.createElement("button");
var _386=doc.createElement("button");
var _387=doc.createElement("button");
var _388=doc.createElement("div");
var _389=doc.createElement("div");
var _390="_debugPaneListener";
this.colorTable=_380(this.colorTable);
var _391=[];
var _392=null;
var _393=function(msg){
var _394=msg.level;
if(typeof (_394)=="number"){
_394=MochiKit.Logging.LogLevel[_394];
}
return _394;
};
var _395=function(msg){
return msg.info.join(" ");
};
var _396=bind(function(msg){
var _397=_393(msg);
var text=_395(msg);
var c=this.colorTable[_397];
var p=doc.createElement("span");
p.style.color=c;
p.style.margin="0";
p.appendChild(doc.createTextNode(_397+": "+text));
_389.appendChild(p);
_389.appendChild(doc.createElement("br"));
if(_388.offsetHeight>_388.scrollHeight){
_388.scrollTop=0;
}else{
_388.scrollTop=_388.scrollHeight;
}
},this);
var _400=function(msg){
_391[_391.length]=msg;
_396(msg);
};
var _401=function(){
var _402,infore;
try{
_402=new RegExp(_382.value);
infore=new RegExp(_383.value);
}
catch(e){
logDebug("Error in filter regex: "+e.message);
return null;
}
return function(msg){
return (_402.test(_393(msg))&&infore.test(_395(msg)));
};
};
var _403=function(){
while(_389.firstChild){
_389.removeChild(_389.firstChild);
}
};
var _404=function(){
_391=[];
_403();
};
var _405=bind(function(){
if(this.closed){
return;
}
this.closed=true;
if(MochiKit.LoggingPane._loggingPane==this){
MochiKit.LoggingPane._loggingPane=null;
}
this.logger.removeListener(_390);
_381.loggingPane=null;
if(_376){
_381.parentNode.removeChild(_381);
}else{
this.win.close();
}
},this);
var _406=function(){
_403();
for(var i=0;i<_391.length;i++){
var msg=_391[i];
if(_392==null||_392(msg)){
_396(msg);
}
}
};
this.buildAndApplyFilter=function(){
_392=_401();
_406();
this.logger.removeListener(_390);
this.logger.addListener(_390,_392,_400);
};
var _407=function(){
_391=this.logger.getMessages();
_406();
};
var _408=function(_409){
_409=_409||window.event;
key=_409.which||_409.keyCode;
if(key==13){
this.buildAndApplyFilter();
}
};
var _410={"display":"block","position":"fixed","left":"0px","bottom":"0px","font":this.logFont,"width":"100%","height":"100%","backgroundColor":"white"};
if(_376){
_410.height="10em";
_410.borderTop="2px solid black";
}
_378(_381.style,_410);
doc.body.appendChild(_381);
_410={"width":"33%","display":"inline","font":this.logFont};
_379(_382,{"value":"FATAL|ERROR|WARNING|INFO|DEBUG","onkeypress":_408,"style":_410});
_381.appendChild(_382);
_379(_383,{"value":".*","onkeypress":_408,"style":_410});
_381.appendChild(_383);
_410={"width":"8%","display":"inline","font":this.logFont};
_384.appendChild(doc.createTextNode("Filter"));
_384.onclick=this.buildAndApplyFilter;
_378(_384.style,_410);
_381.appendChild(_384);
_385.appendChild(doc.createTextNode("Load"));
_385.onclick=_407;
_378(_385.style,_410);
_381.appendChild(_385);
_386.appendChild(doc.createTextNode("Clear"));
_386.onclick=_404;
_378(_386.style,_410);
_381.appendChild(_386);
_387.appendChild(doc.createTextNode("Close"));
_387.onclick=_405;
_378(_387.style,_410);
_381.appendChild(_387);
_381.style.display="block";
_388.style.overflow="auto";
_388.style.width="100%";
_389.style.whitespace="preserve";
_389.style.width="100%";
_389.style.height="8em";
_388.appendChild(_389);
_381.appendChild(_388);
this.buildAndApplyFilter();
_407();
if(_376){
this.win=undefined;
}else{
this.win=win;
}
this.inline=_376;
this.closePane=_405;
this.closed=false;
};
MochiKit.LoggingPane.LoggingPane.prototype={"logFont":"8pt Verdana,sans-serif","colorTable":{"ERROR":"red","FATAL":"darkred","WARNING":"blue","INFO":"black","DEBUG":"green"}};
MochiKit.LoggingPane.EXPORT_OK=["LoggingPane"];
MochiKit.LoggingPane.EXPORT=["createLoggingPane"];
MochiKit.LoggingPane.__new__=function(){
this.EXPORT_TAGS={":common":this.EXPORT,":all":MochiKit.Base.concat(this.EXPORT,this.EXPORT_OK)};
MochiKit.Base.nameFunctions(this);
MochiKit.LoggingPane._loggingPane=null;
};
MochiKit.LoggingPane.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.LoggingPane);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Color");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Color depends on MochiKit.Base";
}
if(typeof (MochiKit.Color)=="undefined"){
MochiKit.Color={};
}
MochiKit.Color.NAME="MochiKit.Color";
MochiKit.Color.VERSION="1.1";
MochiKit.Color.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Color.toString=function(){
return this.__repr__();
};
MochiKit.Color.Color=function(red,_412,blue,_414){
if(typeof (_414)=="undefined"||_414==null){
_414=1;
}
this.rgb={r:red,g:_412,b:blue,a:_414};
};
MochiKit.Color.Color.prototype={__class__:MochiKit.Color.Color,colorWithAlpha:function(_415){
var rgb=this.rgb;
var m=MochiKit.Color;
return m.Color.fromRGB(rgb.r,rgb.g,rgb.b,_415);
},colorWithHue:function(hue){
var hsl=this.asHSL();
hsl.h=hue;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithSaturation:function(_419){
var hsl=this.asHSL();
hsl.s=_419;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithLightness:function(_420){
var hsl=this.asHSL();
hsl.l=_420;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},darkerColorWithLevel:function(_421){
var hsl=this.asHSL();
hsl.l=Math.max(hsl.l-_421,0);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},lighterColorWithLevel:function(_422){
var hsl=this.asHSL();
Math.min(hsl.l+_422,1);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},blendedColor:function(_423,_424){
if(typeof (_424)=="undefined"||_424==null){
_424=0.5;
}
var sf=1-_424;
var s=this.rgb;
var d=_423.rgb;
var df=_424;
return MochiKit.Color.Color.fromRGB((s.r*sf)+(d.r*df),(s.g*sf)+(d.g*df),(s.b*sf)+(d.b*df),(s.a*sf)+(d.a*df));
},compareRGB:function(_427){
var a=this.asRGB();
var b=_427.asRGB();
return MochiKit.Base.compare([a.r,a.g,a.b,a.a],[b.r,b.g,b.b,b.a]);
},isLight:function(){
return this.asHSL().b>0.5;
},isDark:function(){
return (!this.isLight());
},toHSLString:function(){
var c=this.asHSL();
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hslString;
if(!rval){
var mid=(ccc(c.h,360).toFixed(0)+","+ccc(c.s,100).toPrecision(4)+"%"+","+ccc(c.l,100).toPrecision(4)+"%");
var a=c.a;
if(a>=1){
a=1;
rval="hsl("+mid+")";
}else{
if(a<=0){
a=0;
}
rval="hsla("+mid+","+a+")";
}
this._hslString=rval;
}
return rval;
},toRGBString:function(){
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._rgbString;
if(!rval){
var mid=(ccc(c.r,255).toFixed(0)+","+ccc(c.g,255).toFixed(0)+","+ccc(c.b,255).toFixed(0));
if(c.a!=1){
rval="rgba("+mid+","+c.a+")";
}else{
rval="rgb("+mid+")";
}
this._rgbString=rval;
}
return rval;
},asRGB:function(){
return MochiKit.Base.clone(this.rgb);
},toHexString:function(){
var m=MochiKit.Color;
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hexString;
if(!rval){
rval=("#"+m.toColorPart(ccc(c.r,255))+m.toColorPart(ccc(c.g,255))+m.toColorPart(ccc(c.b,255)));
this._hexString=rval;
}
return rval;
},asHSV:function(){
var hsv=this.hsv;
var c=this.rgb;
if(typeof (hsv)=="undefined"||hsv==null){
hsv=MochiKit.Color.rgbToHSV(this.rgb);
this.hsv=hsv;
}
return MochiKit.Base.clone(hsv);
},asHSL:function(){
var hsl=this.hsl;
var c=this.rgb;
if(typeof (hsl)=="undefined"||hsl==null){
hsl=MochiKit.Color.rgbToHSL(this.rgb);
this.hsl=hsl;
}
return MochiKit.Base.clone(hsl);
},toString:function(){
return this.toRGBString();
},repr:function(){
var c=this.rgb;
var col=[c.r,c.g,c.b,c.a];
return this.__class__.NAME+"("+col.join(", ")+")";
}};
MochiKit.Base.update(MochiKit.Color.Color,{fromRGB:function(red,_432,blue,_433){
var _434=MochiKit.Color.Color;
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_432=rgb.g;
blue=rgb.b;
if(typeof (rgb.a)=="undefined"){
_433=undefined;
}else{
_433=rgb.a;
}
}
return new _434(red,_432,blue,_433);
},fromHSL:function(hue,_435,_436,_437){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hslToRGB.apply(m,arguments));
},fromHSV:function(hue,_438,_439,_440){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hsvToRGB.apply(m,arguments));
},fromName:function(name){
var _441=MochiKit.Color.Color;
var _442=_441._namedColors[name.toLowerCase()];
if(typeof (_442)=="string"){
return _441.fromHexString(_442);
}else{
if(name=="transparent"){
return _441.transparentColor();
}
}
return null;
},fromString:function(_443){
var self=MochiKit.Color.Color;
var _444=_443.substr(0,3);
if(_444=="rgb"){
return self.fromRGBString(_443);
}else{
if(_444=="hsl"){
return self.fromHSLString(_443);
}else{
if(_443.charAt(0)=="#"){
return self.fromHexString(_443);
}
}
}
return self.fromName(_443);
},fromHexString:function(_445){
if(_445.charAt(0)=="#"){
_445=_445.substring(1);
}
var _446=[];
var i,hex;
if(_445.length==3){
for(i=0;i<3;i++){
hex=_445.substr(i,1);
_446.push(parseInt(hex+hex,16)/255);
}
}else{
for(i=0;i<6;i+=2){
hex=_445.substr(i,2);
_446.push(parseInt(hex,16)/255);
}
}
var _447=MochiKit.Color.Color;
return _447.fromRGB.apply(_447,_446);
},_fromColorString:function(pre,_449,_450,_451){
if(_451.indexOf(pre)==0){
_451=_451.substring(_451.indexOf("(",3)+1,_451.length-1);
}
var _452=_451.split(/\s*,\s*/);
var _453=[];
for(var i=0;i<_452.length;i++){
var c=_452[i];
var val;
var _454=c.substring(c.length-3);
if(c.charAt(c.length-1)=="%"){
val=0.01*parseFloat(c.substring(0,c.length-1));
}else{
if(_454=="deg"){
val=parseFloat(c)/360;
}else{
if(_454=="rad"){
val=parseFloat(c)/(Math.PI*2);
}else{
val=_450[i]*parseFloat(c);
}
}
}
_453.push(val);
}
return this[_449].apply(this,_453);
},fromBackground:function(elem){
var m=MochiKit.Color;
var d=MochiKit.DOM;
for(elem=d.getElement(elem);elem;elem=elem.parentNode){
var _455=d.computedStyle(elem,"backgroundColor","background-color");
if(!_455){
continue;
}
var _456=m.Color.fromString(_455);
if(!_456){
break;
}
if(_456.asRGB().a>0){
return _456;
}
}
return m.Color.whiteColor();
},namedColors:function(){
return MochiKit.Base.clone(MochiKit.Color.Color._namedColors);
}});
MochiKit.Base.update(MochiKit.Color,{clampColorComponent:function(v,_457){
v*=_457;
if(v<0){
return 0;
}else{
if(v>_457){
return _457;
}else{
return v;
}
}
},_hslValue:function(n1,n2,hue){
if(hue>6){
hue-=6;
}else{
if(hue<0){
hue+=6;
}
}
var val;
if(hue<1){
val=n1+(n2-n1)*hue;
}else{
if(hue<3){
val=n2;
}else{
if(hue<4){
val=n1+(n2-n1)*(4-hue);
}else{
val=n1;
}
}
}
return val;
},hsvToRGB:function(hue,_460,_461,_462){
if(arguments.length==1){
var hsv=hue;
hue=hsv.h;
_460=hsv.s;
_461=hsv.v;
_462=hsv.a;
}
var red;
var _463;
var blue;
if(_460==0){
red=0;
_463=0;
blue=0;
}else{
var i=Math.floor(hue*6);
var f=(hue*6)-i;
var p=_461*(1-_460);
var q=_461*(1-(_460*f));
var t=_461*(1-(_460*(1-f)));
switch(i){
case 1:
red=q;
_463=_461;
blue=p;
break;
case 2:
red=p;
_463=_461;
blue=t;
break;
case 3:
red=p;
_463=q;
blue=_461;
break;
case 4:
red=t;
_463=p;
blue=_461;
break;
case 5:
red=_461;
_463=p;
blue=q;
break;
case 6:
case 0:
red=_461;
_463=t;
blue=p;
break;
}
}
return {r:red,g:_463,b:blue,a:_462};
},hslToRGB:function(hue,_465,_466,_467){
if(arguments.length==1){
var hsl=hue;
hue=hsl.h;
_465=hsl.s;
_466=hsl.l;
_467=hsl.a;
}
var red;
var _468;
var blue;
if(_465==0){
red=_466;
_468=_466;
blue=_466;
}else{
var m2;
if(_466<=0.5){
m2=_466*(1+_465);
}else{
m2=_466+_465-(_466*_465);
}
var m1=(2*_466)-m2;
var f=MochiKit.Color._hslValue;
var h6=hue*6;
red=f(m1,m2,h6+2);
_468=f(m1,m2,h6);
blue=f(m1,m2,h6-2);
}
return {r:red,g:_468,b:blue,a:_467};
},rgbToHSV:function(red,_472,blue,_473){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_472=rgb.g;
blue=rgb.b;
_473=rgb.a;
}
var max=Math.max(Math.max(red,_472),blue);
var min=Math.min(Math.min(red,_472),blue);
var hue;
var _476;
var _477=max;
if(min==max){
hue=0;
_476=0;
}else{
var _478=(max-min);
_476=_478/max;
if(red==max){
hue=(_472-blue)/_478;
}else{
if(_472==max){
hue=2+((blue-red)/_478);
}else{
hue=4+((red-_472)/_478);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_476,v:_477,a:_473};
},rgbToHSL:function(red,_479,blue,_480){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_479=rgb.g;
blue=rgb.b;
_480=rgb.a;
}
var max=Math.max(red,Math.max(_479,blue));
var min=Math.min(red,Math.min(_479,blue));
var hue;
var _481;
var _482=(max+min)/2;
var _483=max-min;
if(_483==0){
hue=0;
_481=0;
}else{
if(_482<=0.5){
_481=_483/(max+min);
}else{
_481=_483/(2-max-min);
}
if(red==max){
hue=(_479-blue)/_483;
}else{
if(_479==max){
hue=2+((blue-red)/_483);
}else{
hue=4+((red-_479)/_483);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_481,l:_482,a:_480};
},toColorPart:function(num){
var _484=Math.round(num).toString(16);
if(num<16){
return "0"+_484;
}
return _484;
},__new__:function(){
var m=MochiKit.Base;
this.Color.fromRGBString=m.bind(this.Color._fromColorString,this.Color,"rgb","fromRGB",[1/255,1/255,1/255,1]);
this.Color.fromHSLString=m.bind(this.Color._fromColorString,this.Color,"hsl","fromHSL",[1/360,0.01,0.01,1]);
var _485=1/3;
var _486={black:[0,0,0],blue:[0,0,1],brown:[0.6,0.4,0.2],cyan:[0,1,1],darkGray:[_485,_485,_485],gray:[0.5,0.5,0.5],green:[0,1,0],lightGray:[2*_485,2*_485,2*_485],magenta:[1,0,1],orange:[1,0.5,0],purple:[0.5,0,0.5],red:[1,0,0],transparent:[0,0,0,0],white:[1,1,1],yellow:[1,1,0]};
var _487=function(name,r,g,b,a){
var rval=this.fromRGB(r,g,b,a);
this[name]=function(){
return rval;
};
return rval;
};
for(var k in _486){
var name=k+"Color";
var _490=m.concat([_487,this.Color,name],_486[k]);
this.Color[name]=m.bind.apply(null,_490);
}
var _491=function(){
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof Color)){
return false;
}
}
return true;
};
var _492=function(a,b){
return a.compareRGB(b);
};
m.nameFunctions(this);
m.registerComparator(this.Color.NAME,_491,_492);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
}});
MochiKit.Color.EXPORT=["Color"];
MochiKit.Color.EXPORT_OK=["clampColorComponent","rgbToHSL","hslToRGB","rgbToHSV","hsvToRGB","toColorPart"];
MochiKit.Color.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Color);
MochiKit.Color.Color._namedColors={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"};
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Visual");
dojo.require("MochiKit.Base");
dojo.require("MochiKit.DOM");
dojo.require("MochiKit.Color");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
JSAN.use("MochiKit.DOM",[]);
JSAN.use("MochiKit.Color",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"||typeof (MochiKit.DOM)=="undefined"||typeof (MochiKit.Color)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Visual depends on MochiKit.Base, MochiKit.DOM and MochiKit.Color!";
}
if(typeof (MochiKit.Visual)=="undefined"){
MochiKit.Visual={};
}
MochiKit.Visual.NAME="MochiKit.Visual";
MochiKit.Visual.VERSION="1.1";
MochiKit.Visual.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Visual.toString=function(){
return this.__repr__();
};
MochiKit.Visual._RoundCorners=function(e,_493){
e=MochiKit.DOM.getElement(e);
this._setOptions(_493);
if(this.options.__unstable__wrapElement){
e=this._doWrap(e);
}
var _494=this.options.color;
var C=MochiKit.Color.Color;
if(this.options.color=="fromElement"){
_494=C.fromBackground(e);
}else{
if(!(_494 instanceof C)){
_494=C.fromString(_494);
}
}
this.isTransparent=(_494.asRGB().a<=0);
var _496=this.options.bgColor;
if(this.options.bgColor=="fromParent"){
_496=C.fromBackground(e.offsetParent);
}else{
if(!(_496 instanceof C)){
_496=C.fromString(_496);
}
}
this._roundCornersImpl(e,_494,_496);
};
MochiKit.Visual._RoundCorners.prototype={_doWrap:function(e){
var _497=e.parentNode;
var doc=MochiKit.DOM.currentDocument();
if(typeof (doc.defaultView)=="undefined"||doc.defaultView==null){
return e;
}
var _498=doc.defaultView.getComputedStyle(e,null);
if(typeof (_498)=="undefined"||_498==null){
return e;
}
var _499=MochiKit.DOM.DIV({"style":{display:"block",marginTop:_498.getPropertyValue("padding-top"),marginRight:_498.getPropertyValue("padding-right"),marginBottom:_498.getPropertyValue("padding-bottom"),marginLeft:_498.getPropertyValue("padding-left"),padding:"0px"}});
_499.innerHTML=e.innerHTML;
e.innerHTML="";
e.appendChild(_499);
return e;
},_roundCornersImpl:function(e,_500,_501){
if(this.options.border){
this._renderBorder(e,_501);
}
if(this._isTopRounded()){
this._roundTopCorners(e,_500,_501);
}
if(this._isBottomRounded()){
this._roundBottomCorners(e,_500,_501);
}
},_renderBorder:function(el,_502){
var _503="1px solid "+this._borderColor(_502);
var _504="border-left: "+_503;
var _505="border-right: "+_503;
var _506="style='"+_504+";"+_505+"'";
el.innerHTML="<div "+_506+">"+el.innerHTML+"</div>";
},_roundTopCorners:function(el,_507,_508){
var _509=this._createCorner(_508);
for(var i=0;i<this.options.numSlices;i++){
_509.appendChild(this._createCornerSlice(_507,_508,i,"top"));
}
el.style.paddingTop=0;
el.insertBefore(_509,el.firstChild);
},_roundBottomCorners:function(el,_510,_511){
var _512=this._createCorner(_511);
for(var i=(this.options.numSlices-1);i>=0;i--){
_512.appendChild(this._createCornerSlice(_510,_511,i,"bottom"));
}
el.style.paddingBottom=0;
el.appendChild(_512);
},_createCorner:function(_513){
var dom=MochiKit.DOM;
return dom.DIV({style:{backgroundColor:_513.toString()}});
},_createCornerSlice:function(_514,_515,n,_516){
var _517=MochiKit.DOM.SPAN();
var _518=_517.style;
_518.backgroundColor=_514.toString();
_518.display="block";
_518.height="1px";
_518.overflow="hidden";
_518.fontSize="1px";
var _519=this._borderColor(_514,_515);
if(this.options.border&&n==0){
_518.borderTopStyle="solid";
_518.borderTopWidth="1px";
_518.borderLeftWidth="0px";
_518.borderRightWidth="0px";
_518.borderBottomWidth="0px";
_518.height="0px";
_518.borderColor=_519.toString();
}else{
if(_519){
_518.borderColor=_519.toString();
_518.borderStyle="solid";
_518.borderWidth="0px 1px";
}
}
if(!this.options.compact&&(n==(this.options.numSlices-1))){
_518.height="2px";
}
this._setMargin(_517,n,_516);
this._setBorder(_517,n,_516);
return _517;
},_setOptions:function(_520){
this.options={corners:"all",color:"fromElement",bgColor:"fromParent",blend:true,border:false,compact:false,__unstable__wrapElement:false};
MochiKit.Base.update(this.options,_520);
this.options.numSlices=(this.options.compact?2:4);
},_whichSideTop:function(){
var _521=this.options.corners;
if(this._hasString(_521,"all","top")){
return "";
}
var _522=(_521.indexOf("tl")!=-1);
var _523=(_521.indexOf("tr")!=-1);
if(_522&&_523){
return "";
}
if(_522){
return "left";
}
if(_523){
return "right";
}
return "";
},_whichSideBottom:function(){
var _524=this.options.corners;
if(this._hasString(_524,"all","bottom")){
return "";
}
var _525=(_524.indexOf("bl")!=-1);
var _526=(_524.indexOf("br")!=-1);
if(_525&&_526){
return "";
}
if(_525){
return "left";
}
if(_526){
return "right";
}
return "";
},_borderColor:function(_527,_528){
if(_527=="transparent"){
return _528;
}else{
if(this.options.border){
return this.options.border;
}else{
if(this.options.blend){
return _528.blendedColor(_527);
}
}
}
return "";
},_setMargin:function(el,n,_529){
var _530=this._marginSize(n)+"px";
var _531=(_529=="top"?this._whichSideTop():this._whichSideBottom());
var _532=el.style;
if(_531=="left"){
_532.marginLeft=_530;
_532.marginRight="0px";
}else{
if(_531=="right"){
_532.marginRight=_530;
_532.marginLeft="0px";
}else{
_532.marginLeft=_530;
_532.marginRight=_530;
}
}
},_setBorder:function(el,n,_533){
var _534=this._borderSize(n)+"px";
var _535=(_533=="top"?this._whichSideTop():this._whichSideBottom());
var _536=el.style;
if(_535=="left"){
_536.borderLeftWidth=_534;
_536.borderRightWidth="0px";
}else{
if(_535=="right"){
_536.borderRightWidth=_534;
_536.borderLeftWidth="0px";
}else{
_536.borderLeftWidth=_534;
_536.borderRightWidth=_534;
}
}
},_marginSize:function(n){
if(this.isTransparent){
return 0;
}
var o=this.options;
if(o.compact&&o.blend){
var _537=[1,0];
return _537[n];
}else{
if(o.compact){
var _538=[2,1];
return _538[n];
}else{
if(o.blend){
var _539=[3,2,1,0];
return _539[n];
}else{
var _540=[5,3,2,1];
return _540[n];
}
}
}
},_borderSize:function(n){
var o=this.options;
var _541;
if(o.compact&&(o.blend||this.isTransparent)){
return 1;
}else{
if(o.compact){
_541=[1,0];
}else{
if(o.blend){
_541=[2,1,1,1];
}else{
if(o.border){
_541=[0,2,0,0];
}else{
if(this.isTransparent){
_541=[5,3,2,1];
}else{
return 0;
}
}
}
}
}
return _541[n];
},_hasString:function(str){
for(var i=1;i<arguments.length;i++){
if(str.indexOf(arguments[i])!=-1){
return true;
}
}
return false;
},_isTopRounded:function(){
return this._hasString(this.options.corners,"all","top","tl","tr");
},_isBottomRounded:function(){
return this._hasString(this.options.corners,"all","bottom","bl","br");
},_hasSingleTextChild:function(el){
return (el.childNodes.length==1&&el.childNodes[0].nodeType==3);
}};
MochiKit.Visual.roundElement=function(e,_542){
new MochiKit.Visual._RoundCorners(e,_542);
};
MochiKit.Visual.roundClass=function(_543,_544,_545){
var _546=MochiKit.DOM.getElementsByTagAndClassName(_543,_544);
for(var i=0;i<_546.length;i++){
MochiKit.Visual.roundElement(_546[i],_545);
}
};
MochiKit.Visual.Color=MochiKit.Color.Color;
MochiKit.Visual.getElementsComputedStyle=MochiKit.DOM.computedStyle;
MochiKit.Visual.__new__=function(){
var m=MochiKit.Base;
m.nameFunctions(this);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
};
MochiKit.Visual.EXPORT=["roundElement","roundClass"];
MochiKit.Visual.EXPORT_OK=[];
MochiKit.Visual.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Visual);
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.MochiKit)=="undefined"){
MochiKit.MochiKit={};
}
MochiKit.MochiKit.NAME="MochiKit.MochiKit";
MochiKit.MochiKit.VERSION="1.1";
MochiKit.MochiKit.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.MochiKit.toString=function(){
return this.__repr__();
};
MochiKit.MochiKit.SUBMODULES=["Base","Iter","Logging","DateTime","Format","Async","DOM","LoggingPane","Color","Visual"];
if(typeof (JSAN)!="undefined"||typeof (dojo)!="undefined"){
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.MochiKit");
dojo.require("MochiKit.*");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
JSAN.use("MochiKit.Iter",[]);
JSAN.use("MochiKit.Logging",[]);
JSAN.use("MochiKit.DateTime",[]);
JSAN.use("MochiKit.Format",[]);
JSAN.use("MochiKit.Async",[]);
JSAN.use("MochiKit.DOM",[]);
JSAN.use("MochiKit.LoggingPane",[]);
JSAN.use("MochiKit.Color",[]);
JSAN.use("MochiKit.Visual",[]);
}
(function(){
var _547=MochiKit.Base.extend;
var self=MochiKit.MochiKit;
var _548=self.SUBMODULES;
var _549=[];
var _550=[];
var _551={};
var i,k,m,all;
for(i=0;i<_548.length;i++){
m=MochiKit[_548[i]];
_547(_549,m.EXPORT);
_547(_550,m.EXPORT_OK);
for(k in m.EXPORT_TAGS){
_551[k]=_547(_551[k],m.EXPORT_TAGS[k]);
}
all=m.EXPORT_TAGS[":all"];
if(!all){
all=_547(null,m.EXPORT,m.EXPORT_OK);
}
for(i=0;i<all.length;i++){
k=all[i];
self[k]=m[k];
}
}
self.EXPORT=_549;
self.EXPORT_OK=_550;
self.EXPORT_TAGS=_551;
}());
}else{
if(typeof (MochiKit.__compat__)=="undefined"){
MochiKit.__compat__=true;
}
(function(){
var _552=document.getElementsByTagName("script");
var _553="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
var base=null;
var _554=null;
var _555={};
var i;
for(i=0;i<_552.length;i++){
var src=_552[i].getAttribute("src");
if(!src){
continue;
}
_555[src]=true;
if(src.match(/MochiKit.js$/)){
base=src.substring(0,src.lastIndexOf("MochiKit.js"));
_554=_552[i];
}
}
if(base==null){
return;
}
var _556=MochiKit.MochiKit.SUBMODULES;
for(i=0;i<_556.length;i++){
if(MochiKit[_556[i]]){
continue;
}
var uri=base+_556[i]+".js";
if(uri in _555){
continue;
}
if(document.documentElement&&document.documentElement.namespaceURI==_553){
var s=document.createElementNS(_553,"script");
s.setAttribute("id","MochiKit_"+base+_556[i]);
s.setAttribute("src",uri);
s.setAttribute("type","application/x-javascript");
_554.parentNode.appendChild(s);
}else{
var tag="<"+"script src=\""+uri+"\" type=\"text/javascript\""+">"+"<"+"/script"+">";
document.write(tag);
}
}
})();
}


