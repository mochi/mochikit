/***

    MochiKit.MochiKit 1.5 : PACKED VERSION

    THIS FILE IS AUTOMATICALLY GENERATED.  If creating patches, please
    diff against the source tree, not this file.

    See <http://mochikit.com/> for documentation, downloads, license, etc.

    (c) 2005 Bob Ippolito.  All rights Reserved.

***/

if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.__export__)=="undefined"){
MochiKit.__export__=true;
}
if(typeof (MochiKit.Base)=="undefined"){
MochiKit.Base={};
}
MochiKit.Base._module=function(_1,_2,_3){
if(!(_1 in MochiKit)){
MochiKit[_1]={};
}
var _4=MochiKit[_1];
_4.NAME="MochiKit."+_1;
_4.VERSION=_2;
_4.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
_4.toString=function(){
return this.__repr__();
};
for(var i=0;i<_3.length;i++){
if(!(_3[i] in MochiKit)){
throw "MochiKit."+_1+" depends on MochiKit."+_3[i]+"!";
}
}
};
MochiKit.Base._module("Base","1.5",[]);
MochiKit.Base.update=function(_6,_7){
if(_6===null||_6===undefined){
_6={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
_6[k]=o[k];
}
}
}
return _6;
};
MochiKit.Base.update(MochiKit.Base,{camelize:function(_b){
var _c=_b.split("-");
var cc=_c[0];
for(var i=1;i<_c.length;i++){
cc+=_c[i].charAt(0).toUpperCase()+_c[i].substring(1);
}
return cc;
},counter:function(n){
if(arguments.length===0){
n=1;
}
return function(){
return n++;
};
},clone:function(obj){
var me=arguments.callee;
if(arguments.length==1){
me.prototype=obj;
return new me();
}
},_flattenArray:function(res,lst){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(o instanceof Array){
arguments.callee(res,o);
}else{
res.push(o);
}
}
return res;
},flattenArray:function(lst){
return MochiKit.Base._flattenArray([],lst);
},flattenArguments:function(lst){
var res=[];
var m=MochiKit.Base;
var _1a=m.extend(null,arguments);
while(_1a.length){
var o=_1a.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
for(var i=o.length-1;i>=0;i--){
_1a.unshift(o[i]);
}
}else{
res.push(o);
}
}
return res;
},extend:function(_1d,obj,_1f){
if(!_1f){
_1f=0;
}
if(obj){
var l=obj.length;
if(typeof (l)!="number"){
if(typeof (MochiKit.Iter)!="undefined"){
obj=MochiKit.Iter.list(obj);
l=obj.length;
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(!_1d){
_1d=[];
}
for(var i=_1f;i<l;i++){
_1d.push(obj[i]);
}
}
return _1d;
},updatetree:function(_22,obj){
if(_22===null||_22===undefined){
_22={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
var v=o[k];
if(typeof (_22[k])=="object"&&typeof (v)=="object"){
arguments.callee(_22[k],v);
}else{
_22[k]=v;
}
}
}
}
return _22;
},setdefault:function(_28,obj){
if(_28===null||_28===undefined){
_28={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
for(var k in o){
if(!(k in _28)){
_28[k]=o[k];
}
}
}
return _28;
},keys:function(obj){
var _2e=[];
for(var _2f in obj){
_2e.push(_2f);
}
return _2e;
},values:function(obj){
var _31=[];
for(var _32 in obj){
_31.push(obj[_32]);
}
return _31;
},items:function(obj){
var _34=[];
var e;
for(var _36 in obj){
var v;
try{
v=obj[_36];
}
catch(e){
continue;
}
_34.push([_36,v]);
}
return _34;
},_newNamedError:function(_38,_39,_3a){
_3a.prototype=new MochiKit.Base.NamedError(_38.NAME+"."+_39);
_38[_39]=_3a;
},operator:{truth:function(a){
return !!a;
},lognot:function(a){
return !a;
},identity:function(a){
return a;
},not:function(a){
return ~a;
},neg:function(a){
return -a;
},add:function(a,b){
return a+b;
},sub:function(a,b){
return a-b;
},div:function(a,b){
return a/b;
},mod:function(a,b){
return a%b;
},mul:function(a,b){
return a*b;
},and:function(a,b){
return a&b;
},or:function(a,b){
return a|b;
},xor:function(a,b){
return a^b;
},lshift:function(a,b){
return a<<b;
},rshift:function(a,b){
return a>>b;
},zrshift:function(a,b){
return a>>>b;
},eq:function(a,b){
return a==b;
},ne:function(a,b){
return a!=b;
},gt:function(a,b){
return a>b;
},ge:function(a,b){
return a>=b;
},lt:function(a,b){
return a<b;
},le:function(a,b){
return a<=b;
},seq:function(a,b){
return a===b;
},sne:function(a,b){
return a!==b;
},ceq:function(a,b){
return MochiKit.Base.compare(a,b)===0;
},cne:function(a,b){
return MochiKit.Base.compare(a,b)!==0;
},cgt:function(a,b){
return MochiKit.Base.compare(a,b)==1;
},cge:function(a,b){
return MochiKit.Base.compare(a,b)!=-1;
},clt:function(a,b){
return MochiKit.Base.compare(a,b)==-1;
},cle:function(a,b){
return MochiKit.Base.compare(a,b)!=1;
},logand:function(a,b){
return a&&b;
},logor:function(a,b){
return a||b;
},contains:function(a,b){
return b in a;
}},forwardCall:function(_78){
return function(){
return this[_78].apply(this,arguments);
};
},itemgetter:function(_79){
return function(arg){
return arg[_79];
};
},typeMatcher:function(){
var _7b={};
for(var i=0;i<arguments.length;i++){
var typ=arguments[i];
_7b[typ]=typ;
}
return function(){
for(var i=0;i<arguments.length;i++){
if(!(typeof (arguments[i]) in _7b)){
return false;
}
}
return true;
};
},isNull:function(){
for(var i=0;i<arguments.length;i++){
if(arguments[i]!==null){
return false;
}
}
return true;
},isUndefinedOrNull:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(typeof (o)=="undefined"||o===null)){
return false;
}
}
return true;
},isEmpty:function(obj){
return !MochiKit.Base.isNotEmpty.apply(this,arguments);
},isNotEmpty:function(obj){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(o&&o.length)){
return false;
}
}
return true;
},isArrayLike:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
var typ=typeof (o);
if((typ!="object"&&!(typ=="function"&&typeof (o.item)=="function"))||o===null||typeof (o.length)!="number"||o.nodeType===3||o.nodeType===4){
return false;
}
}
return true;
},isDateLike:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="object"||o===null||typeof (o.getTime)!="function"){
return false;
}
}
return true;
},xmap:function(fn){
if(fn===null){
return MochiKit.Base.extend(null,arguments,1);
}
var _8c=[];
for(var i=1;i<arguments.length;i++){
_8c.push(fn(arguments[i]));
}
return _8c;
},map:function(fn,lst){
var m=MochiKit.Base;
var itr=MochiKit.Iter;
var _92=m.isArrayLike;
if(arguments.length<=2){
if(!_92(lst)){
if(itr){
lst=itr.list(lst);
if(fn===null){
return lst;
}
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
return m.extend(null,lst);
}
var _93=[];
for(var i=0;i<lst.length;i++){
_93.push(fn(lst[i]));
}
return _93;
}else{
if(fn===null){
fn=Array;
}
var _95=null;
for(i=1;i<arguments.length;i++){
if(!_92(arguments[i])){
if(itr){
return itr.list(itr.imap.apply(null,arguments));
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
var l=arguments[i].length;
if(_95===null||_95>l){
_95=l;
}
}
_93=[];
for(i=0;i<_95;i++){
var _97=[];
for(var j=1;j<arguments.length;j++){
_97.push(arguments[j][i]);
}
_93.push(fn.apply(this,_97));
}
return _93;
}
},xfilter:function(fn){
var _9a=[];
if(fn===null){
fn=MochiKit.Base.operator.truth;
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(fn(o)){
_9a.push(o);
}
}
return _9a;
},filter:function(fn,lst,_9f){
var _a0=[];
var m=MochiKit.Base;
if(!m.isArrayLike(lst)){
if(MochiKit.Iter){
lst=MochiKit.Iter.list(lst);
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
fn=m.operator.truth;
}
if(typeof (Array.prototype.filter)=="function"){
return Array.prototype.filter.call(lst,fn,_9f);
}else{
if(typeof (_9f)=="undefined"||_9f===null){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(fn(o)){
_a0.push(o);
}
}
}else{
for(i=0;i<lst.length;i++){
o=lst[i];
if(fn.call(_9f,o)){
_a0.push(o);
}
}
}
}
return _a0;
},_wrapDumbFunction:function(_a4){
return function(){
switch(arguments.length){
case 0:
return _a4();
case 1:
return _a4(arguments[0]);
case 2:
return _a4(arguments[0],arguments[1]);
case 3:
return _a4(arguments[0],arguments[1],arguments[2]);
}
var _a5=[];
for(var i=0;i<arguments.length;i++){
_a5.push("arguments["+i+"]");
}
return eval("(func("+_a5.join(",")+"))");
};
},methodcaller:function(_a7){
var _a8=MochiKit.Base.extend(null,arguments,1);
if(typeof (_a7)=="function"){
return function(obj){
return _a7.apply(obj,_a8);
};
}else{
return function(obj){
return obj[_a7].apply(obj,_a8);
};
}
},method:function(_ab,_ac){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([_ac,_ab],arguments,2));
},compose:function(f1,f2){
var _b0=[];
var m=MochiKit.Base;
if(arguments.length===0){
throw new TypeError("compose() requires at least one argument");
}
for(var i=0;i<arguments.length;i++){
var fn=arguments[i];
if(typeof (fn)!="function"){
throw new TypeError(m.repr(fn)+" is not a function");
}
_b0.push(fn);
}
return function(){
var _b4=arguments;
for(var i=_b0.length-1;i>=0;i--){
_b4=[_b0[i].apply(this,_b4)];
}
return _b4[0];
};
},bind:function(_b6,_b7){
if(typeof (_b6)=="string"){
_b6=_b7[_b6];
}
var _b8=_b6.im_func;
var _b9=_b6.im_preargs;
var _ba=_b6.im_self;
var m=MochiKit.Base;
if(typeof (_b6)=="function"&&typeof (_b6.apply)=="undefined"){
_b6=m._wrapDumbFunction(_b6);
}
if(typeof (_b8)!="function"){
_b8=_b6;
}
if(typeof (_b7)!="undefined"){
_ba=_b7;
}
if(typeof (_b9)=="undefined"){
_b9=[];
}else{
_b9=_b9.slice();
}
m.extend(_b9,arguments,2);
var _bc=function(){
var _bd=arguments;
var me=arguments.callee;
if(me.im_preargs.length>0){
_bd=m.concat(me.im_preargs,_bd);
}
var _bf=me.im_self;
if(!_bf){
_bf=this;
}
return me.im_func.apply(_bf,_bd);
};
_bc.im_self=_ba;
_bc.im_func=_b8;
_bc.im_preargs=_b9;
return _bc;
},bindLate:function(_c0,_c1){
var m=MochiKit.Base;
if(typeof (_c0)!="string"){
return m.bind.apply(this,arguments);
}
var _c3=m.extend([],arguments,2);
var _c4=function(){
var _c5=arguments;
var me=arguments.callee;
if(me.im_preargs.length>0){
_c5=m.concat(me.im_preargs,_c5);
}
var _c7=me.im_self;
if(!_c7){
_c7=this;
}
return _c7[me.im_func].apply(_c7,_c5);
};
_c4.im_self=_c1;
_c4.im_func=_c0;
_c4.im_preargs=_c3;
return _c4;
},bindMethods:function(_c8){
var _c9=MochiKit.Base.bind;
for(var k in _c8){
var _cb=_c8[k];
if(typeof (_cb)=="function"){
_c8[k]=_c9(_cb,_c8);
}
}
},registerComparator:function(_cc,_cd,_ce,_cf){
MochiKit.Base.comparatorRegistry.register(_cc,_cd,_ce,_cf);
},_primitives:{"boolean":true,"string":true,"number":true},compare:function(a,b){
if(a==b){
return 0;
}
var _d2=(typeof (a)=="undefined"||a===null);
var _d3=(typeof (b)=="undefined"||b===null);
if(_d2&&_d3){
return 0;
}else{
if(_d2){
return -1;
}else{
if(_d3){
return 1;
}
}
}
var m=MochiKit.Base;
var _d5=m._primitives;
if(!(typeof (a) in _d5&&typeof (b) in _d5)){
try{
return m.comparatorRegistry.match(a,b);
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
}
if(a<b){
return -1;
}else{
if(a>b){
return 1;
}
}
var _d6=m.repr;
throw new TypeError(_d6(a)+" and "+_d6(b)+" can not be compared");
},compareDateLike:function(a,b){
return MochiKit.Base.compare(a.getTime(),b.getTime());
},compareArrayLike:function(a,b){
var _db=MochiKit.Base.compare;
var _dc=a.length;
var _dd=0;
if(_dc>b.length){
_dd=1;
_dc=b.length;
}else{
if(_dc<b.length){
_dd=-1;
}
}
for(var i=0;i<_dc;i++){
var cmp=_db(a[i],b[i]);
if(cmp){
return cmp;
}
}
return _dd;
},registerRepr:function(_e0,_e1,_e2,_e3){
MochiKit.Base.reprRegistry.register(_e0,_e1,_e2,_e3);
},repr:function(o){
if(typeof (o)=="undefined"){
return "undefined";
}else{
if(o===null){
return "null";
}
}
try{
if(typeof (o.__repr__)=="function"){
return o.__repr__();
}else{
if(typeof (o.repr)=="function"&&o.repr!=arguments.callee){
return o.repr();
}
}
return MochiKit.Base.reprRegistry.match(o);
}
catch(e){
if(typeof (o.NAME)=="string"&&(o.toString==Function.prototype.toString||o.toString==Object.prototype.toString)){
return o.NAME;
}
}
try{
var _e5=(o+"");
}
catch(e){
return "["+typeof (o)+"]";
}
if(typeof (o)=="function"){
_e5=_e5.replace(/^\s+/,"").replace(/\s+/g," ");
_e5=_e5.replace(/,(\S)/,", $1");
var idx=_e5.indexOf("{");
if(idx!=-1){
_e5=_e5.substr(0,idx)+"{...}";
}
}
return _e5;
},reprArrayLike:function(o){
var m=MochiKit.Base;
return "["+m.map(m.repr,o).join(", ")+"]";
},reprString:function(o){
return ("\""+o.replace(/(["\\])/g,"\\$1")+"\"").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\v]/g,"\\v").replace(/[\r]/g,"\\r");
},reprNumber:function(o){
return o+"";
},registerJSON:function(_eb,_ec,_ed,_ee){
MochiKit.Base.jsonRegistry.register(_eb,_ec,_ed,_ee);
},evalJSON:function(){
return eval("("+MochiKit.Base._filterJSON(arguments[0])+")");
},_filterJSON:function(s){
var m=s.match(/^\s*\/\*(.*)\*\/\s*$/);
if(m){
return m[1];
}
return s;
},serializeJSON:function(o){
var _f2=typeof (o);
if(_f2=="number"||_f2=="boolean"){
return o+"";
}else{
if(o===null){
return "null";
}else{
if(_f2=="string"){
var res="";
for(var i=0;i<o.length;i++){
var c=o.charAt(i);
if(c=="\""){
res+="\\\"";
}else{
if(c=="\\"){
res+="\\\\";
}else{
if(c=="\b"){
res+="\\b";
}else{
if(c=="\f"){
res+="\\f";
}else{
if(c=="\n"){
res+="\\n";
}else{
if(c=="\r"){
res+="\\r";
}else{
if(c=="\t"){
res+="\\t";
}else{
if(o.charCodeAt(i)<=31){
var hex=o.charCodeAt(i).toString(16);
if(hex.length<2){
hex="0"+hex;
}
res+="\\u00"+hex.toUpperCase();
}else{
res+=c;
}
}
}
}
}
}
}
}
}
return "\""+res+"\"";
}
}
}
var me=arguments.callee;
var _f8;
if(typeof (o.__json__)=="function"){
_f8=o.__json__();
if(o!==_f8){
return me(_f8);
}
}
if(typeof (o.json)=="function"){
_f8=o.json();
if(o!==_f8){
return me(_f8);
}
}
if(_f2!="function"&&typeof (o.length)=="number"){
var res=[];
for(var i=0;i<o.length;i++){
var val=me(o[i]);
if(typeof (val)!="string"){
continue;
}
res.push(val);
}
return "["+res.join(", ")+"]";
}
var m=MochiKit.Base;
try{
_f8=m.jsonRegistry.match(o);
if(o!==_f8){
return me(_f8);
}
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
if(_f2=="undefined"){
throw new TypeError("undefined can not be serialized as JSON");
}
if(_f2=="function"){
return null;
}
res=[];
for(var k in o){
var _fc;
if(typeof (k)=="number"){
_fc="\""+k+"\"";
}else{
if(typeof (k)=="string"){
_fc=me(k);
}else{
continue;
}
}
val=me(o[k]);
if(typeof (val)!="string"){
continue;
}
res.push(_fc+":"+val);
}
return "{"+res.join(", ")+"}";
},objEqual:function(a,b){
return (MochiKit.Base.compare(a,b)===0);
},arrayEqual:function(_ff,arr){
if(_ff.length!=arr.length){
return false;
}
return (MochiKit.Base.compare(_ff,arr)===0);
},concat:function(){
var rval=[];
var _102=MochiKit.Base.extend;
for(var i=0;i<arguments.length;i++){
_102(rval,arguments[i]);
}
return rval;
},keyComparator:function(key){
var m=MochiKit.Base;
var _106=m.compare;
if(arguments.length==1){
return function(a,b){
return _106(a[key],b[key]);
};
}
var _109=m.extend(null,arguments);
return function(a,b){
var rval=0;
for(var i=0;(rval===0)&&(i<_109.length);i++){
var key=_109[i];
rval=_106(a[key],b[key]);
}
return rval;
};
},reverseKeyComparator:function(key){
var _110=MochiKit.Base.keyComparator.apply(this,arguments);
return function(a,b){
return _110(b,a);
};
},partial:function(func){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([func,undefined],arguments,1));
},listMinMax:function(_115,lst){
if(lst.length===0){
return null;
}
var cur=lst[0];
var _118=MochiKit.Base.compare;
for(var i=1;i<lst.length;i++){
var o=lst[i];
if(_118(o,cur)==_115){
cur=o;
}
}
return cur;
},objMax:function(){
return MochiKit.Base.listMinMax(1,arguments);
},objMin:function(){
return MochiKit.Base.listMinMax(-1,arguments);
},findIdentical:function(lst,_11c,_11d,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_11d)=="undefined"||_11d===null){
_11d=0;
}
for(var i=_11d;i<end;i++){
if(lst[i]===_11c){
return i;
}
}
return -1;
},mean:function(){
var sum=0;
var m=MochiKit.Base;
var args=m.extend(null,arguments);
var _123=args.length;
while(args.length){
var o=args.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
_123+=o.length-1;
for(var i=o.length-1;i>=0;i--){
sum+=o[i];
}
}else{
sum+=o;
}
}
if(_123<=0){
throw new TypeError("mean() requires at least one argument");
}
return sum/_123;
},median:function(){
var data=MochiKit.Base.flattenArguments(arguments);
if(data.length===0){
throw new TypeError("median() requires at least one argument");
}
data.sort(compare);
if(data.length%2==0){
var _127=data.length/2;
return (data[_127]+data[_127-1])/2;
}else{
return data[(data.length-1)/2];
}
},findValue:function(lst,_129,_12a,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_12a)=="undefined"||_12a===null){
_12a=0;
}
var cmp=MochiKit.Base.compare;
for(var i=_12a;i<end;i++){
if(cmp(lst[i],_129)===0){
return i;
}
}
return -1;
},nodeWalk:function(node,_12f){
var _130=[node];
var _131=MochiKit.Base.extend;
while(_130.length){
var res=_12f(_130.shift());
if(res){
_131(_130,res);
}
}
},nameFunctions:function(_133){
var base=_133.NAME;
if(typeof (base)=="undefined"){
base="";
}else{
base=base+".";
}
for(var name in _133){
var o=_133[name];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+name;
}
catch(e){
}
}
}
},queryString:function(_137,_138){
if(typeof (MochiKit.DOM)!="undefined"&&arguments.length==1&&(typeof (_137)=="string"||(typeof (_137.nodeType)!="undefined"&&_137.nodeType>0))){
var kv=MochiKit.DOM.formContents(_137);
_137=kv[0];
_138=kv[1];
}else{
if(arguments.length==1){
if(typeof (_137.length)=="number"&&_137.length==2){
return arguments.callee(_137[0],_137[1]);
}
var o=_137;
_137=[];
_138=[];
for(var k in o){
var v=o[k];
if(typeof (v)=="function"){
continue;
}else{
if(MochiKit.Base.isArrayLike(v)){
for(var i=0;i<v.length;i++){
_137.push(k);
_138.push(v[i]);
}
}else{
_137.push(k);
_138.push(v);
}
}
}
}
}
var rval=[];
var len=Math.min(_137.length,_138.length);
var _140=MochiKit.Base.urlEncode;
for(var i=0;i<len;i++){
v=_138[i];
if(typeof (v)!="undefined"&&v!==null){
rval.push(_140(_137[i])+"="+_140(v));
}
}
return rval.join("&");
},parseQueryString:function(_141,_142){
var qstr=(_141.charAt(0)=="?")?_141.substring(1):_141;
var _144=qstr.replace(/\+/g,"%20").split(/\&amp\;|\&\#38\;|\&#x26;|\&/);
var o={};
var _146;
if(typeof (decodeURIComponent)!="undefined"){
_146=decodeURIComponent;
}else{
_146=unescape;
}
if(_142){
for(var i=0;i<_144.length;i++){
var pair=_144[i].split("=");
var name=_146(pair.shift());
if(!name){
continue;
}
var arr=o[name];
if(!(arr instanceof Array)){
arr=[];
o[name]=arr;
}
arr.push(_146(pair.join("=")));
}
}else{
for(i=0;i<_144.length;i++){
pair=_144[i].split("=");
var name=pair.shift();
if(!name){
continue;
}
o[_146(name)]=_146(pair.join("="));
}
}
return o;
}});
MochiKit.Base.AdapterRegistry=function(){
this.pairs=[];
};
MochiKit.Base.AdapterRegistry.prototype={register:function(name,_14c,wrap,_14e){
if(_14e){
this.pairs.unshift([name,_14c,wrap]);
}else{
this.pairs.push([name,_14c,wrap]);
}
},match:function(){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[1].apply(this,arguments)){
return pair[2].apply(this,arguments);
}
}
throw MochiKit.Base.NotFound;
},unregister:function(name){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[0]==name){
this.pairs.splice(i,1);
return true;
}
}
return false;
}};
MochiKit.Base._exportSymbols=function(_154,_155){
if(MochiKit.__export__===false||_155.__export__===false){
return;
}
for(var k in _155){
var v=_155[k];
if(v!=null){
var _158=(k[0]!=="_"&&k!=="toString");
if(v.__export__===true||(v.__export__!==false&&_158)){
_154[k]=_155[k];
}
}
}
};
MochiKit.Base._deprecated=function(_159,name,_15b,_15c,_15d){
if(typeof (_159)==="string"){
if(_159.indexOf("MochiKit.")===0){
_159=_159.substring(9);
}
_159=MochiKit[_159];
}
var _15e=_15b.split(".")[1];
var _15f=_15b.split(".")[2];
var func=function(){
var self=arguments.callee;
var msg=_159.NAME+"."+name+" is deprecated since version "+_15c+". Use "+_15b+" instead.";
if(self.logged!==true){
self.logged=true;
if(MochiKit.Logging){
MochiKit.Logging.logDebug(msg);
}else{
if(console&&console.log){
console.log(msg);
}
}
}
if(!MochiKit[_15e]){
throw new Error(msg);
}
return MochiKit[_15e][_15f].apply(this,arguments);
};
if(_15d===false){
func.__export__=false;
}
_159[name]=func;
};
MochiKit.Base.__new__=function(){
var m=this;
m.noop=m.operator.identity;
m._deprecated(m,"forward","MochiKit.Base.forwardCall","1.3",false);
m._deprecated(m,"find","MochiKit.Base.findValue","1.3",false);
if(typeof (encodeURIComponent)!="undefined"){
m.urlEncode=function(_164){
return encodeURIComponent(_164).replace(/\'/g,"%27");
};
}else{
m.urlEncode=function(_165){
return escape(_165).replace(/\+/g,"%2B").replace(/\"/g,"%22").rval.replace(/\'/g,"%27");
};
}
m.NamedError=function(name){
this.message=name;
this.name=name;
};
m.NamedError.prototype=new Error();
m.update(m.NamedError.prototype,{repr:function(){
if(this.message&&this.message!=this.name){
return this.name+"("+m.repr(this.message)+")";
}else{
return this.name+"()";
}
},toString:m.forwardCall("repr")});
m.NotFound=new m.NamedError("MochiKit.Base.NotFound");
m.listMax=m.partial(m.listMinMax,1);
m.listMin=m.partial(m.listMinMax,-1);
m.isCallable=m.typeMatcher("function");
m.isUndefined=m.typeMatcher("undefined");
m.merge=m.partial(m.update,null);
m.zip=m.partial(m.map,null);
m.average=m.mean;
m.comparatorRegistry=new m.AdapterRegistry();
m.registerComparator("dateLike",m.isDateLike,m.compareDateLike);
m.registerComparator("arrayLike",m.isArrayLike,m.compareArrayLike);
m.reprRegistry=new m.AdapterRegistry();
m.registerRepr("arrayLike",m.isArrayLike,m.reprArrayLike);
m.registerRepr("string",m.typeMatcher("string"),m.reprString);
m.registerRepr("numbers",m.typeMatcher("number","boolean"),m.reprNumber);
m.jsonRegistry=new m.AdapterRegistry();
m.nameFunctions(this);
};
MochiKit.Base.__new__();
if(MochiKit.__export__){
compare=MochiKit.Base.compare;
compose=MochiKit.Base.compose;
serializeJSON=MochiKit.Base.serializeJSON;
mean=MochiKit.Base.mean;
median=MochiKit.Base.median;
}
MochiKit.Base._exportSymbols(this,MochiKit.Base);
MochiKit.Base._module("Iter","1.5",["Base"]);
MochiKit.Base.update(MochiKit.Iter,{registerIteratorFactory:function(name,_168,_169,_16a){
MochiKit.Iter.iteratorRegistry.register(name,_168,_169,_16a);
},isIterable:function(o){
return o!=null&&(typeof (o.next)=="function"||typeof (o.iter)=="function");
},iter:function(_16c,_16d){
var self=MochiKit.Iter;
if(arguments.length==2){
return self.takewhile(function(a){
return a!=_16d;
},_16c);
}
if(typeof (_16c.next)=="function"){
return _16c;
}else{
if(typeof (_16c.iter)=="function"){
return _16c.iter();
}
}
try{
return self.iteratorRegistry.match(_16c);
}
catch(e){
var m=MochiKit.Base;
if(e==m.NotFound){
e=new TypeError(typeof (_16c)+": "+m.repr(_16c)+" is not iterable");
}
throw e;
}
},count:function(n){
if(!n){
n=0;
}
var m=MochiKit.Base;
return {repr:function(){
return "count("+n+")";
},toString:m.forwardCall("repr"),next:m.counter(n)};
},cycle:function(p){
var self=MochiKit.Iter;
var m=MochiKit.Base;
var lst=[];
var _177=self.iter(p);
return {repr:function(){
return "cycle(...)";
},toString:m.forwardCall("repr"),next:function(){
try{
var rval=_177.next();
lst.push(rval);
return rval;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
if(lst.length===0){
this.next=function(){
throw self.StopIteration;
};
}else{
var i=-1;
this.next=function(){
i=(i+1)%lst.length;
return lst[i];
};
}
return this.next();
}
}};
},repeat:function(elem,n){
var m=MochiKit.Base;
if(typeof (n)=="undefined"){
return {repr:function(){
return "repeat("+m.repr(elem)+")";
},toString:m.forwardCall("repr"),next:function(){
return elem;
}};
}
return {repr:function(){
return "repeat("+m.repr(elem)+", "+n+")";
},toString:m.forwardCall("repr"),next:function(){
if(n<=0){
throw MochiKit.Iter.StopIteration;
}
n-=1;
return elem;
}};
},next:function(_17d){
return _17d.next();
},izip:function(p,q){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var next=self.next;
var _183=m.map(self.iter,arguments);
return {repr:function(){
return "izip(...)";
},toString:m.forwardCall("repr"),next:function(){
return m.map(next,_183);
}};
},ifilter:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilter(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(pred(rval)){
return rval;
}
}
return undefined;
}};
},ifilterfalse:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilterfalse(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
return rval;
}
}
return undefined;
}};
},islice:function(seq){
var self=MochiKit.Iter;
var m=MochiKit.Base;
seq=self.iter(seq);
var _18f=0;
var stop=0;
var step=1;
var i=-1;
if(arguments.length==2){
stop=arguments[1];
}else{
if(arguments.length==3){
_18f=arguments[1];
stop=arguments[2];
}else{
_18f=arguments[1];
stop=arguments[2];
step=arguments[3];
}
}
return {repr:function(){
return "islice("+["...",_18f,stop,step].join(", ")+")";
},toString:m.forwardCall("repr"),next:function(){
var rval;
while(i<_18f){
rval=seq.next();
i++;
}
if(_18f>=stop){
throw self.StopIteration;
}
_18f+=step;
return rval;
}};
},imap:function(fun,p,q){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var _199=m.map(self.iter,m.extend(null,arguments,1));
var map=m.map;
var next=self.next;
return {repr:function(){
return "imap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(this,map(next,_199));
}};
},applymap:function(fun,seq,self){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
return {repr:function(){
return "applymap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(self,seq.next());
}};
},chain:function(p,q){
var self=MochiKit.Iter;
var m=MochiKit.Base;
if(arguments.length==1){
return self.iter(arguments[0]);
}
var _1a4=m.map(self.iter,arguments);
return {repr:function(){
return "chain(...)";
},toString:m.forwardCall("repr"),next:function(){
while(_1a4.length>1){
try{
var _1a5=_1a4[0].next();
return _1a5;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
_1a4.shift();
var _1a5=_1a4[0].next();
return _1a5;
}
}
if(_1a4.length==1){
var arg=_1a4.shift();
this.next=m.bind("next",arg);
return this.next();
}
throw self.StopIteration;
}};
},takewhile:function(pred,seq){
var self=MochiKit.Iter;
seq=self.iter(seq);
return {repr:function(){
return "takewhile(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=seq.next();
if(!pred(rval)){
this.next=function(){
throw self.StopIteration;
};
this.next();
}
return rval;
}};
},dropwhile:function(pred,seq){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
var bind=m.bind;
return {"repr":function(){
return "dropwhile(...)";
},"toString":m.forwardCall("repr"),"next":function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
break;
}
}
this.next=bind("next",seq);
return rval;
}};
},_tee:function(_1b0,sync,_1b2){
sync.pos[_1b0]=-1;
var m=MochiKit.Base;
var _1b4=m.listMin;
return {repr:function(){
return "tee("+_1b0+", ...)";
},toString:m.forwardCall("repr"),next:function(){
var rval;
var i=sync.pos[_1b0];
if(i==sync.max){
rval=_1b2.next();
sync.deque.push(rval);
sync.max+=1;
sync.pos[_1b0]+=1;
}else{
rval=sync.deque[i-sync.min];
sync.pos[_1b0]+=1;
if(i==sync.min&&_1b4(sync.pos)!=sync.min){
sync.min+=1;
sync.deque.shift();
}
}
return rval;
}};
},tee:function(_1b7,n){
var rval=[];
var sync={"pos":[],"deque":[],"max":-1,"min":-1};
if(arguments.length==1||typeof (n)=="undefined"||n===null){
n=2;
}
var self=MochiKit.Iter;
_1b7=self.iter(_1b7);
var _tee=self._tee;
for(var i=0;i<n;i++){
rval.push(_tee(i,sync,_1b7));
}
return rval;
},list:function(_1be){
var rval;
if(_1be instanceof Array){
return _1be.slice();
}
if(typeof (_1be)=="function"&&!(_1be instanceof Function)&&typeof (_1be.length)=="number"){
rval=[];
for(var i=0;i<_1be.length;i++){
rval.push(_1be[i]);
}
return rval;
}
var self=MochiKit.Iter;
_1be=self.iter(_1be);
var rval=[];
var _1c2;
try{
while(true){
_1c2=_1be.next();
rval.push(_1c2);
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return rval;
}
return undefined;
},reduce:function(fn,_1c4,_1c5){
var i=0;
var x=_1c5;
var self=MochiKit.Iter;
_1c4=self.iter(_1c4);
if(arguments.length<3){
try{
x=_1c4.next();
}
catch(e){
if(e==self.StopIteration){
e=new TypeError("reduce() of empty sequence with no initial value");
}
throw e;
}
i++;
}
try{
while(true){
x=fn(x,_1c4.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},range:function(){
var _1c9=0;
var stop=0;
var step=1;
if(arguments.length==1){
stop=arguments[0];
}else{
if(arguments.length==2){
_1c9=arguments[0];
stop=arguments[1];
}else{
if(arguments.length==3){
_1c9=arguments[0];
stop=arguments[1];
step=arguments[2];
}else{
throw new TypeError("range() takes 1, 2, or 3 arguments!");
}
}
}
if(step===0){
throw new TypeError("range() step must not be 0");
}
return {next:function(){
if((step>0&&_1c9>=stop)||(step<0&&_1c9<=stop)){
throw MochiKit.Iter.StopIteration;
}
var rval=_1c9;
_1c9+=step;
return rval;
},repr:function(){
return "range("+[_1c9,stop,step].join(", ")+")";
},toString:MochiKit.Base.forwardCall("repr")};
},sum:function(_1cd,_1ce){
if(typeof (_1ce)=="undefined"||_1ce===null){
_1ce=0;
}
var x=_1ce;
var self=MochiKit.Iter;
_1cd=self.iter(_1cd);
try{
while(true){
x+=_1cd.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},exhaust:function(_1d1){
var self=MochiKit.Iter;
_1d1=self.iter(_1d1);
try{
while(true){
_1d1.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
},forEach:function(_1d3,func,obj){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length>2){
func=m.bind(func,obj);
}
if(m.isArrayLike(_1d3)&&!self.isIterable(_1d3)){
try{
for(var i=0;i<_1d3.length;i++){
func(_1d3[i]);
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
}else{
self.exhaust(self.imap(func,_1d3));
}
},every:function(_1d9,func){
var self=MochiKit.Iter;
try{
self.ifilterfalse(func,_1d9).next();
return false;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return true;
}
},sorted:function(_1dc,cmp){
var rval=MochiKit.Iter.list(_1dc);
if(arguments.length==1){
cmp=MochiKit.Base.compare;
}
rval.sort(cmp);
return rval;
},reversed:function(_1df){
var rval=MochiKit.Iter.list(_1df);
rval.reverse();
return rval;
},some:function(_1e1,func){
var self=MochiKit.Iter;
try{
self.ifilter(func,_1e1).next();
return true;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return false;
}
},iextend:function(lst,_1e5){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(m.isArrayLike(_1e5)&&!self.isIterable(_1e5)){
for(var i=0;i<_1e5.length;i++){
lst.push(_1e5[i]);
}
}else{
_1e5=self.iter(_1e5);
try{
while(true){
lst.push(_1e5.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
}
return lst;
},groupby:function(_1e9,_1ea){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_1ea=m.operator.identity;
}
_1e9=self.iter(_1e9);
var pk=undefined;
var k=undefined;
var v;
function fetch(){
v=_1e9.next();
k=_1ea(v);
}
function eat(){
var ret=v;
v=undefined;
return ret;
}
var _1f1=true;
var _1f2=m.compare;
return {repr:function(){
return "groupby(...)";
},next:function(){
while(_1f2(k,pk)===0){
fetch();
if(_1f1){
_1f1=false;
break;
}
}
pk=k;
return [k,{next:function(){
if(v==undefined){
fetch();
}
if(_1f2(k,pk)!==0){
throw self.StopIteration;
}
return eat();
}}];
}};
},groupby_as_array:function(_1f3,_1f4){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_1f4=m.operator.identity;
}
_1f3=self.iter(_1f3);
var _1f7=[];
var _1f8=true;
var _1f9;
var _1fa=m.compare;
while(true){
try{
var _1fb=_1f3.next();
var key=_1f4(_1fb);
}
catch(e){
if(e==self.StopIteration){
break;
}
throw e;
}
if(_1f8||_1fa(key,_1f9)!==0){
var _1fd=[];
_1f7.push([key,_1fd]);
}
_1fd.push(_1fb);
_1f8=false;
_1f9=key;
}
return _1f7;
},arrayLikeIter:function(_1fe){
var i=0;
return {repr:function(){
return "arrayLikeIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(i>=_1fe.length){
throw MochiKit.Iter.StopIteration;
}
return _1fe[i++];
}};
},hasIterateNext:function(_200){
return (_200&&typeof (_200.iterateNext)=="function");
},iterateNextIter:function(_201){
return {repr:function(){
return "iterateNextIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=_201.iterateNext();
if(rval===null||rval===undefined){
throw MochiKit.Iter.StopIteration;
}
return rval;
}};
}});
MochiKit.Iter.__new__=function(){
var m=MochiKit.Base;
if(typeof (StopIteration)!="undefined"){
this.StopIteration=StopIteration;
}else{
this.StopIteration=new m.NamedError("StopIteration");
}
this.iteratorRegistry=new m.AdapterRegistry();
this.registerIteratorFactory("arrayLike",m.isArrayLike,this.arrayLikeIter);
this.registerIteratorFactory("iterateNext",this.hasIterateNext,this.iterateNextIter);
m.nameFunctions(this);
};
MochiKit.Iter.__new__();
if(MochiKit.__export__){
reduce=MochiKit.Iter.reduce;
}
MochiKit.Base._exportSymbols(this,MochiKit.Iter);
MochiKit.Base._module("Logging","1.5",["Base"]);
MochiKit.Logging.LogMessage=function(num,_205,info){
this.num=num;
this.level=_205;
this.info=info;
this.timestamp=new Date();
};
MochiKit.Logging.LogMessage.prototype={repr:function(){
var m=MochiKit.Base;
return "LogMessage("+m.map(m.repr,[this.num,this.level,this.info]).join(", ")+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Base.update(MochiKit.Logging,{logLevelAtLeast:function(_208){
var self=MochiKit.Logging;
if(typeof (_208)=="string"){
_208=self.LogLevel[_208];
}
return function(msg){
var _20b=msg.level;
if(typeof (_20b)=="string"){
_20b=self.LogLevel[_20b];
}
return _20b>=_208;
};
},isLogMessage:function(){
var _20c=MochiKit.Logging.LogMessage;
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof _20c)){
return false;
}
}
return true;
},compareLogMessage:function(a,b){
return MochiKit.Base.compare([a.level,a.info],[b.level,b.info]);
},alertListener:function(msg){
alert("num: "+msg.num+"\nlevel: "+msg.level+"\ninfo: "+msg.info.join(" "));
}});
MochiKit.Logging.Logger=function(_211){
this.counter=0;
if(typeof (_211)=="undefined"||_211===null){
_211=-1;
}
this.maxSize=_211;
this._messages=[];
this.listeners={};
this.useNativeConsole=false;
};
MochiKit.Logging.Logger.prototype={clear:function(){
this._messages.splice(0,this._messages.length);
},logToConsole:function(msg){
if(typeof (window)!="undefined"&&window.console&&window.console.log){
window.console.log(msg.replace(/%/g,"\uff05"));
}else{
if(typeof (opera)!="undefined"&&opera.postError){
opera.postError(msg);
}else{
if(typeof (printfire)=="function"){
printfire(msg);
}else{
if(typeof (Debug)!="undefined"&&Debug.writeln){
Debug.writeln(msg);
}else{
if(typeof (debug)!="undefined"&&debug.trace){
debug.trace(msg);
}
}
}
}
}
},dispatchListeners:function(msg){
for(var k in this.listeners){
var pair=this.listeners[k];
if(pair.ident!=k||(pair[0]&&!pair[0](msg))){
continue;
}
pair[1](msg);
}
},addListener:function(_216,_217,_218){
if(typeof (_217)=="string"){
_217=MochiKit.Logging.logLevelAtLeast(_217);
}
var _219=[_217,_218];
_219.ident=_216;
this.listeners[_216]=_219;
},removeListener:function(_21a){
delete this.listeners[_21a];
},baseLog:function(_21b,_21c){
if(typeof (_21b)=="number"){
if(_21b>=MochiKit.Logging.LogLevel.FATAL){
_21b="FATAL";
}else{
if(_21b>=MochiKit.Logging.LogLevel.ERROR){
_21b="ERROR";
}else{
if(_21b>=MochiKit.Logging.LogLevel.WARNING){
_21b="WARNING";
}else{
if(_21b>=MochiKit.Logging.LogLevel.INFO){
_21b="INFO";
}else{
_21b="DEBUG";
}
}
}
}
}
var msg=new MochiKit.Logging.LogMessage(this.counter,_21b,MochiKit.Base.extend(null,arguments,1));
this._messages.push(msg);
this.dispatchListeners(msg);
if(this.useNativeConsole){
this.logToConsole(msg.level+": "+msg.info.join(" "));
}
this.counter+=1;
while(this.maxSize>=0&&this._messages.length>this.maxSize){
this._messages.shift();
}
},getMessages:function(_21e){
var _21f=0;
if(!(typeof (_21e)=="undefined"||_21e===null)){
_21f=Math.max(0,this._messages.length-_21e);
}
return this._messages.slice(_21f);
},getMessageText:function(_220){
if(typeof (_220)=="undefined"||_220===null){
_220=30;
}
var _221=this.getMessages(_220);
if(_221.length){
var lst=map(function(m){
return "\n  ["+m.num+"] "+m.level+": "+m.info.join(" ");
},_221);
lst.unshift("LAST "+_221.length+" MESSAGES:");
return lst.join("");
}
return "";
},debuggingBookmarklet:function(_224){
if(typeof (MochiKit.LoggingPane)=="undefined"){
alert(this.getMessageText());
}else{
MochiKit.LoggingPane.createLoggingPane(_224||false);
}
}};
MochiKit.Logging.__new__=function(){
this.LogLevel={ERROR:40,FATAL:50,WARNING:30,INFO:20,DEBUG:10};
var m=MochiKit.Base;
m.registerComparator("LogMessage",this.isLogMessage,this.compareLogMessage);
var _226=m.partial;
var _227=this.Logger;
var _228=_227.prototype.baseLog;
m.update(this.Logger.prototype,{debug:_226(_228,"DEBUG"),log:_226(_228,"INFO"),error:_226(_228,"ERROR"),fatal:_226(_228,"FATAL"),warning:_226(_228,"WARNING")});
var self=this;
var _22a=function(name){
return function(){
self.logger[name].apply(self.logger,arguments);
};
};
this.log=_22a("log");
this.logError=_22a("error");
this.logDebug=_22a("debug");
this.logFatal=_22a("fatal");
this.logWarning=_22a("warning");
this.logger=new _227();
this.logger.useNativeConsole=true;
m.nameFunctions(this);
};
if(typeof (printfire)=="undefined"&&typeof (document)!="undefined"&&document.createEvent&&typeof (dispatchEvent)!="undefined"){
printfire=function(){
printfire.args=arguments;
var ev=document.createEvent("Events");
ev.initEvent("printfire",false,true);
dispatchEvent(ev);
};
}
MochiKit.Logging.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Logging);
MochiKit.Base._module("DateTime","1.5",["Base"]);
MochiKit.DateTime.isoDate=function(str){
str=str+"";
if(typeof (str)!="string"||str.length===0){
return null;
}
var iso=str.split("-");
if(iso.length===0){
return null;
}
var date=new Date(iso[0],iso[1]-1,iso[2]);
date.setFullYear(iso[0]);
date.setMonth(iso[1]-1);
date.setDate(iso[2]);
return date;
};
MochiKit.DateTime._isoRegexp=/(\d{4,})(?:-(\d{1,2})(?:-(\d{1,2})(?:[T ](\d{1,2}):(\d{1,2})(?::(\d{1,2})(?:\.(\d+))?)?(?:(Z)|([+-])(\d{1,2})(?::(\d{1,2}))?)?)?)?)?/;
MochiKit.DateTime.isoTimestamp=function(str){
str=str+"";
if(typeof (str)!="string"||str.length===0){
return null;
}
var res=str.match(MochiKit.DateTime._isoRegexp);
if(typeof (res)=="undefined"||res===null){
return null;
}
var year,_233,day,hour,min,sec,msec;
year=parseInt(res[1],10);
if(typeof (res[2])=="undefined"||res[2]===""){
return new Date(year);
}
_233=parseInt(res[2],10)-1;
day=parseInt(res[3],10);
if(typeof (res[4])=="undefined"||res[4]===""){
return new Date(year,_233,day);
}
hour=parseInt(res[4],10);
min=parseInt(res[5],10);
sec=(typeof (res[6])!="undefined"&&res[6]!=="")?parseInt(res[6],10):0;
if(typeof (res[7])!="undefined"&&res[7]!==""){
msec=Math.round(1000*parseFloat("0."+res[7]));
}else{
msec=0;
}
if((typeof (res[8])=="undefined"||res[8]==="")&&(typeof (res[9])=="undefined"||res[9]==="")){
return new Date(year,_233,day,hour,min,sec,msec);
}
var ofs;
if(typeof (res[9])!="undefined"&&res[9]!==""){
ofs=parseInt(res[10],10)*3600000;
if(typeof (res[11])!="undefined"&&res[11]!==""){
ofs+=parseInt(res[11],10)*60000;
}
if(res[9]=="-"){
ofs=-ofs;
}
}else{
ofs=0;
}
return new Date(Date.UTC(year,_233,day,hour,min,sec,msec)-ofs);
};
MochiKit.DateTime.toISOTime=function(date,_23b){
if(typeof (date)=="undefined"||date===null){
return null;
}
var hh=date.getHours();
var mm=date.getMinutes();
var ss=date.getSeconds();
var lst=[((_23b&&(hh<10))?"0"+hh:hh),((mm<10)?"0"+mm:mm),((ss<10)?"0"+ss:ss)];
return lst.join(":");
};
MochiKit.DateTime.toISOTimestamp=function(date,_241){
if(typeof (date)=="undefined"||date===null){
return null;
}
var sep=_241?"T":" ";
var foot=_241?"Z":"";
if(_241){
date=new Date(date.getTime()+(date.getTimezoneOffset()*60000));
}
return MochiKit.DateTime.toISODate(date)+sep+MochiKit.DateTime.toISOTime(date,_241)+foot;
};
MochiKit.DateTime.toISODate=function(date){
if(typeof (date)=="undefined"||date===null){
return null;
}
var _245=MochiKit.DateTime._padTwo;
var _246=MochiKit.DateTime._padFour;
return [_246(date.getFullYear()),_245(date.getMonth()+1),_245(date.getDate())].join("-");
};
MochiKit.DateTime.americanDate=function(d){
d=d+"";
if(typeof (d)!="string"||d.length===0){
return null;
}
var a=d.split("/");
return new Date(a[2],a[0]-1,a[1]);
};
MochiKit.DateTime._padTwo=function(n){
return (n>9)?n:"0"+n;
};
MochiKit.DateTime._padFour=function(n){
switch(n.toString().length){
case 1:
return "000"+n;
break;
case 2:
return "00"+n;
break;
case 3:
return "0"+n;
break;
case 4:
default:
return n;
}
};
MochiKit.DateTime.toPaddedAmericanDate=function(d){
if(typeof (d)=="undefined"||d===null){
return null;
}
var _24c=MochiKit.DateTime._padTwo;
return [_24c(d.getMonth()+1),_24c(d.getDate()),d.getFullYear()].join("/");
};
MochiKit.DateTime.toAmericanDate=function(d){
if(typeof (d)=="undefined"||d===null){
return null;
}
return [d.getMonth()+1,d.getDate(),d.getFullYear()].join("/");
};
MochiKit.DateTime.__new__=function(){
MochiKit.Base.nameFunctions(this);
};
MochiKit.DateTime.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.DateTime);
MochiKit.Base._module("Format","1.5",["Base"]);
MochiKit.Format._numberFormatter=function(_24e,_24f,_250,_251,_252,_253,_254,_255,_256){
return function(num){
num=parseFloat(num);
if(typeof (num)=="undefined"||num===null||isNaN(num)){
return _24e;
}
var _258=_24f;
var _259=_250;
if(num<0){
num=-num;
}else{
_258=_258.replace(/-/,"");
}
var me=arguments.callee;
var fmt=MochiKit.Format.formatLocale(_251);
if(_252){
num=num*100;
_259=fmt.percent+_259;
}
num=MochiKit.Format.roundToFixed(num,_253);
var _25c=num.split(/\./);
var _25d=_25c[0];
var frac=(_25c.length==1)?"":_25c[1];
var res="";
while(_25d.length<_254){
_25d="0"+_25d;
}
if(_255){
while(_25d.length>_255){
var i=_25d.length-_255;
res=fmt.separator+_25d.substring(i,_25d.length)+res;
_25d=_25d.substring(0,i);
}
}
res=_25d+res;
if(_253>0){
while(frac.length<_256){
frac=frac+"0";
}
res=res+fmt.decimal+frac;
}
return _258+res+_259;
};
};
MochiKit.Format.numberFormatter=function(_261,_262,_263){
if(typeof (_262)=="undefined"){
_262="";
}
var _264=_261.match(/((?:[0#]+,)?[0#]+)(?:\.([0#]+))?(%)?/);
if(!_264){
throw TypeError("Invalid pattern");
}
var _265=_261.substr(0,_264.index);
var _266=_261.substr(_264.index+_264[0].length);
if(_265.search(/-/)==-1){
_265=_265+"-";
}
var _267=_264[1];
var frac=(typeof (_264[2])=="string"&&_264[2]!="")?_264[2]:"";
var _269=(typeof (_264[3])=="string"&&_264[3]!="");
var tmp=_267.split(/,/);
var _26b;
if(typeof (_263)=="undefined"){
_263="default";
}
if(tmp.length==1){
_26b=null;
}else{
_26b=tmp[1].length;
}
var _26c=_267.length-_267.replace(/0/g,"").length;
var _26d=frac.length-frac.replace(/0/g,"").length;
var _26e=frac.length;
var rval=MochiKit.Format._numberFormatter(_262,_265,_266,_263,_269,_26e,_26c,_26b,_26d);
var m=MochiKit.Base;
if(m){
var fn=arguments.callee;
var args=m.concat(arguments);
rval.repr=function(){
return [self.NAME,"(",map(m.repr,args).join(", "),")"].join("");
};
}
return rval;
};
MochiKit.Format.formatLocale=function(_273){
if(typeof (_273)=="undefined"||_273===null){
_273="default";
}
if(typeof (_273)=="string"){
var rval=MochiKit.Format.LOCALE[_273];
if(typeof (rval)=="string"){
rval=arguments.callee(rval);
MochiKit.Format.LOCALE[_273]=rval;
}
return rval;
}else{
return _273;
}
};
MochiKit.Format.twoDigitAverage=function(_275,_276){
if(_276){
var res=_275/_276;
if(!isNaN(res)){
return MochiKit.Format.twoDigitFloat(res);
}
}
return "0";
};
MochiKit.Format.twoDigitFloat=function(_278){
var res=roundToFixed(_278,2);
if(res.indexOf(".00")>0){
return res.substring(0,res.length-3);
}else{
if(res.charAt(res.length-1)=="0"){
return res.substring(0,res.length-1);
}else{
return res;
}
}
};
MochiKit.Format.lstrip=function(str,_27b){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_27b){
return str.replace(/^\s+/,"");
}else{
return str.replace(new RegExp("^["+_27b+"]+"),"");
}
};
MochiKit.Format.rstrip=function(str,_27d){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_27d){
return str.replace(/\s+$/,"");
}else{
return str.replace(new RegExp("["+_27d+"]+$"),"");
}
};
MochiKit.Format.strip=function(str,_27f){
var self=MochiKit.Format;
return self.rstrip(self.lstrip(str,_27f),_27f);
};
MochiKit.Format.truncToFixed=function(_281,_282){
var _283=MochiKit.Format._numberToFixed(_281,_282);
var _284=_283.indexOf(".");
if(_284>0&&_284+_282+1<_283.length){
_283=_283.substring(0,_284+_282+1);
_283=MochiKit.Format._shiftNumber(_283,0);
}
return _283;
};
MochiKit.Format.roundToFixed=function(_285,_286){
var _287=MochiKit.Format._numberToFixed(_285,_286);
var _288=_287.indexOf(".");
if(_288>0&&_288+_286+1<_287.length){
var str=MochiKit.Format._shiftNumber(_287,_286);
str=MochiKit.Format._numberToFixed(Math.round(parseFloat(str)),0);
_287=MochiKit.Format._shiftNumber(str,-_286);
}
return _287;
};
MochiKit.Format._numberToFixed=function(_28a,_28b){
var str=_28a.toString();
var _28d=str.split(/[eE]/);
var exp=(_28d.length===1)?0:parseInt(_28d[1])||0;
var _28f=MochiKit.Format._shiftNumber(_28d[0],exp);
_28d=_28f.split(/\./);
var _290=_28d[0];
var frac=(_28d.length===1)?"":_28d[1];
while(frac.length<_28b){
frac+="0";
}
if(frac.length>0){
return _290+"."+frac;
}else{
return _290;
}
};
MochiKit.Format._shiftNumber=function(num,exp){
var pos=num.indexOf(".");
if(pos<0){
pos=num.length;
}else{
num=num.substring(0,pos)+num.substring(pos+1);
}
pos+=exp;
while(pos<=0||(pos<=1&&num.charAt(0)==="-")){
if(num.charAt(0)==="-"){
num="-0"+num.substring(1);
}else{
num="0"+num;
}
pos++;
}
while(pos>num.length){
num+="0";
}
if(pos<num.length){
num=num.substring(0,pos)+"."+num.substring(pos);
}
while(/^0[^.]/.test(num)){
num=num.substring(1);
}
while(/^-0[^.]/.test(num)){
num="-"+num.substring(2);
}
return num;
};
MochiKit.Format.percentFormat=function(_295){
return MochiKit.Format.twoDigitFloat(100*_295)+"%";
};
MochiKit.Format.LOCALE={en_US:{separator:",",decimal:".",percent:"%"},de_DE:{separator:".",decimal:",",percent:"%"},pt_BR:{separator:".",decimal:",",percent:"%"},fr_FR:{separator:" ",decimal:",",percent:"%"},"default":"en_US",__export__:false};
MochiKit.Format.__new__=function(){
MochiKit.Base.nameFunctions(this);
var base=this.NAME+".";
var k,v,o;
for(k in this.LOCALE){
o=this.LOCALE[k];
if(typeof (o)=="object"){
o.repr=function(){
return this.NAME;
};
o.NAME=base+"LOCALE."+k;
}
}
};
MochiKit.Format.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Format);
MochiKit.Base._module("Async","1.5",["Base"]);
MochiKit.Async.Deferred=function(_29a){
this.chain=[];
this.id=this._nextId();
this.fired=-1;
this.paused=0;
this.results=[null,null];
this.canceller=_29a;
this.silentlyCancelled=false;
this.chained=false;
};
MochiKit.Async.Deferred.prototype={repr:function(){
var _29b;
if(this.fired==-1){
_29b="unfired";
}else{
if(this.fired===0){
_29b="success";
}else{
_29b="error";
}
}
return "Deferred("+this.id+", "+_29b+")";
},toString:MochiKit.Base.forwardCall("repr"),_nextId:MochiKit.Base.counter(),cancel:function(){
var self=MochiKit.Async;
if(this.fired==-1){
if(this.canceller){
this.canceller(this);
}else{
this.silentlyCancelled=true;
}
if(this.fired==-1){
this.errback(new self.CancelledError(this));
}
}else{
if((this.fired===0)&&(this.results[0] instanceof self.Deferred)){
this.results[0].cancel();
}
}
},_resback:function(res){
this.fired=((res instanceof Error)?1:0);
this.results[this.fired]=res;
this._fire();
},_check:function(){
if(this.fired!=-1){
if(!this.silentlyCancelled){
throw new MochiKit.Async.AlreadyCalledError(this);
}
this.silentlyCancelled=false;
return;
}
},callback:function(res){
this._check();
if(res instanceof MochiKit.Async.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
this._resback(res);
},errback:function(res){
this._check();
var self=MochiKit.Async;
if(res instanceof self.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
if(!(res instanceof Error)){
res=new self.GenericError(res);
}
this._resback(res);
},addBoth:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,fn);
},addCallback:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,null);
},addErrback:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(null,fn);
},addCallbacks:function(cb,eb){
if(this.chained){
throw new Error("Chained Deferreds can not be re-used");
}
this.chain.push([cb,eb]);
if(this.fired>=0){
this._fire();
}
return this;
},_fire:function(){
var _2a6=this.chain;
var _2a7=this.fired;
var res=this.results[_2a7];
var self=this;
var cb=null;
while(_2a6.length>0&&this.paused===0){
var pair=_2a6.shift();
var f=pair[_2a7];
if(f===null){
continue;
}
try{
res=f(res);
_2a7=((res instanceof Error)?1:0);
if(res instanceof MochiKit.Async.Deferred){
cb=function(res){
self._resback(res);
self.paused--;
if((self.paused===0)&&(self.fired>=0)){
self._fire();
}
};
this.paused++;
}
}
catch(err){
_2a7=1;
if(!(err instanceof Error)){
err=new MochiKit.Async.GenericError(err);
}
res=err;
}
}
this.fired=_2a7;
this.results[_2a7]=res;
if(cb&&this.paused){
res.addBoth(cb);
res.chained=true;
}
}};
MochiKit.Base.update(MochiKit.Async,{evalJSONRequest:function(req){
return MochiKit.Base.evalJSON(req.responseText);
},succeed:function(_2af){
var d=new MochiKit.Async.Deferred();
d.callback.apply(d,arguments);
return d;
},fail:function(_2b1){
var d=new MochiKit.Async.Deferred();
d.errback.apply(d,arguments);
return d;
},getXMLHttpRequest:function(){
var self=arguments.callee;
if(!self.XMLHttpRequest){
var _2b4=[function(){
return new XMLHttpRequest();
},function(){
return new ActiveXObject("Msxml2.XMLHTTP");
},function(){
return new ActiveXObject("Microsoft.XMLHTTP");
},function(){
return new ActiveXObject("Msxml2.XMLHTTP.4.0");
},function(){
throw new MochiKit.Async.BrowserComplianceError("Browser does not support XMLHttpRequest");
}];
for(var i=0;i<_2b4.length;i++){
var func=_2b4[i];
try{
self.XMLHttpRequest=func;
return func();
}
catch(e){
}
}
}
return self.XMLHttpRequest();
},_xhr_onreadystatechange:function(d){
var m=MochiKit.Base;
if(this.readyState==4){
try{
this.onreadystatechange=null;
}
catch(e){
try{
this.onreadystatechange=m.noop;
}
catch(e){
}
}
var _2b9=null;
try{
_2b9=this.status;
if(!_2b9&&m.isNotEmpty(this.responseText)){
_2b9=304;
}
}
catch(e){
}
if(_2b9==200||_2b9==201||_2b9==204||_2b9==304||_2b9==1223){
d.callback(this);
}else{
var err=new MochiKit.Async.XMLHttpRequestError(this,"Request failed");
if(err.number){
d.errback(err);
}else{
d.errback(err);
}
}
}
},_xhr_canceller:function(req){
try{
req.onreadystatechange=null;
}
catch(e){
try{
req.onreadystatechange=MochiKit.Base.noop;
}
catch(e){
}
}
req.abort();
},sendXMLHttpRequest:function(req,_2bd){
if(typeof (_2bd)=="undefined"||_2bd===null){
_2bd="";
}
var m=MochiKit.Base;
var self=MochiKit.Async;
var d=new self.Deferred(m.partial(self._xhr_canceller,req));
try{
req.onreadystatechange=m.bind(self._xhr_onreadystatechange,req,d);
req.send(_2bd);
}
catch(e){
try{
req.onreadystatechange=null;
}
catch(ignore){
}
d.errback(e);
}
return d;
},doXHR:function(url,opts){
var self=MochiKit.Async;
return self.callLater(0,self._doXHR,url,opts);
},_doXHR:function(url,opts){
var m=MochiKit.Base;
opts=m.update({method:"GET",sendContent:""},opts);
var self=MochiKit.Async;
var req=self.getXMLHttpRequest();
if(opts.queryString){
var qs=m.queryString(opts.queryString);
if(qs){
url+="?"+qs;
}
}
if("username" in opts){
req.open(opts.method,url,true,opts.username,opts.password);
}else{
req.open(opts.method,url,true);
}
if(req.overrideMimeType&&opts.mimeType){
req.overrideMimeType(opts.mimeType);
}
req.setRequestHeader("X-Requested-With","XMLHttpRequest");
if(opts.headers){
var _2ca=opts.headers;
if(!m.isArrayLike(_2ca)){
_2ca=m.items(_2ca);
}
for(var i=0;i<_2ca.length;i++){
var _2cc=_2ca[i];
var name=_2cc[0];
var _2ce=_2cc[1];
req.setRequestHeader(name,_2ce);
}
}
return self.sendXMLHttpRequest(req,opts.sendContent);
},_buildURL:function(url){
if(arguments.length>1){
var m=MochiKit.Base;
var qs=m.queryString.apply(null,m.extend(null,arguments,1));
if(qs){
return url+"?"+qs;
}
}
return url;
},doSimpleXMLHttpRequest:function(url){
var self=MochiKit.Async;
url=self._buildURL.apply(self,arguments);
return self.doXHR(url);
},loadJSONDoc:function(url){
var self=MochiKit.Async;
url=self._buildURL.apply(self,arguments);
var d=self.doXHR(url,{"mimeType":"text/plain","headers":[["Accept","application/json"]]});
d=d.addCallback(self.evalJSONRequest);
return d;
},wait:function(_2d7,_2d8){
var d=new MochiKit.Async.Deferred();
var m=MochiKit.Base;
if(typeof (_2d8)!="undefined"){
d.addCallback(function(){
return _2d8;
});
}
var _2db=setTimeout(m.bind("callback",d),Math.floor(_2d7*1000));
d.canceller=function(){
try{
clearTimeout(_2db);
}
catch(e){
}
};
return d;
},callLater:function(_2dc,func){
var m=MochiKit.Base;
var _2df=m.partial.apply(m,m.extend(null,arguments,1));
return MochiKit.Async.wait(_2dc).addCallback(function(res){
return _2df();
});
}});
MochiKit.Async.DeferredLock=function(){
this.waiting=[];
this.locked=false;
this.id=this._nextId();
};
MochiKit.Async.DeferredLock.prototype={__class__:MochiKit.Async.DeferredLock,acquire:function(){
var d=new MochiKit.Async.Deferred();
if(this.locked){
this.waiting.push(d);
}else{
this.locked=true;
d.callback(this);
}
return d;
},release:function(){
if(!this.locked){
throw TypeError("Tried to release an unlocked DeferredLock");
}
this.locked=false;
if(this.waiting.length>0){
this.locked=true;
this.waiting.shift().callback(this);
}
},_nextId:MochiKit.Base.counter(),repr:function(){
var _2e2;
if(this.locked){
_2e2="locked, "+this.waiting.length+" waiting";
}else{
_2e2="unlocked";
}
return "DeferredLock("+this.id+", "+_2e2+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Async.DeferredList=function(list,_2e4,_2e5,_2e6,_2e7){
MochiKit.Async.Deferred.apply(this,[_2e7]);
this.list=list;
var _2e8=[];
this.resultList=_2e8;
this.finishedCount=0;
this.fireOnOneCallback=_2e4;
this.fireOnOneErrback=_2e5;
this.consumeErrors=_2e6;
var cb=MochiKit.Base.bind(this._cbDeferred,this);
for(var i=0;i<list.length;i++){
var d=list[i];
_2e8.push(undefined);
d.addCallback(cb,i,true);
d.addErrback(cb,i,false);
}
if(list.length===0&&!_2e4){
this.callback(this.resultList);
}
};
MochiKit.Async.DeferredList.prototype=new MochiKit.Async.Deferred();
MochiKit.Async.DeferredList.prototype._cbDeferred=function(_2ec,_2ed,_2ee){
this.resultList[_2ec]=[_2ed,_2ee];
this.finishedCount+=1;
if(this.fired==-1){
if(_2ed&&this.fireOnOneCallback){
this.callback([_2ec,_2ee]);
}else{
if(!_2ed&&this.fireOnOneErrback){
this.errback(_2ee);
}else{
if(this.finishedCount==this.list.length){
this.callback(this.resultList);
}
}
}
}
if(!_2ed&&this.consumeErrors){
_2ee=null;
}
return _2ee;
};
MochiKit.Async.gatherResults=function(_2ef){
var d=new MochiKit.Async.DeferredList(_2ef,false,true,false);
d.addCallback(function(_2f1){
var ret=[];
for(var i=0;i<_2f1.length;i++){
ret.push(_2f1[i][1]);
}
return ret;
});
return d;
};
MochiKit.Async.maybeDeferred=function(func){
var self=MochiKit.Async;
var _2f6;
try{
var r=func.apply(null,MochiKit.Base.extend([],arguments,1));
if(r instanceof self.Deferred){
_2f6=r;
}else{
if(r instanceof Error){
_2f6=self.fail(r);
}else{
_2f6=self.succeed(r);
}
}
}
catch(e){
_2f6=self.fail(e);
}
return _2f6;
};
MochiKit.Async.__new__=function(){
var m=MochiKit.Base;
var ne=m.partial(m._newNamedError,this);
ne("AlreadyCalledError",function(_2fa){
this.deferred=_2fa;
});
ne("CancelledError",function(_2fb){
this.deferred=_2fb;
});
ne("BrowserComplianceError",function(msg){
this.message=msg;
});
ne("GenericError",function(msg){
this.message=msg;
});
ne("XMLHttpRequestError",function(req,msg){
this.req=req;
this.message=msg;
try{
this.number=req.status;
}
catch(e){
}
});
m.nameFunctions(this);
};
MochiKit.Async.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Async);
MochiKit.Base._module("DOM","1.5",["Base"]);
MochiKit.Base.update(MochiKit.DOM,{currentWindow:function(){
return MochiKit.DOM._window;
},currentDocument:function(){
return MochiKit.DOM._document;
},withWindow:function(win,func){
var self=MochiKit.DOM;
var _303=self._document;
var _304=self._window;
var rval;
try{
self._window=win;
self._document=win.document;
rval=func();
}
catch(e){
self._window=_304;
self._document=_303;
throw e;
}
self._window=_304;
self._document=_303;
return rval;
},formContents:function(elem){
var _307=[];
var _308=[];
var m=MochiKit.Base;
var self=MochiKit.DOM;
if(typeof (elem)=="undefined"||elem===null){
elem=self._document.body;
}else{
elem=self.getElement(elem);
}
m.nodeWalk(elem,function(elem){
var name=elem.name;
if(m.isNotEmpty(name)){
var _30d=elem.tagName.toUpperCase();
if(_30d==="INPUT"&&(elem.type=="radio"||elem.type=="checkbox")&&!elem.checked){
return null;
}
if(_30d==="SELECT"){
if(elem.type=="select-one"){
if(elem.selectedIndex>=0){
var opt=elem.options[elem.selectedIndex];
var v=opt.value;
if(!v){
var h=opt.outerHTML;
if(h&&!h.match(/^[^>]+\svalue\s*=/i)){
v=opt.text;
}
}
_307.push(name);
_308.push(v);
return null;
}
_307.push(name);
_308.push("");
return null;
}else{
var opts=elem.options;
if(!opts.length){
_307.push(name);
_308.push("");
return null;
}
for(var i=0;i<opts.length;i++){
var opt=opts[i];
if(!opt.selected){
continue;
}
var v=opt.value;
if(!v){
var h=opt.outerHTML;
if(h&&!h.match(/^[^>]+\svalue\s*=/i)){
v=opt.text;
}
}
_307.push(name);
_308.push(v);
}
return null;
}
}
if(_30d==="FORM"||_30d==="P"||_30d==="SPAN"||_30d==="DIV"){
return elem.childNodes;
}
_307.push(name);
_308.push(elem.value||"");
return null;
}
return elem.childNodes;
});
return [_307,_308];
},withDocument:function(doc,func){
var self=MochiKit.DOM;
var _316=self._document;
var rval;
try{
self._document=doc;
rval=func();
}
catch(e){
self._document=_316;
throw e;
}
self._document=_316;
return rval;
},registerDOMConverter:function(name,_319,wrap,_31b){
MochiKit.DOM.domConverters.register(name,_319,wrap,_31b);
},coerceToDOM:function(node,ctx){
var m=MochiKit.Base;
var im=MochiKit.Iter;
var self=MochiKit.DOM;
if(im){
var iter=im.iter;
var _322=im.repeat;
}
var map=m.map;
var _324=self.domConverters;
var _325=arguments.callee;
var _326=m.NotFound;
while(true){
if(typeof (node)=="undefined"||node===null){
return null;
}
if(typeof (node)=="function"&&typeof (node.length)=="number"&&!(node instanceof Function)){
node=im?im.list(node):m.extend(null,node);
}
if(typeof (node.nodeType)!="undefined"&&node.nodeType>0){
return node;
}
if(typeof (node)=="number"||typeof (node)=="boolean"){
node=node.toString();
}
if(typeof (node)=="string"){
return self._document.createTextNode(node);
}
if(typeof (node.__dom__)=="function"){
node=node.__dom__(ctx);
continue;
}
if(typeof (node.dom)=="function"){
node=node.dom(ctx);
continue;
}
if(typeof (node)=="function"){
node=node.apply(ctx,[ctx]);
continue;
}
if(im){
var _327=null;
try{
_327=iter(node);
}
catch(e){
}
if(_327){
return map(_325,_327,_322(ctx));
}
}else{
if(m.isArrayLike(node)){
var func=function(n){
return _325(n,ctx);
};
return map(func,node);
}
}
try{
node=_324.match(node,ctx);
continue;
}
catch(e){
if(e!=_326){
throw e;
}
}
return self._document.createTextNode(node.toString());
}
return undefined;
},isChildNode:function(node,_32b){
var self=MochiKit.DOM;
if(typeof (node)=="string"){
node=self.getElement(node);
}
if(typeof (_32b)=="string"){
_32b=self.getElement(_32b);
}
if(typeof (node)=="undefined"||node===null){
return false;
}
while(node!=null&&node!==self._document){
if(node===_32b){
return true;
}
node=node.parentNode;
}
return false;
},setNodeAttribute:function(node,attr,_32f){
var o={};
o[attr]=_32f;
try{
return MochiKit.DOM.updateNodeAttributes(node,o);
}
catch(e){
}
return null;
},getNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _334=self.attributeArray.renames[attr];
var _335=self.attributeArray.ignoreAttr[attr];
node=self.getElement(node);
try{
if(_334){
return node[_334];
}
var _336=node.getAttribute(attr);
if(_336!=_335){
return _336;
}
}
catch(e){
}
return null;
},removeNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _33a=self.attributeArray.renames[attr];
node=self.getElement(node);
try{
if(_33a){
return node[_33a];
}
return node.removeAttribute(attr);
}
catch(e){
}
return null;
},updateNodeAttributes:function(node,_33c){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
if(_33c){
var _33f=MochiKit.Base.updatetree;
if(self.attributeArray.compliant){
for(var k in _33c){
var v=_33c[k];
if(typeof (v)=="object"&&typeof (elem[k])=="object"){
if(k=="style"&&MochiKit.Style){
MochiKit.Style.setStyle(elem,v);
}else{
_33f(elem[k],v);
}
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
if(typeof (elem[k])=="string"&&elem[k]!=v){
elem[k]=v;
}
}
}else{
var _342=self.attributeArray.renames;
for(var k in _33c){
v=_33c[k];
var _343=_342[k];
if(k=="style"&&typeof (v)=="string"){
elem.style.cssText=v;
}else{
if(typeof (_343)=="string"){
elem[_343]=v;
}else{
if(typeof (elem[k])=="object"&&typeof (v)=="object"){
if(k=="style"&&MochiKit.Style){
MochiKit.Style.setStyle(elem,v);
}else{
_33f(elem[k],v);
}
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}
if(typeof (elem[k])=="string"&&elem[k]!=v){
elem[k]=v;
}
}
}
}
return elem;
},appendChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _347=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _348=MochiKit.Base.concat;
while(_347.length){
var n=_347.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
elem.appendChild(n);
}else{
_347=_348(n,_347);
}
}
}
return elem;
},insertSiblingNodesBefore:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _34d=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _34e=elem.parentNode;
var _34f=MochiKit.Base.concat;
while(_34d.length){
var n=_34d.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
_34e.insertBefore(n,elem);
}else{
_34d=_34f(n,_34d);
}
}
}
return _34e;
},insertSiblingNodesAfter:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _354=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
if(elem.nextSibling){
return self.insertSiblingNodesBefore(elem.nextSibling,_354);
}else{
return self.appendChildNodes(elem.parentNode,_354);
}
},replaceChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
arguments[0]=elem;
}
var _358;
while((_358=elem.firstChild)){
elem.removeChild(_358);
}
if(arguments.length<2){
return elem;
}else{
return self.appendChildNodes.apply(this,arguments);
}
},createDOM:function(name,_35a){
var elem;
var self=MochiKit.DOM;
var m=MochiKit.Base;
if(typeof (_35a)=="string"||typeof (_35a)=="number"){
var args=m.extend([name,null],arguments,1);
return arguments.callee.apply(this,args);
}
if(typeof (name)=="string"){
var _35f=self._xhtml;
if(_35a&&!self.attributeArray.compliant){
var _360="";
if("name" in _35a){
_360+=" name=\""+self.escapeHTML(_35a.name)+"\"";
}
if(name=="input"&&"type" in _35a){
_360+=" type=\""+self.escapeHTML(_35a.type)+"\"";
}
if(_360){
name="<"+name+_360+">";
_35f=false;
}
}
var d=self._document;
if(_35f&&d===document){
elem=d.createElementNS("http://www.w3.org/1999/xhtml",name);
}else{
elem=d.createElement(name);
}
}else{
elem=name;
}
if(_35a){
self.updateNodeAttributes(elem,_35a);
}
if(arguments.length<=2){
return elem;
}else{
var args=m.extend([elem],arguments,2);
return self.appendChildNodes.apply(this,args);
}
},createDOMFunc:function(){
var m=MochiKit.Base;
return m.partial.apply(this,m.extend([MochiKit.DOM.createDOM],arguments));
},removeElement:function(elem){
var self=MochiKit.DOM;
if(typeof (elem)=="string"){
elem=self.getElement(elem);
}
var e=self.coerceToDOM(elem);
e.parentNode.removeChild(e);
return e;
},swapDOM:function(dest,src){
var self=MochiKit.DOM;
dest=self.getElement(dest);
var _369=dest.parentNode;
if(src){
if(typeof (src)=="string"){
src=self.getElement(src);
}
src=self.coerceToDOM(src,_369);
_369.replaceChild(src,dest);
}else{
_369.removeChild(dest);
}
return src;
},getElement:function(id){
var self=MochiKit.DOM;
if(arguments.length==1){
return ((typeof (id)=="string")?self._document.getElementById(id):id);
}else{
return MochiKit.Base.map(self.getElement,arguments);
}
},getElementsByTagAndClassName:function(_36c,_36d,_36e){
var self=MochiKit.DOM;
if(typeof (_36c)=="undefined"||_36c===null){
_36c="*";
}
if(typeof (_36e)=="undefined"||_36e===null){
_36e=self._document;
}
_36e=self.getElement(_36e);
if(_36e==null){
return [];
}
var _370=(_36e.getElementsByTagName(_36c)||self._document.all);
if(typeof (_36d)=="undefined"||_36d===null){
return MochiKit.Base.extend(null,_370);
}
var _371=[];
for(var i=0;i<_370.length;i++){
var _373=_370[i];
var cls=_373.className;
if(typeof (cls)!="string"){
cls=_373.getAttribute("class");
}
if(typeof (cls)=="string"){
var _375=cls.split(" ");
for(var j=0;j<_375.length;j++){
if(_375[j]==_36d){
_371.push(_373);
break;
}
}
}
}
return _371;
},_newCallStack:function(path,once){
var rval=function(){
var _37a=arguments.callee.callStack;
for(var i=0;i<_37a.length;i++){
if(_37a[i].apply(this,arguments)===false){
break;
}
}
if(once){
try{
this[path]=null;
}
catch(e){
}
}
};
rval.callStack=[];
return rval;
},addToCallStack:function(_37c,path,func,once){
var self=MochiKit.DOM;
var _381=_37c[path];
var _382=_381;
if(!(typeof (_381)=="function"&&typeof (_381.callStack)=="object"&&_381.callStack!==null)){
_382=self._newCallStack(path,once);
if(typeof (_381)=="function"){
_382.callStack.push(_381);
}
_37c[path]=_382;
}
_382.callStack.push(func);
},addLoadEvent:function(func){
var self=MochiKit.DOM;
self.addToCallStack(self._window,"onload",func,true);
},focusOnLoad:function(_385){
var self=MochiKit.DOM;
self.addLoadEvent(function(){
_385=self.getElement(_385);
if(_385){
_385.focus();
}
});
},setElementClass:function(_387,_388){
var self=MochiKit.DOM;
var obj=self.getElement(_387);
if(self.attributeArray.compliant){
obj.setAttribute("class",_388);
}else{
obj.setAttribute("className",_388);
}
},toggleElementClass:function(_38b){
var self=MochiKit.DOM;
for(var i=1;i<arguments.length;i++){
var obj=self.getElement(arguments[i]);
if(!self.addElementClass(obj,_38b)){
self.removeElementClass(obj,_38b);
}
}
},addElementClass:function(_38f,_390){
var self=MochiKit.DOM;
var obj=self.getElement(_38f);
var cls=obj.className;
if(typeof (cls)!="string"){
cls=obj.getAttribute("class");
}
if(typeof (cls)!="string"||cls.length===0){
self.setElementClass(obj,_390);
return true;
}
if(cls==_390){
return false;
}
var _394=cls.split(" ");
for(var i=0;i<_394.length;i++){
if(_394[i]==_390){
return false;
}
}
self.setElementClass(obj,cls+" "+_390);
return true;
},removeElementClass:function(_396,_397){
var self=MochiKit.DOM;
var obj=self.getElement(_396);
var cls=obj.className;
if(typeof (cls)!="string"){
cls=obj.getAttribute("class");
}
if(typeof (cls)!="string"||cls.length===0){
return false;
}
if(cls==_397){
self.setElementClass(obj,"");
return true;
}
var _39b=cls.split(" ");
for(var i=0;i<_39b.length;i++){
if(_39b[i]==_397){
_39b.splice(i,1);
self.setElementClass(obj,_39b.join(" "));
return true;
}
}
return false;
},swapElementClass:function(_39d,_39e,_39f){
var obj=MochiKit.DOM.getElement(_39d);
var res=MochiKit.DOM.removeElementClass(obj,_39e);
if(res){
MochiKit.DOM.addElementClass(obj,_39f);
}
return res;
},hasElementClass:function(_3a2,_3a3){
var obj=MochiKit.DOM.getElement(_3a2);
if(obj==null){
return false;
}
var cls=obj.className;
if(typeof (cls)!="string"&&typeof (obj.getAttribute)=="function"){
cls=obj.getAttribute("class");
}
if(typeof (cls)!="string"){
return false;
}
var _3a6=cls.split(" ");
for(var i=1;i<arguments.length;i++){
var good=false;
for(var j=0;j<_3a6.length;j++){
if(_3a6[j]==arguments[i]){
good=true;
break;
}
}
if(!good){
return false;
}
}
return true;
},escapeHTML:function(s){
return s.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/</g,"&lt;").replace(/>/g,"&gt;");
},toHTML:function(dom){
return MochiKit.DOM.emitHTML(dom).join("");
},emitHTML:function(dom,lst){
if(typeof (lst)=="undefined"||lst===null){
lst=[];
}
var _3ae=[dom];
var self=MochiKit.DOM;
var _3b0=self.escapeHTML;
var _3b1=self.attributeArray;
while(_3ae.length){
dom=_3ae.pop();
if(typeof (dom)=="string"){
lst.push(dom);
}else{
if(dom.nodeType==1){
lst.push("<"+dom.tagName.toLowerCase());
var _3b2=[];
var _3b3=_3b1(dom);
for(var i=0;i<_3b3.length;i++){
var a=_3b3[i];
_3b2.push([" ",a.name,"=\"",_3b0(a.value),"\""]);
}
_3b2.sort();
for(i=0;i<_3b2.length;i++){
var _3b6=_3b2[i];
for(var j=0;j<_3b6.length;j++){
lst.push(_3b6[j]);
}
}
if(dom.hasChildNodes()){
lst.push(">");
_3ae.push("</"+dom.tagName.toLowerCase()+">");
var _3b8=dom.childNodes;
for(i=_3b8.length-1;i>=0;i--){
_3ae.push(_3b8[i]);
}
}else{
lst.push("/>");
}
}else{
if(dom.nodeType==3){
lst.push(_3b0(dom.nodeValue));
}
}
}
}
return lst;
},scrapeText:function(node,_3ba){
var rval=[];
(function(node){
var cn=node.childNodes;
if(cn){
for(var i=0;i<cn.length;i++){
arguments.callee.call(this,cn[i]);
}
}
var _3bf=node.nodeValue;
if(typeof (_3bf)=="string"){
rval.push(_3bf);
}
})(MochiKit.DOM.getElement(node));
if(_3ba){
return rval;
}else{
return rval.join("");
}
},removeEmptyTextNodes:function(_3c0){
_3c0=MochiKit.DOM.getElement(_3c0);
for(var i=0;i<_3c0.childNodes.length;i++){
var node=_3c0.childNodes[i];
if(node.nodeType==3&&!/\S/.test(node.nodeValue)){
node.parentNode.removeChild(node);
}
}
},getFirstElementByTagAndClassName:function(_3c3,_3c4,_3c5){
var self=MochiKit.DOM;
if(typeof (_3c3)=="undefined"||_3c3===null){
_3c3="*";
}
if(typeof (_3c5)=="undefined"||_3c5===null){
_3c5=self._document;
}
_3c5=self.getElement(_3c5);
if(_3c5==null){
return null;
}
var _3c7=(_3c5.getElementsByTagName(_3c3)||self._document.all);
if(_3c7.length<=0){
return null;
}else{
if(typeof (_3c4)=="undefined"||_3c4===null){
return _3c7[0];
}
}
for(var i=0;i<_3c7.length;i++){
var _3c9=_3c7[i];
var cls=_3c9.className;
if(typeof (cls)!="string"){
cls=_3c9.getAttribute("class");
}
if(typeof (cls)=="string"){
var _3cb=cls.split(" ");
for(var j=0;j<_3cb.length;j++){
if(_3cb[j]==_3c4){
return _3c9;
}
}
}
}
return null;
},getFirstParentByTagAndClassName:function(elem,_3ce,_3cf){
var self=MochiKit.DOM;
elem=self.getElement(elem);
if(typeof (_3ce)=="undefined"||_3ce===null){
_3ce="*";
}else{
_3ce=_3ce.toUpperCase();
}
if(typeof (_3cf)=="undefined"||_3cf===null){
_3cf=null;
}
if(elem){
elem=elem.parentNode;
}
while(elem&&elem.tagName){
var _3d1=elem.tagName.toUpperCase();
if((_3ce==="*"||_3ce==_3d1)&&(_3cf===null||self.hasElementClass(elem,_3cf))){
return elem;
}
elem=elem.parentNode;
}
return null;
},__new__:function(win){
var m=MochiKit.Base;
if(typeof (document)!="undefined"){
this._document=document;
var _3d4="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
this._xhtml=(document.documentElement&&document.createElementNS&&document.documentElement.namespaceURI===_3d4);
}else{
if(MochiKit.MockDOM){
this._document=MochiKit.MockDOM.document;
}
}
this._window=win;
this.domConverters=new m.AdapterRegistry();
var _3d5=this._document.createElement("span");
var _3d6;
if(_3d5&&_3d5.attributes&&_3d5.attributes.length>0){
var _3d7=m.filter;
_3d6=function(node){
return _3d7(_3d6.ignoreAttrFilter,node.attributes);
};
_3d6.ignoreAttr={};
var _3d9=_3d5.attributes;
var _3da=_3d6.ignoreAttr;
for(var i=0;i<_3d9.length;i++){
var a=_3d9[i];
_3da[a.name]=a.value;
}
_3d6.ignoreAttrFilter=function(a){
return (_3d6.ignoreAttr[a.name]!=a.value);
};
_3d6.compliant=false;
_3d6.renames={"class":"className","checked":"defaultChecked","usemap":"useMap","for":"htmlFor","readonly":"readOnly","colspan":"colSpan","bgcolor":"bgColor","cellspacing":"cellSpacing","cellpadding":"cellPadding"};
}else{
_3d6=function(node){
return node.attributes;
};
_3d6.compliant=true;
_3d6.ignoreAttr={};
_3d6.renames={};
}
_3d6.__export__=false;
this.attributeArray=_3d6;
m._deprecated(this,"computedStyle","MochiKit.Style.getStyle","1.4");
m._deprecated(this,"elementDimensions","MochiKit.Style.getElementDimensions","1.4");
m._deprecated(this,"elementPosition","MochiKit.Style.getElementPosition","1.4");
m._deprecated(this,"getViewportDimensions","MochiKit.Style.getViewportDimensions","1.4");
m._deprecated(this,"hideElement","MochiKit.Style.hideElement","1.4");
m._deprecated(this,"makeClipping","MochiKit.Style.makeClipping","1.4.1");
m._deprecated(this,"makePositioned","MochiKit.Style.makePositioned","1.4.1");
m._deprecated(this,"setElementDimensions","MochiKit.Style.setElementDimensions","1.4");
m._deprecated(this,"setElementPosition","MochiKit.Style.setElementPosition","1.4");
m._deprecated(this,"setDisplayForElement","MochiKit.Style.setDisplayForElement","1.4");
m._deprecated(this,"setOpacity","MochiKit.Style.setOpacity","1.4");
m._deprecated(this,"showElement","MochiKit.Style.showElement","1.4");
m._deprecated(this,"undoClipping","MochiKit.Style.undoClipping","1.4.1");
m._deprecated(this,"undoPositioned","MochiKit.Style.undoPositioned","1.4.1");
m._deprecated(this,"Coordinates","MochiKit.Style.Coordinates","1.4");
m._deprecated(this,"Dimensions","MochiKit.Style.Dimensions","1.4");
var _3df=this.createDOMFunc;
this.UL=_3df("ul");
this.OL=_3df("ol");
this.LI=_3df("li");
this.DL=_3df("dl");
this.DT=_3df("dt");
this.DD=_3df("dd");
this.TD=_3df("td");
this.TR=_3df("tr");
this.TBODY=_3df("tbody");
this.THEAD=_3df("thead");
this.TFOOT=_3df("tfoot");
this.TABLE=_3df("table");
this.TH=_3df("th");
this.INPUT=_3df("input");
this.SPAN=_3df("span");
this.A=_3df("a");
this.DIV=_3df("div");
this.IMG=_3df("img");
this.BUTTON=_3df("button");
this.TT=_3df("tt");
this.PRE=_3df("pre");
this.H1=_3df("h1");
this.H2=_3df("h2");
this.H3=_3df("h3");
this.H4=_3df("h4");
this.H5=_3df("h5");
this.H6=_3df("h6");
this.BR=_3df("br");
this.HR=_3df("hr");
this.LABEL=_3df("label");
this.TEXTAREA=_3df("textarea");
this.FORM=_3df("form");
this.P=_3df("p");
this.SELECT=_3df("select");
this.OPTION=_3df("option");
this.OPTGROUP=_3df("optgroup");
this.LEGEND=_3df("legend");
this.FIELDSET=_3df("fieldset");
this.STRONG=_3df("strong");
this.CANVAS=_3df("canvas");
this.$=this.getElement;
m.nameFunctions(this);
}});
MochiKit.DOM.__new__(((typeof (window)=="undefined")?this:window));
if(MochiKit.__export__){
withWindow=MochiKit.DOM.withWindow;
withDocument=MochiKit.DOM.withDocument;
}
MochiKit.Base._exportSymbols(this,MochiKit.DOM);
MochiKit.Base._module("Selector","1.5",["Base","DOM","Iter"]);
MochiKit.Selector.Selector=function(_3e0){
this.params={classNames:[],pseudoClassNames:[]};
this.expression=_3e0.toString().replace(/(^\s+|\s+$)/g,"");
this.parseExpression();
this.compileMatcher();
};
MochiKit.Selector.Selector.prototype={__class__:MochiKit.Selector.Selector,parseExpression:function(){
function abort(_3e1){
throw "Parse error in selector: "+_3e1;
}
if(this.expression==""){
abort("empty expression");
}
var repr=MochiKit.Base.repr;
var _3e3=this.params;
var expr=this.expression;
var _3e5,_3e6,_3e7,rest;
while(_3e5=expr.match(/^(.*)\[([a-z0-9_:-]+?)(?:([~\|!^$*]?=)(?:"([^"]*)"|([^\]\s]*)))?\]$/i)){
_3e3.attributes=_3e3.attributes||[];
_3e3.attributes.push({name:_3e5[2],operator:_3e5[3],value:_3e5[4]||_3e5[5]||""});
expr=_3e5[1];
}
if(expr=="*"){
return this.params.wildcard=true;
}
while(_3e5=expr.match(/^([^a-z0-9_-])?([a-z0-9_-]+(?:\([^)]*\))?)(.*)/i)){
_3e6=_3e5[1];
_3e7=_3e5[2];
rest=_3e5[3];
switch(_3e6){
case "#":
_3e3.id=_3e7;
break;
case ".":
_3e3.classNames.push(_3e7);
break;
case ":":
_3e3.pseudoClassNames.push(_3e7);
break;
case "":
case undefined:
_3e3.tagName=_3e7.toUpperCase();
break;
default:
abort(repr(expr));
}
expr=rest;
}
if(expr.length>0){
abort(repr(expr));
}
},buildMatchExpression:function(){
var repr=MochiKit.Base.repr;
var _3ea=this.params;
var _3eb=[];
var _3ec,i;
function childElements(_3ee){
return "MochiKit.Base.filter(function (node) { return node.nodeType == 1; }, "+_3ee+".childNodes)";
}
if(_3ea.wildcard){
_3eb.push("true");
}
if(_3ec=_3ea.id){
_3eb.push("element.id == "+repr(_3ec));
}
if(_3ec=_3ea.tagName){
_3eb.push("element.tagName.toUpperCase() == "+repr(_3ec));
}
if((_3ec=_3ea.classNames).length>0){
for(i=0;i<_3ec.length;i++){
_3eb.push("MochiKit.DOM.hasElementClass(element, "+repr(_3ec[i])+")");
}
}
if((_3ec=_3ea.pseudoClassNames).length>0){
for(i=0;i<_3ec.length;i++){
var _3ef=_3ec[i].match(/^([^(]+)(?:\((.*)\))?$/);
var _3f0=_3ef[1];
var _3f1=_3ef[2];
switch(_3f0){
case "root":
_3eb.push("element.nodeType == 9 || element === element.ownerDocument.documentElement");
break;
case "nth-child":
case "nth-last-child":
case "nth-of-type":
case "nth-last-of-type":
_3ef=_3f1.match(/^((?:(\d+)n\+)?(\d+)|odd|even)$/);
if(!_3ef){
throw "Invalid argument to pseudo element nth-child: "+_3f1;
}
var a,b;
if(_3ef[0]=="odd"){
a=2;
b=1;
}else{
if(_3ef[0]=="even"){
a=2;
b=0;
}else{
a=_3ef[2]&&parseInt(_3ef)||null;
b=parseInt(_3ef[3]);
}
}
_3eb.push("this.nthChild(element,"+a+","+b+","+!!_3f0.match("^nth-last")+","+!!_3f0.match("of-type$")+")");
break;
case "first-child":
_3eb.push("this.nthChild(element, null, 1)");
break;
case "last-child":
_3eb.push("this.nthChild(element, null, 1, true)");
break;
case "first-of-type":
_3eb.push("this.nthChild(element, null, 1, false, true)");
break;
case "last-of-type":
_3eb.push("this.nthChild(element, null, 1, true, true)");
break;
case "only-child":
_3eb.push(childElements("element.parentNode")+".length == 1");
break;
case "only-of-type":
_3eb.push("MochiKit.Base.filter(function (node) { return node.tagName == element.tagName; }, "+childElements("element.parentNode")+").length == 1");
break;
case "empty":
_3eb.push("element.childNodes.length == 0");
break;
case "enabled":
_3eb.push("(this.isUIElement(element) && element.disabled === false)");
break;
case "disabled":
_3eb.push("(this.isUIElement(element) && element.disabled === true)");
break;
case "checked":
_3eb.push("(this.isUIElement(element) && element.checked === true)");
break;
case "not":
var _3f4=new MochiKit.Selector.Selector(_3f1);
_3eb.push("!( "+_3f4.buildMatchExpression()+")");
break;
}
}
}
if(_3ec=_3ea.attributes){
MochiKit.Base.map(function(_3f5){
var _3f6="MochiKit.DOM.getNodeAttribute(element, "+repr(_3f5.name)+")";
var _3f7=function(_3f8){
return _3f6+".split("+repr(_3f8)+")";
};
_3eb.push(_3f6+" != null");
switch(_3f5.operator){
case "=":
_3eb.push(_3f6+" == "+repr(_3f5.value));
break;
case "~=":
_3eb.push("MochiKit.Base.findValue("+_3f7(" ")+", "+repr(_3f5.value)+") > -1");
break;
case "^=":
_3eb.push(_3f6+".substring(0, "+_3f5.value.length+") == "+repr(_3f5.value));
break;
case "$=":
_3eb.push(_3f6+".substring("+_3f6+".length - "+_3f5.value.length+") == "+repr(_3f5.value));
break;
case "*=":
_3eb.push(_3f6+".match("+repr(_3f5.value)+")");
break;
case "|=":
_3eb.push(_3f7("-")+"[0].toUpperCase() == "+repr(_3f5.value.toUpperCase()));
break;
case "!=":
_3eb.push(_3f6+" != "+repr(_3f5.value));
break;
case "":
case undefined:
break;
default:
throw "Unknown operator "+_3f5.operator+" in selector";
}
},_3ec);
}
return _3eb.join(" && ");
},compileMatcher:function(){
var code="return (!element.tagName) ? false : "+this.buildMatchExpression()+";";
this.match=new Function("element",code);
},nthChild:function(_3fa,a,b,_3fd,_3fe){
var _3ff=MochiKit.Base.filter(function(node){
return node.nodeType==1;
},_3fa.parentNode.childNodes);
if(_3fe){
_3ff=MochiKit.Base.filter(function(node){
return node.tagName==_3fa.tagName;
},_3ff);
}
if(_3fd){
_3ff=MochiKit.Iter.reversed(_3ff);
}
if(a){
var _402=MochiKit.Base.findIdentical(_3ff,_3fa);
return ((_402+1-b)/a)%1==0;
}else{
return b==MochiKit.Base.findIdentical(_3ff,_3fa)+1;
}
},isUIElement:function(_403){
return MochiKit.Base.findValue(["input","button","select","option","textarea","object"],_403.tagName.toLowerCase())>-1;
},findElements:function(_404,axis){
var _406;
if(axis==undefined){
axis="";
}
function inScope(_407,_408){
if(axis==""){
return MochiKit.DOM.isChildNode(_407,_408);
}else{
if(axis==">"){
return _407.parentNode===_408;
}else{
if(axis=="+"){
return _407===nextSiblingElement(_408);
}else{
if(axis=="~"){
var _409=_408;
while(_409=nextSiblingElement(_409)){
if(_407===_409){
return true;
}
}
return false;
}else{
throw "Invalid axis: "+axis;
}
}
}
}
}
if(_406=MochiKit.DOM.getElement(this.params.id)){
if(this.match(_406)){
if(!_404||inScope(_406,_404)){
return [_406];
}
}
}
function nextSiblingElement(node){
node=node.nextSibling;
while(node&&node.nodeType!=1){
node=node.nextSibling;
}
return node;
}
if(axis==""){
_404=(_404||MochiKit.DOM.currentDocument()).getElementsByTagName(this.params.tagName||"*");
}else{
if(axis==">"){
if(!_404){
throw "> combinator not allowed without preceeding expression";
}
_404=MochiKit.Base.filter(function(node){
return node.nodeType==1;
},_404.childNodes);
}else{
if(axis=="+"){
if(!_404){
throw "+ combinator not allowed without preceeding expression";
}
_404=nextSiblingElement(_404)&&[nextSiblingElement(_404)];
}else{
if(axis=="~"){
if(!_404){
throw "~ combinator not allowed without preceeding expression";
}
var _40c=[];
while(nextSiblingElement(_404)){
_404=nextSiblingElement(_404);
_40c.push(_404);
}
_404=_40c;
}
}
}
}
if(!_404){
return [];
}
var _40d=MochiKit.Base.filter(MochiKit.Base.bind(function(_40e){
return this.match(_40e);
},this),_404);
return _40d;
},repr:function(){
return "Selector("+this.expression+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Base.update(MochiKit.Selector,{findChildElements:function(_40f,_410){
_40f=MochiKit.DOM.getElement(_40f);
var uniq=function(arr){
var res=[];
for(var i=0;i<arr.length;i++){
if(MochiKit.Base.findIdentical(res,arr[i])<0){
res.push(arr[i]);
}
}
return res;
};
return MochiKit.Base.flattenArray(MochiKit.Base.map(function(_415){
var _416="";
var _417=function(_418,expr){
if(match=expr.match(/^[>+~]$/)){
_416=match[0];
return _418;
}else{
var _41a=new MochiKit.Selector.Selector(expr);
var _41b=MochiKit.Iter.reduce(function(_41c,_41d){
return MochiKit.Base.extend(_41c,_41a.findElements(_41d||_40f,_416));
},_418,[]);
_416="";
return _41b;
}
};
var _41e=_415.replace(/(^\s+|\s+$)/g,"").split(/\s+/);
return uniq(MochiKit.Iter.reduce(_417,_41e,[null]));
},_410));
},findDocElements:function(){
return MochiKit.Selector.findChildElements(MochiKit.DOM.currentDocument(),arguments);
},__new__:function(){
this.$$=this.findDocElements;
MochiKit.Base.nameFunctions(this);
}});
MochiKit.Selector.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Selector);
MochiKit.Base._module("Style","1.5",["Base","DOM"]);
MochiKit.Style.Dimensions=function(w,h){
if(!(this instanceof MochiKit.Style.Dimensions)){
return new MochiKit.Style.Dimensions(w,h);
}
this.w=w;
this.h=h;
};
MochiKit.Style.Dimensions.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{w: "+repr(this.w)+", h: "+repr(this.h)+"}";
};
MochiKit.Style.Dimensions.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Style.Coordinates=function(x,y){
if(!(this instanceof MochiKit.Style.Coordinates)){
return new MochiKit.Style.Coordinates(x,y);
}
this.x=x;
this.y=y;
};
MochiKit.Style.Coordinates.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{x: "+repr(this.x)+", y: "+repr(this.y)+"}";
};
MochiKit.Style.Coordinates.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Base.update(MochiKit.Style,{getStyle:function(elem,_426){
var dom=MochiKit.DOM;
var d=dom._document;
elem=dom.getElement(elem);
_426=MochiKit.Base.camelize(_426);
if(!elem||elem==d){
return undefined;
}
if(_426=="opacity"&&typeof (elem.filters)!="undefined"){
var _429=(MochiKit.Style.getStyle(elem,"filter")||"").match(/alpha\(opacity=(.*)\)/);
if(_429&&_429[1]){
return parseFloat(_429[1])/100;
}
return 1;
}
if(_426=="float"||_426=="cssFloat"||_426=="styleFloat"){
if(elem.style["float"]){
return elem.style["float"];
}else{
if(elem.style.cssFloat){
return elem.style.cssFloat;
}else{
if(elem.style.styleFloat){
return elem.style.styleFloat;
}else{
return "none";
}
}
}
}
var _42a=elem.style?elem.style[_426]:null;
if(!_42a){
if(d.defaultView&&d.defaultView.getComputedStyle){
var css=d.defaultView.getComputedStyle(elem,null);
_426=_426.replace(/([A-Z])/g,"-$1").toLowerCase();
_42a=css?css.getPropertyValue(_426):null;
}else{
if(elem.currentStyle){
_42a=elem.currentStyle[_426];
if(/^\d/.test(_42a)&&!/px$/.test(_42a)&&_426!="fontWeight"){
var left=elem.style.left;
var _42d=elem.runtimeStyle.left;
elem.runtimeStyle.left=elem.currentStyle.left;
elem.style.left=_42a||0;
_42a=elem.style.pixelLeft+"px";
elem.style.left=left;
elem.runtimeStyle.left=_42d;
}
}
}
}
if(_426=="opacity"){
_42a=parseFloat(_42a);
}
if(/Opera/.test(navigator.userAgent)&&(MochiKit.Base.findValue(["left","top","right","bottom"],_426)!=-1)){
if(MochiKit.Style.getStyle(elem,"position")=="static"){
_42a="auto";
}
}
return _42a=="auto"?null:_42a;
},setStyle:function(elem,_42f){
elem=MochiKit.DOM.getElement(elem);
for(var name in _42f){
switch(name){
case "opacity":
MochiKit.Style.setOpacity(elem,_42f[name]);
break;
case "float":
case "cssFloat":
case "styleFloat":
if(typeof (elem.style["float"])!="undefined"){
elem.style["float"]=_42f[name];
}else{
if(typeof (elem.style.cssFloat)!="undefined"){
elem.style.cssFloat=_42f[name];
}else{
elem.style.styleFloat=_42f[name];
}
}
break;
default:
elem.style[MochiKit.Base.camelize(name)]=_42f[name];
}
}
},setOpacity:function(elem,o){
elem=MochiKit.DOM.getElement(elem);
var self=MochiKit.Style;
if(o==1){
var _434=/Gecko/.test(navigator.userAgent)&&!(/Konqueror|AppleWebKit|KHTML/.test(navigator.userAgent));
elem.style["opacity"]=_434?0.999999:1;
if(/MSIE/.test(navigator.userAgent)){
elem.style["filter"]=self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"");
}
}else{
if(o<0.00001){
o=0;
}
elem.style["opacity"]=o;
if(/MSIE/.test(navigator.userAgent)){
elem.style["filter"]=self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"")+"alpha(opacity="+o*100+")";
}
}
},getElementPosition:function(elem,_436){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
var _439=function(o){
return o!=null&&o.nodeType==null&&typeof (o.x)=="number"&&typeof (o.y)=="number";
};
if(!_439(elem)){
elem=dom.getElement(elem);
}
if(elem==null||(!_439(elem)&&self.getStyle(elem,"display")=="none")){
return undefined;
}
var c=new self.Coordinates(0,0);
var box=null;
var _43d=null;
var d=MochiKit.DOM._document;
var de=d.documentElement;
var b=d.body;
if(!elem.parentNode&&elem.x&&elem.y){
c.x+=elem.x||0;
c.y+=elem.y||0;
}else{
if(elem.getBoundingClientRect){
box=elem.getBoundingClientRect();
c.x+=box.left+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
c.y+=box.top+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
}else{
if(elem.offsetParent){
c.x+=elem.offsetLeft;
c.y+=elem.offsetTop;
_43d=elem.offsetParent;
if(_43d!=elem){
while(_43d){
c.x+=parseInt(_43d.style.borderLeftWidth)||0;
c.y+=parseInt(_43d.style.borderTopWidth)||0;
c.x+=_43d.offsetLeft;
c.y+=_43d.offsetTop;
_43d=_43d.offsetParent;
}
}
var ua=navigator.userAgent.toLowerCase();
if((typeof (opera)!="undefined"&&parseFloat(opera.version())<9)||(ua.indexOf("AppleWebKit")!=-1&&self.getStyle(elem,"position")=="absolute")){
c.x-=b.offsetLeft;
c.y-=b.offsetTop;
}
if(elem.parentNode){
_43d=elem.parentNode;
}else{
_43d=null;
}
while(_43d){
var _442=_43d.tagName.toUpperCase();
if(_442==="BODY"||_442==="HTML"){
break;
}
var disp=self.getStyle(_43d,"display");
if(disp.search(/^inline|table-row.*$/i)){
c.x-=_43d.scrollLeft;
c.y-=_43d.scrollTop;
}
if(_43d.parentNode){
_43d=_43d.parentNode;
}else{
_43d=null;
}
}
}
}
}
if(_436){
_436=arguments.callee(_436);
if(_436){
c.x-=(_436.x||0);
c.y-=(_436.y||0);
}
}
return c;
},setElementPosition:function(elem,_445,_446){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_446)=="undefined"){
_446="px";
}
var _447={};
var _448=MochiKit.Base.isUndefinedOrNull;
if(!_448(_445.x)){
_447["left"]=_445.x+_446;
}
if(!_448(_445.y)){
_447["top"]=_445.y+_446;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_447});
},makePositioned:function(_449){
_449=MochiKit.DOM.getElement(_449);
var pos=MochiKit.Style.getStyle(_449,"position");
if(pos=="static"||!pos){
_449.style.position="relative";
if(/Opera/.test(navigator.userAgent)){
_449.style.top=0;
_449.style.left=0;
}
}
},undoPositioned:function(_44b){
_44b=MochiKit.DOM.getElement(_44b);
if(_44b.style.position=="relative"){
_44b.style.position=_44b.style.top=_44b.style.left=_44b.style.bottom=_44b.style.right="";
}
},makeClipping:function(_44c){
_44c=MochiKit.DOM.getElement(_44c);
var s=_44c.style;
var _44e={"overflow":s.overflow,"overflow-x":s.overflowX,"overflow-y":s.overflowY};
if((MochiKit.Style.getStyle(_44c,"overflow")||"visible")!="hidden"){
_44c.style.overflow="hidden";
_44c.style.overflowX="hidden";
_44c.style.overflowY="hidden";
}
return _44e;
},undoClipping:function(_44f,_450){
_44f=MochiKit.DOM.getElement(_44f);
if(typeof (_450)=="string"){
_44f.style.overflow=_450;
}else{
if(_450!=null){
_44f.style.overflow=_450["overflow"];
_44f.style.overflowX=_450["overflow-x"];
_44f.style.overflowY=_450["overflow-y"];
}
}
},getElementDimensions:function(elem,_452){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
if(typeof (elem.w)=="number"||typeof (elem.h)=="number"){
return new self.Dimensions(elem.w||0,elem.h||0);
}
elem=dom.getElement(elem);
if(!elem){
return undefined;
}
var disp=self.getStyle(elem,"display");
if(disp=="none"||disp==""||typeof (disp)=="undefined"){
var s=elem.style;
var _457=s.visibility;
var _458=s.position;
var _459=s.display;
s.visibility="hidden";
s.position="absolute";
s.display=self._getDefaultDisplay(elem);
var _45a=elem.offsetWidth;
var _45b=elem.offsetHeight;
s.display=_459;
s.position=_458;
s.visibility=_457;
}else{
_45a=elem.offsetWidth||0;
_45b=elem.offsetHeight||0;
}
if(_452){
var _45c="colSpan" in elem&&"rowSpan" in elem;
var _45d=(_45c&&elem.parentNode&&self.getStyle(elem.parentNode,"borderCollapse")=="collapse");
if(_45d){
if(/MSIE/.test(navigator.userAgent)){
var _45e=elem.previousSibling?0.5:1;
var _45f=elem.nextSibling?0.5:1;
}else{
var _45e=0.5;
var _45f=0.5;
}
}else{
var _45e=1;
var _45f=1;
}
_45a-=Math.round((parseFloat(self.getStyle(elem,"paddingLeft"))||0)+(parseFloat(self.getStyle(elem,"paddingRight"))||0)+_45e*(parseFloat(self.getStyle(elem,"borderLeftWidth"))||0)+_45f*(parseFloat(self.getStyle(elem,"borderRightWidth"))||0));
if(_45c){
if(/Gecko|Opera/.test(navigator.userAgent)&&!/Konqueror|AppleWebKit|KHTML/.test(navigator.userAgent)){
var _460=0;
}else{
if(/MSIE/.test(navigator.userAgent)){
var _460=1;
}else{
var _460=_45d?0.5:1;
}
}
}else{
var _460=1;
}
_45b-=Math.round((parseFloat(self.getStyle(elem,"paddingTop"))||0)+(parseFloat(self.getStyle(elem,"paddingBottom"))||0)+_460*((parseFloat(self.getStyle(elem,"borderTopWidth"))||0)+(parseFloat(self.getStyle(elem,"borderBottomWidth"))||0)));
}
return new self.Dimensions(_45a,_45b);
},setElementDimensions:function(elem,_462,_463){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_463)=="undefined"){
_463="px";
}
var _464={};
var _465=MochiKit.Base.isUndefinedOrNull;
if(!_465(_462.w)){
_464["width"]=_462.w+_463;
}
if(!_465(_462.h)){
_464["height"]=_462.h+_463;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_464});
},_getDefaultDisplay:function(elem){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
elem=dom.getElement(elem);
if(!elem){
return undefined;
}
var _469=elem.tagName.toUpperCase();
return self._defaultDisplay[_469]||"block";
},setDisplayForElement:function(_46a,_46b){
var _46c=MochiKit.Base.extend(null,arguments,1);
var _46d=MochiKit.DOM.getElement;
for(var i=0;i<_46c.length;i++){
_46b=_46d(_46c[i]);
if(_46b){
_46b.style.display=_46a;
}
}
},getViewportDimensions:function(){
var d=new MochiKit.Style.Dimensions();
var w=MochiKit.DOM._window;
var b=MochiKit.DOM._document.body;
if(w.innerWidth){
d.w=w.innerWidth;
d.h=w.innerHeight;
}else{
if(b&&b.parentElement&&b.parentElement.clientWidth){
d.w=b.parentElement.clientWidth;
d.h=b.parentElement.clientHeight;
}else{
if(b&&b.clientWidth){
d.w=b.clientWidth;
d.h=b.clientHeight;
}
}
}
return d;
},getViewportPosition:function(){
var c=new MochiKit.Style.Coordinates(0,0);
var d=MochiKit.DOM._document;
var de=d.documentElement;
var db=d.body;
if(de&&(de.scrollTop||de.scrollLeft)){
c.x=de.scrollLeft;
c.y=de.scrollTop;
}else{
if(db){
c.x=db.scrollLeft;
c.y=db.scrollTop;
}
}
return c;
},__new__:function(){
var m=MochiKit.Base;
var _477=["A","ABBR","ACRONYM","B","BASEFONT","BDO","BIG","BR","CITE","CODE","DFN","EM","FONT","I","IMG","KBD","LABEL","Q","S","SAMP","SMALL","SPAN","STRIKE","STRONG","SUB","SUP","TEXTAREA","TT","U","VAR"];
this._defaultDisplay={"TABLE":"table","THEAD":"table-header-group","TBODY":"table-row-group","TFOOT":"table-footer-group","COLGROUP":"table-column-group","COL":"table-column","TR":"table-row","TD":"table-cell","TH":"table-cell","CAPTION":"table-caption","LI":"list-item","INPUT":"inline-block","SELECT":"inline-block"};
if(/MSIE/.test(navigator.userAgent)){
for(var k in this._defaultDisplay){
var v=this._defaultDisplay[k];
if(v.indexOf("table")==0){
this._defaultDisplay[k]="block";
}
}
}
for(var i=0;i<_477.length;i++){
this._defaultDisplay[_477[i]]="inline";
}
m._deprecated(this,"elementPosition","MochiKit.Style.getElementPosition","1.3");
m._deprecated(this,"elementDimensions","MochiKit.Style.getElementDimensions","1.3");
this.hideElement=m.partial(this.setDisplayForElement,"none");
this.showElement=m.partial(this.setDisplayForElement,"block");
m.nameFunctions(this);
}});
MochiKit.Style.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Style);
MochiKit.Base._module("LoggingPane","1.5",["Base","Logging"]);
MochiKit.LoggingPane.createLoggingPane=function(_47b){
var m=MochiKit.LoggingPane;
_47b=!(!_47b);
if(m._loggingPane&&m._loggingPane.inline!=_47b){
m._loggingPane.closePane();
m._loggingPane=null;
}
if(!m._loggingPane||m._loggingPane.closed){
m._loggingPane=new m.LoggingPane(_47b,MochiKit.Logging.logger);
}
return m._loggingPane;
};
MochiKit.LoggingPane.LoggingPane=function(_47d,_47e){
if(typeof (_47e)=="undefined"||_47e===null){
_47e=MochiKit.Logging.logger;
}
this.logger=_47e;
var _47f=MochiKit.Base.update;
var _480=MochiKit.Base.updatetree;
var bind=MochiKit.Base.bind;
var _482=MochiKit.Base.clone;
var win=window;
var uid="_MochiKit_LoggingPane";
if(typeof (MochiKit.DOM)!="undefined"){
win=MochiKit.DOM.currentWindow();
}
if(!_47d){
var url=win.location.href.split("?")[0].replace(/[#:\/.><&%-]/g,"_");
var name=uid+"_"+url;
var nwin=win.open("",name,"dependent,resizable,height=200");
if(!nwin){
alert("Not able to open debugging window due to pop-up blocking.");
return undefined;
}
nwin.document.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" "+"\"http://www.w3.org/TR/html4/loose.dtd\">"+"<html><head><title>[MochiKit.LoggingPane]</title></head>"+"<body></body></html>");
nwin.document.close();
nwin.document.title+=" "+win.document.title;
win=nwin;
}
var doc=win.document;
this.doc=doc;
var _489=doc.getElementById(uid);
var _48a=!!_489;
if(_489&&typeof (_489.loggingPane)!="undefined"){
_489.loggingPane.logger=this.logger;
_489.loggingPane.buildAndApplyFilter();
return _489.loggingPane;
}
if(_48a){
var _48b;
while((_48b=_489.firstChild)){
_489.removeChild(_48b);
}
}else{
_489=doc.createElement("div");
_489.id=uid;
}
_489.loggingPane=this;
var _48c=doc.createElement("input");
var _48d=doc.createElement("input");
var _48e=doc.createElement("button");
var _48f=doc.createElement("button");
var _490=doc.createElement("button");
var _491=doc.createElement("button");
var _492=doc.createElement("div");
var _493=doc.createElement("div");
var _494=uid+"_Listener";
this.colorTable=_482(this.colorTable);
var _495=[];
var _496=null;
var _497=function(msg){
var _499=msg.level;
if(typeof (_499)=="number"){
_499=MochiKit.Logging.LogLevel[_499];
}
return _499;
};
var _49a=function(msg){
return msg.info.join(" ");
};
var _49c=bind(function(msg){
var _49e=_497(msg);
var text=_49a(msg);
var c=this.colorTable[_49e];
var p=doc.createElement("span");
p.className="MochiKit-LogMessage MochiKit-LogLevel-"+_49e;
p.style.cssText="margin: 0px; white-space: -moz-pre-wrap; white-space: -o-pre-wrap; white-space: pre-wrap; white-space: pre-line; word-wrap: break-word; wrap-option: emergency; color: "+c;
p.appendChild(doc.createTextNode(_49e+": "+text));
_493.appendChild(p);
_493.appendChild(doc.createElement("br"));
if(_492.offsetHeight>_492.scrollHeight){
_492.scrollTop=0;
}else{
_492.scrollTop=_492.scrollHeight;
}
},this);
var _4a2=function(msg){
_495[_495.length]=msg;
_49c(msg);
};
var _4a4=function(){
var _4a5,_4a6;
try{
_4a5=new RegExp(_48c.value);
_4a6=new RegExp(_48d.value);
}
catch(e){
logDebug("Error in filter regex: "+e.message);
return null;
}
return function(msg){
return (_4a5.test(_497(msg))&&_4a6.test(_49a(msg)));
};
};
var _4a8=function(){
while(_493.firstChild){
_493.removeChild(_493.firstChild);
}
};
var _4a9=function(){
_495=[];
_4a8();
};
var _4aa=bind(function(){
if(this.closed){
return;
}
this.closed=true;
if(MochiKit.LoggingPane._loggingPane==this){
MochiKit.LoggingPane._loggingPane=null;
}
this.logger.removeListener(_494);
try{
try{
_489.loggingPane=null;
}
catch(e){
logFatal("Bookmarklet was closed incorrectly.");
}
if(_47d){
_489.parentNode.removeChild(_489);
}else{
this.win.close();
}
}
catch(e){
}
},this);
var _4ab=function(){
_4a8();
for(var i=0;i<_495.length;i++){
var msg=_495[i];
if(_496===null||_496(msg)){
_49c(msg);
}
}
};
this.buildAndApplyFilter=function(){
_496=_4a4();
_4ab();
this.logger.removeListener(_494);
this.logger.addListener(_494,_496,_4a2);
};
var _4ae=bind(function(){
_495=this.logger.getMessages();
_4ab();
},this);
var _4af=bind(function(_4b0){
_4b0=_4b0||window.event;
key=_4b0.which||_4b0.keyCode;
if(key==13){
this.buildAndApplyFilter();
}
},this);
var _4b1="display: block; z-index: 1000; left: 0px; bottom: 0px; position: fixed; width: 100%; background-color: white; font: "+this.logFont;
if(_47d){
_4b1+="; height: 10em; border-top: 2px solid black";
}else{
_4b1+="; height: 100%;";
}
_489.style.cssText=_4b1;
if(!_48a){
doc.body.appendChild(_489);
}
_4b1={"cssText":"width: 33%; display: inline; font: "+this.logFont};
_480(_48c,{"value":"FATAL|ERROR|WARNING|INFO|DEBUG","onkeypress":_4af,"style":_4b1});
_489.appendChild(_48c);
_480(_48d,{"value":".*","onkeypress":_4af,"style":_4b1});
_489.appendChild(_48d);
_4b1="width: 8%; display:inline; font: "+this.logFont;
_48e.appendChild(doc.createTextNode("Filter"));
_48e.onclick=bind("buildAndApplyFilter",this);
_48e.style.cssText=_4b1;
_489.appendChild(_48e);
_48f.appendChild(doc.createTextNode("Load"));
_48f.onclick=_4ae;
_48f.style.cssText=_4b1;
_489.appendChild(_48f);
_490.appendChild(doc.createTextNode("Clear"));
_490.onclick=_4a9;
_490.style.cssText=_4b1;
_489.appendChild(_490);
_491.appendChild(doc.createTextNode("Close"));
_491.onclick=_4aa;
_491.style.cssText=_4b1;
_489.appendChild(_491);
_492.style.cssText="overflow: auto; width: 100%";
_493.style.cssText="width: 100%; height: "+(_47d?"8em":"100%");
_492.appendChild(_493);
_489.appendChild(_492);
this.buildAndApplyFilter();
_4ae();
if(_47d){
this.win=undefined;
}else{
this.win=win;
}
this.inline=_47d;
this.closePane=_4aa;
this.closed=false;
return this;
};
MochiKit.LoggingPane.LoggingPane.prototype={"logFont":"8pt Verdana,sans-serif","colorTable":{"ERROR":"red","FATAL":"darkred","WARNING":"blue","INFO":"black","DEBUG":"green"}};
MochiKit.LoggingPane.__new__=function(){
MochiKit.Base.nameFunctions(this);
MochiKit.LoggingPane._loggingPane=null;
};
MochiKit.LoggingPane.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.LoggingPane);
MochiKit.Base._module("Color","1.5",["Base","DOM","Style"]);
MochiKit.Color.Color=function(red,_4b3,blue,_4b5){
if(typeof (_4b5)=="undefined"||_4b5===null){
_4b5=1;
}
this.rgb={r:red,g:_4b3,b:blue,a:_4b5};
};
MochiKit.Color.Color.prototype={__class__:MochiKit.Color.Color,colorWithAlpha:function(_4b6){
var rgb=this.rgb;
var m=MochiKit.Color;
return m.Color.fromRGB(rgb.r,rgb.g,rgb.b,_4b6);
},colorWithHue:function(hue){
var hsl=this.asHSL();
hsl.h=hue;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithSaturation:function(_4bc){
var hsl=this.asHSL();
hsl.s=_4bc;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithLightness:function(_4bf){
var hsl=this.asHSL();
hsl.l=_4bf;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},darkerColorWithLevel:function(_4c2){
var hsl=this.asHSL();
hsl.l=Math.max(hsl.l-_4c2,0);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},lighterColorWithLevel:function(_4c5){
var hsl=this.asHSL();
hsl.l=Math.min(hsl.l+_4c5,1);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},blendedColor:function(_4c8,_4c9){
if(typeof (_4c9)=="undefined"||_4c9===null){
_4c9=0.5;
}
var sf=1-_4c9;
var s=this.rgb;
var d=_4c8.rgb;
var df=_4c9;
return MochiKit.Color.Color.fromRGB((s.r*sf)+(d.r*df),(s.g*sf)+(d.g*df),(s.b*sf)+(d.b*df),(s.a*sf)+(d.a*df));
},compareRGB:function(_4ce){
var a=this.asRGB();
var b=_4ce.asRGB();
return MochiKit.Base.compare([a.r,a.g,a.b,a.a],[b.r,b.g,b.b,b.a]);
},isLight:function(){
return this.asHSL().b>0.5;
},isDark:function(){
return (!this.isLight());
},toHSLString:function(){
var c=this.asHSL();
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hslString;
if(!rval){
var mid=(ccc(c.h,360).toFixed(0)+","+ccc(c.s,100).toPrecision(4)+"%"+","+ccc(c.l,100).toPrecision(4)+"%");
var a=c.a;
if(a>=1){
a=1;
rval="hsl("+mid+")";
}else{
if(a<=0){
a=0;
}
rval="hsla("+mid+","+a+")";
}
this._hslString=rval;
}
return rval;
},toRGBString:function(){
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._rgbString;
if(!rval){
var mid=(ccc(c.r,255).toFixed(0)+","+ccc(c.g,255).toFixed(0)+","+ccc(c.b,255).toFixed(0));
if(c.a!=1){
rval="rgba("+mid+","+c.a+")";
}else{
rval="rgb("+mid+")";
}
this._rgbString=rval;
}
return rval;
},asRGB:function(){
return MochiKit.Base.clone(this.rgb);
},toHexString:function(){
var m=MochiKit.Color;
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hexString;
if(!rval){
rval=("#"+m.toColorPart(ccc(c.r,255))+m.toColorPart(ccc(c.g,255))+m.toColorPart(ccc(c.b,255)));
this._hexString=rval;
}
return rval;
},asHSV:function(){
var hsv=this.hsv;
var c=this.rgb;
if(typeof (hsv)=="undefined"||hsv===null){
hsv=MochiKit.Color.rgbToHSV(this.rgb);
this.hsv=hsv;
}
return MochiKit.Base.clone(hsv);
},asHSL:function(){
var hsl=this.hsl;
var c=this.rgb;
if(typeof (hsl)=="undefined"||hsl===null){
hsl=MochiKit.Color.rgbToHSL(this.rgb);
this.hsl=hsl;
}
return MochiKit.Base.clone(hsl);
},toString:function(){
return this.toRGBString();
},repr:function(){
var c=this.rgb;
var col=[c.r,c.g,c.b,c.a];
return this.__class__.NAME+"("+col.join(", ")+")";
}};
MochiKit.Base.update(MochiKit.Color.Color,{fromRGB:function(red,_4e5,blue,_4e7){
var _4e8=MochiKit.Color.Color;
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_4e5=rgb.g;
blue=rgb.b;
if(typeof (rgb.a)=="undefined"){
_4e7=undefined;
}else{
_4e7=rgb.a;
}
}
return new _4e8(red,_4e5,blue,_4e7);
},fromHSL:function(hue,_4eb,_4ec,_4ed){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hslToRGB.apply(m,arguments));
},fromHSV:function(hue,_4f0,_4f1,_4f2){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hsvToRGB.apply(m,arguments));
},fromName:function(name){
var _4f5=MochiKit.Color.Color;
if(name.charAt(0)=="\""){
name=name.substr(1,name.length-2);
}
var _4f6=_4f5._namedColors[name.toLowerCase()];
if(typeof (_4f6)=="string"){
return _4f5.fromHexString(_4f6);
}else{
if(name=="transparent"){
return _4f5.transparentColor();
}
}
return null;
},fromString:function(_4f7){
var self=MochiKit.Color.Color;
var _4f9=_4f7.substr(0,3);
if(_4f9=="rgb"){
return self.fromRGBString(_4f7);
}else{
if(_4f9=="hsl"){
return self.fromHSLString(_4f7);
}else{
if(_4f7.charAt(0)=="#"){
return self.fromHexString(_4f7);
}
}
}
return self.fromName(_4f7);
},fromHexString:function(_4fa){
if(_4fa.charAt(0)=="#"){
_4fa=_4fa.substring(1);
}
var _4fb=[];
var i,hex;
if(_4fa.length==3){
for(i=0;i<3;i++){
hex=_4fa.substr(i,1);
_4fb.push(parseInt(hex+hex,16)/255);
}
}else{
for(i=0;i<6;i+=2){
hex=_4fa.substr(i,2);
_4fb.push(parseInt(hex,16)/255);
}
}
var _4fe=MochiKit.Color.Color;
return _4fe.fromRGB.apply(_4fe,_4fb);
},_fromColorString:function(pre,_500,_501,_502){
if(_502.indexOf(pre)===0){
_502=_502.substring(_502.indexOf("(",3)+1,_502.length-1);
}
var _503=_502.split(/\s*,\s*/);
var _504=[];
for(var i=0;i<_503.length;i++){
var c=_503[i];
var val;
var _508=c.substring(c.length-3);
if(c.charAt(c.length-1)=="%"){
val=0.01*parseFloat(c.substring(0,c.length-1));
}else{
if(_508=="deg"){
val=parseFloat(c)/360;
}else{
if(_508=="rad"){
val=parseFloat(c)/(Math.PI*2);
}else{
val=_501[i]*parseFloat(c);
}
}
}
_504.push(val);
}
return this[_500].apply(this,_504);
},fromComputedStyle:function(elem,_50a){
var d=MochiKit.DOM;
var cls=MochiKit.Color.Color;
for(elem=d.getElement(elem);elem;elem=elem.parentNode){
var _50d=MochiKit.Style.getStyle.apply(d,arguments);
if(!_50d){
continue;
}
var _50e=cls.fromString(_50d);
if(!_50e){
break;
}
if(_50e.asRGB().a>0){
return _50e;
}
}
return null;
},fromBackground:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"backgroundColor","background-color")||cls.whiteColor();
},fromText:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"color","color")||cls.blackColor();
},namedColors:function(){
return MochiKit.Base.clone(MochiKit.Color.Color._namedColors);
}});
MochiKit.Base.update(MochiKit.Color,{clampColorComponent:function(v,_514){
v*=_514;
if(v<0){
return 0;
}else{
if(v>_514){
return _514;
}else{
return v;
}
}
},_hslValue:function(n1,n2,hue){
if(hue>6){
hue-=6;
}else{
if(hue<0){
hue+=6;
}
}
var val;
if(hue<1){
val=n1+(n2-n1)*hue;
}else{
if(hue<3){
val=n2;
}else{
if(hue<4){
val=n1+(n2-n1)*(4-hue);
}else{
val=n1;
}
}
}
return val;
},hsvToRGB:function(hue,_51a,_51b,_51c){
if(arguments.length==1){
var hsv=hue;
hue=hsv.h;
_51a=hsv.s;
_51b=hsv.v;
_51c=hsv.a;
}
var red;
var _51f;
var blue;
if(_51a===0){
red=_51b;
_51f=_51b;
blue=_51b;
}else{
var i=Math.floor(hue*6);
var f=(hue*6)-i;
var p=_51b*(1-_51a);
var q=_51b*(1-(_51a*f));
var t=_51b*(1-(_51a*(1-f)));
switch(i){
case 1:
red=q;
_51f=_51b;
blue=p;
break;
case 2:
red=p;
_51f=_51b;
blue=t;
break;
case 3:
red=p;
_51f=q;
blue=_51b;
break;
case 4:
red=t;
_51f=p;
blue=_51b;
break;
case 5:
red=_51b;
_51f=p;
blue=q;
break;
case 6:
case 0:
red=_51b;
_51f=t;
blue=p;
break;
}
}
return {r:red,g:_51f,b:blue,a:_51c};
},hslToRGB:function(hue,_527,_528,_529){
if(arguments.length==1){
var hsl=hue;
hue=hsl.h;
_527=hsl.s;
_528=hsl.l;
_529=hsl.a;
}
var red;
var _52c;
var blue;
if(_527===0){
red=_528;
_52c=_528;
blue=_528;
}else{
var m2;
if(_528<=0.5){
m2=_528*(1+_527);
}else{
m2=_528+_527-(_528*_527);
}
var m1=(2*_528)-m2;
var f=MochiKit.Color._hslValue;
var h6=hue*6;
red=f(m1,m2,h6+2);
_52c=f(m1,m2,h6);
blue=f(m1,m2,h6-2);
}
return {r:red,g:_52c,b:blue,a:_529};
},rgbToHSV:function(red,_533,blue,_535){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_533=rgb.g;
blue=rgb.b;
_535=rgb.a;
}
var max=Math.max(Math.max(red,_533),blue);
var min=Math.min(Math.min(red,_533),blue);
var hue;
var _53a;
var _53b=max;
if(min==max){
hue=0;
_53a=0;
}else{
var _53c=(max-min);
_53a=_53c/max;
if(red==max){
hue=(_533-blue)/_53c;
}else{
if(_533==max){
hue=2+((blue-red)/_53c);
}else{
hue=4+((red-_533)/_53c);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_53a,v:_53b,a:_535};
},rgbToHSL:function(red,_53e,blue,_540){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_53e=rgb.g;
blue=rgb.b;
_540=rgb.a;
}
var max=Math.max(red,Math.max(_53e,blue));
var min=Math.min(red,Math.min(_53e,blue));
var hue;
var _545;
var _546=(max+min)/2;
var _547=max-min;
if(_547===0){
hue=0;
_545=0;
}else{
if(_546<=0.5){
_545=_547/(max+min);
}else{
_545=_547/(2-max-min);
}
if(red==max){
hue=(_53e-blue)/_547;
}else{
if(_53e==max){
hue=2+((blue-red)/_547);
}else{
hue=4+((red-_53e)/_547);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_545,l:_546,a:_540};
},toColorPart:function(num){
num=Math.round(num);
var _549=num.toString(16);
if(num<16){
return "0"+_549;
}
return _549;
},__new__:function(){
var m=MochiKit.Base;
this.Color.fromRGBString=m.bind(this.Color._fromColorString,this.Color,"rgb","fromRGB",[1/255,1/255,1/255,1]);
this.Color.fromHSLString=m.bind(this.Color._fromColorString,this.Color,"hsl","fromHSL",[1/360,0.01,0.01,1]);
var _54b=1/3;
var _54c={black:[0,0,0],blue:[0,0,1],brown:[0.6,0.4,0.2],cyan:[0,1,1],darkGray:[_54b,_54b,_54b],gray:[0.5,0.5,0.5],green:[0,1,0],lightGray:[2*_54b,2*_54b,2*_54b],magenta:[1,0,1],orange:[1,0.5,0],purple:[0.5,0,0.5],red:[1,0,0],transparent:[0,0,0,0],white:[1,1,1],yellow:[1,1,0]};
var _54d=function(name,r,g,b,a){
var rval=this.fromRGB(r,g,b,a);
this[name]=function(){
return rval;
};
return rval;
};
for(var k in _54c){
var name=k+"Color";
var _556=m.concat([_54d,this.Color,name],_54c[k]);
this.Color[name]=m.bind.apply(null,_556);
}
var _557=function(){
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof MochiKit.Color.Color)){
return false;
}
}
return true;
};
var _559=function(a,b){
return a.compareRGB(b);
};
m.nameFunctions(this);
m.registerComparator(this.Color.NAME,_557,_559);
}});
MochiKit.Color.__new__();
MochiKit.Color.Color._namedColors={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"};
MochiKit.Base._exportSymbols(this,MochiKit.Color);
MochiKit.Base._module("Signal","1.5",["Base","DOM","Style"]);
MochiKit.Signal._observers=[];
MochiKit.Signal.Event=function(src,e){
this._event=e||window.event;
this._src=src;
};
MochiKit.Signal.Event.__export__=false;
MochiKit.Base.update(MochiKit.Signal.Event.prototype,{__repr__:function(){
var repr=MochiKit.Base.repr;
var str="{event(): "+repr(this.event())+", src(): "+repr(this.src())+", type(): "+repr(this.type())+", target(): "+repr(this.target());
if(this.type()&&this.type().indexOf("key")===0||this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu"){
str+=", modifier(): "+"{alt: "+repr(this.modifier().alt)+", ctrl: "+repr(this.modifier().ctrl)+", meta: "+repr(this.modifier().meta)+", shift: "+repr(this.modifier().shift)+", any: "+repr(this.modifier().any)+"}";
}
if(this.type()&&this.type().indexOf("key")===0){
str+=", key(): {code: "+repr(this.key().code)+", string: "+repr(this.key().string)+"}";
}
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
str+=", mouse(): {page: "+repr(this.mouse().page)+", client: "+repr(this.mouse().client);
if(this.type()!="mousemove"&&this.type()!="mousewheel"){
str+=", button: {left: "+repr(this.mouse().button.left)+", middle: "+repr(this.mouse().button.middle)+", right: "+repr(this.mouse().button.right)+"}";
}
if(this.type()=="mousewheel"){
str+=", wheel: "+repr(this.mouse().wheel);
}
str+="}";
}
if(this.type()=="mouseover"||this.type()=="mouseout"||this.type()=="mouseenter"||this.type()=="mouseleave"){
str+=", relatedTarget(): "+repr(this.relatedTarget());
}
str+="}";
return str;
},toString:function(){
return this.__repr__();
},src:function(){
return this._src;
},event:function(){
return this._event;
},type:function(){
if(this._event.type==="DOMMouseScroll"){
return "mousewheel";
}else{
return this._event.type||undefined;
}
},target:function(){
return this._event.target||this._event.srcElement;
},_relatedTarget:null,relatedTarget:function(){
if(this._relatedTarget!==null){
return this._relatedTarget;
}
var elem=null;
if(this.type()=="mouseover"||this.type()=="mouseenter"){
elem=(this._event.relatedTarget||this._event.fromElement);
}else{
if(this.type()=="mouseout"||this.type()=="mouseleave"){
elem=(this._event.relatedTarget||this._event.toElement);
}
}
try{
if(elem!==null&&elem.nodeType!==null){
this._relatedTarget=elem;
return elem;
}
}
catch(ignore){
}
return undefined;
},_modifier:null,modifier:function(){
if(this._modifier!==null){
return this._modifier;
}
var m={};
m.alt=this._event.altKey;
m.ctrl=this._event.ctrlKey;
m.meta=this._event.metaKey||false;
m.shift=this._event.shiftKey;
m.any=m.alt||m.ctrl||m.shift||m.meta;
this._modifier=m;
return m;
},_key:null,key:function(){
if(this._key!==null){
return this._key;
}
var k={};
if(this.type()&&this.type().indexOf("key")===0){
if(this.type()=="keydown"||this.type()=="keyup"){
k.code=this._event.keyCode;
k.string=(MochiKit.Signal._specialKeys[k.code]||"KEY_UNKNOWN");
this._key=k;
return k;
}else{
if(this.type()=="keypress"){
k.code=0;
k.string="";
if(typeof (this._event.charCode)!="undefined"&&this._event.charCode!==0&&!MochiKit.Signal._specialMacKeys[this._event.charCode]){
k.code=this._event.charCode;
k.string=String.fromCharCode(k.code);
}else{
if(this._event.keyCode&&typeof (this._event.charCode)=="undefined"){
k.code=this._event.keyCode;
k.string=String.fromCharCode(k.code);
}
}
this._key=k;
return k;
}
}
}
return undefined;
},_mouse:null,mouse:function(){
if(this._mouse!==null){
return this._mouse;
}
var m={};
var e=this._event;
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
m.client=new MochiKit.Style.Coordinates(0,0);
if(e.clientX||e.clientY){
m.client.x=(!e.clientX||e.clientX<0)?0:e.clientX;
m.client.y=(!e.clientY||e.clientY<0)?0:e.clientY;
}
m.page=new MochiKit.Style.Coordinates(0,0);
if(e.pageX||e.pageY){
m.page.x=(!e.pageX||e.pageX<0)?0:e.pageX;
m.page.y=(!e.pageY||e.pageY<0)?0:e.pageY;
}else{
var de=MochiKit.DOM._document.documentElement;
var b=MochiKit.DOM._document.body;
m.page.x=e.clientX+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
m.page.y=e.clientY+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
}
if(this.type()!="mousemove"&&this.type()!="mousewheel"){
m.button={};
m.button.left=false;
m.button.right=false;
m.button.middle=false;
if(e.which){
m.button.left=(e.which==1);
m.button.middle=(e.which==2);
m.button.right=(e.which==3);
}else{
m.button.left=!!(e.button&1);
m.button.right=!!(e.button&2);
m.button.middle=!!(e.button&4);
}
}
if(this.type()=="mousewheel"){
m.wheel=new MochiKit.Style.Coordinates(0,0);
if(e.wheelDeltaX||e.wheelDeltaY){
m.wheel.x=e.wheelDeltaX/-40||0;
m.wheel.y=e.wheelDeltaY/-40||0;
}else{
if(e.wheelDelta){
m.wheel.y=e.wheelDelta/-40;
}else{
m.wheel.y=e.detail||0;
}
}
}
this._mouse=m;
return m;
}
return undefined;
},stop:function(){
this.stopPropagation();
this.preventDefault();
},stopPropagation:function(){
if(this._event.stopPropagation){
this._event.stopPropagation();
}else{
this._event.cancelBubble=true;
}
},preventDefault:function(){
if(this._event.preventDefault){
this._event.preventDefault();
}else{
if(this._confirmUnload===null){
this._event.returnValue=false;
}
}
},_confirmUnload:null,confirmUnload:function(msg){
if(this.type()=="beforeunload"){
this._confirmUnload=msg;
this._event.returnValue=msg;
}
}});
MochiKit.Signal._specialMacKeys={3:"KEY_ENTER",63289:"KEY_NUM_PAD_CLEAR",63276:"KEY_PAGE_UP",63277:"KEY_PAGE_DOWN",63275:"KEY_END",63273:"KEY_HOME",63234:"KEY_ARROW_LEFT",63232:"KEY_ARROW_UP",63235:"KEY_ARROW_RIGHT",63233:"KEY_ARROW_DOWN",63302:"KEY_INSERT",63272:"KEY_DELETE"};
(function(){
var _568=MochiKit.Signal._specialMacKeys;
for(i=63236;i<=63242;i++){
_568[i]="KEY_F"+(i-63236+1);
}
})();
MochiKit.Signal._specialKeys={8:"KEY_BACKSPACE",9:"KEY_TAB",12:"KEY_NUM_PAD_CLEAR",13:"KEY_ENTER",16:"KEY_SHIFT",17:"KEY_CTRL",18:"KEY_ALT",19:"KEY_PAUSE",20:"KEY_CAPS_LOCK",27:"KEY_ESCAPE",32:"KEY_SPACEBAR",33:"KEY_PAGE_UP",34:"KEY_PAGE_DOWN",35:"KEY_END",36:"KEY_HOME",37:"KEY_ARROW_LEFT",38:"KEY_ARROW_UP",39:"KEY_ARROW_RIGHT",40:"KEY_ARROW_DOWN",44:"KEY_PRINT_SCREEN",45:"KEY_INSERT",46:"KEY_DELETE",59:"KEY_SEMICOLON",91:"KEY_WINDOWS_LEFT",92:"KEY_WINDOWS_RIGHT",93:"KEY_SELECT",106:"KEY_NUM_PAD_ASTERISK",107:"KEY_NUM_PAD_PLUS_SIGN",109:"KEY_NUM_PAD_HYPHEN-MINUS",110:"KEY_NUM_PAD_FULL_STOP",111:"KEY_NUM_PAD_SOLIDUS",144:"KEY_NUM_LOCK",145:"KEY_SCROLL_LOCK",186:"KEY_SEMICOLON",187:"KEY_EQUALS_SIGN",188:"KEY_COMMA",189:"KEY_HYPHEN-MINUS",190:"KEY_FULL_STOP",191:"KEY_SOLIDUS",192:"KEY_GRAVE_ACCENT",219:"KEY_LEFT_SQUARE_BRACKET",220:"KEY_REVERSE_SOLIDUS",221:"KEY_RIGHT_SQUARE_BRACKET",222:"KEY_APOSTROPHE"};
(function(){
var _569=MochiKit.Signal._specialKeys;
for(var i=48;i<=57;i++){
_569[i]="KEY_"+(i-48);
}
for(i=65;i<=90;i++){
_569[i]="KEY_"+String.fromCharCode(i);
}
for(i=96;i<=105;i++){
_569[i]="KEY_NUM_PAD_"+(i-96);
}
for(i=112;i<=123;i++){
_569[i]="KEY_F"+(i-112+1);
}
})();
MochiKit.Signal.Ident=function(_56b){
this.source=_56b.source;
this.signal=_56b.signal;
this.listener=_56b.listener;
this.isDOM=_56b.isDOM;
this.objOrFunc=_56b.objOrFunc;
this.funcOrStr=_56b.funcOrStr;
this.connected=_56b.connected;
};
MochiKit.Signal.Ident.__export__=false;
MochiKit.Signal.Ident.prototype={};
MochiKit.Base.update(MochiKit.Signal,{_unloadCache:function(){
var self=MochiKit.Signal;
var _56d=self._observers;
for(var i=0;i<_56d.length;i++){
if(_56d[i].signal!=="onload"&&_56d[i].signal!=="onunload"){
self._disconnect(_56d[i]);
}
}
},_listener:function(src,sig,func,obj,_573){
var self=MochiKit.Signal;
var E=self.Event;
if(!_573){
if(typeof (func.im_self)=="undefined"){
return MochiKit.Base.bindLate(func,obj);
}else{
return func;
}
}
obj=obj||src;
if(typeof (func)=="string"){
if(sig==="onload"||sig==="onunload"){
return function(_576){
obj[func].apply(obj,[new E(src,_576)]);
var _577=new MochiKit.Signal.Ident({source:src,signal:sig,objOrFunc:obj,funcOrStr:func});
MochiKit.Signal._disconnect(_577);
};
}else{
return function(_578){
obj[func].apply(obj,[new E(src,_578)]);
};
}
}else{
if(sig==="onload"||sig==="onunload"){
return function(_579){
func.apply(obj,[new E(src,_579)]);
var _57a=new MochiKit.Signal.Ident({source:src,signal:sig,objOrFunc:func});
MochiKit.Signal._disconnect(_57a);
};
}else{
return function(_57b){
func.apply(obj,[new E(src,_57b)]);
};
}
}
},_browserAlreadyHasMouseEnterAndLeave:function(){
return /MSIE/.test(navigator.userAgent);
},_browserLacksMouseWheelEvent:function(){
return /Gecko\//.test(navigator.userAgent);
},_mouseEnterListener:function(src,sig,func,obj){
var E=MochiKit.Signal.Event;
return function(_581){
var e=new E(src,_581);
try{
e.relatedTarget().nodeName;
}
catch(err){
return;
}
e.stop();
if(MochiKit.DOM.isChildNode(e.relatedTarget(),src)){
return;
}
e.type=function(){
return sig;
};
if(typeof (func)=="string"){
return obj[func].apply(obj,[e]);
}else{
return func.apply(obj,[e]);
}
};
},_getDestPair:function(_583,_584){
var obj=null;
var func=null;
if(typeof (_584)!="undefined"){
obj=_583;
func=_584;
if(typeof (_584)=="string"){
if(typeof (_583[_584])!="function"){
throw new Error("'funcOrStr' must be a function on 'objOrFunc'");
}
}else{
if(typeof (_584)!="function"){
throw new Error("'funcOrStr' must be a function or string");
}
}
}else{
if(typeof (_583)!="function"){
throw new Error("'objOrFunc' must be a function if 'funcOrStr' is not given");
}else{
func=_583;
}
}
return [obj,func];
},connect:function(src,sig,_589,_58a){
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var self=MochiKit.Signal;
if(typeof (sig)!="string"){
throw new Error("'sig' must be a string");
}
var _58c=self._getDestPair(_589,_58a);
var obj=_58c[0];
var func=_58c[1];
if(typeof (obj)=="undefined"||obj===null){
obj=src;
}
var _58f=!!(src.addEventListener||src.attachEvent);
if(_58f&&(sig==="onmouseenter"||sig==="onmouseleave")&&!self._browserAlreadyHasMouseEnterAndLeave()){
var _590=self._mouseEnterListener(src,sig.substr(2),func,obj);
if(sig==="onmouseenter"){
sig="onmouseover";
}else{
sig="onmouseout";
}
}else{
if(_58f&&sig=="onmousewheel"&&self._browserLacksMouseWheelEvent()){
var _590=self._listener(src,sig,func,obj,_58f);
sig="onDOMMouseScroll";
}else{
var _590=self._listener(src,sig,func,obj,_58f);
}
}
if(src.addEventListener){
src.addEventListener(sig.substr(2),_590,false);
}else{
if(src.attachEvent){
src.attachEvent(sig,_590);
}
}
var _591=new MochiKit.Signal.Ident({source:src,signal:sig,listener:_590,isDOM:_58f,objOrFunc:_589,funcOrStr:_58a,connected:true});
self._observers.push(_591);
if(!_58f&&typeof (src.__connect__)=="function"){
var args=MochiKit.Base.extend([_591],arguments,1);
src.__connect__.apply(src,args);
}
return _591;
},_disconnect:function(_593){
if(!_593.connected){
return;
}
_593.connected=false;
var src=_593.source;
var sig=_593.signal;
var _596=_593.listener;
if(!_593.isDOM){
if(typeof (src.__disconnect__)=="function"){
src.__disconnect__(_593,sig,_593.objOrFunc,_593.funcOrStr);
}
return;
}
if(src.removeEventListener){
src.removeEventListener(sig.substr(2),_596,false);
}else{
if(src.detachEvent){
src.detachEvent(sig,_596);
}else{
throw new Error("'src' must be a DOM element");
}
}
},disconnect:function(_597){
var self=MochiKit.Signal;
var _599=self._observers;
var m=MochiKit.Base;
if(arguments.length>1){
var src=arguments[0];
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var sig=arguments[1];
var obj=arguments[2];
var func=arguments[3];
for(var i=_599.length-1;i>=0;i--){
var o=_599[i];
if(o.source===src&&o.signal===sig&&o.objOrFunc===obj&&o.funcOrStr===func){
self._disconnect(o);
if(!self._lock){
_599.splice(i,1);
}else{
self._dirty=true;
}
return true;
}
}
}else{
var idx=m.findIdentical(_599,_597);
if(idx>=0){
self._disconnect(_597);
if(!self._lock){
_599.splice(idx,1);
}else{
self._dirty=true;
}
return true;
}
}
return false;
},disconnectAllTo:function(_5a2,_5a3){
var self=MochiKit.Signal;
var _5a5=self._observers;
var _5a6=self._disconnect;
var _5a7=self._lock;
var _5a8=self._dirty;
if(typeof (_5a3)==="undefined"){
_5a3=null;
}
for(var i=_5a5.length-1;i>=0;i--){
var _5aa=_5a5[i];
if(_5aa.objOrFunc===_5a2&&(_5a3===null||_5aa.funcOrStr===_5a3)){
_5a6(_5aa);
if(_5a7){
_5a8=true;
}else{
_5a5.splice(i,1);
}
}
}
self._dirty=_5a8;
},disconnectAll:function(src,sig){
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var m=MochiKit.Base;
var _5ae=m.flattenArguments(m.extend(null,arguments,1));
var self=MochiKit.Signal;
var _5b0=self._disconnect;
var _5b1=self._observers;
var i,_5b3;
var _5b4=self._lock;
var _5b5=self._dirty;
if(_5ae.length===0){
for(i=_5b1.length-1;i>=0;i--){
_5b3=_5b1[i];
if(_5b3.source===src){
_5b0(_5b3);
if(!_5b4){
_5b1.splice(i,1);
}else{
_5b5=true;
}
}
}
}else{
var sigs={};
for(i=0;i<_5ae.length;i++){
sigs[_5ae[i]]=true;
}
for(i=_5b1.length-1;i>=0;i--){
_5b3=_5b1[i];
if(_5b3.source===src&&_5b3.signal in sigs){
_5b0(_5b3);
if(!_5b4){
_5b1.splice(i,1);
}else{
_5b5=true;
}
}
}
}
self._dirty=_5b5;
},signal:function(src,sig){
var self=MochiKit.Signal;
var _5ba=self._observers;
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
var args=MochiKit.Base.extend(null,arguments,2);
var _5bc=[];
self._lock=true;
for(var i=0;i<_5ba.length;i++){
var _5be=_5ba[i];
if(_5be.source===src&&_5be.signal===sig&&_5be.connected){
try{
if(_5be.isDOM&&_5be.funcOrStr!=null){
var obj=_5be.objOrFunc;
obj[_5be.funcOrStr].apply(obj,args);
}else{
if(_5be.isDOM){
_5be.objOrFunc.apply(src,args);
}else{
_5be.listener.apply(src,args);
}
}
}
catch(e){
_5bc.push(e);
}
}
}
self._lock=false;
if(self._dirty){
self._dirty=false;
for(var i=_5ba.length-1;i>=0;i--){
if(!_5ba[i].connected){
_5ba.splice(i,1);
}
}
}
if(_5bc.length==1){
throw _5bc[0];
}else{
if(_5bc.length>1){
var e=new Error("Multiple errors thrown in handling 'sig', see errors property");
e.errors=_5bc;
throw e;
}
}
}});
MochiKit.Signal.__new__=function(win){
var m=MochiKit.Base;
this._document=document;
this._window=win;
this._lock=false;
this._dirty=false;
try{
this.connect(window,"onunload",this._unloadCache);
}
catch(e){
}
m.nameFunctions(this);
};
MochiKit.Signal.__new__(this);
if(MochiKit.__export__){
connect=MochiKit.Signal.connect;
disconnect=MochiKit.Signal.disconnect;
disconnectAll=MochiKit.Signal.disconnectAll;
signal=MochiKit.Signal.signal;
}
MochiKit.Base._exportSymbols(this,MochiKit.Signal);
MochiKit.Base._module("Position","1.5",["Base","DOM","Style"]);
MochiKit.Base.update(MochiKit.Position,{__export__:false,includeScrollOffsets:false,prepare:function(){
var _5c3=window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0;
var _5c4=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;
this.windowOffset=new MochiKit.Style.Coordinates(_5c3,_5c4);
},cumulativeOffset:function(_5c5){
var _5c6=0;
var _5c7=0;
do{
_5c6+=_5c5.offsetTop||0;
_5c7+=_5c5.offsetLeft||0;
_5c5=_5c5.offsetParent;
}while(_5c5);
return new MochiKit.Style.Coordinates(_5c7,_5c6);
},realOffset:function(_5c8){
var _5c9=0;
var _5ca=0;
do{
_5c9+=_5c8.scrollTop||0;
_5ca+=_5c8.scrollLeft||0;
_5c8=_5c8.parentNode;
}while(_5c8);
return new MochiKit.Style.Coordinates(_5ca,_5c9);
},within:function(_5cb,x,y){
if(this.includeScrollOffsets){
return this.withinIncludingScrolloffsets(_5cb,x,y);
}
this.xcomp=x;
this.ycomp=y;
this.offset=this.cumulativeOffset(_5cb);
if(_5cb.style.position=="fixed"){
this.offset.x+=this.windowOffset.x;
this.offset.y+=this.windowOffset.y;
}
return (y>=this.offset.y&&y<this.offset.y+_5cb.offsetHeight&&x>=this.offset.x&&x<this.offset.x+_5cb.offsetWidth);
},withinIncludingScrolloffsets:function(_5ce,x,y){
var _5d1=this.realOffset(_5ce);
this.xcomp=x+_5d1.x-this.windowOffset.x;
this.ycomp=y+_5d1.y-this.windowOffset.y;
this.offset=this.cumulativeOffset(_5ce);
return (this.ycomp>=this.offset.y&&this.ycomp<this.offset.y+_5ce.offsetHeight&&this.xcomp>=this.offset.x&&this.xcomp<this.offset.x+_5ce.offsetWidth);
},overlap:function(mode,_5d3){
if(!mode){
return 0;
}
if(mode=="vertical"){
return ((this.offset.y+_5d3.offsetHeight)-this.ycomp)/_5d3.offsetHeight;
}
if(mode=="horizontal"){
return ((this.offset.x+_5d3.offsetWidth)-this.xcomp)/_5d3.offsetWidth;
}
},absolutize:function(_5d4){
_5d4=MochiKit.DOM.getElement(_5d4);
if(_5d4.style.position=="absolute"){
return;
}
MochiKit.Position.prepare();
var _5d5=MochiKit.Position.positionedOffset(_5d4);
var _5d6=_5d4.clientWidth;
var _5d7=_5d4.clientHeight;
var _5d8={"position":_5d4.style.position,"left":_5d5.x-parseFloat(_5d4.style.left||0),"top":_5d5.y-parseFloat(_5d4.style.top||0),"width":_5d4.style.width,"height":_5d4.style.height};
_5d4.style.position="absolute";
_5d4.style.top=_5d5.y+"px";
_5d4.style.left=_5d5.x+"px";
_5d4.style.width=_5d6+"px";
_5d4.style.height=_5d7+"px";
return _5d8;
},positionedOffset:function(_5d9){
var _5da=0,_5db=0;
do{
_5da+=_5d9.offsetTop||0;
_5db+=_5d9.offsetLeft||0;
_5d9=_5d9.offsetParent;
if(_5d9){
p=MochiKit.Style.getStyle(_5d9,"position");
if(p=="relative"||p=="absolute"){
break;
}
}
}while(_5d9);
return new MochiKit.Style.Coordinates(_5db,_5da);
},relativize:function(_5dc,_5dd){
_5dc=MochiKit.DOM.getElement(_5dc);
if(_5dc.style.position=="relative"){
return;
}
MochiKit.Position.prepare();
var top=parseFloat(_5dc.style.top||0)-(_5dd["top"]||0);
var left=parseFloat(_5dc.style.left||0)-(_5dd["left"]||0);
_5dc.style.position=_5dd["position"];
_5dc.style.top=top+"px";
_5dc.style.left=left+"px";
_5dc.style.width=_5dd["width"];
_5dc.style.height=_5dd["height"];
},clone:function(_5e0,_5e1){
_5e0=MochiKit.DOM.getElement(_5e0);
_5e1=MochiKit.DOM.getElement(_5e1);
_5e1.style.position="absolute";
var _5e2=this.cumulativeOffset(_5e0);
_5e1.style.top=_5e2.y+"px";
_5e1.style.left=_5e2.x+"px";
_5e1.style.width=_5e0.offsetWidth+"px";
_5e1.style.height=_5e0.offsetHeight+"px";
},page:function(_5e3){
var _5e4=0;
var _5e5=0;
var _5e6=_5e3;
do{
_5e4+=_5e6.offsetTop||0;
_5e5+=_5e6.offsetLeft||0;
if(_5e6.offsetParent==document.body&&MochiKit.Style.getStyle(_5e6,"position")=="absolute"){
break;
}
}while(_5e6=_5e6.offsetParent);
_5e6=_5e3;
do{
_5e4-=_5e6.scrollTop||0;
_5e5-=_5e6.scrollLeft||0;
}while(_5e6=_5e6.parentNode);
return new MochiKit.Style.Coordinates(_5e5,_5e4);
}});
MochiKit.Position.__new__=function(win){
MochiKit.Base.nameFunctions(this);
};
MochiKit.Position.__new__(this);
MochiKit.Base._exportSymbols(this,MochiKit.Position);
MochiKit.Base._module("Visual","1.5",["Base","DOM","Style","Color","Position"]);
MochiKit.Visual._RoundCorners=function(e,_5e9){
e=MochiKit.DOM.getElement(e);
this._setOptions(_5e9);
if(this.options.__unstable__wrapElement){
e=this._doWrap(e);
}
var _5ea=this.options.color;
var C=MochiKit.Color.Color;
if(this.options.color==="fromElement"){
_5ea=C.fromBackground(e);
}else{
if(!(_5ea instanceof C)){
_5ea=C.fromString(_5ea);
}
}
this.isTransparent=(_5ea.asRGB().a<=0);
var _5ec=this.options.bgColor;
if(this.options.bgColor==="fromParent"){
_5ec=C.fromBackground(e.offsetParent);
}else{
if(!(_5ec instanceof C)){
_5ec=C.fromString(_5ec);
}
}
this._roundCornersImpl(e,_5ea,_5ec);
};
MochiKit.Visual._RoundCorners.prototype={_doWrap:function(e){
var _5ee=e.parentNode;
var doc=MochiKit.DOM.currentDocument();
if(typeof (doc.defaultView)==="undefined"||doc.defaultView===null){
return e;
}
var _5f0=doc.defaultView.getComputedStyle(e,null);
if(typeof (_5f0)==="undefined"||_5f0===null){
return e;
}
var _5f1=MochiKit.DOM.DIV({"style":{display:"block",marginTop:_5f0.getPropertyValue("padding-top"),marginRight:_5f0.getPropertyValue("padding-right"),marginBottom:_5f0.getPropertyValue("padding-bottom"),marginLeft:_5f0.getPropertyValue("padding-left"),padding:"0px"}});
_5f1.innerHTML=e.innerHTML;
e.innerHTML="";
e.appendChild(_5f1);
return e;
},_roundCornersImpl:function(e,_5f3,_5f4){
if(this.options.border){
this._renderBorder(e,_5f4);
}
if(this._isTopRounded()){
this._roundTopCorners(e,_5f3,_5f4);
}
if(this._isBottomRounded()){
this._roundBottomCorners(e,_5f3,_5f4);
}
},_renderBorder:function(el,_5f6){
var _5f7="1px solid "+this._borderColor(_5f6);
var _5f8="border-left: "+_5f7;
var _5f9="border-right: "+_5f7;
var _5fa="style='"+_5f8+";"+_5f9+"'";
el.innerHTML="<div "+_5fa+">"+el.innerHTML+"</div>";
},_roundTopCorners:function(el,_5fc,_5fd){
var _5fe=this._createCorner(_5fd);
for(var i=0;i<this.options.numSlices;i++){
_5fe.appendChild(this._createCornerSlice(_5fc,_5fd,i,"top"));
}
el.style.paddingTop=0;
el.insertBefore(_5fe,el.firstChild);
},_roundBottomCorners:function(el,_601,_602){
var _603=this._createCorner(_602);
for(var i=(this.options.numSlices-1);i>=0;i--){
_603.appendChild(this._createCornerSlice(_601,_602,i,"bottom"));
}
el.style.paddingBottom=0;
el.appendChild(_603);
},_createCorner:function(_605){
var dom=MochiKit.DOM;
return dom.DIV({style:{backgroundColor:_605.toString()}});
},_createCornerSlice:function(_607,_608,n,_60a){
var _60b=MochiKit.DOM.SPAN();
var _60c=_60b.style;
_60c.backgroundColor=_607.toString();
_60c.display="block";
_60c.height="1px";
_60c.overflow="hidden";
_60c.fontSize="1px";
var _60d=this._borderColor(_607,_608);
if(this.options.border&&n===0){
_60c.borderTopStyle="solid";
_60c.borderTopWidth="1px";
_60c.borderLeftWidth="0px";
_60c.borderRightWidth="0px";
_60c.borderBottomWidth="0px";
_60c.height="0px";
_60c.borderColor=_60d.toString();
}else{
if(_60d){
_60c.borderColor=_60d.toString();
_60c.borderStyle="solid";
_60c.borderWidth="0px 1px";
}
}
if(!this.options.compact&&(n==(this.options.numSlices-1))){
_60c.height="2px";
}
this._setMargin(_60b,n,_60a);
this._setBorder(_60b,n,_60a);
return _60b;
},_setOptions:function(_60e){
this.options={corners:"all",color:"fromElement",bgColor:"fromParent",blend:true,border:false,compact:false,__unstable__wrapElement:false};
MochiKit.Base.update(this.options,_60e);
this.options.numSlices=(this.options.compact?2:4);
},_whichSideTop:function(){
var _60f=this.options.corners;
if(this._hasString(_60f,"all","top")){
return "";
}
var _610=(_60f.indexOf("tl")!=-1);
var _611=(_60f.indexOf("tr")!=-1);
if(_610&&_611){
return "";
}
if(_610){
return "left";
}
if(_611){
return "right";
}
return "";
},_whichSideBottom:function(){
var _612=this.options.corners;
if(this._hasString(_612,"all","bottom")){
return "";
}
var _613=(_612.indexOf("bl")!=-1);
var _614=(_612.indexOf("br")!=-1);
if(_613&&_614){
return "";
}
if(_613){
return "left";
}
if(_614){
return "right";
}
return "";
},_borderColor:function(_615,_616){
if(_615=="transparent"){
return _616;
}else{
if(this.options.border){
return this.options.border;
}else{
if(this.options.blend){
return _616.blendedColor(_615);
}
}
}
return "";
},_setMargin:function(el,n,_619){
var _61a=this._marginSize(n)+"px";
var _61b=(_619=="top"?this._whichSideTop():this._whichSideBottom());
var _61c=el.style;
if(_61b=="left"){
_61c.marginLeft=_61a;
_61c.marginRight="0px";
}else{
if(_61b=="right"){
_61c.marginRight=_61a;
_61c.marginLeft="0px";
}else{
_61c.marginLeft=_61a;
_61c.marginRight=_61a;
}
}
},_setBorder:function(el,n,_61f){
var _620=this._borderSize(n)+"px";
var _621=(_61f=="top"?this._whichSideTop():this._whichSideBottom());
var _622=el.style;
if(_621=="left"){
_622.borderLeftWidth=_620;
_622.borderRightWidth="0px";
}else{
if(_621=="right"){
_622.borderRightWidth=_620;
_622.borderLeftWidth="0px";
}else{
_622.borderLeftWidth=_620;
_622.borderRightWidth=_620;
}
}
},_marginSize:function(n){
if(this.isTransparent){
return 0;
}
var o=this.options;
if(o.compact&&o.blend){
var _625=[1,0];
return _625[n];
}else{
if(o.compact){
var _626=[2,1];
return _626[n];
}else{
if(o.blend){
var _627=[3,2,1,0];
return _627[n];
}else{
var _628=[5,3,2,1];
return _628[n];
}
}
}
},_borderSize:function(n){
var o=this.options;
var _62b;
if(o.compact&&(o.blend||this.isTransparent)){
return 1;
}else{
if(o.compact){
_62b=[1,0];
}else{
if(o.blend){
_62b=[2,1,1,1];
}else{
if(o.border){
_62b=[0,2,0,0];
}else{
if(this.isTransparent){
_62b=[5,3,2,1];
}else{
return 0;
}
}
}
}
}
return _62b[n];
},_hasString:function(str){
for(var i=1;i<arguments.length;i++){
if(str.indexOf(arguments[i])!=-1){
return true;
}
}
return false;
},_isTopRounded:function(){
return this._hasString(this.options.corners,"all","top","tl","tr");
},_isBottomRounded:function(){
return this._hasString(this.options.corners,"all","bottom","bl","br");
},_hasSingleTextChild:function(el){
return (el.childNodes.length==1&&el.childNodes[0].nodeType==3);
}};
MochiKit.Visual.roundElement=function(e,_630){
new MochiKit.Visual._RoundCorners(e,_630);
};
MochiKit.Visual.roundClass=function(_631,_632,_633){
var _634=MochiKit.DOM.getElementsByTagAndClassName(_631,_632);
for(var i=0;i<_634.length;i++){
MochiKit.Visual.roundElement(_634[i],_633);
}
};
MochiKit.Visual.tagifyText=function(_636,_637){
_637=_637||"position:relative";
if(/MSIE/.test(navigator.userAgent)){
_637+=";zoom:1";
}
_636=MochiKit.DOM.getElement(_636);
var ma=MochiKit.Base.map;
ma(function(_639){
if(_639.nodeType==3){
ma(function(_63a){
_636.insertBefore(MochiKit.DOM.SPAN({style:_637},_63a==" "?String.fromCharCode(160):_63a),_639);
},_639.nodeValue.split(""));
MochiKit.DOM.removeElement(_639);
}
},_636.childNodes);
};
MochiKit.Visual._forceRerendering=function(_63b){
try{
_63b=MochiKit.DOM.getElement(_63b);
var n=document.createTextNode(" ");
_63b.appendChild(n);
_63b.removeChild(n);
}
catch(e){
}
};
MochiKit.Visual.multiple=function(_63d,_63e,_63f){
_63f=MochiKit.Base.update({speed:0.1,delay:0},_63f);
var _640=_63f.delay;
var _641=0;
MochiKit.Base.map(function(_642){
_63f.delay=_641*_63f.speed+_640;
new _63e(_642,_63f);
_641+=1;
},_63d);
};
MochiKit.Visual.PAIRS={"slide":["slideDown","slideUp"],"blind":["blindDown","blindUp"],"appear":["appear","fade"],"size":["grow","shrink"]};
MochiKit.Visual.toggle=function(_643,_644,_645){
_643=MochiKit.DOM.getElement(_643);
_644=(_644||"appear").toLowerCase();
_645=MochiKit.Base.update({queue:{position:"end",scope:(_643.id||"global"),limit:1}},_645);
var v=MochiKit.Visual;
v[MochiKit.Style.getStyle(_643,"display")!="none"?v.PAIRS[_644][1]:v.PAIRS[_644][0]](_643,_645);
};
MochiKit.Visual.Transitions={__export__:false};
MochiKit.Visual.Transitions.linear=function(pos){
return pos;
};
MochiKit.Visual.Transitions.sinoidal=function(pos){
return 0.5-Math.cos(pos*Math.PI)/2;
};
MochiKit.Visual.Transitions.reverse=function(pos){
return 1-pos;
};
MochiKit.Visual.Transitions.flicker=function(pos){
return 0.25-Math.cos(pos*Math.PI)/4+Math.random()/2;
};
MochiKit.Visual.Transitions.wobble=function(pos){
return 0.5-Math.cos(9*pos*Math.PI)/2;
};
MochiKit.Visual.Transitions.pulse=function(pos,_64d){
if(_64d){
pos*=2*_64d;
}else{
pos*=10;
}
var _64e=pos-Math.floor(pos);
return (Math.floor(pos)%2==0)?_64e:1-_64e;
};
MochiKit.Visual.Transitions.parabolic=function(pos){
return pos*pos;
};
MochiKit.Visual.Transitions.none=function(pos){
return 0;
};
MochiKit.Visual.Transitions.full=function(pos){
return 1;
};
MochiKit.Visual.ScopedQueue=function(){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls();
}
this.__init__();
};
MochiKit.Visual.ScopedQueue.__export__=false;
MochiKit.Base.update(MochiKit.Visual.ScopedQueue.prototype,{__init__:function(){
this.effects=[];
this.interval=null;
},add:function(_653){
var _654=new Date().getTime();
var _655=(typeof (_653.options.queue)=="string")?_653.options.queue:_653.options.queue.position;
var ma=MochiKit.Base.map;
switch(_655){
case "front":
ma(function(e){
if(e.state=="idle"){
e.startOn+=_653.finishOn;
e.finishOn+=_653.finishOn;
}
},this.effects);
break;
case "end":
var _658;
ma(function(e){
var i=e.finishOn;
if(i>=(_658||i)){
_658=i;
}
},this.effects);
_654=_658||_654;
break;
case "break":
ma(function(e){
e.finalize();
},this.effects);
break;
}
_653.startOn+=_654;
_653.finishOn+=_654;
if(!_653.options.queue.limit||this.effects.length<_653.options.queue.limit){
this.effects.push(_653);
}
if(!this.interval){
this.interval=this.startLoop(MochiKit.Base.bind(this.loop,this),40);
}
},startLoop:function(func,_65d){
return setInterval(func,_65d);
},remove:function(_65e){
this.effects=MochiKit.Base.filter(function(e){
return e!=_65e;
},this.effects);
if(!this.effects.length){
this.stopLoop(this.interval);
this.interval=null;
}
},stopLoop:function(_660){
clearInterval(_660);
},loop:function(){
var _661=new Date().getTime();
MochiKit.Base.map(function(_662){
_662.loop(_661);
},this.effects);
}});
MochiKit.Visual.Queues={__export__:false,instances:{},get:function(_663){
if(typeof (_663)!="string"){
return _663;
}
if(!this.instances[_663]){
this.instances[_663]=new MochiKit.Visual.ScopedQueue();
}
return this.instances[_663];
}};
MochiKit.Visual.Queue=MochiKit.Visual.Queues.get("global");
MochiKit.Visual.Queue.__export__=false;
MochiKit.Visual.DefaultOptions={__export__:false,transition:MochiKit.Visual.Transitions.sinoidal,duration:1,fps:25,sync:false,from:0,to:1,delay:0,queue:"parallel"};
MochiKit.Visual.Base=function(){
};
MochiKit.Visual.Base.prototype={__class__:MochiKit.Visual.Base,start:function(_664){
var v=MochiKit.Visual;
this.options=MochiKit.Base.setdefault(_664,v.DefaultOptions);
this.currentFrame=0;
this.state="idle";
this.startOn=this.options.delay*1000;
this.finishOn=this.startOn+(this.options.duration*1000);
this.event("beforeStart");
if(!this.options.sync){
v.Queues.get(typeof (this.options.queue)=="string"?"global":this.options.queue.scope).add(this);
}
},loop:function(_666){
if(_666>=this.startOn){
if(_666>=this.finishOn){
return this.finalize();
}
var pos=(_666-this.startOn)/(this.finishOn-this.startOn);
var _668=Math.round(pos*this.options.fps*this.options.duration);
if(_668>this.currentFrame){
this.render(pos);
this.currentFrame=_668;
}
}
},render:function(pos){
if(this.state=="idle"){
this.state="running";
this.event("beforeSetup");
this.setup();
this.event("afterSetup");
}
if(this.state=="running"){
if(this.options.transition){
pos=this.options.transition(pos);
}
pos*=(this.options.to-this.options.from);
pos+=this.options.from;
this.event("beforeUpdate");
this.update(pos);
this.event("afterUpdate");
}
},cancel:function(){
if(!this.options.sync){
MochiKit.Visual.Queues.get(typeof (this.options.queue)=="string"?"global":this.options.queue.scope).remove(this);
}
this.state="finished";
},finalize:function(){
this.render(1);
this.cancel();
this.event("beforeFinish");
this.finish();
this.event("afterFinish");
},setup:function(){
},finish:function(){
},update:function(_66a){
},event:function(_66b){
if(this.options[_66b+"Internal"]){
this.options[_66b+"Internal"](this);
}
if(this.options[_66b]){
this.options[_66b](this);
}
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.Visual.Parallel=function(_66c,_66d){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_66c,_66d);
}
this.__init__(_66c,_66d);
};
MochiKit.Visual.Parallel.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Parallel.prototype,{__class__:MochiKit.Visual.Parallel,__init__:function(_66f,_670){
this.effects=_66f||[];
this.start(_670);
},update:function(_671){
MochiKit.Base.map(function(_672){
_672.render(_671);
},this.effects);
},finish:function(){
MochiKit.Base.map(function(_673){
_673.finalize();
},this.effects);
}});
MochiKit.Visual.Sequence=function(_674,_675){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_674,_675);
}
this.__init__(_674,_675);
};
MochiKit.Visual.Sequence.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Sequence.prototype,{__class__:MochiKit.Visual.Sequence,__init__:function(_677,_678){
var defs={transition:MochiKit.Visual.Transitions.linear,duration:0};
this.effects=_677||[];
MochiKit.Base.map(function(_67a){
defs.duration+=_67a.options.duration;
},this.effects);
MochiKit.Base.setdefault(_678,defs);
this.start(_678);
},update:function(_67b){
var time=_67b*this.options.duration;
for(var i=0;i<this.effects.length;i++){
var _67e=this.effects[i];
if(time<=_67e.options.duration){
_67e.render(time/_67e.options.duration);
break;
}else{
time-=_67e.options.duration;
}
}
},finish:function(){
MochiKit.Base.map(function(_67f){
_67f.finalize();
},this.effects);
}});
MochiKit.Visual.Opacity=function(_680,_681){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_680,_681);
}
this.__init__(_680,_681);
};
MochiKit.Visual.Opacity.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Opacity.prototype,{__class__:MochiKit.Visual.Opacity,__init__:function(_683,_684){
var b=MochiKit.Base;
var s=MochiKit.Style;
this.element=MochiKit.DOM.getElement(_683);
if(this.element.currentStyle&&(!this.element.currentStyle.hasLayout)){
s.setStyle(this.element,{zoom:1});
}
_684=b.update({from:s.getStyle(this.element,"opacity")||0,to:1},_684);
this.start(_684);
},update:function(_687){
MochiKit.Style.setStyle(this.element,{"opacity":_687});
}});
MochiKit.Visual.Move=function(_688,_689){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_688,_689);
}
this.__init__(_688,_689);
};
MochiKit.Visual.Move.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Move.prototype,{__class__:MochiKit.Visual.Move,__init__:function(_68b,_68c){
this.element=MochiKit.DOM.getElement(_68b);
_68c=MochiKit.Base.update({x:0,y:0,mode:"relative"},_68c);
this.start(_68c);
},setup:function(){
MochiKit.Style.makePositioned(this.element);
var s=this.element.style;
var _68e=s.visibility;
var _68f=s.display;
if(_68f=="none"){
s.visibility="hidden";
s.display="";
}
this.originalLeft=parseFloat(MochiKit.Style.getStyle(this.element,"left")||"0");
this.originalTop=parseFloat(MochiKit.Style.getStyle(this.element,"top")||"0");
if(this.options.mode=="absolute"){
this.options.x-=this.originalLeft;
this.options.y-=this.originalTop;
}
if(_68f=="none"){
s.visibility=_68e;
s.display=_68f;
}
},update:function(_690){
MochiKit.Style.setStyle(this.element,{left:Math.round(this.options.x*_690+this.originalLeft)+"px",top:Math.round(this.options.y*_690+this.originalTop)+"px"});
}});
MochiKit.Visual.Scale=function(_691,_692,_693){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_691,_692,_693);
}
this.__init__(_691,_692,_693);
};
MochiKit.Visual.Scale.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Scale.prototype,{__class__:MochiKit.Visual.Scale,__init__:function(_695,_696,_697){
this.element=MochiKit.DOM.getElement(_695);
_697=MochiKit.Base.update({scaleX:true,scaleY:true,scaleContent:true,scaleFromCenter:false,scaleMode:"box",scaleFrom:100,scaleTo:_696},_697);
this.start(_697);
},setup:function(){
this.restoreAfterFinish=this.options.restoreAfterFinish||false;
this.elementPositioning=MochiKit.Style.getStyle(this.element,"position");
var ma=MochiKit.Base.map;
var b=MochiKit.Base.bind;
this.originalStyle={};
ma(b(function(k){
this.originalStyle[k]=this.element.style[k];
},this),["top","left","width","height","fontSize"]);
this.originalTop=this.element.offsetTop;
this.originalLeft=this.element.offsetLeft;
var _69b=MochiKit.Style.getStyle(this.element,"font-size")||"100%";
ma(b(function(_69c){
if(_69b.indexOf(_69c)>0){
this.fontSize=parseFloat(_69b);
this.fontSizeType=_69c;
}
},this),["em","px","%"]);
this.factor=(this.options.scaleTo-this.options.scaleFrom)/100;
if(/^content/.test(this.options.scaleMode)){
this.dims=[this.element.scrollHeight,this.element.scrollWidth];
}else{
if(this.options.scaleMode=="box"){
this.dims=[this.element.offsetHeight,this.element.offsetWidth];
}else{
this.dims=[this.options.scaleMode.originalHeight,this.options.scaleMode.originalWidth];
}
}
},update:function(_69d){
var _69e=(this.options.scaleFrom/100)+(this.factor*_69d);
if(this.options.scaleContent&&this.fontSize){
MochiKit.Style.setStyle(this.element,{fontSize:this.fontSize*_69e+this.fontSizeType});
}
this.setDimensions(this.dims[0]*_69e,this.dims[1]*_69e);
},finish:function(){
if(this.restoreAfterFinish){
MochiKit.Style.setStyle(this.element,this.originalStyle);
}
},setDimensions:function(_69f,_6a0){
var d={};
var r=Math.round;
if(/MSIE/.test(navigator.userAgent)){
r=Math.ceil;
}
if(this.options.scaleX){
d.width=r(_6a0)+"px";
}
if(this.options.scaleY){
d.height=r(_69f)+"px";
}
if(this.options.scaleFromCenter){
var topd=(_69f-this.dims[0])/2;
var _6a4=(_6a0-this.dims[1])/2;
if(this.elementPositioning=="absolute"){
if(this.options.scaleY){
d.top=this.originalTop-topd+"px";
}
if(this.options.scaleX){
d.left=this.originalLeft-_6a4+"px";
}
}else{
if(this.options.scaleY){
d.top=-topd+"px";
}
if(this.options.scaleX){
d.left=-_6a4+"px";
}
}
}
MochiKit.Style.setStyle(this.element,d);
}});
MochiKit.Visual.Highlight=function(_6a5,_6a6){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_6a5,_6a6);
}
this.__init__(_6a5,_6a6);
};
MochiKit.Visual.Highlight.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Highlight.prototype,{__class__:MochiKit.Visual.Highlight,__init__:function(_6a8,_6a9){
this.element=MochiKit.DOM.getElement(_6a8);
_6a9=MochiKit.Base.update({startcolor:"#ffff99"},_6a9);
this.start(_6a9);
},setup:function(){
var b=MochiKit.Base;
var s=MochiKit.Style;
if(s.getStyle(this.element,"display")=="none"){
this.cancel();
return;
}
this.oldStyle={backgroundImage:s.getStyle(this.element,"background-image")};
s.setStyle(this.element,{backgroundImage:"none"});
if(!this.options.endcolor){
this.options.endcolor=MochiKit.Color.Color.fromBackground(this.element).toHexString();
}
if(b.isUndefinedOrNull(this.options.restorecolor)){
this.options.restorecolor=s.getStyle(this.element,"background-color");
}
this._base=b.map(b.bind(function(i){
return parseInt(this.options.startcolor.slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
this._delta=b.map(b.bind(function(i){
return parseInt(this.options.endcolor.slice(i*2+1,i*2+3),16)-this._base[i];
},this),[0,1,2]);
},update:function(_6ae){
var m="#";
MochiKit.Base.map(MochiKit.Base.bind(function(i){
m+=MochiKit.Color.toColorPart(Math.round(this._base[i]+this._delta[i]*_6ae));
},this),[0,1,2]);
MochiKit.Style.setStyle(this.element,{backgroundColor:m});
},finish:function(){
MochiKit.Style.setStyle(this.element,MochiKit.Base.update(this.oldStyle,{backgroundColor:this.options.restorecolor}));
}});
MochiKit.Visual.ScrollTo=function(_6b1,_6b2){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_6b1,_6b2);
}
this.__init__(_6b1,_6b2);
};
MochiKit.Visual.ScrollTo.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.ScrollTo.prototype,{__class__:MochiKit.Visual.ScrollTo,__init__:function(_6b4,_6b5){
this.element=MochiKit.DOM.getElement(_6b4);
this.start(_6b5);
},setup:function(){
var p=MochiKit.Position;
p.prepare();
var _6b7=p.cumulativeOffset(this.element);
if(this.options.offset){
_6b7.y+=this.options.offset;
}
var max;
if(window.innerHeight){
max=window.innerHeight-window.height;
}else{
if(document.documentElement&&document.documentElement.clientHeight){
max=document.documentElement.clientHeight-document.body.scrollHeight;
}else{
if(document.body){
max=document.body.clientHeight-document.body.scrollHeight;
}
}
}
this.scrollStart=p.windowOffset.y;
this.delta=(_6b7.y>max?max:_6b7.y)-this.scrollStart;
},update:function(_6b9){
var p=MochiKit.Position;
p.prepare();
window.scrollTo(p.windowOffset.x,this.scrollStart+(_6b9*this.delta));
}});
MochiKit.Visual._CSS_LENGTH=/^(([\+\-]?[0-9\.]+)(em|ex|px|in|cm|mm|pt|pc|\%))|0$/;
MochiKit.Visual.Morph=function(_6bb,_6bc){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_6bb,_6bc);
}
this.__init__(_6bb,_6bc);
};
MochiKit.Visual.Morph.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Morph.prototype,{__class__:MochiKit.Visual.Morph,__init__:function(_6be,_6bf){
this.element=MochiKit.DOM.getElement(_6be);
this.start(_6bf);
},setup:function(){
var b=MochiKit.Base;
var _6c1=this.options.style;
this.styleStart={};
this.styleEnd={};
this.units={};
var _6c2,unit;
for(var s in _6c1){
_6c2=_6c1[s];
s=b.camelize(s);
if(MochiKit.Visual._CSS_LENGTH.test(_6c2)){
var _6c5=_6c2.match(/^([\+\-]?[0-9\.]+)(.*)$/);
_6c2=parseFloat(_6c5[1]);
unit=(_6c5.length==3)?_6c5[2]:null;
this.styleEnd[s]=_6c2;
this.units[s]=unit;
_6c2=MochiKit.Style.getStyle(this.element,s);
_6c5=_6c2.match(/^([\+\-]?[0-9\.]+)(.*)$/);
_6c2=parseFloat(_6c5[1]);
this.styleStart[s]=_6c2;
}else{
if(/[Cc]olor$/.test(s)){
var c=MochiKit.Color.Color;
_6c2=c.fromString(_6c2);
if(_6c2){
this.units[s]="color";
this.styleEnd[s]=_6c2.toHexString();
_6c2=MochiKit.Style.getStyle(this.element,s);
this.styleStart[s]=c.fromString(_6c2).toHexString();
this.styleStart[s]=b.map(b.bind(function(i){
return parseInt(this.styleStart[s].slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
this.styleEnd[s]=b.map(b.bind(function(i){
return parseInt(this.styleEnd[s].slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
}
}else{
this.element.style[s]=_6c2;
}
}
}
},update:function(_6c9){
var _6ca;
for(var s in this.styleStart){
if(this.units[s]=="color"){
var m="#";
var _6cd=this.styleStart[s];
var end=this.styleEnd[s];
MochiKit.Base.map(MochiKit.Base.bind(function(i){
m+=MochiKit.Color.toColorPart(Math.round(_6cd[i]+(end[i]-_6cd[i])*_6c9));
},this),[0,1,2]);
this.element.style[s]=m;
}else{
_6ca=this.styleStart[s]+Math.round((this.styleEnd[s]-this.styleStart[s])*_6c9*1000)/1000+this.units[s];
this.element.style[s]=_6ca;
}
}
}});
MochiKit.Visual.fade=function(_6d0,_6d1){
var s=MochiKit.Style;
var _6d3=s.getStyle(_6d0,"opacity");
_6d1=MochiKit.Base.update({from:s.getStyle(_6d0,"opacity")||1,to:0,afterFinishInternal:function(_6d4){
if(_6d4.options.to!==0){
return;
}
s.hideElement(_6d4.element);
s.setStyle(_6d4.element,{"opacity":_6d3});
}},_6d1);
return new MochiKit.Visual.Opacity(_6d0,_6d1);
};
MochiKit.Visual.appear=function(_6d5,_6d6){
var s=MochiKit.Style;
var v=MochiKit.Visual;
_6d6=MochiKit.Base.update({from:(s.getStyle(_6d5,"display")=="none"?0:s.getStyle(_6d5,"opacity")||0),to:1,afterFinishInternal:function(_6d9){
v._forceRerendering(_6d9.element);
},beforeSetupInternal:function(_6da){
s.setStyle(_6da.element,{"opacity":_6da.options.from});
s.showElement(_6da.element);
}},_6d6);
return new v.Opacity(_6d5,_6d6);
};
MochiKit.Visual.puff=function(_6db,_6dc){
var s=MochiKit.Style;
var v=MochiKit.Visual;
_6db=MochiKit.DOM.getElement(_6db);
var _6df=MochiKit.Style.getElementDimensions(_6db,true);
var _6e0={position:s.getStyle(_6db,"position"),top:_6db.style.top,left:_6db.style.left,width:_6db.style.width,height:_6db.style.height,opacity:s.getStyle(_6db,"opacity")};
_6dc=MochiKit.Base.update({beforeSetupInternal:function(_6e1){
MochiKit.Position.absolutize(_6e1.effects[0].element);
},afterFinishInternal:function(_6e2){
s.hideElement(_6e2.effects[0].element);
s.setStyle(_6e2.effects[0].element,_6e0);
},scaleContent:true,scaleFromCenter:true},_6dc);
return new v.Parallel([new v.Scale(_6db,200,{sync:true,scaleFromCenter:_6dc.scaleFromCenter,scaleMode:{originalHeight:_6df.h,originalWidth:_6df.w},scaleContent:_6dc.scaleContent,restoreAfterFinish:true}),new v.Opacity(_6db,{sync:true,to:0})],_6dc);
};
MochiKit.Visual.blindUp=function(_6e3,_6e4){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_6e3=d.getElement(_6e3);
var _6e7=s.getElementDimensions(_6e3,true);
var _6e8=s.makeClipping(_6e3);
_6e4=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleMode:{originalHeight:_6e7.h,originalWidth:_6e7.w},restoreAfterFinish:true,afterFinishInternal:function(_6e9){
s.hideElement(_6e9.element);
s.undoClipping(_6e9.element,_6e8);
}},_6e4);
return new MochiKit.Visual.Scale(_6e3,0,_6e4);
};
MochiKit.Visual.blindDown=function(_6ea,_6eb){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_6ea=d.getElement(_6ea);
var _6ee=s.getElementDimensions(_6ea,true);
var _6ef;
_6eb=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleFrom:0,scaleMode:{originalHeight:_6ee.h,originalWidth:_6ee.w},restoreAfterFinish:true,afterSetupInternal:function(_6f0){
_6ef=s.makeClipping(_6f0.element);
s.setStyle(_6f0.element,{height:"0px"});
s.showElement(_6f0.element);
},afterFinishInternal:function(_6f1){
s.undoClipping(_6f1.element,_6ef);
}},_6eb);
return new MochiKit.Visual.Scale(_6ea,100,_6eb);
};
MochiKit.Visual.switchOff=function(_6f2,_6f3){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_6f2=d.getElement(_6f2);
var _6f6=s.getElementDimensions(_6f2,true);
var _6f7=s.getStyle(_6f2,"opacity");
var _6f8;
_6f3=MochiKit.Base.update({duration:0.7,restoreAfterFinish:true,beforeSetupInternal:function(_6f9){
s.makePositioned(_6f2);
_6f8=s.makeClipping(_6f2);
},afterFinishInternal:function(_6fa){
s.hideElement(_6f2);
s.undoClipping(_6f2,_6f8);
s.undoPositioned(_6f2);
s.setStyle(_6f2,{"opacity":_6f7});
}},_6f3);
var v=MochiKit.Visual;
return new v.Sequence([new v.appear(_6f2,{sync:true,duration:0.57*_6f3.duration,from:0,transition:v.Transitions.flicker}),new v.Scale(_6f2,1,{sync:true,duration:0.43*_6f3.duration,scaleFromCenter:true,scaleX:false,scaleMode:{originalHeight:_6f6.h,originalWidth:_6f6.w},scaleContent:false,restoreAfterFinish:true})],_6f3);
};
MochiKit.Visual.dropOut=function(_6fc,_6fd){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_6fc=d.getElement(_6fc);
var _700={top:s.getStyle(_6fc,"top"),left:s.getStyle(_6fc,"left"),opacity:s.getStyle(_6fc,"opacity")};
_6fd=MochiKit.Base.update({duration:0.5,distance:100,beforeSetupInternal:function(_701){
s.makePositioned(_701.effects[0].element);
},afterFinishInternal:function(_702){
s.hideElement(_702.effects[0].element);
s.undoPositioned(_702.effects[0].element);
s.setStyle(_702.effects[0].element,_700);
}},_6fd);
var v=MochiKit.Visual;
return new v.Parallel([new v.Move(_6fc,{x:0,y:_6fd.distance,sync:true}),new v.Opacity(_6fc,{sync:true,to:0})],_6fd);
};
MochiKit.Visual.shake=function(_704,_705){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_704=d.getElement(_704);
var _709={top:s.getStyle(_704,"top"),left:s.getStyle(_704,"left")};
_705=MochiKit.Base.update({duration:0.5,afterFinishInternal:function(_70a){
s.undoPositioned(_704);
s.setStyle(_704,_709);
}},_705);
return new v.Sequence([new v.Move(_704,{sync:true,duration:0.1*_705.duration,x:20,y:0}),new v.Move(_704,{sync:true,duration:0.2*_705.duration,x:-40,y:0}),new v.Move(_704,{sync:true,duration:0.2*_705.duration,x:40,y:0}),new v.Move(_704,{sync:true,duration:0.2*_705.duration,x:-40,y:0}),new v.Move(_704,{sync:true,duration:0.2*_705.duration,x:40,y:0}),new v.Move(_704,{sync:true,duration:0.1*_705.duration,x:-20,y:0})],_705);
};
MochiKit.Visual.slideDown=function(_70b,_70c){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
_70b=d.getElement(_70b);
if(!_70b.firstChild){
throw new Error("MochiKit.Visual.slideDown must be used on a element with a child");
}
d.removeEmptyTextNodes(_70b);
var _710=s.getStyle(_70b.firstChild,"bottom")||0;
var _711=s.getElementDimensions(_70b,true);
var _712;
_70c=b.update({scaleContent:false,scaleX:false,scaleFrom:0,scaleMode:{originalHeight:_711.h,originalWidth:_711.w},restoreAfterFinish:true,afterSetupInternal:function(_713){
s.makePositioned(_713.element);
s.makePositioned(_713.element.firstChild);
if(/Opera/.test(navigator.userAgent)){
s.setStyle(_713.element,{top:""});
}
_712=s.makeClipping(_713.element);
s.setStyle(_713.element,{height:"0px"});
s.showElement(_713.element);
},afterUpdateInternal:function(_714){
var _715=s.getElementDimensions(_714.element,true);
s.setStyle(_714.element.firstChild,{bottom:(_714.dims[0]-_715.h)+"px"});
},afterFinishInternal:function(_716){
s.undoClipping(_716.element,_712);
if(/MSIE/.test(navigator.userAgent)){
s.undoPositioned(_716.element);
s.undoPositioned(_716.element.firstChild);
}else{
s.undoPositioned(_716.element.firstChild);
s.undoPositioned(_716.element);
}
s.setStyle(_716.element.firstChild,{bottom:_710});
}},_70c);
return new MochiKit.Visual.Scale(_70b,100,_70c);
};
MochiKit.Visual.slideUp=function(_717,_718){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
_717=d.getElement(_717);
if(!_717.firstChild){
throw new Error("MochiKit.Visual.slideUp must be used on a element with a child");
}
d.removeEmptyTextNodes(_717);
var _71c=s.getStyle(_717.firstChild,"bottom");
var _71d=s.getElementDimensions(_717,true);
var _71e;
_718=b.update({scaleContent:false,scaleX:false,scaleMode:{originalHeight:_71d.h,originalWidth:_71d.w},scaleFrom:100,restoreAfterFinish:true,beforeStartInternal:function(_71f){
s.makePositioned(_71f.element);
s.makePositioned(_71f.element.firstChild);
if(/Opera/.test(navigator.userAgent)){
s.setStyle(_71f.element,{top:""});
}
_71e=s.makeClipping(_71f.element);
s.showElement(_71f.element);
},afterUpdateInternal:function(_720){
var _721=s.getElementDimensions(_720.element,true);
s.setStyle(_720.element.firstChild,{bottom:(_720.dims[0]-_721.h)+"px"});
},afterFinishInternal:function(_722){
s.hideElement(_722.element);
s.undoClipping(_722.element,_71e);
s.undoPositioned(_722.element.firstChild);
s.undoPositioned(_722.element);
s.setStyle(_722.element.firstChild,{bottom:_71c});
}},_718);
return new MochiKit.Visual.Scale(_717,0,_718);
};
MochiKit.Visual.squish=function(_723,_724){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
var _728=s.getElementDimensions(_723,true);
var _729;
_724=b.update({restoreAfterFinish:true,scaleMode:{originalHeight:_728.w,originalWidth:_728.h},beforeSetupInternal:function(_72a){
_729=s.makeClipping(_72a.element);
},afterFinishInternal:function(_72b){
s.hideElement(_72b.element);
s.undoClipping(_72b.element,_729);
}},_724);
return new MochiKit.Visual.Scale(_723,/Opera/.test(navigator.userAgent)?1:0,_724);
};
MochiKit.Visual.grow=function(_72c,_72d){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_72c=d.getElement(_72c);
_72d=MochiKit.Base.update({direction:"center",moveTransition:v.Transitions.sinoidal,scaleTransition:v.Transitions.sinoidal,opacityTransition:v.Transitions.full,scaleContent:true,scaleFromCenter:false},_72d);
var _731={top:_72c.style.top,left:_72c.style.left,height:_72c.style.height,width:_72c.style.width,opacity:s.getStyle(_72c,"opacity")};
var dims=s.getElementDimensions(_72c,true);
var _733,_734;
var _735,_736;
switch(_72d.direction){
case "top-left":
_733=_734=_735=_736=0;
break;
case "top-right":
_733=dims.w;
_734=_736=0;
_735=-dims.w;
break;
case "bottom-left":
_733=_735=0;
_734=dims.h;
_736=-dims.h;
break;
case "bottom-right":
_733=dims.w;
_734=dims.h;
_735=-dims.w;
_736=-dims.h;
break;
case "center":
_733=dims.w/2;
_734=dims.h/2;
_735=-dims.w/2;
_736=-dims.h/2;
break;
}
var _737=MochiKit.Base.update({beforeSetupInternal:function(_738){
s.setStyle(_738.effects[0].element,{height:"0px"});
s.showElement(_738.effects[0].element);
},afterFinishInternal:function(_739){
s.undoClipping(_739.effects[0].element);
s.undoPositioned(_739.effects[0].element);
s.setStyle(_739.effects[0].element,_731);
}},_72d);
return new v.Move(_72c,{x:_733,y:_734,duration:0.01,beforeSetupInternal:function(_73a){
s.hideElement(_73a.element);
s.makeClipping(_73a.element);
s.makePositioned(_73a.element);
},afterFinishInternal:function(_73b){
new v.Parallel([new v.Opacity(_73b.element,{sync:true,to:1,from:0,transition:_72d.opacityTransition}),new v.Move(_73b.element,{x:_735,y:_736,sync:true,transition:_72d.moveTransition}),new v.Scale(_73b.element,100,{scaleMode:{originalHeight:dims.h,originalWidth:dims.w},sync:true,scaleFrom:/Opera/.test(navigator.userAgent)?1:0,transition:_72d.scaleTransition,scaleContent:_72d.scaleContent,scaleFromCenter:_72d.scaleFromCenter,restoreAfterFinish:true})],_737);
}});
};
MochiKit.Visual.shrink=function(_73c,_73d){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_73c=d.getElement(_73c);
_73d=MochiKit.Base.update({direction:"center",moveTransition:v.Transitions.sinoidal,scaleTransition:v.Transitions.sinoidal,opacityTransition:v.Transitions.none,scaleContent:true,scaleFromCenter:false},_73d);
var _741={top:_73c.style.top,left:_73c.style.left,height:_73c.style.height,width:_73c.style.width,opacity:s.getStyle(_73c,"opacity")};
var dims=s.getElementDimensions(_73c,true);
var _743,_744;
switch(_73d.direction){
case "top-left":
_743=_744=0;
break;
case "top-right":
_743=dims.w;
_744=0;
break;
case "bottom-left":
_743=0;
_744=dims.h;
break;
case "bottom-right":
_743=dims.w;
_744=dims.h;
break;
case "center":
_743=dims.w/2;
_744=dims.h/2;
break;
}
var _745;
var _746=MochiKit.Base.update({beforeStartInternal:function(_747){
s.makePositioned(_747.effects[0].element);
_745=s.makeClipping(_747.effects[0].element);
},afterFinishInternal:function(_748){
s.hideElement(_748.effects[0].element);
s.undoClipping(_748.effects[0].element,_745);
s.undoPositioned(_748.effects[0].element);
s.setStyle(_748.effects[0].element,_741);
}},_73d);
return new v.Parallel([new v.Opacity(_73c,{sync:true,to:0,from:1,transition:_73d.opacityTransition}),new v.Scale(_73c,/Opera/.test(navigator.userAgent)?1:0,{scaleMode:{originalHeight:dims.h,originalWidth:dims.w},sync:true,transition:_73d.scaleTransition,scaleContent:_73d.scaleContent,scaleFromCenter:_73d.scaleFromCenter,restoreAfterFinish:true}),new v.Move(_73c,{x:_743,y:_744,sync:true,transition:_73d.moveTransition})],_746);
};
MochiKit.Visual.pulsate=function(_749,_74a){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var b=MochiKit.Base;
var _74e=MochiKit.Style.getStyle(_749,"opacity");
_74a=b.update({duration:3,from:0,afterFinishInternal:function(_74f){
MochiKit.Style.setStyle(_74f.element,{"opacity":_74e});
}},_74a);
var _750=_74a.transition||v.Transitions.sinoidal;
_74a.transition=function(pos){
return _750(1-v.Transitions.pulse(pos,_74a.pulses));
};
return new v.Opacity(_749,_74a);
};
MochiKit.Visual.fold=function(_752,_753){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_752=d.getElement(_752);
var _757=s.getElementDimensions(_752,true);
var _758={top:_752.style.top,left:_752.style.left,width:_752.style.width,height:_752.style.height};
var _759=s.makeClipping(_752);
_753=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleMode:{originalHeight:_757.h,originalWidth:_757.w},afterFinishInternal:function(_75a){
new v.Scale(_752,1,{scaleContent:false,scaleY:false,scaleMode:{originalHeight:_757.h,originalWidth:_757.w},afterFinishInternal:function(_75b){
s.hideElement(_75b.element);
s.undoClipping(_75b.element,_759);
s.setStyle(_75b.element,_758);
}});
}},_753);
return new v.Scale(_752,5,_753);
};
MochiKit.Visual.__new__=function(){
var m=MochiKit.Base;
m._deprecated(this,"Color","MochiKit.Color.Color","1.1");
m._deprecated(this,"getElementsComputedStyle","MochiKit.Style.getStyle","1.1");
m.nameFunctions(this);
};
MochiKit.Visual.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Visual);
MochiKit.Base._module("DragAndDrop","1.5",["Base","Iter","DOM","Signal","Visual","Position"]);
MochiKit.DragAndDrop.Droppables={drops:[],remove:function(_75d){
this.drops=MochiKit.Base.filter(function(d){
return d.element!=MochiKit.DOM.getElement(_75d);
},this.drops);
},register:function(drop){
this.drops.push(drop);
},unregister:function(drop){
this.drops=MochiKit.Base.filter(function(d){
return d!=drop;
},this.drops);
},prepare:function(_762){
MochiKit.Base.map(function(drop){
if(drop.isAccepted(_762)){
if(drop.options.activeclass){
MochiKit.DOM.addElementClass(drop.element,drop.options.activeclass);
}
drop.options.onactive(drop.element,_762);
}
},this.drops);
},findDeepestChild:function(_764){
deepest=_764[0];
for(i=1;i<_764.length;++i){
if(MochiKit.DOM.isChildNode(_764[i].element,deepest.element)){
deepest=_764[i];
}
}
return deepest;
},show:function(_765,_766){
if(!this.drops.length){
return;
}
var _767=[];
if(this.last_active){
this.last_active.deactivate();
}
MochiKit.Iter.forEach(this.drops,function(drop){
if(drop.isAffected(_765,_766)){
_767.push(drop);
}
});
if(_767.length>0){
drop=this.findDeepestChild(_767);
MochiKit.Position.within(drop.element,_765.page.x,_765.page.y);
drop.options.onhover(_766,drop.element,MochiKit.Position.overlap(drop.options.overlap,drop.element));
drop.activate();
}
},fire:function(_769,_76a){
if(!this.last_active){
return;
}
MochiKit.Position.prepare();
if(this.last_active.isAffected(_769.mouse(),_76a)){
this.last_active.options.ondrop(_76a,this.last_active.element,_769);
}
},reset:function(_76b){
MochiKit.Base.map(function(drop){
if(drop.options.activeclass){
MochiKit.DOM.removeElementClass(drop.element,drop.options.activeclass);
}
drop.options.ondesactive(drop.element,_76b);
},this.drops);
if(this.last_active){
this.last_active.deactivate();
}
}};
MochiKit.DragAndDrop.Droppable=function(_76d,_76e){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_76d,_76e);
}
this.__init__(_76d,_76e);
};
MochiKit.DragAndDrop.Droppable.prototype={__class__:MochiKit.DragAndDrop.Droppable,__init__:function(_770,_771){
var d=MochiKit.DOM;
var b=MochiKit.Base;
this.element=d.getElement(_770);
this.options=b.update({greedy:true,hoverclass:null,activeclass:null,hoverfunc:b.noop,accept:null,onactive:b.noop,ondesactive:b.noop,onhover:b.noop,ondrop:b.noop,containment:[],tree:false},_771);
this.options._containers=[];
b.map(MochiKit.Base.bind(function(c){
this.options._containers.push(d.getElement(c));
},this),this.options.containment);
MochiKit.Style.makePositioned(this.element);
MochiKit.DragAndDrop.Droppables.register(this);
},isContained:function(_775){
if(this.options._containers.length){
var _776;
if(this.options.tree){
_776=_775.treeNode;
}else{
_776=_775.parentNode;
}
return MochiKit.Iter.some(this.options._containers,function(c){
return _776==c;
});
}else{
return true;
}
},isAccepted:function(_778){
return ((!this.options.accept)||MochiKit.Iter.some(this.options.accept,function(c){
return MochiKit.DOM.hasElementClass(_778,c);
}));
},isAffected:function(_77a,_77b){
return ((this.element!=_77b)&&this.isContained(_77b)&&this.isAccepted(_77b)&&MochiKit.Position.within(this.element,_77a.page.x,_77a.page.y));
},deactivate:function(){
if(this.options.hoverclass){
MochiKit.DOM.removeElementClass(this.element,this.options.hoverclass);
}
this.options.hoverfunc(this.element,false);
MochiKit.DragAndDrop.Droppables.last_active=null;
},activate:function(){
if(this.options.hoverclass){
MochiKit.DOM.addElementClass(this.element,this.options.hoverclass);
}
this.options.hoverfunc(this.element,true);
MochiKit.DragAndDrop.Droppables.last_active=this;
},destroy:function(){
MochiKit.DragAndDrop.Droppables.unregister(this);
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.DragAndDrop.Draggables={drags:[],register:function(_77c){
if(this.drags.length===0){
var conn=MochiKit.Signal.connect;
this.eventMouseUp=conn(document,"onmouseup",this,this.endDrag);
this.eventMouseMove=conn(document,"onmousemove",this,this.updateDrag);
this.eventKeypress=conn(document,"onkeypress",this,this.keyPress);
}
this.drags.push(_77c);
},unregister:function(_77e){
this.drags=MochiKit.Base.filter(function(d){
return d!=_77e;
},this.drags);
if(this.drags.length===0){
var disc=MochiKit.Signal.disconnect;
disc(this.eventMouseUp);
disc(this.eventMouseMove);
disc(this.eventKeypress);
}
},activate:function(_781){
window.focus();
this.activeDraggable=_781;
},deactivate:function(){
this.activeDraggable=null;
},updateDrag:function(_782){
if(!this.activeDraggable){
return;
}
var _783=_782.mouse();
if(this._lastPointer&&(MochiKit.Base.repr(this._lastPointer.page)==MochiKit.Base.repr(_783.page))){
return;
}
this._lastPointer=_783;
this.activeDraggable.updateDrag(_782,_783);
},endDrag:function(_784){
if(!this.activeDraggable){
return;
}
this._lastPointer=null;
this.activeDraggable.endDrag(_784);
this.activeDraggable=null;
},keyPress:function(_785){
if(this.activeDraggable){
this.activeDraggable.keyPress(_785);
}
},notify:function(_786,_787,_788){
MochiKit.Signal.signal(this,_786,_787,_788);
}};
MochiKit.DragAndDrop.Draggable=function(_789,_78a){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_789,_78a);
}
this.__init__(_789,_78a);
};
MochiKit.DragAndDrop.Draggable.prototype={__class__:MochiKit.DragAndDrop.Draggable,__init__:function(_78c,_78d){
var v=MochiKit.Visual;
var b=MochiKit.Base;
_78d=b.update({handle:false,starteffect:function(_790){
this._savedOpacity=MochiKit.Style.getStyle(_790,"opacity")||1;
new v.Opacity(_790,{duration:0.2,from:this._savedOpacity,to:0.7});
},reverteffect:function(_791,_792,_793){
var dur=Math.sqrt(Math.abs(_792^2)+Math.abs(_793^2))*0.02;
return new v.Move(_791,{x:-_793,y:-_792,duration:dur});
},endeffect:function(_795){
new v.Opacity(_795,{duration:0.2,from:0.7,to:this._savedOpacity});
},onchange:b.noop,zindex:1000,revert:false,scroll:false,scrollSensitivity:20,scrollSpeed:15,snap:false},_78d);
var d=MochiKit.DOM;
this.element=d.getElement(_78c);
if(_78d.handle&&(typeof (_78d.handle)=="string")){
this.handle=d.getFirstElementByTagAndClassName(null,_78d.handle,this.element);
}
if(!this.handle){
this.handle=d.getElement(_78d.handle);
}
if(!this.handle){
this.handle=this.element;
}
if(_78d.scroll&&!_78d.scroll.scrollTo&&!_78d.scroll.outerHTML){
_78d.scroll=d.getElement(_78d.scroll);
this._isScrollChild=MochiKit.DOM.isChildNode(this.element,_78d.scroll);
}
MochiKit.Style.makePositioned(this.element);
this.delta=this.currentDelta();
this.options=_78d;
this.dragging=false;
this.eventMouseDown=MochiKit.Signal.connect(this.handle,"onmousedown",this,this.initDrag);
MochiKit.DragAndDrop.Draggables.register(this);
},destroy:function(){
MochiKit.Signal.disconnect(this.eventMouseDown);
MochiKit.DragAndDrop.Draggables.unregister(this);
},currentDelta:function(){
var s=MochiKit.Style.getStyle;
return [parseInt(s(this.element,"left")||"0"),parseInt(s(this.element,"top")||"0")];
},initDrag:function(_798){
if(!_798.mouse().button.left){
return;
}
var src=_798.target();
var _79a=(src.tagName||"").toUpperCase();
if(_79a==="INPUT"||_79a==="SELECT"||_79a==="OPTION"||_79a==="BUTTON"||_79a==="TEXTAREA"){
return;
}
if(this._revert){
this._revert.cancel();
this._revert=null;
}
var _79b=_798.mouse();
var pos=MochiKit.Position.cumulativeOffset(this.element);
this.offset=[_79b.page.x-pos.x,_79b.page.y-pos.y];
MochiKit.DragAndDrop.Draggables.activate(this);
_798.stop();
},startDrag:function(_79d){
this.dragging=true;
if(this.options.selectclass){
MochiKit.DOM.addElementClass(this.element,this.options.selectclass);
}
if(this.options.zindex){
this.originalZ=parseInt(MochiKit.Style.getStyle(this.element,"z-index")||"0");
this.element.style.zIndex=this.options.zindex;
}
if(this.options.ghosting){
this._clone=this.element.cloneNode(true);
this.ghostPosition=MochiKit.Position.absolutize(this.element);
this.element.parentNode.insertBefore(this._clone,this.element);
}
if(this.options.scroll){
if(this.options.scroll==window){
var _79e=this._getWindowScroll(this.options.scroll);
this.originalScrollLeft=_79e.left;
this.originalScrollTop=_79e.top;
}else{
this.originalScrollLeft=this.options.scroll.scrollLeft;
this.originalScrollTop=this.options.scroll.scrollTop;
}
}
MochiKit.DragAndDrop.Droppables.prepare(this.element);
MochiKit.DragAndDrop.Draggables.notify("start",this,_79d);
if(this.options.starteffect){
this.options.starteffect(this.element);
}
},updateDrag:function(_79f,_7a0){
if(!this.dragging){
this.startDrag(_79f);
}
MochiKit.Position.prepare();
MochiKit.DragAndDrop.Droppables.show(_7a0,this.element);
MochiKit.DragAndDrop.Draggables.notify("drag",this,_79f);
this.draw(_7a0);
this.options.onchange(this);
if(this.options.scroll){
this.stopScrolling();
var p,q;
if(this.options.scroll==window){
var s=this._getWindowScroll(this.options.scroll);
p=new MochiKit.Style.Coordinates(s.left,s.top);
q=new MochiKit.Style.Coordinates(s.left+s.width,s.top+s.height);
}else{
p=MochiKit.Position.page(this.options.scroll);
p.x+=this.options.scroll.scrollLeft;
p.y+=this.options.scroll.scrollTop;
p.x+=(window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0);
p.y+=(window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0);
q=new MochiKit.Style.Coordinates(p.x+this.options.scroll.offsetWidth,p.y+this.options.scroll.offsetHeight);
}
var _7a4=[0,0];
if(_7a0.page.x>(q.x-this.options.scrollSensitivity)){
_7a4[0]=_7a0.page.x-(q.x-this.options.scrollSensitivity);
}else{
if(_7a0.page.x<(p.x+this.options.scrollSensitivity)){
_7a4[0]=_7a0.page.x-(p.x+this.options.scrollSensitivity);
}
}
if(_7a0.page.y>(q.y-this.options.scrollSensitivity)){
_7a4[1]=_7a0.page.y-(q.y-this.options.scrollSensitivity);
}else{
if(_7a0.page.y<(p.y+this.options.scrollSensitivity)){
_7a4[1]=_7a0.page.y-(p.y+this.options.scrollSensitivity);
}
}
this.startScrolling(_7a4);
}
if(/AppleWebKit/.test(navigator.appVersion)){
window.scrollBy(0,0);
}
_79f.stop();
},finishDrag:function(_7a5,_7a6){
var dr=MochiKit.DragAndDrop;
this.dragging=false;
if(this.options.selectclass){
MochiKit.DOM.removeElementClass(this.element,this.options.selectclass);
}
if(this.options.ghosting){
MochiKit.Position.relativize(this.element,this.ghostPosition);
MochiKit.DOM.removeElement(this._clone);
this._clone=null;
}
if(_7a6){
dr.Droppables.fire(_7a5,this.element);
}
dr.Draggables.notify("end",this,_7a5);
var _7a8=this.options.revert;
if(_7a8&&typeof (_7a8)=="function"){
_7a8=_7a8(this.element);
}
var d=this.currentDelta();
if(_7a8&&this.options.reverteffect){
this._revert=this.options.reverteffect(this.element,d[1]-this.delta[1],d[0]-this.delta[0]);
}else{
this.delta=d;
}
if(this.options.zindex){
this.element.style.zIndex=this.originalZ;
}
if(this.options.endeffect){
this.options.endeffect(this.element);
}
dr.Draggables.deactivate();
dr.Droppables.reset(this.element);
},keyPress:function(_7aa){
if(_7aa.key().string!="KEY_ESCAPE"){
return;
}
this.finishDrag(_7aa,false);
_7aa.stop();
},endDrag:function(_7ab){
if(!this.dragging){
return;
}
this.stopScrolling();
this.finishDrag(_7ab,true);
_7ab.stop();
},draw:function(_7ac){
var pos=MochiKit.Position.cumulativeOffset(this.element);
var d=this.currentDelta();
pos.x-=d[0];
pos.y-=d[1];
if(this.options.scroll&&(this.options.scroll!=window&&this._isScrollChild)){
pos.x-=this.options.scroll.scrollLeft-this.originalScrollLeft;
pos.y-=this.options.scroll.scrollTop-this.originalScrollTop;
}
var p=[_7ac.page.x-pos.x-this.offset[0],_7ac.page.y-pos.y-this.offset[1]];
if(this.options.snap){
if(typeof (this.options.snap)=="function"){
p=this.options.snap(p[0],p[1]);
}else{
if(this.options.snap instanceof Array){
var i=-1;
p=MochiKit.Base.map(MochiKit.Base.bind(function(v){
i+=1;
return Math.round(v/this.options.snap[i])*this.options.snap[i];
},this),p);
}else{
p=MochiKit.Base.map(MochiKit.Base.bind(function(v){
return Math.round(v/this.options.snap)*this.options.snap;
},this),p);
}
}
}
var _7b3=this.element.style;
if((!this.options.constraint)||(this.options.constraint=="horizontal")){
_7b3.left=p[0]+"px";
}
if((!this.options.constraint)||(this.options.constraint=="vertical")){
_7b3.top=p[1]+"px";
}
if(_7b3.visibility=="hidden"){
_7b3.visibility="";
}
},stopScrolling:function(){
if(this.scrollInterval){
clearInterval(this.scrollInterval);
this.scrollInterval=null;
MochiKit.DragAndDrop.Draggables._lastScrollPointer=null;
}
},startScrolling:function(_7b4){
if(!_7b4[0]&&!_7b4[1]){
return;
}
this.scrollSpeed=[_7b4[0]*this.options.scrollSpeed,_7b4[1]*this.options.scrollSpeed];
this.lastScrolled=new Date();
this.scrollInterval=setInterval(MochiKit.Base.bind(this.scroll,this),10);
},scroll:function(){
var _7b5=new Date();
var _7b6=_7b5-this.lastScrolled;
this.lastScrolled=_7b5;
if(this.options.scroll==window){
var s=this._getWindowScroll(this.options.scroll);
if(this.scrollSpeed[0]||this.scrollSpeed[1]){
var dm=_7b6/1000;
this.options.scroll.scrollTo(s.left+dm*this.scrollSpeed[0],s.top+dm*this.scrollSpeed[1]);
}
}else{
this.options.scroll.scrollLeft+=this.scrollSpeed[0]*_7b6/1000;
this.options.scroll.scrollTop+=this.scrollSpeed[1]*_7b6/1000;
}
var d=MochiKit.DragAndDrop;
MochiKit.Position.prepare();
d.Droppables.show(d.Draggables._lastPointer,this.element);
d.Draggables.notify("drag",this);
if(this._isScrollChild){
d.Draggables._lastScrollPointer=d.Draggables._lastScrollPointer||d.Draggables._lastPointer;
d.Draggables._lastScrollPointer.x+=this.scrollSpeed[0]*_7b6/1000;
d.Draggables._lastScrollPointer.y+=this.scrollSpeed[1]*_7b6/1000;
if(d.Draggables._lastScrollPointer.x<0){
d.Draggables._lastScrollPointer.x=0;
}
if(d.Draggables._lastScrollPointer.y<0){
d.Draggables._lastScrollPointer.y=0;
}
this.draw(d.Draggables._lastScrollPointer);
}
this.options.onchange(this);
},_getWindowScroll:function(win){
var vp,w,h;
MochiKit.DOM.withWindow(win,function(){
vp=MochiKit.Style.getViewportPosition(win.document);
});
if(win.innerWidth){
w=win.innerWidth;
h=win.innerHeight;
}else{
if(win.document.documentElement&&win.document.documentElement.clientWidth){
w=win.document.documentElement.clientWidth;
h=win.document.documentElement.clientHeight;
}else{
w=win.document.body.offsetWidth;
h=win.document.body.offsetHeight;
}
}
return {top:vp.y,left:vp.x,width:w,height:h};
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.DragAndDrop.__new__=function(){
MochiKit.Base.nameFunctions(this);
};
MochiKit.DragAndDrop.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.DragAndDrop);
MochiKit.Base._module("Sortable","1.5",["Base","Iter","DOM","Position","DragAndDrop"]);
MochiKit.Base.update(MochiKit.Sortable,{__export__:false,sortables:{},_findRootElement:function(_7be){
while(_7be.tagName.toUpperCase()!="BODY"){
if(_7be.id&&MochiKit.Sortable.sortables[_7be.id]){
return _7be;
}
_7be=_7be.parentNode;
}
},_createElementId:function(_7bf){
if(_7bf.id==null||_7bf.id==""){
var d=MochiKit.DOM;
var id;
var _7c2=1;
while(d.getElement(id="sortable"+_7c2)!=null){
_7c2+=1;
}
d.setNodeAttribute(_7bf,"id",id);
}
},options:function(_7c3){
_7c3=MochiKit.Sortable._findRootElement(MochiKit.DOM.getElement(_7c3));
if(!_7c3){
return;
}
return MochiKit.Sortable.sortables[_7c3.id];
},destroy:function(_7c4){
var s=MochiKit.Sortable.options(_7c4);
var b=MochiKit.Base;
var d=MochiKit.DragAndDrop;
if(s){
MochiKit.Signal.disconnect(s.startHandle);
MochiKit.Signal.disconnect(s.endHandle);
b.map(function(dr){
d.Droppables.remove(dr);
},s.droppables);
b.map(function(dr){
dr.destroy();
},s.draggables);
delete MochiKit.Sortable.sortables[s.element.id];
}
},create:function(_7ca,_7cb){
_7ca=MochiKit.DOM.getElement(_7ca);
var self=MochiKit.Sortable;
self._createElementId(_7ca);
_7cb=MochiKit.Base.update({element:_7ca,tag:"li",dropOnEmpty:false,tree:false,treeTag:"ul",overlap:"vertical",constraint:"vertical",containment:[_7ca],handle:false,only:false,hoverclass:null,ghosting:false,scroll:false,scrollSensitivity:20,scrollSpeed:15,format:/^[^_]*_(.*)$/,onChange:MochiKit.Base.noop,onUpdate:MochiKit.Base.noop,accept:null},_7cb);
self.destroy(_7ca);
var _7cd={revert:true,ghosting:_7cb.ghosting,scroll:_7cb.scroll,scrollSensitivity:_7cb.scrollSensitivity,scrollSpeed:_7cb.scrollSpeed,constraint:_7cb.constraint,handle:_7cb.handle};
if(_7cb.starteffect){
_7cd.starteffect=_7cb.starteffect;
}
if(_7cb.reverteffect){
_7cd.reverteffect=_7cb.reverteffect;
}else{
if(_7cb.ghosting){
_7cd.reverteffect=function(_7ce){
_7ce.style.top=0;
_7ce.style.left=0;
};
}
}
if(_7cb.endeffect){
_7cd.endeffect=_7cb.endeffect;
}
if(_7cb.zindex){
_7cd.zindex=_7cb.zindex;
}
var _7cf={overlap:_7cb.overlap,containment:_7cb.containment,hoverclass:_7cb.hoverclass,onhover:self.onHover,tree:_7cb.tree,accept:_7cb.accept};
var _7d0={onhover:self.onEmptyHover,overlap:_7cb.overlap,containment:_7cb.containment,hoverclass:_7cb.hoverclass,accept:_7cb.accept};
MochiKit.DOM.removeEmptyTextNodes(_7ca);
_7cb.draggables=[];
_7cb.droppables=[];
if(_7cb.dropOnEmpty||_7cb.tree){
new MochiKit.DragAndDrop.Droppable(_7ca,_7d0);
_7cb.droppables.push(_7ca);
}
MochiKit.Base.map(function(e){
var _7d2=_7cb.handle?MochiKit.DOM.getFirstElementByTagAndClassName(null,_7cb.handle,e):e;
_7cb.draggables.push(new MochiKit.DragAndDrop.Draggable(e,MochiKit.Base.update(_7cd,{handle:_7d2})));
new MochiKit.DragAndDrop.Droppable(e,_7cf);
if(_7cb.tree){
e.treeNode=_7ca;
}
_7cb.droppables.push(e);
},(self.findElements(_7ca,_7cb)||[]));
if(_7cb.tree){
MochiKit.Base.map(function(e){
new MochiKit.DragAndDrop.Droppable(e,_7d0);
e.treeNode=_7ca;
_7cb.droppables.push(e);
},(self.findTreeElements(_7ca,_7cb)||[]));
}
self.sortables[_7ca.id]=_7cb;
_7cb.lastValue=self.serialize(_7ca);
_7cb.startHandle=MochiKit.Signal.connect(MochiKit.DragAndDrop.Draggables,"start",MochiKit.Base.partial(self.onStart,_7ca));
_7cb.endHandle=MochiKit.Signal.connect(MochiKit.DragAndDrop.Draggables,"end",MochiKit.Base.partial(self.onEnd,_7ca));
},onStart:function(_7d4,_7d5){
var self=MochiKit.Sortable;
var _7d7=self.options(_7d4);
_7d7.lastValue=self.serialize(_7d7.element);
},onEnd:function(_7d8,_7d9){
var self=MochiKit.Sortable;
self.unmark();
var _7db=self.options(_7d8);
if(_7db.lastValue!=self.serialize(_7db.element)){
_7db.onUpdate(_7db.element);
}
},findElements:function(_7dc,_7dd){
return MochiKit.Sortable.findChildren(_7dc,_7dd.only,_7dd.tree,_7dd.tag);
},findTreeElements:function(_7de,_7df){
return MochiKit.Sortable.findChildren(_7de,_7df.only,_7df.tree?true:false,_7df.treeTag);
},findChildren:function(_7e0,only,_7e2,_7e3){
if(!_7e0.hasChildNodes()){
return null;
}
_7e3=_7e3.toUpperCase();
if(only){
only=MochiKit.Base.flattenArray([only]);
}
var _7e4=[];
MochiKit.Base.map(function(e){
if(e.tagName&&e.tagName.toUpperCase()==_7e3&&(!only||MochiKit.Iter.some(only,function(c){
return MochiKit.DOM.hasElementClass(e,c);
}))){
_7e4.push(e);
}
if(_7e2){
var _7e7=MochiKit.Sortable.findChildren(e,only,_7e2,_7e3);
if(_7e7&&_7e7.length>0){
_7e4=_7e4.concat(_7e7);
}
}
},_7e0.childNodes);
return _7e4;
},onHover:function(_7e8,_7e9,_7ea){
if(MochiKit.DOM.isChildNode(_7e9,_7e8)){
return;
}
var self=MochiKit.Sortable;
if(_7ea>0.33&&_7ea<0.66&&self.options(_7e9).tree){
return;
}else{
if(_7ea>0.5){
self.mark(_7e9,"before");
if(_7e9.previousSibling!=_7e8){
var _7ec=_7e8.parentNode;
_7e8.style.visibility="hidden";
_7e9.parentNode.insertBefore(_7e8,_7e9);
if(_7e9.parentNode!=_7ec){
self.options(_7ec).onChange(_7e8);
}
self.options(_7e9.parentNode).onChange(_7e8);
}
}else{
self.mark(_7e9,"after");
var _7ed=_7e9.nextSibling||null;
if(_7ed!=_7e8){
var _7ec=_7e8.parentNode;
_7e8.style.visibility="hidden";
_7e9.parentNode.insertBefore(_7e8,_7ed);
if(_7e9.parentNode!=_7ec){
self.options(_7ec).onChange(_7e8);
}
self.options(_7e9.parentNode).onChange(_7e8);
}
}
}
},_offsetSize:function(_7ee,type){
if(type=="vertical"||type=="height"){
return _7ee.offsetHeight;
}else{
return _7ee.offsetWidth;
}
},onEmptyHover:function(_7f0,_7f1,_7f2){
var _7f3=_7f0.parentNode;
var self=MochiKit.Sortable;
var _7f5=self.options(_7f1);
if(!MochiKit.DOM.isChildNode(_7f1,_7f0)){
var _7f6;
var _7f7=self.findElements(_7f1,{tag:_7f5.tag,only:_7f5.only});
var _7f8=null;
if(_7f7){
var _7f9=self._offsetSize(_7f1,_7f5.overlap)*(1-_7f2);
for(_7f6=0;_7f6<_7f7.length;_7f6+=1){
if(_7f9-self._offsetSize(_7f7[_7f6],_7f5.overlap)>=0){
_7f9-=self._offsetSize(_7f7[_7f6],_7f5.overlap);
}else{
if(_7f9-(self._offsetSize(_7f7[_7f6],_7f5.overlap)/2)>=0){
_7f8=_7f6+1<_7f7.length?_7f7[_7f6+1]:null;
break;
}else{
_7f8=_7f7[_7f6];
break;
}
}
}
}
_7f1.insertBefore(_7f0,_7f8);
self.options(_7f3).onChange(_7f0);
_7f5.onChange(_7f0);
}
},unmark:function(){
var m=MochiKit.Sortable._marker;
if(m){
MochiKit.Style.hideElement(m);
}
},mark:function(_7fb,_7fc){
var d=MochiKit.DOM;
var self=MochiKit.Sortable;
var _7ff=self.options(_7fb.parentNode);
if(_7ff&&!_7ff.ghosting){
return;
}
if(!self._marker){
self._marker=d.getElement("dropmarker")||document.createElement("DIV");
MochiKit.Style.hideElement(self._marker);
d.addElementClass(self._marker,"dropmarker");
self._marker.style.position="absolute";
document.getElementsByTagName("body").item(0).appendChild(self._marker);
}
var _800=MochiKit.Position.cumulativeOffset(_7fb);
self._marker.style.left=_800.x+"px";
self._marker.style.top=_800.y+"px";
if(_7fc=="after"){
if(_7ff.overlap=="horizontal"){
self._marker.style.left=(_800.x+_7fb.clientWidth)+"px";
}else{
self._marker.style.top=(_800.y+_7fb.clientHeight)+"px";
}
}
MochiKit.Style.showElement(self._marker);
},_tree:function(_801,_802,_803){
var self=MochiKit.Sortable;
var _805=self.findElements(_801,_802)||[];
for(var i=0;i<_805.length;++i){
var _807=_805[i].id.match(_802.format);
if(!_807){
continue;
}
var _808={id:encodeURIComponent(_807?_807[1]:null),element:_801,parent:_803,children:[],position:_803.children.length,container:self._findChildrenElement(_805[i],_802.treeTag.toUpperCase())};
if(_808.container){
self._tree(_808.container,_802,_808);
}
_803.children.push(_808);
}
return _803;
},_findChildrenElement:function(_809,_80a){
if(_809&&_809.hasChildNodes){
_80a=_80a.toUpperCase();
for(var i=0;i<_809.childNodes.length;++i){
if(_809.childNodes[i].tagName.toUpperCase()==_80a){
return _809.childNodes[i];
}
}
}
return null;
},tree:function(_80c,_80d){
_80c=MochiKit.DOM.getElement(_80c);
var _80e=MochiKit.Sortable.options(_80c);
_80d=MochiKit.Base.update({tag:_80e.tag,treeTag:_80e.treeTag,only:_80e.only,name:_80c.id,format:_80e.format},_80d||{});
var root={id:null,parent:null,children:new Array,container:_80c,position:0};
return MochiKit.Sortable._tree(_80c,_80d,root);
},setSequence:function(_810,_811,_812){
var self=MochiKit.Sortable;
var b=MochiKit.Base;
_810=MochiKit.DOM.getElement(_810);
_812=b.update(self.options(_810),_812||{});
var _815={};
b.map(function(n){
var m=n.id.match(_812.format);
if(m){
_815[m[1]]=[n,n.parentNode];
}
n.parentNode.removeChild(n);
},self.findElements(_810,_812));
b.map(function(_818){
var n=_815[_818];
if(n){
n[1].appendChild(n[0]);
delete _815[_818];
}
},_811);
},_constructIndex:function(node){
var _81b="";
do{
if(node.id){
_81b="["+node.position+"]"+_81b;
}
}while((node=node.parent)!=null);
return _81b;
},sequence:function(_81c,_81d){
_81c=MochiKit.DOM.getElement(_81c);
var self=MochiKit.Sortable;
var _81d=MochiKit.Base.update(self.options(_81c),_81d||{});
return MochiKit.Base.map(function(item){
return item.id.match(_81d.format)?item.id.match(_81d.format)[1]:"";
},MochiKit.DOM.getElement(self.findElements(_81c,_81d)||[]));
},serialize:function(_820,_821){
_820=MochiKit.DOM.getElement(_820);
var self=MochiKit.Sortable;
_821=MochiKit.Base.update(self.options(_820),_821||{});
var name=encodeURIComponent(_821.name||_820.id);
if(_821.tree){
return MochiKit.Base.flattenArray(MochiKit.Base.map(function(item){
return [name+self._constructIndex(item)+"[id]="+encodeURIComponent(item.id)].concat(item.children.map(arguments.callee));
},self.tree(_820,_821).children)).join("&");
}else{
return MochiKit.Base.map(function(item){
return name+"[]="+encodeURIComponent(item);
},self.sequence(_820,_821)).join("&");
}
}});
MochiKit.Sortable.Sortable=MochiKit.Sortable;
MochiKit.Sortable.__new__=function(){
MochiKit.Base.nameFunctions(this);
};
MochiKit.Sortable.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Sortable);
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.MochiKit)=="undefined"){
MochiKit.MochiKit={};
}
MochiKit.MochiKit.NAME="MochiKit.MochiKit";
MochiKit.MochiKit.VERSION="1.5";
MochiKit.MochiKit.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.MochiKit.toString=function(){
return this.__repr__();
};
MochiKit.MochiKit.SUBMODULES=["Base","Iter","Logging","DateTime","Format","Async","DOM","Selector","Style","LoggingPane","Color","Signal","Position","Visual","DragAndDrop","Sortable"];
(function(){
if(typeof (document)=="undefined"){
return;
}
var _826=document.getElementsByTagName("script");
var _827="http://www.w3.org/1999/xhtml";
var _828="http://www.w3.org/2000/svg";
var _829="http://www.w3.org/1999/xlink";
var _82a="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
var base=null;
var _82c=null;
var _82d={};
var i;
var src;
for(i=0;i<_826.length;i++){
src=null;
switch(_826[i].namespaceURI){
case _828:
src=_826[i].getAttributeNS(_829,"href");
break;
default:
src=_826[i].getAttribute("src");
break;
}
if(!src){
continue;
}
_82d[src]=true;
if(src.match(/MochiKit.js(\?.*)?$/)){
base=src.substring(0,src.lastIndexOf("MochiKit.js"));
_82c=_826[i];
}
}
if(base===null){
return;
}
var _830=MochiKit.MochiKit.SUBMODULES;
for(var i=0;i<_830.length;i++){
if(MochiKit[_830[i]]){
continue;
}
var uri=base+_830[i]+".js";
if(uri in _82d){
continue;
}
if(_82c.namespaceURI==_828||_82c.namespaceURI==_82a){
var s=document.createElementNS(_82c.namespaceURI,"script");
s.setAttribute("id","MochiKit_"+base+_830[i]);
if(_82c.namespaceURI==_828){
s.setAttributeNS(_829,"href",uri);
}else{
s.setAttribute("src",uri);
}
s.setAttribute("type","application/x-javascript");
_82c.parentNode.appendChild(s);
}else{
document.write("<"+_82c.nodeName+" src=\""+uri+"\" type=\"text/javascript\"></script>");
}
}
})();


