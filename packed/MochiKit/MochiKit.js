/***

    MochiKit.MochiKit 1.4 : PACKED VERSION

    THIS FILE IS AUTOMATICALLY GENERATED.  If creating patches, please
    diff against the source tree, not this file.

    See <http://mochikit.com/> for documentation, downloads, license, etc.

    (c) 2005 Bob Ippolito.  All rights Reserved.

***/

if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Base");
}
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.Base)=="undefined"){
MochiKit.Base={};
}
MochiKit.Base.VERSION="1.4";
MochiKit.Base.NAME="MochiKit.Base";
MochiKit.Base.update=function(_1,_2){
if(_1===null){
_1={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
_1[k]=o[k];
}
}
}
return _1;
};
MochiKit.Base.update(MochiKit.Base,{__repr__:function(){
return "["+this.NAME+" "+this.VERSION+"]";
},toString:function(){
return this.__repr__();
},camelize:function(_6){
var _7=_6.split("-");
var cc=_7[0];
for(var i=1;i<_7.length;i++){
cc+=_7[i].charAt(0).toUpperCase()+_7[i].substring(1);
}
return cc;
},counter:function(n){
if(arguments.length===0){
n=1;
}
return function(){
return n++;
};
},clone:function(obj){
var me=arguments.callee;
if(arguments.length==1){
me.prototype=obj;
return new me();
}
},_flattenArray:function(res,lst){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(o instanceof Array){
arguments.callee(res,o);
}else{
res.push(o);
}
}
return res;
},flattenArray:function(lst){
return MochiKit.Base._flattenArray([],lst);
},flattenArguments:function(lst){
var res=[];
var m=MochiKit.Base;
var _15=m.extend(null,arguments);
while(_15.length){
var o=_15.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
for(var i=o.length-1;i>=0;i--){
_15.unshift(o[i]);
}
}else{
res.push(o);
}
}
return res;
},extend:function(_16,obj,_17){
if(!_17){
_17=0;
}
if(obj){
var l=obj.length;
if(typeof (l)!="number"){
if(typeof (MochiKit.Iter)!="undefined"){
obj=MochiKit.Iter.list(obj);
l=obj.length;
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(!_16){
_16=[];
}
for(var i=_17;i<l;i++){
_16.push(obj[i]);
}
}
return _16;
},updatetree:function(_19,obj){
if(_19===null){
_19={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
var v=o[k];
if(typeof (_19[k])=="object"&&typeof (v)=="object"){
arguments.callee(_19[k],v);
}else{
_19[k]=v;
}
}
}
}
return _19;
},setdefault:function(_21,obj){
if(_21===null){
_21={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
for(var k in o){
if(!(k in _21)){
_21[k]=o[k];
}
}
}
return _21;
},keys:function(obj){
var _22=[];
for(var _23 in obj){
_22.push(_23);
}
return _22;
},items:function(obj){
var _24=[];
var e;
for(var _26 in obj){
var v;
try{
v=obj[_26];
}
catch(e){
continue;
}
_24.push([_26,v]);
}
return _24;
},_newNamedError:function(_27,_28,_29){
_29.prototype=new MochiKit.Base.NamedError(_27.NAME+"."+_28);
_27[_28]=_29;
},operator:{truth:function(a){
return !!a;
},lognot:function(a){
return !a;
},identity:function(a){
return a;
},not:function(a){
return ~a;
},neg:function(a){
return -a;
},add:function(a,b){
return a+b;
},sub:function(a,b){
return a-b;
},div:function(a,b){
return a/b;
},mod:function(a,b){
return a%b;
},mul:function(a,b){
return a*b;
},and:function(a,b){
return a&b;
},or:function(a,b){
return a|b;
},xor:function(a,b){
return a^b;
},lshift:function(a,b){
return a<<b;
},rshift:function(a,b){
return a>>b;
},zrshift:function(a,b){
return a>>>b;
},eq:function(a,b){
return a==b;
},ne:function(a,b){
return a!=b;
},gt:function(a,b){
return a>b;
},ge:function(a,b){
return a>=b;
},lt:function(a,b){
return a<b;
},le:function(a,b){
return a<=b;
},seq:function(a,b){
return a===b;
},sne:function(a,b){
return a!==b;
},ceq:function(a,b){
return MochiKit.Base.compare(a,b)===0;
},cne:function(a,b){
return MochiKit.Base.compare(a,b)!==0;
},cgt:function(a,b){
return MochiKit.Base.compare(a,b)==1;
},cge:function(a,b){
return MochiKit.Base.compare(a,b)!=-1;
},clt:function(a,b){
return MochiKit.Base.compare(a,b)==-1;
},cle:function(a,b){
return MochiKit.Base.compare(a,b)!=1;
},logand:function(a,b){
return a&&b;
},logor:function(a,b){
return a||b;
},contains:function(a,b){
return b in a;
}},forwardCall:function(_32){
return function(){
return this[_32].apply(this,arguments);
};
},itemgetter:function(_33){
return function(arg){
return arg[_33];
};
},typeMatcher:function(){
var _35={};
for(var i=0;i<arguments.length;i++){
var typ=arguments[i];
_35[typ]=typ;
}
return function(){
for(var i=0;i<arguments.length;i++){
if(!(typeof (arguments[i]) in _35)){
return false;
}
}
return true;
};
},isNull:function(){
for(var i=0;i<arguments.length;i++){
if(arguments[i]!==null){
return false;
}
}
return true;
},isUndefinedOrNull:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(typeof (o)=="undefined"||o===null)){
return false;
}
}
return true;
},isEmpty:function(obj){
return !MochiKit.Base.isNotEmpty.apply(this,arguments);
},isNotEmpty:function(obj){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(o&&o.length)){
return false;
}
}
return true;
},isArrayLike:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
var typ=typeof (o);
if((typ!="object"&&!(typ=="function"&&typeof (o.item)=="function"))||o===null||typeof (o.length)!="number"||o.nodeType===3){
return false;
}
}
return true;
},isDateLike:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="object"||o===null||typeof (o.getTime)!="function"){
return false;
}
}
return true;
},xmap:function(fn){
if(fn===null){
return MochiKit.Base.extend(null,arguments,1);
}
var _38=[];
for(var i=1;i<arguments.length;i++){
_38.push(fn(arguments[i]));
}
return _38;
},map:function(fn,lst){
var m=MochiKit.Base;
var itr=MochiKit.Iter;
var _40=m.isArrayLike;
if(arguments.length<=2){
if(!_40(lst)){
if(itr){
lst=itr.list(lst);
if(fn===null){
return lst;
}
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
return m.extend(null,lst);
}
var _41=[];
for(var i=0;i<lst.length;i++){
_41.push(fn(lst[i]));
}
return _41;
}else{
if(fn===null){
fn=Array;
}
var _42=null;
for(i=1;i<arguments.length;i++){
if(!_40(arguments[i])){
if(itr){
return itr.list(itr.imap.apply(null,arguments));
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
var l=arguments[i].length;
if(_42===null||_42>l){
_42=l;
}
}
_41=[];
for(i=0;i<_42;i++){
var _43=[];
for(var j=1;j<arguments.length;j++){
_43.push(arguments[j][i]);
}
_41.push(fn.apply(this,_43));
}
return _41;
}
},xfilter:function(fn){
var _45=[];
if(fn===null){
fn=MochiKit.Base.operator.truth;
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(fn(o)){
_45.push(o);
}
}
return _45;
},filter:function(fn,lst,_46){
var _47=[];
var m=MochiKit.Base;
if(!m.isArrayLike(lst)){
if(MochiKit.Iter){
lst=MochiKit.Iter.list(lst);
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
fn=m.operator.truth;
}
if(typeof (Array.prototype.filter)=="function"){
return Array.prototype.filter.call(lst,fn,_46);
}else{
if(typeof (_46)=="undefined"||_46===null){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(fn(o)){
_47.push(o);
}
}
}else{
for(i=0;i<lst.length;i++){
o=lst[i];
if(fn.call(_46,o)){
_47.push(o);
}
}
}
}
return _47;
},_wrapDumbFunction:function(_48){
return function(){
switch(arguments.length){
case 0:
return _48();
case 1:
return _48(arguments[0]);
case 2:
return _48(arguments[0],arguments[1]);
case 3:
return _48(arguments[0],arguments[1],arguments[2]);
}
var _49=[];
for(var i=0;i<arguments.length;i++){
_49.push("arguments["+i+"]");
}
return eval("(func("+_49.join(",")+"))");
};
},methodcaller:function(_50){
var _51=MochiKit.Base.extend(null,arguments,1);
if(typeof (_50)=="function"){
return function(obj){
return _50.apply(obj,_51);
};
}else{
return function(obj){
return obj[_50].apply(obj,_51);
};
}
},method:function(_52,_53){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([_53,_52],arguments,2));
},compose:function(f1,f2){
var _56=[];
var m=MochiKit.Base;
if(arguments.length===0){
throw new TypeError("compose() requires at least one argument");
}
for(var i=0;i<arguments.length;i++){
var fn=arguments[i];
if(typeof (fn)!="function"){
throw new TypeError(repr(fn)+" is not a function");
}
_56.push(fn);
}
return function(){
var _57=arguments;
for(var i=_56.length-1;i>=0;i--){
_57=[_56[i].apply(this,_57)];
}
return _57[0];
};
},bind:function(_58,_59){
if(typeof (_58)=="string"){
_58=_59[_58];
}
var _60=_58.im_func;
var _61=_58.im_preargs;
var _62=_58.im_self;
var m=MochiKit.Base;
if(typeof (_58)=="function"&&typeof (_58.apply)=="undefined"){
_58=m._wrapDumbFunction(_58);
}
if(typeof (_60)!="function"){
_60=_58;
}
if(typeof (_59)!="undefined"){
_62=_59;
}
if(typeof (_61)=="undefined"){
_61=[];
}else{
_61=_61.slice();
}
m.extend(_61,arguments,2);
var _63=function(){
var _64=arguments;
var me=arguments.callee;
if(me.im_preargs.length>0){
_64=m.concat(me.im_preargs,_64);
}
var _59=me.im_self;
if(!_59){
_59=this;
}
return me.im_func.apply(_59,_64);
};
_63.im_self=_62;
_63.im_func=_60;
_63.im_preargs=_61;
return _63;
},bindMethods:function(_65){
var _66=MochiKit.Base.bind;
for(var k in _65){
var _67=_65[k];
if(typeof (_67)=="function"){
_65[k]=_66(_67,_65);
}
}
},registerComparator:function(_68,_69,_70,_71){
MochiKit.Base.comparatorRegistry.register(_68,_69,_70,_71);
},_primitives:{"boolean":true,"string":true,"number":true},compare:function(a,b){
if(a==b){
return 0;
}
var _72=(typeof (a)=="undefined"||a===null);
var _73=(typeof (b)=="undefined"||b===null);
if(_72&&_73){
return 0;
}else{
if(_72){
return -1;
}else{
if(_73){
return 1;
}
}
}
var m=MochiKit.Base;
var _74=m._primitives;
if(!(typeof (a) in _74&&typeof (b) in _74)){
try{
return m.comparatorRegistry.match(a,b);
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
}
if(a<b){
return -1;
}else{
if(a>b){
return 1;
}
}
var _75=m.repr;
throw new TypeError(_75(a)+" and "+_75(b)+" can not be compared");
},compareDateLike:function(a,b){
return MochiKit.Base.compare(a.getTime(),b.getTime());
},compareArrayLike:function(a,b){
var _76=MochiKit.Base.compare;
var _77=a.length;
var _78=0;
if(_77>b.length){
_78=1;
_77=b.length;
}else{
if(_77<b.length){
_78=-1;
}
}
for(var i=0;i<_77;i++){
var cmp=_76(a[i],b[i]);
if(cmp){
return cmp;
}
}
return _78;
},registerRepr:function(_80,_81,_82,_83){
MochiKit.Base.reprRegistry.register(_80,_81,_82,_83);
},repr:function(o){
if(typeof (o)=="undefined"){
return "undefined";
}else{
if(o===null){
return "null";
}
}
try{
if(typeof (o.__repr__)=="function"){
return o.__repr__();
}else{
if(typeof (o.repr)=="function"&&o.repr!=arguments.callee){
return o.repr();
}
}
return MochiKit.Base.reprRegistry.match(o);
}
catch(e){
if(typeof (o.NAME)=="string"&&(o.toString==Function.prototype.toString||o.toString==Object.prototype.toString)){
return o.NAME;
}
}
try{
var _84=(o+"");
}
catch(e){
return "["+typeof (o)+"]";
}
if(typeof (o)=="function"){
o=_84.replace(/^\s+/,"");
var idx=o.indexOf("{");
if(idx!=-1){
o=o.substr(0,idx)+"{...}";
}
}
return _84;
},reprArrayLike:function(o){
var m=MochiKit.Base;
return "["+m.map(m.repr,o).join(", ")+"]";
},reprString:function(o){
return ("\""+o.replace(/(["\\])/g,"\\$1")+"\"").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\r]/g,"\\r");
},reprNumber:function(o){
return o+"";
},registerJSON:function(_86,_87,_88,_89){
MochiKit.Base.jsonRegistry.register(_86,_87,_88,_89);
},evalJSON:function(){
return eval("("+arguments[0]+")");
},serializeJSON:function(o){
var _90=typeof (o);
if(_90=="undefined"){
return "undefined";
}else{
if(_90=="number"||_90=="boolean"){
return o+"";
}else{
if(o===null){
return "null";
}
}
}
var m=MochiKit.Base;
var _91=m.reprString;
if(_90=="string"){
return _91(o);
}
var me=arguments.callee;
var _92;
if(typeof (o.__json__)=="function"){
_92=o.__json__();
if(o!==_92){
return me(_92);
}
}
if(typeof (o.json)=="function"){
_92=o.json();
if(o!==_92){
return me(_92);
}
}
if(_90!="function"&&typeof (o.length)=="number"){
var res=[];
for(var i=0;i<o.length;i++){
var val=me(o[i]);
if(typeof (val)!="string"){
val="undefined";
}
res.push(val);
}
return "["+res.join(", ")+"]";
}
try{
_92=m.jsonRegistry.match(o);
return me(_92);
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
if(_90=="function"){
return null;
}
res=[];
for(var k in o){
var _94;
if(typeof (k)=="number"){
_94="\""+k+"\"";
}else{
if(typeof (k)=="string"){
_94=_91(k);
}else{
continue;
}
}
val=me(o[k]);
if(typeof (val)!="string"){
continue;
}
res.push(_94+":"+val);
}
return "{"+res.join(", ")+"}";
},objEqual:function(a,b){
return (MochiKit.Base.compare(a,b)===0);
},arrayEqual:function(_95,arr){
if(_95.length!=arr.length){
return false;
}
return (MochiKit.Base.compare(_95,arr)===0);
},concat:function(){
var _97=[];
var _98=MochiKit.Base.extend;
for(var i=0;i<arguments.length;i++){
_98(_97,arguments[i]);
}
return _97;
},keyComparator:function(key){
var m=MochiKit.Base;
var _100=m.compare;
if(arguments.length==1){
return function(a,b){
return _100(a[key],b[key]);
};
}
var _101=m.extend(null,arguments);
return function(a,b){
var rval=0;
for(var i=0;(rval===0)&&(i<_101.length);i++){
var key=_101[i];
rval=_100(a[key],b[key]);
}
return rval;
};
},reverseKeyComparator:function(key){
var _103=MochiKit.Base.keyComparator.apply(this,arguments);
return function(a,b){
return _103(b,a);
};
},partial:function(func){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([func,undefined],arguments,1));
},listMinMax:function(_105,lst){
if(lst.length===0){
return null;
}
var cur=lst[0];
var _107=MochiKit.Base.compare;
for(var i=1;i<lst.length;i++){
var o=lst[i];
if(_107(o,cur)==_105){
cur=o;
}
}
return cur;
},objMax:function(){
return MochiKit.Base.listMinMax(1,arguments);
},objMin:function(){
return MochiKit.Base.listMinMax(-1,arguments);
},findIdentical:function(lst,_108,_109,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_109)=="undefined"||_109===null){
_109=0;
}
for(var i=_109;i<end;i++){
if(lst[i]===_108){
return i;
}
}
return -1;
},findValue:function(lst,_111,_112,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_112)=="undefined"||_112===null){
_112=0;
}
var cmp=MochiKit.Base.compare;
for(var i=_112;i<end;i++){
if(cmp(lst[i],_111)===0){
return i;
}
}
return -1;
},nodeWalk:function(node,_114){
var _115=[node];
var _116=MochiKit.Base.extend;
while(_115.length){
var res=_114(_115.shift());
if(res){
_116(_115,res);
}
}
},nameFunctions:function(_117){
var base=_117.NAME;
if(typeof (base)=="undefined"){
base="";
}else{
base=base+".";
}
for(var name in _117){
var o=_117[name];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+name;
}
catch(e){
}
}
}
},queryString:function(_120,_121){
if(typeof (MochiKit.DOM)!="undefined"&&arguments.length==1&&(typeof (_120)=="string"||(typeof (_120.nodeType)!="undefined"&&_120.nodeType>0))){
var kv=MochiKit.DOM.formContents(_120);
_120=kv[0];
_121=kv[1];
}else{
if(arguments.length==1){
var o=_120;
_120=[];
_121=[];
for(var k in o){
var v=o[k];
if(typeof (v)!="function"){
_120.push(k);
_121.push(v);
}
}
}
}
var rval=[];
var len=Math.min(_120.length,_121.length);
var _124=MochiKit.Base.urlEncode;
for(var i=0;i<len;i++){
v=_121[i];
if(typeof (v)!="undefined"&&v!==null){
rval.push(_124(_120[i])+"="+_124(v));
}
}
return rval.join("&");
},parseQueryString:function(_125,_126){
var _127=_125.replace(/\+/g,"%20").split("&");
var o={};
var _128;
if(typeof (decodeURIComponent)!="undefined"){
_128=decodeURIComponent;
}else{
_128=unescape;
}
if(_126){
for(var i=0;i<_127.length;i++){
var pair=_127[i].split("=");
var name=_128(pair[0]);
var arr=o[name];
if(!(arr instanceof Array)){
arr=[];
o[name]=arr;
}
arr.push(_128(pair[1]));
}
}else{
for(i=0;i<_127.length;i++){
pair=_127[i].split("=");
o[_128(pair[0])]=_128(pair[1]);
}
}
return o;
}});
MochiKit.Base.AdapterRegistry=function(){
this.pairs=[];
};
MochiKit.Base.AdapterRegistry.prototype={register:function(name,_130,wrap,_132){
if(_132){
this.pairs.unshift([name,_130,wrap]);
}else{
this.pairs.push([name,_130,wrap]);
}
},match:function(){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[1].apply(this,arguments)){
return pair[2].apply(this,arguments);
}
}
throw MochiKit.Base.NotFound;
},unregister:function(name){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[0]==name){
this.pairs.splice(i,1);
return true;
}
}
return false;
}};
MochiKit.Base.EXPORT=["flattenArray","noop","camelize","counter","clone","extend","update","updatetree","setdefault","keys","items","NamedError","operator","forwardCall","itemgetter","typeMatcher","isCallable","isUndefined","isUndefinedOrNull","isNull","isEmpty","isNotEmpty","isArrayLike","isDateLike","xmap","map","xfilter","filter","methodcaller","compose","bind","bindMethods","NotFound","AdapterRegistry","registerComparator","compare","registerRepr","repr","objEqual","arrayEqual","concat","keyComparator","reverseKeyComparator","partial","merge","listMinMax","listMax","listMin","objMax","objMin","nodeWalk","zip","urlEncode","queryString","serializeJSON","registerJSON","evalJSON","parseQueryString","findValue","findIdentical","flattenArguments","method"];
MochiKit.Base.EXPORT_OK=["nameFunctions","comparatorRegistry","reprRegistry","jsonRegistry","compareDateLike","compareArrayLike","reprArrayLike","reprString","reprNumber"];
MochiKit.Base._exportSymbols=function(_133,_134){
if(typeof (MochiKit.__export__)=="undefined"){
MochiKit.__export__=(MochiKit.__compat__||(typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined"));
}
if(!MochiKit.__export__){
return;
}
var all=_134.EXPORT_TAGS[":all"];
for(var i=0;i<all.length;i++){
_133[all[i]]=_134[all[i]];
}
};
MochiKit.Base.__new__=function(){
var m=this;
m.noop=m.operator.identity;
m.forward=m.forwardCall;
m.find=m.findValue;
if(typeof (encodeURIComponent)!="undefined"){
m.urlEncode=function(_136){
return encodeURIComponent(_136).replace(/\'/g,"%27");
};
}else{
m.urlEncode=function(_137){
return escape(_137).replace(/\+/g,"%2B").replace(/\"/g,"%22").rval.replace(/\'/g,"%27");
};
}
m.NamedError=function(name){
this.message=name;
this.name=name;
};
m.NamedError.prototype=new Error();
m.update(m.NamedError.prototype,{repr:function(){
if(this.message&&this.message!=this.name){
return this.name+"("+m.repr(this.message)+")";
}else{
return this.name+"()";
}
},toString:m.forwardCall("repr")});
m.NotFound=new m.NamedError("MochiKit.Base.NotFound");
m.listMax=m.partial(m.listMinMax,1);
m.listMin=m.partial(m.listMinMax,-1);
m.isCallable=m.typeMatcher("function");
m.isUndefined=m.typeMatcher("undefined");
m.merge=m.partial(m.update,null);
m.zip=m.partial(m.map,null);
m.comparatorRegistry=new m.AdapterRegistry();
m.registerComparator("dateLike",m.isDateLike,m.compareDateLike);
m.registerComparator("arrayLike",m.isArrayLike,m.compareArrayLike);
m.reprRegistry=new m.AdapterRegistry();
m.registerRepr("arrayLike",m.isArrayLike,m.reprArrayLike);
m.registerRepr("string",m.typeMatcher("string"),m.reprString);
m.registerRepr("numbers",m.typeMatcher("number","boolean"),m.reprNumber);
m.jsonRegistry=new m.AdapterRegistry();
var all=m.concat(m.EXPORT,m.EXPORT_OK);
m.EXPORT_TAGS={":common":m.concat(m.EXPORT_OK),":all":all};
m.nameFunctions(this);
};
MochiKit.Base.__new__();
if(MochiKit.__export__){
compare=MochiKit.Base.compare;
}
MochiKit.Base._exportSymbols(this,MochiKit.Base);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Iter");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Iter depends on MochiKit.Base!";
}
if(typeof (MochiKit.Iter)=="undefined"){
MochiKit.Iter={};
}
MochiKit.Iter.NAME="MochiKit.Iter";
MochiKit.Iter.VERSION="1.4";
MochiKit.Base.update(MochiKit.Iter,{__repr__:function(){
return "["+this.NAME+" "+this.VERSION+"]";
},toString:function(){
return this.__repr__();
},registerIteratorFactory:function(name,_138,_139,_140){
MochiKit.Iter.iteratorRegistry.register(name,_138,_139,_140);
},iter:function(_141,_142){
var self=MochiKit.Iter;
if(arguments.length==2){
return self.takewhile(function(a){
return a!=_142;
},_141);
}
if(typeof (_141.next)=="function"){
return _141;
}else{
if(typeof (_141.iter)=="function"){
return _141.iter();
}
}
try{
return self.iteratorRegistry.match(_141);
}
catch(e){
var m=MochiKit.Base;
if(e==m.NotFound){
e=new TypeError(typeof (_141)+": "+m.repr(_141)+" is not iterable");
}
throw e;
}
},count:function(n){
if(!n){
n=0;
}
var m=MochiKit.Base;
return {repr:function(){
return "count("+n+")";
},toString:m.forwardCall("repr"),next:m.counter(n)};
},cycle:function(p){
var self=MochiKit.Iter;
var m=MochiKit.Base;
var lst=[];
var _145=self.iter(p);
return {repr:function(){
return "cycle(...)";
},toString:m.forwardCall("repr"),next:function(){
try{
var rval=_145.next();
lst.push(rval);
return rval;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
if(lst.length===0){
this.next=function(){
throw self.StopIteration;
};
}else{
var i=-1;
this.next=function(){
i=(i+1)%lst.length;
return lst[i];
};
}
return this.next();
}
}};
},repeat:function(elem,n){
var m=MochiKit.Base;
if(typeof (n)=="undefined"){
return {repr:function(){
return "repeat("+m.repr(elem)+")";
},toString:m.forwardCall("repr"),next:function(){
return elem;
}};
}
return {repr:function(){
return "repeat("+m.repr(elem)+", "+n+")";
},toString:m.forwardCall("repr"),next:function(){
if(n<=0){
throw MochiKit.Iter.StopIteration;
}
n-=1;
return elem;
}};
},next:function(_147){
return _147.next();
},izip:function(p,q){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var next=self.next;
var _150=m.map(self.iter,arguments);
return {repr:function(){
return "izip(...)";
},toString:m.forwardCall("repr"),next:function(){
return m.map(next,_150);
}};
},ifilter:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilter(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(pred(rval)){
return rval;
}
}
return undefined;
}};
},ifilterfalse:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilterfalse(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
return rval;
}
}
return undefined;
}};
},islice:function(seq){
var self=MochiKit.Iter;
var m=MochiKit.Base;
seq=self.iter(seq);
var _153=0;
var stop=0;
var step=1;
var i=-1;
if(arguments.length==2){
stop=arguments[1];
}else{
if(arguments.length==3){
_153=arguments[1];
stop=arguments[2];
}else{
_153=arguments[1];
stop=arguments[2];
step=arguments[3];
}
}
return {repr:function(){
return "islice("+["...",_153,stop,step].join(", ")+")";
},toString:m.forwardCall("repr"),next:function(){
var rval;
while(i<_153){
rval=seq.next();
i++;
}
if(_153>=stop){
throw self.StopIteration;
}
_153+=step;
return rval;
}};
},imap:function(fun,p,q){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var _157=m.map(self.iter,m.extend(null,arguments,1));
var map=m.map;
var next=self.next;
return {repr:function(){
return "imap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(this,map(next,_157));
}};
},applymap:function(fun,seq,self){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
return {repr:function(){
return "applymap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(self,seq.next());
}};
},chain:function(p,q){
var self=MochiKit.Iter;
var m=MochiKit.Base;
if(arguments.length==1){
return self.iter(arguments[0]);
}
var _159=m.map(self.iter,arguments);
return {repr:function(){
return "chain(...)";
},toString:m.forwardCall("repr"),next:function(){
while(_159.length>1){
try{
return _159[0].next();
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
_159.shift();
}
}
if(_159.length==1){
var arg=_159.shift();
this.next=m.bind("next",arg);
return this.next();
}
throw self.StopIteration;
}};
},takewhile:function(pred,seq){
var self=MochiKit.Iter;
seq=self.iter(seq);
return {repr:function(){
return "takewhile(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=seq.next();
if(!pred(rval)){
this.next=function(){
throw self.StopIteration;
};
this.next();
}
return rval;
}};
},dropwhile:function(pred,seq){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
var bind=m.bind;
return {"repr":function(){
return "dropwhile(...)";
},"toString":m.forwardCall("repr"),"next":function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
break;
}
}
this.next=bind("next",seq);
return rval;
}};
},_tee:function(_161,sync,_163){
sync.pos[_161]=-1;
var m=MochiKit.Base;
var _164=m.listMin;
return {repr:function(){
return "tee("+_161+", ...)";
},toString:m.forwardCall("repr"),next:function(){
var rval;
var i=sync.pos[_161];
if(i==sync.max){
rval=_163.next();
sync.deque.push(rval);
sync.max+=1;
sync.pos[_161]+=1;
}else{
rval=sync.deque[i-sync.min];
sync.pos[_161]+=1;
if(i==sync.min&&_164(sync.pos)!=sync.min){
sync.min+=1;
sync.deque.shift();
}
}
return rval;
}};
},tee:function(_165,n){
var rval=[];
var sync={"pos":[],"deque":[],"max":-1,"min":-1};
if(arguments.length==1||typeof (n)=="undefined"||n===null){
n=2;
}
var self=MochiKit.Iter;
_165=self.iter(_165);
var _tee=self._tee;
for(var i=0;i<n;i++){
rval.push(_tee(i,sync,_165));
}
return rval;
},list:function(_167){
var m=MochiKit.Base;
if(typeof (_167.slice)=="function"){
return _167.slice();
}else{
if(m.isArrayLike(_167)){
return m.concat(_167);
}
}
var self=MochiKit.Iter;
_167=self.iter(_167);
var rval=[];
try{
while(true){
rval.push(_167.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return rval;
}
return undefined;
},reduce:function(fn,_168,_169){
var i=0;
var x=_169;
var self=MochiKit.Iter;
_168=self.iter(_168);
if(arguments.length<3){
try{
x=_168.next();
}
catch(e){
if(e==self.StopIteration){
e=new TypeError("reduce() of empty sequence with no initial value");
}
throw e;
}
i++;
}
try{
while(true){
x=fn(x,_168.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},range:function(){
var _171=0;
var stop=0;
var step=1;
if(arguments.length==1){
stop=arguments[0];
}else{
if(arguments.length==2){
_171=arguments[0];
stop=arguments[1];
}else{
if(arguments.length==3){
_171=arguments[0];
stop=arguments[1];
step=arguments[2];
}else{
throw new TypeError("range() takes 1, 2, or 3 arguments!");
}
}
}
if(step===0){
throw new TypeError("range() step must not be 0");
}
return {next:function(){
if((step>0&&_171>=stop)||(step<0&&_171<=stop)){
throw MochiKit.Iter.StopIteration;
}
var rval=_171;
_171+=step;
return rval;
},repr:function(){
return "range("+[_171,stop,step].join(", ")+")";
},toString:MochiKit.Base.forwardCall("repr")};
},sum:function(_172,_173){
if(typeof (_173)=="undefined"||_173===null){
_173=0;
}
var x=_173;
var self=MochiKit.Iter;
_172=self.iter(_172);
try{
while(true){
x+=_172.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},exhaust:function(_174){
var self=MochiKit.Iter;
_174=self.iter(_174);
try{
while(true){
_174.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
},forEach:function(_175,func,self){
var m=MochiKit.Base;
if(arguments.length>2){
func=m.bind(func,self);
}
if(m.isArrayLike(_175)){
try{
for(var i=0;i<_175.length;i++){
func(_175[i]);
}
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
}
}else{
self=MochiKit.Iter;
self.exhaust(self.imap(func,_175));
}
},every:function(_176,func){
var self=MochiKit.Iter;
try{
self.ifilterfalse(func,_176).next();
return false;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return true;
}
},sorted:function(_177,cmp){
var rval=MochiKit.Iter.list(_177);
if(arguments.length==1){
cmp=MochiKit.Base.compare;
}
rval.sort(cmp);
return rval;
},reversed:function(_178){
var rval=MochiKit.Iter.list(_178);
rval.reverse();
return rval;
},some:function(_179,func){
var self=MochiKit.Iter;
try{
self.ifilter(func,_179).next();
return true;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return false;
}
},iextend:function(lst,_180){
if(MochiKit.Base.isArrayLike(_180)){
for(var i=0;i<_180.length;i++){
lst.push(_180[i]);
}
}else{
var self=MochiKit.Iter;
_180=self.iter(_180);
try{
while(true){
lst.push(_180.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
}
return lst;
},groupby:function(_181,_182){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_182=m.operator.identity;
}
_181=self.iter(_181);
var pk=undefined;
var k=undefined;
var v;
function fetch(){
v=_181.next();
k=_182(v);
}
function eat(){
var ret=v;
v=undefined;
return ret;
}
var _185=true;
return {repr:function(){
return "groupby(...)";
},next:function(){
while(k==pk){
fetch();
if(_185){
_185=false;
break;
}
}
pk=k;
return [k,{next:function(){
if(v==undefined){
fetch();
}
if(k!=pk){
throw self.StopIteration;
}
return eat();
}}];
}};
},groupby_as_array:function(_186,_187){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_187=m.operator.identity;
}
_186=self.iter(_186);
var _188=[];
var _189=true;
var _190;
while(true){
try{
var _191=_186.next();
var key=_187(_191);
}
catch(e){
if(e==self.StopIteration){
break;
}
throw e;
}
if(_189||key!=_190){
var _192=[];
_188.push([key,_192]);
}
_192.push(_191);
_189=false;
_190=key;
}
return _188;
},arrayLikeIter:function(_193){
var i=0;
return {repr:function(){
return "arrayLikeIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(i>=_193.length){
throw MochiKit.Iter.StopIteration;
}
return _193[i++];
}};
},hasIterateNext:function(_194){
return (_194&&typeof (_194.iterateNext)=="function");
},iterateNextIter:function(_195){
return {repr:function(){
return "iterateNextIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=_195.iterateNext();
if(rval===null||rval===undefined){
throw MochiKit.Iter.StopIteration;
}
return rval;
}};
}});
MochiKit.Iter.EXPORT_OK=["iteratorRegistry","arrayLikeIter","hasIterateNext","iterateNextIter",];
MochiKit.Iter.EXPORT=["StopIteration","registerIteratorFactory","iter","count","cycle","repeat","next","izip","ifilter","ifilterfalse","islice","imap","applymap","chain","takewhile","dropwhile","tee","list","reduce","range","sum","exhaust","forEach","every","sorted","reversed","some","iextend","groupby","groupby_as_array"];
MochiKit.Iter.__new__=function(){
var m=MochiKit.Base;
if(typeof (StopIteration)!="undefined"){
this.StopIteration=StopIteration;
}else{
this.StopIteration=new m.NamedError("StopIteration");
}
this.iteratorRegistry=new m.AdapterRegistry();
this.registerIteratorFactory("arrayLike",m.isArrayLike,this.arrayLikeIter);
this.registerIteratorFactory("iterateNext",this.hasIterateNext,this.iterateNextIter);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Iter.__new__();
if(MochiKit.__export__){
reduce=MochiKit.Iter.reduce;
}
MochiKit.Base._exportSymbols(this,MochiKit.Iter);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Logging");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Logging depends on MochiKit.Base!";
}
if(typeof (MochiKit.Logging)=="undefined"){
MochiKit.Logging={};
}
MochiKit.Logging.NAME="MochiKit.Logging";
MochiKit.Logging.VERSION="1.4";
MochiKit.Logging.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Logging.toString=function(){
return this.__repr__();
};
MochiKit.Logging.EXPORT=["LogLevel","LogMessage","Logger","alertListener","logger","log","logError","logDebug","logFatal","logWarning"];
MochiKit.Logging.EXPORT_OK=["logLevelAtLeast","isLogMessage","compareLogMessage"];
MochiKit.Logging.LogMessage=function(num,_197,info){
this.num=num;
this.level=_197;
this.info=info;
this.timestamp=new Date();
};
MochiKit.Logging.LogMessage.prototype={repr:function(){
var m=MochiKit.Base;
return "LogMessage("+m.map(m.repr,[this.num,this.level,this.info]).join(", ")+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Base.update(MochiKit.Logging,{logLevelAtLeast:function(_199){
var self=MochiKit.Logging;
if(typeof (_199)=="string"){
_199=self.LogLevel[_199];
}
return function(msg){
var _201=msg.level;
if(typeof (_201)=="string"){
_201=self.LogLevel[_201];
}
return _201>=_199;
};
},isLogMessage:function(){
var _202=MochiKit.Logging.LogMessage;
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof _202)){
return false;
}
}
return true;
},compareLogMessage:function(a,b){
return MochiKit.Base.compare([a.level,a.info],[b.level,b.info]);
},alertListener:function(msg){
alert("num: "+msg.num+"\nlevel: "+msg.level+"\ninfo: "+msg.info.join(" "));
}});
MochiKit.Logging.Logger=function(_203){
this.counter=0;
if(typeof (_203)=="undefined"||_203===null){
_203=-1;
}
this.maxSize=_203;
this._messages=[];
this.listeners={};
this.useNativeConsole=false;
};
MochiKit.Logging.Logger.prototype={clear:function(){
this._messages.splice(0,this._messages.length);
},logToConsole:function(msg){
if(typeof (window)!="undefined"&&window.console&&window.console.log){
window.console.log(msg.replace(/%/g,"\uff05"));
}else{
if(typeof (opera)!="undefined"&&opera.postError){
opera.postError(msg);
}else{
if(typeof (printfire)=="function"){
printfire(msg);
}else{
if(typeof (Debug)!="undefined"&&Debug.writeln){
Debug.writeln(msg);
}else{
if(typeof (debug)!="undefined"&&debug.trace){
debug.trace(msg);
}
}
}
}
}
},dispatchListeners:function(msg){
for(var k in this.listeners){
var pair=this.listeners[k];
if(pair.ident!=k||(pair[0]&&!pair[0](msg))){
continue;
}
pair[1](msg);
}
},addListener:function(_204,_205,_206){
if(typeof (_205)=="string"){
_205=MochiKit.Logging.logLevelAtLeast(_205);
}
var _207=[_205,_206];
_207.ident=_204;
this.listeners[_204]=_207;
},removeListener:function(_208){
delete this.listeners[_208];
},baseLog:function(_209,_210){
var msg=new MochiKit.Logging.LogMessage(this.counter,_209,MochiKit.Base.extend(null,arguments,1));
this._messages.push(msg);
this.dispatchListeners(msg);
if(this.useNativeConsole){
this.logToConsole(msg.level+": "+msg.info.join(" "));
}
this.counter+=1;
while(this.maxSize>=0&&this._messages.length>this.maxSize){
this._messages.shift();
}
},getMessages:function(_211){
var _212=0;
if(!(typeof (_211)=="undefined"||_211===null)){
_212=Math.max(0,this._messages.length-_211);
}
return this._messages.slice(_212);
},getMessageText:function(_213){
if(typeof (_213)=="undefined"||_213===null){
_213=30;
}
var _214=this.getMessages(_213);
if(_214.length){
var lst=map(function(m){
return "\n  ["+m.num+"] "+m.level+": "+m.info.join(" ");
},_214);
lst.unshift("LAST "+_214.length+" MESSAGES:");
return lst.join("");
}
return "";
},debuggingBookmarklet:function(_215){
if(typeof (MochiKit.LoggingPane)=="undefined"){
alert(this.getMessageText());
}else{
MochiKit.LoggingPane.createLoggingPane(_215||false);
}
}};
MochiKit.Logging.__new__=function(){
this.LogLevel={ERROR:40,FATAL:50,WARNING:30,INFO:20,DEBUG:10};
var m=MochiKit.Base;
m.registerComparator("LogMessage",this.isLogMessage,this.compareLogMessage);
var _216=m.partial;
var _217=this.Logger;
var _218=_217.prototype.baseLog;
m.update(this.Logger.prototype,{debug:_216(_218,"DEBUG"),log:_216(_218,"INFO"),error:_216(_218,"ERROR"),fatal:_216(_218,"FATAL"),warning:_216(_218,"WARNING")});
var self=this;
var _219=function(name){
return function(){
self.logger[name].apply(self.logger,arguments);
};
};
this.log=_219("log");
this.logError=_219("error");
this.logDebug=_219("debug");
this.logFatal=_219("fatal");
this.logWarning=_219("warning");
this.logger=new _217();
this.logger.useNativeConsole=true;
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
if(typeof (printfire)=="undefined"&&typeof (document)!="undefined"&&document.createEvent&&typeof (dispatchEvent)!="undefined"){
printfire=function(){
printfire.args=arguments;
var ev=document.createEvent("Events");
ev.initEvent("printfire",false,true);
dispatchEvent(ev);
};
}
MochiKit.Logging.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Logging);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.DateTime");
}
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.DateTime)=="undefined"){
MochiKit.DateTime={};
}
MochiKit.DateTime.NAME="MochiKit.DateTime";
MochiKit.DateTime.VERSION="1.4";
MochiKit.DateTime.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.DateTime.toString=function(){
return this.__repr__();
};
MochiKit.DateTime.isoDate=function(str){
str=str+"";
if(typeof (str)!="string"||str.length===0){
return null;
}
var iso=str.split("-");
if(iso.length===0){
return null;
}
return new Date(iso[0],iso[1]-1,iso[2]);
};
MochiKit.DateTime._isoRegexp=/(\d{4,})(?:-(\d{1,2})(?:-(\d{1,2})(?:[T ](\d{1,2}):(\d{1,2})(?::(\d{1,2})(?:\.(\d+))?)?(?:(Z)|([+-])(\d{1,2})(?::(\d{1,2}))?)?)?)?)?/;
MochiKit.DateTime.isoTimestamp=function(str){
str=str+"";
if(typeof (str)!="string"||str.length===0){
return null;
}
var res=str.match(MochiKit.DateTime._isoRegexp);
if(typeof (res)=="undefined"||res===null){
return null;
}
var year,month,day,hour,min,sec,msec;
year=parseInt(res[1],10);
if(typeof (res[2])=="undefined"||res[2]===""){
return new Date(year);
}
month=parseInt(res[2],10)-1;
day=parseInt(res[3],10);
if(typeof (res[4])=="undefined"||res[4]===""){
return new Date(year,month,day);
}
hour=parseInt(res[4],10);
min=parseInt(res[5],10);
sec=(typeof (res[6])!="undefined"&&res[6]!=="")?parseInt(res[6],10):0;
if(typeof (res[7])!="undefined"&&res[7]!==""){
msec=Math.round(1000*parseFloat("0."+res[7]));
}else{
msec=0;
}
if((typeof (res[8])=="undefined"||res[8]==="")&&(typeof (res[9])=="undefined"||res[9]==="")){
return new Date(year,month,day,hour,min,sec,msec);
}
var ofs;
if(typeof (res[9])!="undefined"&&res[9]!==""){
ofs=parseInt(res[10],10)*3600000;
if(typeof (res[11])!="undefined"&&res[11]!==""){
ofs+=parseInt(res[11],10)*60000;
}
if(res[9]=="-"){
ofs=-ofs;
}
}else{
ofs=0;
}
return new Date(Date.UTC(year,month,day,hour,min,sec,msec)-ofs);
};
MochiKit.DateTime.toISOTime=function(date,_226){
if(typeof (date)=="undefined"||date===null){
return null;
}
var hh=date.getHours();
var mm=date.getMinutes();
var ss=date.getSeconds();
var lst=[((_226&&(hh<10))?"0"+hh:hh),((mm<10)?"0"+mm:mm),((ss<10)?"0"+ss:ss)];
return lst.join(":");
};
MochiKit.DateTime.toISOTimestamp=function(date,_230){
if(typeof (date)=="undefined"||date===null){
return null;
}
var sep=_230?"T":" ";
var foot=_230?"Z":"";
if(_230){
date=new Date(date.getTime()+(date.getTimezoneOffset()*60000));
}
return MochiKit.DateTime.toISODate(date)+sep+MochiKit.DateTime.toISOTime(date,_230)+foot;
};
MochiKit.DateTime.toISODate=function(date){
if(typeof (date)=="undefined"||date===null){
return null;
}
var _233=MochiKit.DateTime._padTwo;
return [date.getFullYear(),_233(date.getMonth()+1),_233(date.getDate())].join("-");
};
MochiKit.DateTime.americanDate=function(d){
d=d+"";
if(typeof (d)!="string"||d.length===0){
return null;
}
var a=d.split("/");
return new Date(a[2],a[0]-1,a[1]);
};
MochiKit.DateTime._padTwo=function(n){
return (n>9)?n:"0"+n;
};
MochiKit.DateTime.toPaddedAmericanDate=function(d){
if(typeof (d)=="undefined"||d===null){
return null;
}
var _235=MochiKit.DateTime._padTwo;
return [_235(d.getMonth()+1),_235(d.getDate()),d.getFullYear()].join("/");
};
MochiKit.DateTime.toAmericanDate=function(d){
if(typeof (d)=="undefined"||d===null){
return null;
}
return [d.getMonth()+1,d.getDate(),d.getFullYear()].join("/");
};
MochiKit.DateTime.EXPORT=["isoDate","isoTimestamp","toISOTime","toISOTimestamp","toISODate","americanDate","toPaddedAmericanDate","toAmericanDate"];
MochiKit.DateTime.EXPORT_OK=[];
MochiKit.DateTime.EXPORT_TAGS={":common":MochiKit.DateTime.EXPORT,":all":MochiKit.DateTime.EXPORT};
MochiKit.DateTime.__new__=function(){
var base=this.NAME+".";
for(var k in this){
var o=this[k];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+k;
}
catch(e){
}
}
}
};
MochiKit.DateTime.__new__();
if(typeof (MochiKit.Base)!="undefined"){
MochiKit.Base._exportSymbols(this,MochiKit.DateTime);
}else{
(function(_236,_237){
if((typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined")||(MochiKit.__export__===false)){
var all=_237.EXPORT_TAGS[":all"];
for(var i=0;i<all.length;i++){
_236[all[i]]=_237[all[i]];
}
}
})(this,MochiKit.DateTime);
}
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Format");
}
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.Format)=="undefined"){
MochiKit.Format={};
}
MochiKit.Format.NAME="MochiKit.Format";
MochiKit.Format.VERSION="1.4";
MochiKit.Format.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Format.toString=function(){
return this.__repr__();
};
MochiKit.Format._numberFormatter=function(_238,_239,_240,_241,_242,_243,_244,_245,_246){
return function(num){
num=parseFloat(num);
if(typeof (num)=="undefined"||num===null||isNaN(num)){
return _238;
}
var _247=_239;
var _248=_240;
if(num<0){
num=-num;
}else{
_247=_247.replace(/-/,"");
}
var me=arguments.callee;
var fmt=MochiKit.Format.formatLocale(_241);
if(_242){
num=num*100;
_248=fmt.percent+_248;
}
num=MochiKit.Format.roundToFixed(num,_243);
var _250=num.split(/\./);
var _251=_250[0];
var frac=(_250.length==1)?"":_250[1];
var res="";
while(_251.length<_244){
_251="0"+_251;
}
if(_245){
while(_251.length>_245){
var i=_251.length-_245;
res=fmt.separator+_251.substring(i,_251.length)+res;
_251=_251.substring(0,i);
}
}
res=_251+res;
if(_243>0){
while(frac.length<_246){
frac=frac+"0";
}
res=res+fmt.decimal+frac;
}
return _247+res+_248;
};
};
MochiKit.Format.numberFormatter=function(_253,_254,_255){
if(typeof (_254)=="undefined"){
_254="";
}
var _256=_253.match(/((?:[0#]+,)?[0#]+)(?:\.([0#]+))?(%)?/);
if(!_256){
throw TypeError("Invalid pattern");
}
var _257=_253.substr(0,_256.index);
var _258=_253.substr(_256.index+_256[0].length);
if(_257.search(/-/)==-1){
_257=_257+"-";
}
var _259=_256[1];
var frac=(typeof (_256[2])=="string"&&_256[2]!="")?_256[2]:"";
var _260=(typeof (_256[3])=="string"&&_256[3]!="");
var tmp=_259.split(/,/);
var _262;
if(typeof (_255)=="undefined"){
_255="default";
}
if(tmp.length==1){
_262=null;
}else{
_262=tmp[1].length;
}
var _263=_259.length-_259.replace(/0/g,"").length;
var _264=frac.length-frac.replace(/0/g,"").length;
var _265=frac.length;
var rval=MochiKit.Format._numberFormatter(_254,_257,_258,_255,_260,_265,_263,_262,_264);
var m=MochiKit.Base;
if(m){
var fn=arguments.callee;
var args=m.concat(arguments);
rval.repr=function(){
return [self.NAME,"(",map(m.repr,args).join(", "),")"].join("");
};
}
return rval;
};
MochiKit.Format.formatLocale=function(_267){
if(typeof (_267)=="undefined"||_267===null){
_267="default";
}
if(typeof (_267)=="string"){
var rval=MochiKit.Format.LOCALE[_267];
if(typeof (rval)=="string"){
rval=arguments.callee(rval);
MochiKit.Format.LOCALE[_267]=rval;
}
return rval;
}else{
return _267;
}
};
MochiKit.Format.twoDigitAverage=function(_268,_269){
if(_269){
var res=_268/_269;
if(!isNaN(res)){
return MochiKit.Format.twoDigitFloat(_268/_269);
}
}
return "0";
};
MochiKit.Format.twoDigitFloat=function(_270){
var sign=(_270<0?"-":"");
var s=Math.floor(Math.abs(_270)*100).toString();
if(s=="0"){
return s;
}
if(s.length<3){
while(s.charAt(s.length-1)=="0"){
s=s.substring(0,s.length-1);
}
return sign+"0."+s;
}
var head=sign+s.substring(0,s.length-2);
var tail=s.substring(s.length-2,s.length);
if(tail=="00"){
return head;
}else{
if(tail.charAt(1)=="0"){
return head+"."+tail.charAt(0);
}else{
return head+"."+tail;
}
}
};
MochiKit.Format.lstrip=function(str,_275){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_275){
return str.replace(/^\s+/,"");
}else{
return str.replace(new RegExp("^["+_275+"]+"),"");
}
};
MochiKit.Format.rstrip=function(str,_276){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_276){
return str.replace(/\s+$/,"");
}else{
return str.replace(new RegExp("["+_276+"]+$"),"");
}
};
MochiKit.Format.strip=function(str,_277){
var self=MochiKit.Format;
return self.rstrip(self.lstrip(str,_277),_277);
};
MochiKit.Format.truncToFixed=function(_278,_279){
_278=Math.floor(_278*Math.pow(10,_279));
var res=(_278*Math.pow(10,-_279)).toFixed(_279);
if(res.charAt(0)=="."){
res="0"+res;
}
return res;
};
MochiKit.Format.roundToFixed=function(_280,_281){
return MochiKit.Format.truncToFixed(_280+0.5*Math.pow(10,-_281),_281);
};
MochiKit.Format.percentFormat=function(_282){
return MochiKit.Format.twoDigitFloat(100*_282)+"%";
};
MochiKit.Format.EXPORT=["truncToFixed","roundToFixed","numberFormatter","formatLocale","twoDigitAverage","twoDigitFloat","percentFormat","lstrip","rstrip","strip"];
MochiKit.Format.LOCALE={en_US:{separator:",",decimal:".",percent:"%"},de_DE:{separator:".",decimal:",",percent:"%"},fr_FR:{separator:" ",decimal:",",percent:"%"},"default":"en_US"};
MochiKit.Format.EXPORT_OK=[];
MochiKit.Format.EXPORT_TAGS={":all":MochiKit.Format.EXPORT,":common":MochiKit.Format.EXPORT};
MochiKit.Format.__new__=function(){
var base=this.NAME+".";
var k,v,o;
for(k in this.LOCALE){
o=this.LOCALE[k];
if(typeof (o)=="object"){
o.repr=function(){
return this.NAME;
};
o.NAME=base+"LOCALE."+k;
}
}
for(k in this){
o=this[k];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+k;
}
catch(e){
}
}
}
};
MochiKit.Format.__new__();
if(typeof (MochiKit.Base)!="undefined"){
MochiKit.Base._exportSymbols(this,MochiKit.Format);
}else{
(function(_283,_284){
if((typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined")||(MochiKit.__export__===false)){
var all=_284.EXPORT_TAGS[":all"];
for(var i=0;i<all.length;i++){
_283[all[i]]=_284[all[i]];
}
}
})(this,MochiKit.Format);
}
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Async");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Async depends on MochiKit.Base!";
}
if(typeof (MochiKit.Async)=="undefined"){
MochiKit.Async={};
}
MochiKit.Async.NAME="MochiKit.Async";
MochiKit.Async.VERSION="1.4";
MochiKit.Async.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Async.toString=function(){
return this.__repr__();
};
MochiKit.Async.Deferred=function(_285){
this.chain=[];
this.id=this._nextId();
this.fired=-1;
this.paused=0;
this.results=[null,null];
this.canceller=_285;
this.silentlyCancelled=false;
this.chained=false;
};
MochiKit.Async.Deferred.prototype={repr:function(){
var _286;
if(this.fired==-1){
_286="unfired";
}else{
if(this.fired===0){
_286="success";
}else{
_286="error";
}
}
return "Deferred("+this.id+", "+_286+")";
},toString:MochiKit.Base.forwardCall("repr"),_nextId:MochiKit.Base.counter(),cancel:function(){
var self=MochiKit.Async;
if(this.fired==-1){
if(this.canceller){
this.canceller(this);
}else{
this.silentlyCancelled=true;
}
if(this.fired==-1){
this.errback(new self.CancelledError(this));
}
}else{
if((this.fired===0)&&(this.results[0] instanceof self.Deferred)){
this.results[0].cancel();
}
}
},_resback:function(res){
this.fired=((res instanceof Error)?1:0);
this.results[this.fired]=res;
this._fire();
},_check:function(){
if(this.fired!=-1){
if(!this.silentlyCancelled){
throw new MochiKit.Async.AlreadyCalledError(this);
}
this.silentlyCancelled=false;
return;
}
},callback:function(res){
this._check();
if(res instanceof MochiKit.Async.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
this._resback(res);
},errback:function(res){
this._check();
var self=MochiKit.Async;
if(res instanceof self.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
if(!(res instanceof Error)){
res=new self.GenericError(res);
}
this._resback(res);
},addBoth:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,fn);
},addCallback:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,null);
},addErrback:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(null,fn);
},addCallbacks:function(cb,eb){
if(this.chained){
throw new Error("Chained Deferreds can not be re-used");
}
this.chain.push([cb,eb]);
if(this.fired>=0){
this._fire();
}
return this;
},_fire:function(){
var _289=this.chain;
var _290=this.fired;
var res=this.results[_290];
var self=this;
var cb=null;
while(_289.length>0&&this.paused===0){
var pair=_289.shift();
var f=pair[_290];
if(f===null){
continue;
}
try{
res=f(res);
_290=((res instanceof Error)?1:0);
if(res instanceof MochiKit.Async.Deferred){
cb=function(res){
self._resback(res);
self.paused--;
if((self.paused===0)&&(self.fired>=0)){
self._fire();
}
};
this.paused++;
}
}
catch(err){
_290=1;
if(!(err instanceof Error)){
err=new MochiKit.Async.GenericError(err);
}
res=err;
}
}
this.fired=_290;
this.results[_290]=res;
if(cb&&this.paused){
res.addBoth(cb);
res.chained=true;
}
}};
MochiKit.Base.update(MochiKit.Async,{evalJSONRequest:function(){
return eval("("+arguments[0].responseText+")");
},succeed:function(_292){
var d=new MochiKit.Async.Deferred();
d.callback.apply(d,arguments);
return d;
},fail:function(_293){
var d=new MochiKit.Async.Deferred();
d.errback.apply(d,arguments);
return d;
},getXMLHttpRequest:function(){
var self=arguments.callee;
if(!self.XMLHttpRequest){
var _294=[function(){
return new XMLHttpRequest();
},function(){
return new ActiveXObject("Msxml2.XMLHTTP");
},function(){
return new ActiveXObject("Microsoft.XMLHTTP");
},function(){
return new ActiveXObject("Msxml2.XMLHTTP.4.0");
},function(){
throw new MochiKit.Async.BrowserComplianceError("Browser does not support XMLHttpRequest");
}];
for(var i=0;i<_294.length;i++){
var func=_294[i];
try{
self.XMLHttpRequest=func;
return func();
}
catch(e){
}
}
}
return self.XMLHttpRequest();
},_xhr_onreadystatechange:function(d){
var m=MochiKit.Base;
if(this.readyState==4){
try{
this.onreadystatechange=null;
}
catch(e){
try{
this.onreadystatechange=m.noop;
}
catch(e){
}
}
var _295=null;
try{
_295=this.status;
if(!_295&&m.isNotEmpty(this.responseText)){
_295=304;
}
}
catch(e){
}
if(_295==200||_295==304){
d.callback(this);
}else{
var err=new MochiKit.Async.XMLHttpRequestError(this,"Request failed");
if(err.number){
d.errback(err);
}else{
d.errback(err);
}
}
}
},_xhr_canceller:function(req){
try{
req.onreadystatechange=null;
}
catch(e){
try{
req.onreadystatechange=MochiKit.Base.noop;
}
catch(e){
}
}
req.abort();
},sendXMLHttpRequest:function(req,_298){
if(typeof (_298)=="undefined"||_298===null){
_298="";
}
var m=MochiKit.Base;
var self=MochiKit.Async;
var d=new self.Deferred(m.partial(self._xhr_canceller,req));
try{
req.onreadystatechange=m.bind(self._xhr_onreadystatechange,req,d);
req.send(_298);
}
catch(e){
try{
req.onreadystatechange=null;
}
catch(ignore){
}
d.errback(e);
}
return d;
},doSimpleXMLHttpRequest:function(url){
var self=MochiKit.Async;
var req=self.getXMLHttpRequest();
if(arguments.length>1){
var m=MochiKit.Base;
var qs=m.queryString.apply(null,m.extend(null,arguments,1));
if(qs){
url+="?"+qs;
}
}
req.open("GET",url,true);
return self.sendXMLHttpRequest(req);
},loadJSONDoc:function(url){
var self=MochiKit.Async;
var d=self.doSimpleXMLHttpRequest.apply(self,arguments);
d=d.addCallback(self.evalJSONRequest);
return d;
},wait:function(_301,_302){
var d=new MochiKit.Async.Deferred();
var m=MochiKit.Base;
if(typeof (_302)!="undefined"){
d.addCallback(function(){
return _302;
});
}
var _303=setTimeout(m.bind("callback",d),Math.floor(_301*1000));
d.canceller=function(){
try{
clearTimeout(_303);
}
catch(e){
}
};
return d;
},callLater:function(_304,func){
var m=MochiKit.Base;
var _305=m.partial.apply(m,m.extend(null,arguments,1));
return MochiKit.Async.wait(_304).addCallback(function(res){
return _305();
});
}});
MochiKit.Async.DeferredLock=function(){
this.waiting=[];
this.locked=false;
this.id=this._nextId();
};
MochiKit.Async.DeferredLock.prototype={__class__:MochiKit.Async.DeferredLock,acquire:function(){
d=new MochiKit.Async.Deferred();
if(this.locked){
this.waiting.push(d);
}else{
this.locked=true;
d.callback(this);
}
return d;
},release:function(){
if(!this.locked){
throw TypeError("Tried to release an unlocked DeferredLock");
}
this.locked=false;
if(this.waiting.length>0){
this.locked=true;
this.waiting.shift().callback(this);
}
},_nextId:MochiKit.Base.counter(),repr:function(){
var _306;
if(this.locked){
_306="locked, "+this.waiting.length+" waiting";
}else{
_306="unlocked";
}
return "DeferredLock("+this.id+", "+_306+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Async.DeferredList=function(list,_308,_309,_310,_311){
MochiKit.Async.Deferred.apply(this,[_311]);
this.list=list;
var _312=[];
this.resultList=_312;
this.finishedCount=0;
this.fireOnOneCallback=_308;
this.fireOnOneErrback=_309;
this.consumeErrors=_310;
var cb=MochiKit.Base.bind(this._cbDeferred,this);
for(var i=0;i<list.length;i++){
var d=list[i];
_312.push(undefined);
d.addCallback(cb,i,true);
d.addErrback(cb,i,false);
}
if(list.length===0&&!_308){
this.callback(this.resultList);
}
};
MochiKit.Async.DeferredList.prototype=new MochiKit.Async.Deferred();
MochiKit.Async.DeferredList.prototype._cbDeferred=function(_313,_314,_315){
this.resultList[_313]=[_314,_315];
this.finishedCount+=1;
if(this.fired!==0){
if(_314&&this.fireOnOneCallback){
this.callback([_313,_315]);
}else{
if(!_314&&this.fireOnOneErrback){
this.errback(_315);
}else{
if(this.finishedCount==this.list.length){
this.callback(this.resultList);
}
}
}
}
if(!_314&&this.consumeErrors){
_315=null;
}
return _315;
};
MochiKit.Async.gatherResults=function(_316){
var d=new MochiKit.Async.DeferredList(_316,false,true,false);
d.addCallback(function(_317){
var ret=[];
for(var i=0;i<_317.length;i++){
ret.push(_317[i][1]);
}
return ret;
});
return d;
};
MochiKit.Async.maybeDeferred=function(func){
var self=MochiKit.Async;
var _318;
try{
var r=func.apply(null,MochiKit.Base.extend([],arguments,1));
if(r instanceof self.Deferred){
_318=r;
}else{
if(r instanceof Error){
_318=self.fail(r);
}else{
_318=self.succeed(r);
}
}
}
catch(e){
_318=self.fail(e);
}
return _318;
};
MochiKit.Async.EXPORT=["AlreadyCalledError","CancelledError","BrowserComplianceError","GenericError","XMLHttpRequestError","Deferred","succeed","fail","getXMLHttpRequest","doSimpleXMLHttpRequest","loadJSONDoc","wait","callLater","sendXMLHttpRequest","DeferredLock","DeferredList","gatherResults","maybeDeferred"];
MochiKit.Async.EXPORT_OK=["evalJSONRequest"];
MochiKit.Async.__new__=function(){
var m=MochiKit.Base;
var ne=m.partial(m._newNamedError,this);
ne("AlreadyCalledError",function(_321){
this.deferred=_321;
});
ne("CancelledError",function(_322){
this.deferred=_322;
});
ne("BrowserComplianceError",function(msg){
this.message=msg;
});
ne("GenericError",function(msg){
this.message=msg;
});
ne("XMLHttpRequestError",function(req,msg){
this.req=req;
this.message=msg;
try{
this.number=req.status;
}
catch(e){
}
});
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Async.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Async);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.DOM");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.DOM depends on MochiKit.Base!";
}
if(typeof (MochiKit.DOM)=="undefined"){
MochiKit.DOM={};
}
MochiKit.DOM.NAME="MochiKit.DOM";
MochiKit.DOM.VERSION="1.4";
MochiKit.DOM.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.DOM.toString=function(){
return this.__repr__();
};
MochiKit.DOM.EXPORT=["removeEmptyTextNodes","formContents","currentWindow","currentDocument","withWindow","withDocument","registerDOMConverter","coerceToDOM","createDOM","createDOMFunc","getNodeAttribute","setNodeAttribute","updateNodeAttributes","appendChildNodes","replaceChildNodes","removeElement","swapDOM","BUTTON","TT","PRE","H1","H2","H3","BR","CANVAS","HR","LABEL","TEXTAREA","FORM","STRONG","SELECT","OPTION","OPTGROUP","LEGEND","FIELDSET","P","UL","OL","LI","TD","TR","THEAD","TBODY","TFOOT","TABLE","TH","INPUT","SPAN","A","DIV","IMG","getElement","$","getElementsByTagAndClassName","addToCallStack","addLoadEvent","focusOnLoad","setElementClass","toggleElementClass","addElementClass","removeElementClass","swapElementClass","hasElementClass","escapeHTML","toHTML","emitHTML","scrapeText"];
MochiKit.DOM.EXPORT_OK=["domConverters"];
MochiKit.DOM.DEPRECATED=[["computedStyle","MochiKit.Style.computedStyle","1.4"],["elementDimensions","MochiKit.Style.getElementDimensions","1.4"],["elementPosition","MochiKit.Style.getElementPosition","1.4"],["hideElement","MochiKit.Style.hideElement","1.4"],["setElementDimensions","MochiKit.Style.setElementDimensions","1.4"],["setElementPosition","MochiKit.Style.setElementPosition","1.4"],["setDisplayForElement","MochiKit.Style.setDisplayForElement","1.4"],["setOpacity","MochiKit.Style.setOpacity","1.4"],["showElement","MochiKit.Style.showElement","1.4"],["Coordinates","MochiKit.Style.Coordinates","1.4"],["Dimensions","MochiKit.Style.Dimensions","1.4"]];
MochiKit.DOM.getViewportDimensions=new Function(""+"if (!MochiKit[\"Style\"]) {"+"    throw new Error(\"This function has been deprecated and depends on MochiKit.Style.\");"+"}"+"return MochiKit.Style.getViewportDimensions.apply(this, arguments);");
MochiKit.Base.update(MochiKit.DOM,{currentWindow:function(){
return MochiKit.DOM._window;
},currentDocument:function(){
return MochiKit.DOM._document;
},withWindow:function(win,func){
var self=MochiKit.DOM;
var _324=self._document;
var _325=self._win;
var rval;
try{
self._window=win;
self._document=win.document;
rval=func();
}
catch(e){
self._window=_325;
self._document=_324;
throw e;
}
self._window=_325;
self._document=_324;
return rval;
},formContents:function(elem){
var _326=[];
var _327=[];
var m=MochiKit.Base;
var self=MochiKit.DOM;
if(typeof (elem)=="undefined"||elem===null){
elem=self._document;
}else{
elem=self.getElement(elem);
}
m.nodeWalk(elem,function(elem){
var name=elem.name;
if(m.isNotEmpty(name)){
var _328=elem.nodeName;
if(_328=="INPUT"&&(elem.type=="radio"||elem.type=="checkbox")&&!elem.checked){
return null;
}
if(_328=="SELECT"){
if(elem.type=="select-one"){
if(elem.selectedIndex>=0){
var opt=elem.options[elem.selectedIndex];
_326.push(name);
_327.push((opt.value)?opt.value:opt.text);
return null;
}
_326.push(name);
_327.push("");
return null;
}else{
var opts=elem.options;
if(!opts.length){
_326.push(name);
_327.push("");
return null;
}
for(var i=0;i<opts.length;i++){
var opt=opts[i];
if(!opt.selected){
continue;
}
_326.push(name);
_327.push((opt.value)?opt.value:opt.text);
}
return null;
}
}
if(_328=="FORM"||_328=="P"||_328=="SPAN"||_328=="DIV"){
return elem.childNodes;
}
_326.push(name);
_327.push(elem.value||"");
return null;
}
return elem.childNodes;
});
return [_326,_327];
},withDocument:function(doc,func){
var self=MochiKit.DOM;
var _332=self._document;
var rval;
try{
self._document=doc;
rval=func();
}
catch(e){
self._document=_332;
throw e;
}
self._document=_332;
return rval;
},registerDOMConverter:function(name,_333,wrap,_334){
MochiKit.DOM.domConverters.register(name,_333,wrap,_334);
},coerceToDOM:function(node,ctx){
var m=MochiKit.Base;
var im=MochiKit.Iter;
var self=MochiKit.DOM;
if(im){
var iter=im.iter;
var _338=im.repeat;
var map=m.map;
}
var _339=self.domConverters;
var _340=arguments.callee;
var _341=m.NotFound;
while(true){
if(typeof (node)=="undefined"||node===null){
return null;
}
if(typeof (node.nodeType)!="undefined"&&node.nodeType>0){
return node;
}
if(typeof (node)=="number"||typeof (node)=="boolean"){
node=node.toString();
}
if(typeof (node)=="string"){
return self._document.createTextNode(node);
}
if(typeof (node.__dom__)=="function"){
node=node.__dom__(ctx);
continue;
}
if(typeof (node.dom)=="function"){
node=node.dom(ctx);
continue;
}
if(typeof (node)=="function"){
node=node.apply(ctx,[ctx]);
continue;
}
if(im){
var _342=null;
try{
_342=iter(node);
}
catch(e){
}
if(_342){
return map(_340,_342,_338(ctx));
}
}
try{
node=_339.match(node,ctx);
continue;
}
catch(e){
if(e!=_341){
throw e;
}
}
return self._document.createTextNode(node.toString());
}
return undefined;
},setNodeAttribute:function(node,attr,_344){
var o={};
o[attr]=_344;
try{
return MochiKit.DOM.updateNodeAttributes(node,o);
}
catch(e){
}
return null;
},getNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _345=self.attributeArray.renames[attr];
node=self.getElement(node);
try{
if(_345){
return node[_345];
}
return node.getAttribute(attr);
}
catch(e){
}
return null;
},updateNodeAttributes:function(node,_346){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
if(_346){
var _347=MochiKit.Base.updatetree;
if(self.attributeArray.compliant){
for(var k in _346){
var v=_346[k];
if(typeof (v)=="object"&&typeof (elem[k])=="object"){
_347(elem[k],v);
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}else{
var _348=self.attributeArray.renames;
for(k in _346){
v=_346[k];
var _349=_348[k];
if(k=="style"&&typeof (v)=="string"){
elem.style.cssText=v;
}else{
if(typeof (_349)=="string"){
elem[_349]=v;
}else{
if(typeof (elem[k])=="object"&&typeof (v)=="object"){
_347(elem[k],v);
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}
}
}
}
return elem;
},appendChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _350=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _351=MochiKit.Base.concat;
while(_350.length){
var n=_350.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
elem.appendChild(n);
}else{
_350=_351(n,_350);
}
}
}
return elem;
},replaceChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
arguments[0]=elem;
}
var _352;
while((_352=elem.firstChild)){
elem.removeChild(_352);
}
if(arguments.length<2){
return elem;
}else{
return self.appendChildNodes.apply(this,arguments);
}
},createDOM:function(name,_353){
var elem;
var self=MochiKit.DOM;
var m=MochiKit.Base;
if(typeof (_353)=="string"||typeof (_353)=="number"){
var args=m.extend([name,null],arguments,1);
return arguments.callee.apply(this,args);
}
if(typeof (name)=="string"){
if(_353&&!self.attributeArray.compliant){
var _354="";
if("name" in _353){
_354+=" name=\""+self.escapeHTML(_353.name)+"\"";
}
if(name=="input"&&"type" in _353){
_354+=" type=\""+self.escapeHTML(_353.type)+"\"";
}
if(_354){
name="<"+name+_354+">";
}
}
elem=self._document.createElement(name);
}else{
elem=name;
}
if(_353){
self.updateNodeAttributes(elem,_353);
}
if(arguments.length<=2){
return elem;
}else{
var args=m.extend([elem],arguments,2);
return self.appendChildNodes.apply(this,args);
}
},createDOMFunc:function(){
var m=MochiKit.Base;
return m.partial.apply(this,m.extend([MochiKit.DOM.createDOM],arguments));
},removeElement:function(elem){
var e=MochiKit.DOM.getElement(elem);
e.parentNode.removeChild(e);
return e;
},swapDOM:function(dest,src){
var self=MochiKit.DOM;
dest=self.getElement(dest);
var _357=dest.parentNode;
if(src){
src=self.getElement(src);
_357.replaceChild(src,dest);
}else{
_357.removeChild(dest);
}
return src;
},getElement:function(id){
var self=MochiKit.DOM;
if(arguments.length==1){
return ((typeof (id)=="string")?self._document.getElementById(id):id);
}else{
return MochiKit.Base.map(self.getElement,arguments);
}
},getElementsByTagAndClassName:function(_359,_360,_361){
var self=MochiKit.DOM;
if(typeof (_359)=="undefined"||_359===null){
_359="*";
}
if(typeof (_361)=="undefined"||_361===null){
_361=self._document;
}
_361=self.getElement(_361);
var _362=(_361.getElementsByTagName(_359)||self._document.all);
if(typeof (_360)=="undefined"||_360===null){
return MochiKit.Base.extend(null,_362);
}
var _363=[];
for(var i=0;i<_362.length;i++){
var _364=_362[i];
var _365=_364.className.split(" ");
for(var j=0;j<_365.length;j++){
if(_365[j]==_360){
_363.push(_364);
break;
}
}
}
return _363;
},_newCallStack:function(path,once){
var rval=function(){
var _368=arguments.callee.callStack;
for(var i=0;i<_368.length;i++){
if(_368[i].apply(this,arguments)===false){
break;
}
}
if(once){
try{
this[path]=null;
}
catch(e){
}
}
};
rval.callStack=[];
return rval;
},addToCallStack:function(_369,path,func,once){
var self=MochiKit.DOM;
var _370=_369[path];
var _371=_370;
if(!(typeof (_370)=="function"&&typeof (_370.callStack)=="object"&&_370.callStack!==null)){
_371=self._newCallStack(path,once);
if(typeof (_370)=="function"){
_371.callStack.push(_370);
}
_369[path]=_371;
}
_371.callStack.push(func);
},addLoadEvent:function(func){
var self=MochiKit.DOM;
self.addToCallStack(self._window,"onload",func,true);
},focusOnLoad:function(_372){
var self=MochiKit.DOM;
self.addLoadEvent(function(){
_372=self.getElement(_372);
if(_372){
_372.focus();
}
});
},setElementClass:function(_373,_374){
var self=MochiKit.DOM;
var obj=self.getElement(_373);
if(self.attributeArray.compliant){
obj.setAttribute("class",_374);
}else{
obj.setAttribute("className",_374);
}
},toggleElementClass:function(_375){
var self=MochiKit.DOM;
for(var i=1;i<arguments.length;i++){
var obj=self.getElement(arguments[i]);
if(!self.addElementClass(obj,_375)){
self.removeElementClass(obj,_375);
}
}
},addElementClass:function(_376,_377){
var self=MochiKit.DOM;
var obj=self.getElement(_376);
var cls=obj.className;
if(cls.length===0){
self.setElementClass(obj,_377);
return true;
}
if(cls==_377){
return false;
}
var _379=obj.className.split(" ");
for(var i=0;i<_379.length;i++){
if(_379[i]==_377){
return false;
}
}
self.setElementClass(obj,cls+" "+_377);
return true;
},removeElementClass:function(_380,_381){
var self=MochiKit.DOM;
var obj=self.getElement(_380);
var cls=obj.className;
if(cls.length===0){
return false;
}
if(cls==_381){
self.setElementClass(obj,"");
return true;
}
var _382=obj.className.split(" ");
for(var i=0;i<_382.length;i++){
if(_382[i]==_381){
_382.splice(i,1);
self.setElementClass(obj,_382.join(" "));
return true;
}
}
return false;
},swapElementClass:function(_383,_384,_385){
var obj=MochiKit.DOM.getElement(_383);
var res=MochiKit.DOM.removeElementClass(obj,_384);
if(res){
MochiKit.DOM.addElementClass(obj,_385);
}
return res;
},hasElementClass:function(_386,_387){
var obj=MochiKit.DOM.getElement(_386);
var _388=obj.className.split(" ");
for(var i=1;i<arguments.length;i++){
var good=false;
for(var j=0;j<_388.length;j++){
if(_388[j]==arguments[i]){
good=true;
break;
}
}
if(!good){
return false;
}
}
return true;
},escapeHTML:function(s){
return s.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/</g,"&lt;").replace(/>/g,"&gt;");
},toHTML:function(dom){
return MochiKit.DOM.emitHTML(dom).join("");
},emitHTML:function(dom,lst){
if(typeof (lst)=="undefined"||lst===null){
lst=[];
}
var _391=[dom];
var self=MochiKit.DOM;
var _392=self.escapeHTML;
var _393=self.attributeArray;
while(_391.length){
dom=_391.pop();
if(typeof (dom)=="string"){
lst.push(dom);
}else{
if(dom.nodeType==1){
lst.push("<"+dom.nodeName.toLowerCase());
var _394=[];
var _395=_393(dom);
for(var i=0;i<_395.length;i++){
var a=_395[i];
_394.push([" ",a.name,"=\"",_392(a.value),"\""]);
}
_394.sort();
for(i=0;i<_394.length;i++){
var _396=_394[i];
for(var j=0;j<_396.length;j++){
lst.push(_396[j]);
}
}
if(dom.hasChildNodes()){
lst.push(">");
_391.push("</"+dom.nodeName.toLowerCase()+">");
var _397=dom.childNodes;
for(i=_397.length-1;i>=0;i--){
_391.push(_397[i]);
}
}else{
lst.push("/>");
}
}else{
if(dom.nodeType==3){
lst.push(_392(dom.nodeValue));
}
}
}
}
return lst;
},scrapeText:function(node,_398){
var rval=[];
(function(node){
var cn=node.childNodes;
if(cn){
for(var i=0;i<cn.length;i++){
arguments.callee.call(this,cn[i]);
}
}
var _400=node.nodeValue;
if(typeof (_400)=="string"){
rval.push(_400);
}
})(MochiKit.DOM.getElement(node));
if(_398){
return rval;
}else{
return rval.join("");
}
},removeEmptyTextNodes:function(_401){
_401=MochiKit.DOM.getElement(_401);
for(var i=0;i<_401.childNodes.length;i++){
var node=_401.childNodes[i];
if(node.nodeType==3&&!/\S/.test(node.nodeValue)){
node.parentNode.removeChild(node);
}
}
},__new__:function(win){
var m=MochiKit.Base;
if(typeof (document)!="undefined"){
this._document=document;
}else{
if(MochiKit.MockDOM){
this._document=MochiKit.MockDOM.document;
}
}
this._window=win;
this.domConverters=new m.AdapterRegistry();
var _402=this._document.createElement("span");
var _403;
if(_402&&_402.attributes&&_402.attributes.length>0){
var _404=m.filter;
_403=function(node){
return _404(_403.ignoreAttrFilter,node.attributes);
};
_403.ignoreAttr={};
var _405=_402.attributes;
var _406=_403.ignoreAttr;
for(var i=0;i<_405.length;i++){
var a=_405[i];
_406[a.name]=a.value;
}
_403.ignoreAttrFilter=function(a){
return (_403.ignoreAttr[a.name]!=a.value);
};
_403.compliant=false;
_403.renames={"class":"className","checked":"defaultChecked","usemap":"useMap","for":"htmlFor","readonly":"readOnly"};
}else{
_403=function(node){
return node.attributes;
};
_403.compliant=true;
_403.renames={};
}
this.attributeArray=_403;
var _407=function(_408,arr){
var _409=arr[1].split(".");
var str="";
var obj={};
str+="if (!MochiKit."+_409[1]+") { throw new Error(\"";
str+="This function has been deprecated and depends on MochiKit.";
str+=_409[1]+".\");}";
str+="return MochiKit."+_409[1]+"."+arr[0];
str+=".apply(this, arguments);";
obj[_409[2]]=new Function(str);
MochiKit.Base.update(MochiKit[_408],obj);
};
for(var i;i<MochiKit.DOM.DEPRECATED.length;i++){
_407("DOM",MochiKit.DOM.DEPRECATED[i]);
}
var _410=this.createDOMFunc;
this.UL=_410("ul");
this.OL=_410("ol");
this.LI=_410("li");
this.TD=_410("td");
this.TR=_410("tr");
this.TBODY=_410("tbody");
this.THEAD=_410("thead");
this.TFOOT=_410("tfoot");
this.TABLE=_410("table");
this.TH=_410("th");
this.INPUT=_410("input");
this.SPAN=_410("span");
this.A=_410("a");
this.DIV=_410("div");
this.IMG=_410("img");
this.BUTTON=_410("button");
this.TT=_410("tt");
this.PRE=_410("pre");
this.H1=_410("h1");
this.H2=_410("h2");
this.H3=_410("h3");
this.BR=_410("br");
this.HR=_410("hr");
this.LABEL=_410("label");
this.TEXTAREA=_410("textarea");
this.FORM=_410("form");
this.P=_410("p");
this.SELECT=_410("select");
this.OPTION=_410("option");
this.OPTGROUP=_410("optgroup");
this.LEGEND=_410("legend");
this.FIELDSET=_410("fieldset");
this.STRONG=_410("strong");
this.CANVAS=_410("canvas");
this.$=this.getElement;
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
}});
MochiKit.DOM.__new__(((typeof (window)=="undefined")?this:window));
if(MochiKit.__export__){
withWindow=MochiKit.DOM.withWindow;
withDocument=MochiKit.DOM.withDocument;
}
MochiKit.Base._exportSymbols(this,MochiKit.DOM);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Style");
dojo.require("MochiKit.Base");
dojo.require("MochiKit.DOM");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Style depends on MochiKit.Base!";
}
try{
if(typeof (MochiKit.DOM)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Style depends on MochiKit.DOM!";
}
if(typeof (MochiKit.Style)=="undefined"){
MochiKit.Style={};
}
MochiKit.Style.NAME="MochiKit.Style";
MochiKit.Style.VERSION="1.4";
MochiKit.Style.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Style.toString=function(){
return this.__repr__();
};
MochiKit.Style.EXPORT_OK=[];
MochiKit.Style.EXPORT=["setOpacity","computedStyle","getElementDimensions","elementDimensions","setElementDimensions","getElementPosition","elementPosition","setElementPosition","setDisplayForElement","hideElement","showElement","getViewportDimensions","Dimensions","Coordinates"];
MochiKit.Style.Dimensions=function(w,h){
this.w=w;
this.h=h;
};
MochiKit.Style.Dimensions.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{w: "+repr(this.w)+", h: "+repr(this.h)+"}";
};
MochiKit.Style.Dimensions.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Style.Coordinates=function(x,y){
this.x=x;
this.y=y;
};
MochiKit.Style.Coordinates.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{x: "+repr(this.x)+", y: "+repr(this.y)+"}";
};
MochiKit.Style.Coordinates.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Base.update(MochiKit.Style,{computedStyle:function(elem,_415){
var dom=MochiKit.DOM;
var d=dom._document;
elem=dom.getElement(elem);
_415=MochiKit.Base.camelize(_415);
if(!elem||elem==d){
return undefined;
}
if(_415=="opacity"&&elem.filters){
try{
return elem.filters.item("DXImageTransform.Microsoft.Alpha").opacity/100;
}
catch(e){
try{
return elem.filters.item("alpha").opacity/100;
}
catch(e){
}
}
}
if(elem.currentStyle){
return elem.currentStyle[_415];
}
if(typeof (d.defaultView)=="undefined"){
return undefined;
}
if(d.defaultView===null){
return undefined;
}
var _416=d.defaultView.getComputedStyle(elem,null);
if(typeof (_416)=="undefined"||_416===null){
return undefined;
}
var _417=_415.replace(/([A-Z])/g,"-$1").toLowerCase();
return _416.getPropertyValue(_417);
},setOpacity:function(elem,o){
elem=MochiKit.DOM.getElement(elem);
MochiKit.DOM.updateNodeAttributes(elem,{"style":{"opacity":o,"-moz-opacity":o,"-khtml-opacity":o,"filter":" alpha(opacity="+(o*100)+")"}});
},getElementPosition:function(elem,_418){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
elem=dom.getElement(elem);
if(!elem||(!(elem.x&&elem.y)&&(!elem.parentNode==null||self.computedStyle(elem,"display")=="none"))){
return undefined;
}
var c=new self.Coordinates(0,0);
var box=null;
var _421=null;
var d=MochiKit.DOM._document;
var de=d.documentElement;
var b=d.body;
if(!elem.parentNode&&elem.x&&elem.y){
c.x+=elem.x||0;
c.y+=elem.y||0;
}else{
if(elem.getBoundingClientRect){
box=elem.getBoundingClientRect();
c.x+=box.left+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
c.y+=box.top+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
}else{
if(elem.offsetParent){
c.x+=elem.offsetLeft;
c.y+=elem.offsetTop;
_421=elem.offsetParent;
if(_421!=elem){
while(_421){
c.x+=_421.offsetLeft;
c.y+=_421.offsetTop;
_421=_421.offsetParent;
}
}
var ua=navigator.userAgent.toLowerCase();
if((typeof (opera)!="undefined"&&parseFloat(opera.version())<9)||(ua.indexOf("safari")!=-1&&self.computedStyle(elem,"position")=="absolute")){
c.x-=b.offsetLeft;
c.y-=b.offsetTop;
}
}
}
}
if(typeof (_418)!="undefined"){
_418=arguments.callee(_418);
if(_418){
c.x-=(_418.x||0);
c.y-=(_418.y||0);
}
}
if(elem.parentNode){
_421=elem.parentNode;
}else{
_421=null;
}
while(_421&&_421.tagName!="BODY"&&_421.tagName!="HTML"){
c.x-=_421.scrollLeft;
c.y-=_421.scrollTop;
if(_421.parentNode){
_421=_421.parentNode;
}else{
_421=null;
}
}
return c;
},setElementPosition:function(elem,_424,_425){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_425)=="undefined"){
_425="px";
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":{"left":_424.x+_425,"top":_424.y+_425}});
},getElementDimensions:function(elem){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
if(typeof (elem.w)=="number"||typeof (elem.h)=="number"){
return new self.Dimensions(elem.w||0,elem.h||0);
}
elem=dom.getElement(elem);
if(!elem){
return undefined;
}
if(self.computedStyle(elem,"display")!="none"){
return new self.Dimensions(elem.offsetWidth||0,elem.offsetHeight||0);
}
var s=elem.style;
var _426=s.visibility;
var _427=s.position;
s.visibility="hidden";
s.position="absolute";
s.display="";
var _428=elem.offsetWidth;
var _429=elem.offsetHeight;
s.display="none";
s.position=_427;
s.visibility=_426;
return new self.Dimensions(_428,_429);
},setElementDimensions:function(elem,_430,_431){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_431)=="undefined"){
_431="px";
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":{"width":_430.w+_431,"height":_430.h+_431}});
},setDisplayForElement:function(_432,_433){
var _434=MochiKit.Base.extend(null,arguments,1);
var _435=MochiKit.DOM.getElement;
for(var i=0;i<_434.length;i++){
var _433=_435(_434[i]);
if(_433){
_433.style.display=_432;
}
}
},getViewportDimensions:function(){
var d=new MochiKit.Style.Dimensions();
var w=MochiKit.DOM._window;
var b=MochiKit.DOM._document.body;
if(w.innerWidth){
d.w=w.innerWidth;
d.h=w.innerHeight;
}else{
if(b.parentElement.clientWidth){
d.w=b.parentElement.clientWidth;
d.h=b.parentElement.clientHeight;
}else{
if(b&&b.clientWidth){
d.w=b.clientWidth;
d.h=b.clientHeight;
}
}
}
return d;
},__new__:function(){
var m=MochiKit.Base;
this.elementPosition=this.getElementPosition;
this.elementDimensions=this.getElementDimensions;
this.hideElement=m.partial(this.setDisplayForElement,"none");
this.showElement=m.partial(this.setDisplayForElement,"block");
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
}});
MochiKit.Style.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Style);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.LoggingPane");
dojo.require("MochiKit.Logging");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Logging",[]);
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"||typeof (MochiKit.Logging)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.LoggingPane depends on MochiKit.Base and MochiKit.Logging!";
}
if(typeof (MochiKit.LoggingPane)=="undefined"){
MochiKit.LoggingPane={};
}
MochiKit.LoggingPane.NAME="MochiKit.LoggingPane";
MochiKit.LoggingPane.VERSION="1.4";
MochiKit.LoggingPane.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.LoggingPane.toString=function(){
return this.__repr__();
};
MochiKit.LoggingPane.createLoggingPane=function(_436){
var m=MochiKit.LoggingPane;
_436=!(!_436);
if(m._loggingPane&&m._loggingPane.inline!=_436){
m._loggingPane.closePane();
m._loggingPane=null;
}
if(!m._loggingPane||m._loggingPane.closed){
m._loggingPane=new m.LoggingPane(_436,MochiKit.Logging.logger);
}
return m._loggingPane;
};
MochiKit.LoggingPane.LoggingPane=function(_437,_438){
if(typeof (_438)=="undefined"||_438===null){
_438=MochiKit.Logging.logger;
}
this.logger=_438;
var _439=MochiKit.Base.update;
var _440=MochiKit.Base.updatetree;
var bind=MochiKit.Base.bind;
var _441=MochiKit.Base.clone;
var win=window;
var uid="_MochiKit_LoggingPane";
if(typeof (MochiKit.DOM)!="undefined"){
win=MochiKit.DOM.currentWindow();
}
if(!_437){
var url=win.location.href.split("?")[0].replace(/[:\/.><&-]/g,"_");
var name=uid+"_"+url;
var nwin=win.open("",name,"dependent,resizable,height=200");
if(!nwin){
alert("Not able to open debugging window due to pop-up blocking.");
return undefined;
}
nwin.document.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" "+"\"http://www.w3.org/TR/html4/loose.dtd\">"+"<html><head><title>[MochiKit.LoggingPane]</title></head>"+"<body></body></html>");
nwin.document.close();
nwin.document.title+=" "+win.document.title;
win=nwin;
}
var doc=win.document;
this.doc=doc;
var _444=doc.getElementById(uid);
var _445=!!_444;
if(_444&&typeof (_444.loggingPane)!="undefined"){
_444.loggingPane.logger=this.logger;
_444.loggingPane.buildAndApplyFilter();
return _444.loggingPane;
}
if(_445){
var _446;
while((_446=_444.firstChild)){
_444.removeChild(_446);
}
}else{
_444=doc.createElement("div");
_444.id=uid;
}
_444.loggingPane=this;
var _447=doc.createElement("input");
var _448=doc.createElement("input");
var _449=doc.createElement("button");
var _450=doc.createElement("button");
var _451=doc.createElement("button");
var _452=doc.createElement("button");
var _453=doc.createElement("div");
var _454=doc.createElement("div");
var _455=uid+"_Listener";
this.colorTable=_441(this.colorTable);
var _456=[];
var _457=null;
var _458=function(msg){
var _459=msg.level;
if(typeof (_459)=="number"){
_459=MochiKit.Logging.LogLevel[_459];
}
return _459;
};
var _460=function(msg){
return msg.info.join(" ");
};
var _461=bind(function(msg){
var _462=_458(msg);
var text=_460(msg);
var c=this.colorTable[_462];
var p=doc.createElement("span");
p.className="MochiKit-LogMessage MochiKit-LogLevel-"+_462;
p.style.cssText="margin: 0px; white-space: -moz-pre-wrap; white-space: -o-pre-wrap; white-space: pre-wrap; white-space: pre-line; word-wrap: break-word; wrap-option: emergency; color: "+c;
p.appendChild(doc.createTextNode(_462+": "+text));
_454.appendChild(p);
_454.appendChild(doc.createElement("br"));
if(_453.offsetHeight>_453.scrollHeight){
_453.scrollTop=0;
}else{
_453.scrollTop=_453.scrollHeight;
}
},this);
var _464=function(msg){
_456[_456.length]=msg;
_461(msg);
};
var _465=function(){
var _466,infore;
try{
_466=new RegExp(_447.value);
infore=new RegExp(_448.value);
}
catch(e){
logDebug("Error in filter regex: "+e.message);
return null;
}
return function(msg){
return (_466.test(_458(msg))&&infore.test(_460(msg)));
};
};
var _467=function(){
while(_454.firstChild){
_454.removeChild(_454.firstChild);
}
};
var _468=function(){
_456=[];
_467();
};
var _469=bind(function(){
if(this.closed){
return;
}
this.closed=true;
if(MochiKit.LoggingPane._loggingPane==this){
MochiKit.LoggingPane._loggingPane=null;
}
this.logger.removeListener(_455);
_444.loggingPane=null;
if(_437){
_444.parentNode.removeChild(_444);
}else{
this.win.close();
}
},this);
var _470=function(){
_467();
for(var i=0;i<_456.length;i++){
var msg=_456[i];
if(_457===null||_457(msg)){
_461(msg);
}
}
};
this.buildAndApplyFilter=function(){
_457=_465();
_470();
this.logger.removeListener(_455);
this.logger.addListener(_455,_457,_464);
};
var _471=bind(function(){
_456=this.logger.getMessages();
_470();
},this);
var _472=bind(function(_473){
_473=_473||window.event;
key=_473.which||_473.keyCode;
if(key==13){
this.buildAndApplyFilter();
}
},this);
var _474="display: block; z-index: 1000; left: 0px; bottom: 0px; position: fixed; width: 100%; background-color: white; font: "+this.logFont;
if(_437){
_474+="; height: 10em; border-top: 2px solid black";
}else{
_474+="; height: 100%;";
}
_444.style.cssText=_474;
if(!_445){
doc.body.appendChild(_444);
}
_474={"cssText":"width: 33%; display: inline; font: "+this.logFont};
_440(_447,{"value":"FATAL|ERROR|WARNING|INFO|DEBUG","onkeypress":_472,"style":_474});
_444.appendChild(_447);
_440(_448,{"value":".*","onkeypress":_472,"style":_474});
_444.appendChild(_448);
_474="width: 8%; display:inline; font: "+this.logFont;
_449.appendChild(doc.createTextNode("Filter"));
_449.onclick=bind("buildAndApplyFilter",this);
_449.style.cssText=_474;
_444.appendChild(_449);
_450.appendChild(doc.createTextNode("Load"));
_450.onclick=_471;
_450.style.cssText=_474;
_444.appendChild(_450);
_451.appendChild(doc.createTextNode("Clear"));
_451.onclick=_468;
_451.style.cssText=_474;
_444.appendChild(_451);
_452.appendChild(doc.createTextNode("Close"));
_452.onclick=_469;
_452.style.cssText=_474;
_444.appendChild(_452);
_453.style.cssText="overflow: auto; width: 100%";
_454.style.cssText="width: 100%; height: "+(_437?"8em":"100%");
_453.appendChild(_454);
_444.appendChild(_453);
this.buildAndApplyFilter();
_471();
if(_437){
this.win=undefined;
}else{
this.win=win;
}
this.inline=_437;
this.closePane=_469;
this.closed=false;
return this;
};
MochiKit.LoggingPane.LoggingPane.prototype={"logFont":"8pt Verdana,sans-serif","colorTable":{"ERROR":"red","FATAL":"darkred","WARNING":"blue","INFO":"black","DEBUG":"green"}};
MochiKit.LoggingPane.EXPORT_OK=["LoggingPane"];
MochiKit.LoggingPane.EXPORT=["createLoggingPane"];
MochiKit.LoggingPane.__new__=function(){
this.EXPORT_TAGS={":common":this.EXPORT,":all":MochiKit.Base.concat(this.EXPORT,this.EXPORT_OK)};
MochiKit.Base.nameFunctions(this);
MochiKit.LoggingPane._loggingPane=null;
};
MochiKit.LoggingPane.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.LoggingPane);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Color");
dojo.require("MochiKit.Base");
dojo.require("MochiKit.DOM");
dojo.require("MochiKit.Style");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
JSAN.use("MochiKit.DOM",[]);
JSAN.use("MochiKit.Style",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Color depends on MochiKit.Base";
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Color depends on MochiKit.DOM";
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Color depends on MochiKit.Style";
}
if(typeof (MochiKit.Color)=="undefined"){
MochiKit.Color={};
}
MochiKit.Color.NAME="MochiKit.Color";
MochiKit.Color.VERSION="1.4";
MochiKit.Color.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Color.toString=function(){
return this.__repr__();
};
MochiKit.Color.Color=function(red,_476,blue,_478){
if(typeof (_478)=="undefined"||_478===null){
_478=1;
}
this.rgb={r:red,g:_476,b:blue,a:_478};
};
MochiKit.Color.Color.prototype={__class__:MochiKit.Color.Color,colorWithAlpha:function(_479){
var rgb=this.rgb;
var m=MochiKit.Color;
return m.Color.fromRGB(rgb.r,rgb.g,rgb.b,_479);
},colorWithHue:function(hue){
var hsl=this.asHSL();
hsl.h=hue;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithSaturation:function(_483){
var hsl=this.asHSL();
hsl.s=_483;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithLightness:function(_484){
var hsl=this.asHSL();
hsl.l=_484;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},darkerColorWithLevel:function(_485){
var hsl=this.asHSL();
hsl.l=Math.max(hsl.l-_485,0);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},lighterColorWithLevel:function(_486){
var hsl=this.asHSL();
hsl.l=Math.min(hsl.l+_486,1);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},blendedColor:function(_487,_488){
if(typeof (_488)=="undefined"||_488===null){
_488=0.5;
}
var sf=1-_488;
var s=this.rgb;
var d=_487.rgb;
var df=_488;
return MochiKit.Color.Color.fromRGB((s.r*sf)+(d.r*df),(s.g*sf)+(d.g*df),(s.b*sf)+(d.b*df),(s.a*sf)+(d.a*df));
},compareRGB:function(_491){
var a=this.asRGB();
var b=_491.asRGB();
return MochiKit.Base.compare([a.r,a.g,a.b,a.a],[b.r,b.g,b.b,b.a]);
},isLight:function(){
return this.asHSL().b>0.5;
},isDark:function(){
return (!this.isLight());
},toHSLString:function(){
var c=this.asHSL();
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hslString;
if(!rval){
var mid=(ccc(c.h,360).toFixed(0)+","+ccc(c.s,100).toPrecision(4)+"%"+","+ccc(c.l,100).toPrecision(4)+"%");
var a=c.a;
if(a>=1){
a=1;
rval="hsl("+mid+")";
}else{
if(a<=0){
a=0;
}
rval="hsla("+mid+","+a+")";
}
this._hslString=rval;
}
return rval;
},toRGBString:function(){
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._rgbString;
if(!rval){
var mid=(ccc(c.r,255).toFixed(0)+","+ccc(c.g,255).toFixed(0)+","+ccc(c.b,255).toFixed(0));
if(c.a!=1){
rval="rgba("+mid+","+c.a+")";
}else{
rval="rgb("+mid+")";
}
this._rgbString=rval;
}
return rval;
},asRGB:function(){
return MochiKit.Base.clone(this.rgb);
},toHexString:function(){
var m=MochiKit.Color;
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hexString;
if(!rval){
rval=("#"+m.toColorPart(ccc(c.r,255))+m.toColorPart(ccc(c.g,255))+m.toColorPart(ccc(c.b,255)));
this._hexString=rval;
}
return rval;
},asHSV:function(){
var hsv=this.hsv;
var c=this.rgb;
if(typeof (hsv)=="undefined"||hsv===null){
hsv=MochiKit.Color.rgbToHSV(this.rgb);
this.hsv=hsv;
}
return MochiKit.Base.clone(hsv);
},asHSL:function(){
var hsl=this.hsl;
var c=this.rgb;
if(typeof (hsl)=="undefined"||hsl===null){
hsl=MochiKit.Color.rgbToHSL(this.rgb);
this.hsl=hsl;
}
return MochiKit.Base.clone(hsl);
},toString:function(){
return this.toRGBString();
},repr:function(){
var c=this.rgb;
var col=[c.r,c.g,c.b,c.a];
return this.__class__.NAME+"("+col.join(", ")+")";
}};
MochiKit.Base.update(MochiKit.Color.Color,{fromRGB:function(red,_496,blue,_497){
var _498=MochiKit.Color.Color;
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_496=rgb.g;
blue=rgb.b;
if(typeof (rgb.a)=="undefined"){
_497=undefined;
}else{
_497=rgb.a;
}
}
return new _498(red,_496,blue,_497);
},fromHSL:function(hue,_499,_500,_501){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hslToRGB.apply(m,arguments));
},fromHSV:function(hue,_502,_503,_504){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hsvToRGB.apply(m,arguments));
},fromName:function(name){
var _505=MochiKit.Color.Color;
if(name.charAt(0)=="\""){
name=name.substr(1,name.length-2);
}
var _506=_505._namedColors[name.toLowerCase()];
if(typeof (_506)=="string"){
return _505.fromHexString(_506);
}else{
if(name=="transparent"){
return _505.transparentColor();
}
}
return null;
},fromString:function(_507){
var self=MochiKit.Color.Color;
var _508=_507.substr(0,3);
if(_508=="rgb"){
return self.fromRGBString(_507);
}else{
if(_508=="hsl"){
return self.fromHSLString(_507);
}else{
if(_507.charAt(0)=="#"){
return self.fromHexString(_507);
}
}
}
return self.fromName(_507);
},fromHexString:function(_509){
if(_509.charAt(0)=="#"){
_509=_509.substring(1);
}
var _510=[];
var i,hex;
if(_509.length==3){
for(i=0;i<3;i++){
hex=_509.substr(i,1);
_510.push(parseInt(hex+hex,16)/255);
}
}else{
for(i=0;i<6;i+=2){
hex=_509.substr(i,2);
_510.push(parseInt(hex,16)/255);
}
}
var _511=MochiKit.Color.Color;
return _511.fromRGB.apply(_511,_510);
},_fromColorString:function(pre,_513,_514,_515){
if(_515.indexOf(pre)===0){
_515=_515.substring(_515.indexOf("(",3)+1,_515.length-1);
}
var _516=_515.split(/\s*,\s*/);
var _517=[];
for(var i=0;i<_516.length;i++){
var c=_516[i];
var val;
var _518=c.substring(c.length-3);
if(c.charAt(c.length-1)=="%"){
val=0.01*parseFloat(c.substring(0,c.length-1));
}else{
if(_518=="deg"){
val=parseFloat(c)/360;
}else{
if(_518=="rad"){
val=parseFloat(c)/(Math.PI*2);
}else{
val=_514[i]*parseFloat(c);
}
}
}
_517.push(val);
}
return this[_513].apply(this,_517);
},fromComputedStyle:function(elem,_519){
var d=MochiKit.DOM;
var cls=MochiKit.Color.Color;
for(elem=d.getElement(elem);elem;elem=elem.parentNode){
var _520=MochiKit.Style.computedStyle.apply(d,arguments);
if(!_520){
continue;
}
var _521=cls.fromString(_520);
if(!_521){
break;
}
if(_521.asRGB().a>0){
return _521;
}
}
return null;
},fromBackground:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"backgroundColor","background-color")||cls.whiteColor();
},fromText:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"color","color")||cls.blackColor();
},namedColors:function(){
return MochiKit.Base.clone(MochiKit.Color.Color._namedColors);
}});
MochiKit.Base.update(MochiKit.Color,{clampColorComponent:function(v,_522){
v*=_522;
if(v<0){
return 0;
}else{
if(v>_522){
return _522;
}else{
return v;
}
}
},_hslValue:function(n1,n2,hue){
if(hue>6){
hue-=6;
}else{
if(hue<0){
hue+=6;
}
}
var val;
if(hue<1){
val=n1+(n2-n1)*hue;
}else{
if(hue<3){
val=n2;
}else{
if(hue<4){
val=n1+(n2-n1)*(4-hue);
}else{
val=n1;
}
}
}
return val;
},hsvToRGB:function(hue,_525,_526,_527){
if(arguments.length==1){
var hsv=hue;
hue=hsv.h;
_525=hsv.s;
_526=hsv.v;
_527=hsv.a;
}
var red;
var _528;
var blue;
if(_525===0){
red=0;
_528=0;
blue=0;
}else{
var i=Math.floor(hue*6);
var f=(hue*6)-i;
var p=_526*(1-_525);
var q=_526*(1-(_525*f));
var t=_526*(1-(_525*(1-f)));
switch(i){
case 1:
red=q;
_528=_526;
blue=p;
break;
case 2:
red=p;
_528=_526;
blue=t;
break;
case 3:
red=p;
_528=q;
blue=_526;
break;
case 4:
red=t;
_528=p;
blue=_526;
break;
case 5:
red=_526;
_528=p;
blue=q;
break;
case 6:
case 0:
red=_526;
_528=t;
blue=p;
break;
}
}
return {r:red,g:_528,b:blue,a:_527};
},hslToRGB:function(hue,_530,_531,_532){
if(arguments.length==1){
var hsl=hue;
hue=hsl.h;
_530=hsl.s;
_531=hsl.l;
_532=hsl.a;
}
var red;
var _533;
var blue;
if(_530===0){
red=_531;
_533=_531;
blue=_531;
}else{
var m2;
if(_531<=0.5){
m2=_531*(1+_530);
}else{
m2=_531+_530-(_531*_530);
}
var m1=(2*_531)-m2;
var f=MochiKit.Color._hslValue;
var h6=hue*6;
red=f(m1,m2,h6+2);
_533=f(m1,m2,h6);
blue=f(m1,m2,h6-2);
}
return {r:red,g:_533,b:blue,a:_532};
},rgbToHSV:function(red,_537,blue,_538){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_537=rgb.g;
blue=rgb.b;
_538=rgb.a;
}
var max=Math.max(Math.max(red,_537),blue);
var min=Math.min(Math.min(red,_537),blue);
var hue;
var _541;
var _542=max;
if(min==max){
hue=0;
_541=0;
}else{
var _543=(max-min);
_541=_543/max;
if(red==max){
hue=(_537-blue)/_543;
}else{
if(_537==max){
hue=2+((blue-red)/_543);
}else{
hue=4+((red-_537)/_543);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_541,v:_542,a:_538};
},rgbToHSL:function(red,_544,blue,_545){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_544=rgb.g;
blue=rgb.b;
_545=rgb.a;
}
var max=Math.max(red,Math.max(_544,blue));
var min=Math.min(red,Math.min(_544,blue));
var hue;
var _546;
var _547=(max+min)/2;
var _548=max-min;
if(_548===0){
hue=0;
_546=0;
}else{
if(_547<=0.5){
_546=_548/(max+min);
}else{
_546=_548/(2-max-min);
}
if(red==max){
hue=(_544-blue)/_548;
}else{
if(_544==max){
hue=2+((blue-red)/_548);
}else{
hue=4+((red-_544)/_548);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_546,l:_547,a:_545};
},toColorPart:function(num){
num=Math.round(num);
var _549=num.toString(16);
if(num<16){
return "0"+_549;
}
return _549;
},__new__:function(){
var m=MochiKit.Base;
this.Color.fromRGBString=m.bind(this.Color._fromColorString,this.Color,"rgb","fromRGB",[1/255,1/255,1/255,1]);
this.Color.fromHSLString=m.bind(this.Color._fromColorString,this.Color,"hsl","fromHSL",[1/360,0.01,0.01,1]);
var _550=1/3;
var _551={black:[0,0,0],blue:[0,0,1],brown:[0.6,0.4,0.2],cyan:[0,1,1],darkGray:[_550,_550,_550],gray:[0.5,0.5,0.5],green:[0,1,0],lightGray:[2*_550,2*_550,2*_550],magenta:[1,0,1],orange:[1,0.5,0],purple:[0.5,0,0.5],red:[1,0,0],transparent:[0,0,0,0],white:[1,1,1],yellow:[1,1,0]};
var _552=function(name,r,g,b,a){
var rval=this.fromRGB(r,g,b,a);
this[name]=function(){
return rval;
};
return rval;
};
for(var k in _551){
var name=k+"Color";
var _554=m.concat([_552,this.Color,name],_551[k]);
this.Color[name]=m.bind.apply(null,_554);
}
var _555=function(){
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof Color)){
return false;
}
}
return true;
};
var _556=function(a,b){
return a.compareRGB(b);
};
m.nameFunctions(this);
m.registerComparator(this.Color.NAME,_555,_556);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
}});
MochiKit.Color.EXPORT=["Color"];
MochiKit.Color.EXPORT_OK=["clampColorComponent","rgbToHSL","hslToRGB","rgbToHSV","hsvToRGB","toColorPart"];
MochiKit.Color.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Color);
MochiKit.Color.Color._namedColors={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"};
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Signal");
dojo.require("MochiKit.Base");
dojo.require("MochiKit.DOM");
dojo.require("MochiKit.Style");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
JSAN.use("MochiKit.DOM",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Signal depends on MochiKit.Base!";
}
try{
if(typeof (MochiKit.DOM)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Signal depends on MochiKit.DOM!";
}
try{
if(typeof (MochiKit.Style)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Signal depends on MochiKit.Style!";
}
if(typeof (MochiKit.Signal)=="undefined"){
MochiKit.Signal={};
}
MochiKit.Signal.NAME="MochiKit.Signal";
MochiKit.Signal.VERSION="1.4";
MochiKit.Signal._observers=[];
MochiKit.Signal.Event=function(src,e){
this._event=e||window.event;
this._src=src;
};
MochiKit.Base.update(MochiKit.Signal.Event.prototype,{__repr__:function(){
var repr=MochiKit.Base.repr;
var str="{event(): "+repr(this.event())+", src(): "+repr(this.src())+", type(): "+repr(this.type())+", target(): "+repr(this.target())+", modifier(): "+"{alt: "+repr(this.modifier().alt)+", ctrl: "+repr(this.modifier().ctrl)+", meta: "+repr(this.modifier().meta)+", shift: "+repr(this.modifier().shift)+", any: "+repr(this.modifier().any)+"}";
if(this.type()&&this.type().indexOf("key")===0){
str+=", key(): {code: "+repr(this.key().code)+", string: "+repr(this.key().string)+"}";
}
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
str+=", mouse(): {page: "+repr(this.mouse().page)+", client: "+repr(this.mouse().client);
if(this.type()!="mousemove"){
str+=", button: {left: "+repr(this.mouse().button.left)+", middle: "+repr(this.mouse().button.middle)+", right: "+repr(this.mouse().button.right)+"}}";
}else{
str+="}";
}
}
if(this.type()=="mouseover"||this.type()=="mouseout"){
str+=", relatedTarget(): "+repr(this.relatedTarget());
}
str+="}";
return str;
},toString:function(){
return this.__repr__();
},src:function(){
return this._src;
},event:function(){
return this._event;
},type:function(){
return this._event.type||undefined;
},target:function(){
return this._event.target||this._event.srcElement;
},_relatedTarget:null,relatedTarget:function(){
if(this._relatedTarget!==null){
return this._relatedTarget;
}
var elem=null;
if(this.type()=="mouseover"){
elem=(this._event.relatedTarget||this._event.fromElement);
}else{
if(this.type()=="mouseout"){
elem=(this._event.relatedTarget||this._event.toElement);
}
}
if(elem!==null){
this._relatedTarget=elem;
return elem;
}
return undefined;
},_modifier:null,modifier:function(){
if(this._modifier!==null){
return this._modifier;
}
var m={};
m.alt=this._event.altKey;
m.ctrl=this._event.ctrlKey;
m.meta=this._event.metaKey||false;
m.shift=this._event.shiftKey;
m.any=m.alt||m.ctrl||m.shift||m.meta;
this._modifier=m;
return m;
},_key:null,key:function(){
if(this._key!==null){
return this._key;
}
var k={};
if(this.type()&&this.type().indexOf("key")===0){
if(this.type()=="keydown"||this.type()=="keyup"){
k.code=this._event.keyCode;
k.string=(MochiKit.Signal._specialKeys[k.code]||"KEY_UNKNOWN");
this._key=k;
return k;
}else{
if(this.type()=="keypress"){
k.code=0;
k.string="";
if(typeof (this._event.charCode)!="undefined"&&this._event.charCode!==0&&!MochiKit.Signal._specialMacKeys[this._event.charCode]){
k.code=this._event.charCode;
k.string=String.fromCharCode(k.code);
}else{
if(this._event.keyCode&&typeof (this._event.charCode)=="undefined"){
k.code=this._event.keyCode;
k.string=String.fromCharCode(k.code);
}
}
this._key=k;
return k;
}
}
}
return undefined;
},_mouse:null,mouse:function(){
if(this._mouse!==null){
return this._mouse;
}
var m={};
var e=this._event;
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
m.client=new MochiKit.Style.Coordinates(0,0);
if(e.clientX||e.clientY){
m.client.x=(!e.clientX||e.clientX<0)?0:e.clientX;
m.client.y=(!e.clientY||e.clientY<0)?0:e.clientY;
}
m.page=new MochiKit.Style.Coordinates(0,0);
if(e.pageX||e.pageY){
m.page.x=(!e.pageX||e.pageX<0)?0:e.pageX;
m.page.y=(!e.pageY||e.pageY<0)?0:e.pageY;
}else{
var de=MochiKit.DOM._document.documentElement;
var b=MochiKit.DOM._document.body;
m.page.x=e.clientX+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
m.page.y=e.clientY+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
}
if(this.type()!="mousemove"){
m.button={};
m.button.left=false;
m.button.right=false;
m.button.middle=false;
if(e.which){
m.button.left=(e.which==1);
m.button.middle=(e.which==2);
m.button.right=(e.which==3);
}else{
m.button.left=!!(e.button&1);
m.button.right=!!(e.button&2);
m.button.middle=!!(e.button&4);
}
}
this._mouse=m;
return m;
}
return undefined;
},stop:function(){
this.stopPropagation();
this.preventDefault();
},stopPropagation:function(){
if(this._event.stopPropagation){
this._event.stopPropagation();
}else{
this._event.cancelBubble=true;
}
},preventDefault:function(){
if(this._event.preventDefault){
this._event.preventDefault();
}else{
if(this._confirmUnload===null){
this._event.returnValue=false;
}
}
},_confirmUnload:null,confirmUnload:function(msg){
if(this.type()=="beforeunload"){
this._confirmUnload=msg;
this._event.returnValue=msg;
}
}});
MochiKit.Signal._specialMacKeys={3:"KEY_ENTER",63289:"KEY_NUM_PAD_CLEAR",63276:"KEY_PAGE_UP",63277:"KEY_PAGE_DOWN",63275:"KEY_END",63273:"KEY_HOME",63234:"KEY_ARROW_LEFT",63232:"KEY_ARROW_UP",63235:"KEY_ARROW_RIGHT",63233:"KEY_ARROW_DOWN",63302:"KEY_INSERT",63272:"KEY_DELETE"};
for(i=63236;i<=63242;i++){
MochiKit.Signal._specialMacKeys[i]="KEY_F"+(i-63236+1);
}
MochiKit.Signal._specialKeys={8:"KEY_BACKSPACE",9:"KEY_TAB",12:"KEY_NUM_PAD_CLEAR",13:"KEY_ENTER",16:"KEY_SHIFT",17:"KEY_CTRL",18:"KEY_ALT",19:"KEY_PAUSE",20:"KEY_CAPS_LOCK",27:"KEY_ESCAPE",32:"KEY_SPACEBAR",33:"KEY_PAGE_UP",34:"KEY_PAGE_DOWN",35:"KEY_END",36:"KEY_HOME",37:"KEY_ARROW_LEFT",38:"KEY_ARROW_UP",39:"KEY_ARROW_RIGHT",40:"KEY_ARROW_DOWN",44:"KEY_PRINT_SCREEN",45:"KEY_INSERT",46:"KEY_DELETE",59:"KEY_SEMICOLON",91:"KEY_WINDOWS_LEFT",92:"KEY_WINDOWS_RIGHT",93:"KEY_SELECT",106:"KEY_NUM_PAD_ASTERISK",107:"KEY_NUM_PAD_PLUS_SIGN",109:"KEY_NUM_PAD_HYPHEN-MINUS",110:"KEY_NUM_PAD_FULL_STOP",111:"KEY_NUM_PAD_SOLIDUS",144:"KEY_NUM_LOCK",145:"KEY_SCROLL_LOCK",186:"KEY_SEMICOLON",187:"KEY_EQUALS_SIGN",188:"KEY_COMMA",189:"KEY_HYPHEN-MINUS",190:"KEY_FULL_STOP",191:"KEY_SOLIDUS",192:"KEY_GRAVE_ACCENT",219:"KEY_LEFT_SQUARE_BRACKET",220:"KEY_REVERSE_SOLIDUS",221:"KEY_RIGHT_SQUARE_BRACKET",222:"KEY_APOSTROPHE"};
for(var i=48;i<=57;i++){
MochiKit.Signal._specialKeys[i]="KEY_"+(i-48);
}
for(i=65;i<=90;i++){
MochiKit.Signal._specialKeys[i]="KEY_"+String.fromCharCode(i);
}
for(i=96;i<=105;i++){
MochiKit.Signal._specialKeys[i]="KEY_NUM_PAD_"+(i-96);
}
for(i=112;i<=123;i++){
MochiKit.Signal._specialKeys[i]="KEY_F"+(i-112+1);
}
MochiKit.Base.update(MochiKit.Signal,{__repr__:function(){
return "["+this.NAME+" "+this.VERSION+"]";
},toString:function(){
return this.__repr__();
},_unloadCache:function(){
var self=MochiKit.Signal;
var _557=self._observers;
for(var i=0;i<_557.length;i++){
self._disconnect(_557[i]);
}
delete self._observers;
try{
window.onload=undefined;
}
catch(e){
}
try{
window.onunload=undefined;
}
catch(e){
}
},_listener:function(src,func,obj,_558){
var E=MochiKit.Signal.Event;
if(!_558){
return MochiKit.Base.bind(func,obj);
}
obj=obj||src;
if(typeof (func)=="string"){
return function(_560){
obj[func].apply(obj,[new E(src,_560)]);
};
}else{
return function(_561){
func.apply(obj,[new E(src,_561)]);
};
}
},connect:function(src,sig,_563,_564){
src=MochiKit.DOM.getElement(src);
var self=MochiKit.Signal;
if(typeof (sig)!="string"){
throw new Error("'sig' must be a string");
}
var obj=null;
var func=null;
if(typeof (_564)!="undefined"){
obj=_563;
func=_564;
if(typeof (_564)=="string"){
if(typeof (_563[_564])!="function"){
throw new Error("'funcOrStr' must be a function on 'objOrFunc'");
}
}else{
if(typeof (_564)!="function"){
throw new Error("'funcOrStr' must be a function or string");
}
}
}else{
if(typeof (_563)!="function"){
throw new Error("'objOrFunc' must be a function if 'funcOrStr' is not given");
}else{
func=_563;
}
}
if(typeof (obj)=="undefined"||obj===null){
obj=src;
}
var _565=!!(src.addEventListener||src.attachEvent);
var _566=self._listener(src,func,obj,_565);
if(src.addEventListener){
src.addEventListener(sig.substr(2),_566,false);
}else{
if(src.attachEvent){
src.attachEvent(sig,_566);
}
}
var _567=[src,sig,_566,_565,_563,_564];
self._observers.push(_567);
return _567;
},_disconnect:function(_568){
if(!_568[3]){
return;
}
var src=_568[0];
var sig=_568[1];
var _569=_568[2];
if(src.removeEventListener){
src.removeEventListener(sig.substr(2),_569,false);
}else{
if(src.detachEvent){
src.detachEvent(sig,_569);
}else{
throw new Error("'src' must be a DOM element");
}
}
},disconnect:function(_570){
var self=MochiKit.Signal;
var _571=self._observers;
var m=MochiKit.Base;
if(arguments.length>1){
var src=MochiKit.DOM.getElement(arguments[0]);
var sig=arguments[1];
var obj=arguments[2];
var func=arguments[3];
for(var i=_571.length-1;i>=0;i--){
var o=_571[i];
if(o[0]===src&&o[1]===sig&&o[4]===obj&&o[5]===func){
self._disconnect(o);
_571.splice(i,1);
return true;
}
}
}else{
var idx=m.findIdentical(_571,_570);
if(idx>=0){
self._disconnect(_570);
_571.splice(idx,1);
return true;
}
}
return false;
},disconnectAll:function(src,sig){
src=MochiKit.DOM.getElement(src);
var m=MochiKit.Base;
var _572=m.flattenArguments(m.extend(null,arguments,1));
var self=MochiKit.Signal;
var _573=self._disconnect;
var _574=self._observers;
if(_572.length===0){
for(var i=_574.length-1;i>=0;i--){
var _575=_574[i];
if(_575[0]===src){
_573(_575);
_574.splice(i,1);
}
}
}else{
var sigs={};
for(var i=0;i<_572.length;i++){
sigs[_572[i]]=true;
}
for(var i=_574.length-1;i>=0;i--){
var _575=_574[i];
if(_575[0]===src&&_575[1] in sigs){
_573(_575);
_574.splice(i,1);
}
}
}
},signal:function(src,sig){
var _577=MochiKit.Signal._observers;
src=MochiKit.DOM.getElement(src);
var args=MochiKit.Base.extend(null,arguments,2);
var _578=[];
for(var i=0;i<_577.length;i++){
var _579=_577[i];
if(_579[0]===src&&_579[1]===sig){
try{
_579[2].apply(src,args);
}
catch(e){
_578.push(e);
}
}
}
if(_578.length==1){
throw _578[0];
}else{
if(_578.length>1){
var e=new Error("Multiple errors thrown in handling 'sig', see errors property");
e.errors=_578;
throw e;
}
}
}});
MochiKit.Signal.EXPORT_OK=[];
MochiKit.Signal.EXPORT=["connect","disconnect","signal","disconnectAll"];
MochiKit.Signal.__new__=function(win){
var m=MochiKit.Base;
this._document=document;
this._window=win;
try{
this.connect(window,"onunload",this._unloadCache);
}
catch(e){
}
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Signal.__new__(this);
if(MochiKit.__export__){
connect=MochiKit.Signal.connect;
disconnect=MochiKit.Signal.disconnect;
disconnectAll=MochiKit.Signal.disconnectAll;
signal=MochiKit.Signal.signal;
}
MochiKit.Base._exportSymbols(this,MochiKit.Signal);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Visual");
dojo.require("MochiKit.Base");
dojo.require("MochiKit.DOM");
dojo.require("MochiKit.Style");
dojo.require("MochiKit.Color");
dojo.require("MochiKit.Iter");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
JSAN.use("MochiKit.DOM",[]);
JSAN.use("MochiKit.Style",[]);
JSAN.use("MochiKit.Color",[]);
JSAN.use("MochiKit.Iter",[]);
}
try{
if(typeof (MochiKit.Base)==="undefined"||typeof (MochiKit.DOM)==="undefined"||typeof (MochiKit.Style)==="undefined"||typeof (MochiKit.Color)==="undefined"||typeof (MochiKit.Iter)==="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Visual depends on MochiKit.Base, MochiKit.DOM, MochiKit.Style, MochiKit.Color and MochiKit.Iter!";
}
if(typeof (MochiKit.Visual)=="undefined"){
MochiKit.Visual={};
}
MochiKit.Visual.NAME="MochiKit.Visual";
MochiKit.Visual.VERSION="1.4";
MochiKit.Visual.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Visual.toString=function(){
return this.__repr__();
};
MochiKit.Visual._RoundCorners=function(e,_580){
e=MochiKit.DOM.getElement(e);
this._setOptions(_580);
if(this.options.__unstable__wrapElement){
e=this._doWrap(e);
}
var _581=this.options.color;
var C=MochiKit.Color.Color;
if(this.options.color==="fromElement"){
_581=C.fromBackground(e);
}else{
if(!(_581 instanceof C)){
_581=C.fromString(_581);
}
}
this.isTransparent=(_581.asRGB().a<=0);
var _583=this.options.bgColor;
if(this.options.bgColor==="fromParent"){
_583=C.fromBackground(e.offsetParent);
}else{
if(!(_583 instanceof C)){
_583=C.fromString(_583);
}
}
this._roundCornersImpl(e,_581,_583);
};
MochiKit.Visual._RoundCorners.prototype={_doWrap:function(e){
var _584=e.parentNode;
var doc=MochiKit.DOM.currentDocument();
if(typeof (doc.defaultView)==="undefined"||doc.defaultView===null){
return e;
}
var _585=doc.defaultView.getComputedStyle(e,null);
if(typeof (_585)==="undefined"||_585===null){
return e;
}
var _586=MochiKit.DOM.DIV({"style":{display:"block",marginTop:_585.getPropertyValue("padding-top"),marginRight:_585.getPropertyValue("padding-right"),marginBottom:_585.getPropertyValue("padding-bottom"),marginLeft:_585.getPropertyValue("padding-left"),padding:"0px"}});
_586.innerHTML=e.innerHTML;
e.innerHTML="";
e.appendChild(_586);
return e;
},_roundCornersImpl:function(e,_587,_588){
if(this.options.border){
this._renderBorder(e,_588);
}
if(this._isTopRounded()){
this._roundTopCorners(e,_587,_588);
}
if(this._isBottomRounded()){
this._roundBottomCorners(e,_587,_588);
}
},_renderBorder:function(el,_590){
var _591="1px solid "+this._borderColor(_590);
var _592="border-left: "+_591;
var _593="border-right: "+_591;
var _594="style='"+_592+";"+_593+"'";
el.innerHTML="<div "+_594+">"+el.innerHTML+"</div>";
},_roundTopCorners:function(el,_595,_596){
var _597=this._createCorner(_596);
for(var i=0;i<this.options.numSlices;i++){
_597.appendChild(this._createCornerSlice(_595,_596,i,"top"));
}
el.style.paddingTop=0;
el.insertBefore(_597,el.firstChild);
},_roundBottomCorners:function(el,_598,_599){
var _600=this._createCorner(_599);
for(var i=(this.options.numSlices-1);i>=0;i--){
_600.appendChild(this._createCornerSlice(_598,_599,i,"bottom"));
}
el.style.paddingBottom=0;
el.appendChild(_600);
},_createCorner:function(_601){
var dom=MochiKit.DOM;
return dom.DIV({style:{backgroundColor:_601.toString()}});
},_createCornerSlice:function(_602,_603,n,_604){
var _605=MochiKit.DOM.SPAN();
var _606=_605.style;
_606.backgroundColor=_602.toString();
_606.display="block";
_606.height="1px";
_606.overflow="hidden";
_606.fontSize="1px";
var _607=this._borderColor(_602,_603);
if(this.options.border&&n===0){
_606.borderTopStyle="solid";
_606.borderTopWidth="1px";
_606.borderLeftWidth="0px";
_606.borderRightWidth="0px";
_606.borderBottomWidth="0px";
_606.height="0px";
_606.borderColor=_607.toString();
}else{
if(_607){
_606.borderColor=_607.toString();
_606.borderStyle="solid";
_606.borderWidth="0px 1px";
}
}
if(!this.options.compact&&(n==(this.options.numSlices-1))){
_606.height="2px";
}
this._setMargin(_605,n,_604);
this._setBorder(_605,n,_604);
return _605;
},_setOptions:function(_608){
this.options={corners:"all",color:"fromElement",bgColor:"fromParent",blend:true,border:false,compact:false,__unstable__wrapElement:false};
MochiKit.Base.update(this.options,_608);
this.options.numSlices=(this.options.compact?2:4);
},_whichSideTop:function(){
var _609=this.options.corners;
if(this._hasString(_609,"all","top")){
return "";
}
var _610=(_609.indexOf("tl")!=-1);
var _611=(_609.indexOf("tr")!=-1);
if(_610&&_611){
return "";
}
if(_610){
return "left";
}
if(_611){
return "right";
}
return "";
},_whichSideBottom:function(){
var _612=this.options.corners;
if(this._hasString(_612,"all","bottom")){
return "";
}
var _613=(_612.indexOf("bl")!=-1);
var _614=(_612.indexOf("br")!=-1);
if(_613&&_614){
return "";
}
if(_613){
return "left";
}
if(_614){
return "right";
}
return "";
},_borderColor:function(_615,_616){
if(_615=="transparent"){
return _616;
}else{
if(this.options.border){
return this.options.border;
}else{
if(this.options.blend){
return _616.blendedColor(_615);
}
}
}
return "";
},_setMargin:function(el,n,_617){
var _618=this._marginSize(n)+"px";
var _619=(_617=="top"?this._whichSideTop():this._whichSideBottom());
var _620=el.style;
if(_619=="left"){
_620.marginLeft=_618;
_620.marginRight="0px";
}else{
if(_619=="right"){
_620.marginRight=_618;
_620.marginLeft="0px";
}else{
_620.marginLeft=_618;
_620.marginRight=_618;
}
}
},_setBorder:function(el,n,_621){
var _622=this._borderSize(n)+"px";
var _623=(_621=="top"?this._whichSideTop():this._whichSideBottom());
var _624=el.style;
if(_623=="left"){
_624.borderLeftWidth=_622;
_624.borderRightWidth="0px";
}else{
if(_623=="right"){
_624.borderRightWidth=_622;
_624.borderLeftWidth="0px";
}else{
_624.borderLeftWidth=_622;
_624.borderRightWidth=_622;
}
}
},_marginSize:function(n){
if(this.isTransparent){
return 0;
}
var o=this.options;
if(o.compact&&o.blend){
var _625=[1,0];
return _625[n];
}else{
if(o.compact){
var _626=[2,1];
return _626[n];
}else{
if(o.blend){
var _627=[3,2,1,0];
return _627[n];
}else{
var _628=[5,3,2,1];
return _628[n];
}
}
}
},_borderSize:function(n){
var o=this.options;
var _629;
if(o.compact&&(o.blend||this.isTransparent)){
return 1;
}else{
if(o.compact){
_629=[1,0];
}else{
if(o.blend){
_629=[2,1,1,1];
}else{
if(o.border){
_629=[0,2,0,0];
}else{
if(this.isTransparent){
_629=[5,3,2,1];
}else{
return 0;
}
}
}
}
}
return _629[n];
},_hasString:function(str){
for(var i=1;i<arguments.length;i++){
if(str.indexOf(arguments[i])!=-1){
return true;
}
}
return false;
},_isTopRounded:function(){
return this._hasString(this.options.corners,"all","top","tl","tr");
},_isBottomRounded:function(){
return this._hasString(this.options.corners,"all","bottom","bl","br");
},_hasSingleTextChild:function(el){
return (el.childNodes.length==1&&el.childNodes[0].nodeType==3);
}};
MochiKit.Visual.roundElement=function(e,_630){
new MochiKit.Visual._RoundCorners(e,_630);
};
MochiKit.Visual.roundClass=function(_631,_632,_633){
var _634=MochiKit.DOM.getElementsByTagAndClassName(_631,_632);
for(var i=0;i<_634.length;i++){
MochiKit.Visual.roundElement(_634[i],_633);
}
};
MochiKit.Visual.tagifyText=function(_635,_636){
var _636=_636||"position:relative";
if(MochiKit.Base.isIE()){
_636+=";zoom:1";
}
_635=MochiKit.DOM.getElement(_635);
var fe=MochiKit.Iter.forEach;
fe(_635.childNodes,function(_638){
if(_638.nodeType==3){
fe(_638.nodeValue.split(""),function(_639){
_635.insertBefore(MochiKit.DOM.SPAN({style:_636},_639==" "?String.fromCharCode(160):_639),_638);
});
MochiKit.DOM.removeElement(_638);
}
});
};
MochiKit.Visual.forceRerendering=function(_640){
try{
_640=MochiKit.DOM.getElement(_640);
var n=document.createTextNode(" ");
_640.appendChild(n);
_640.removeChild(n);
}
catch(e){
}
};
MochiKit.Visual.multiple=function(_641,_642,_643){
_643=MochiKit.Base.update({speed:0.1,delay:0},_643||{});
var _644=_643.delay;
var _645=0;
MochiKit.Iter.forEach(_641,function(_646){
_643.delay=_645*_643.speed+_644;
new _642(_646,_643);
_645+=1;
});
};
MochiKit.Visual.PAIRS={"slide":["slideDown","slideUp"],"blind":["blindDown","blindUp"],"appear":["appear","fade"],"size":["grow","shrink"]};
MochiKit.Visual.toggle=function(_647,_648,_649){
_647=MochiKit.DOM.getElement(_647);
_648=(_648||"appear").toLowerCase();
_649=MochiKit.Base.update({queue:{position:"end",scope:(_647.id||"global"),limit:1}},_649||{});
var v=MochiKit.Visual;
v[MochiKit.DOM.isVisible(_647)?v.PAIRS[_648][1]:v.PAIRS[_648][0]](_647,_649);
};
MochiKit.Visual.Transitions={};
MochiKit.Visual.Transitions.linear=function(pos){
return pos;
};
MochiKit.Visual.Transitions.sinoidal=function(pos){
return (-Math.cos(pos*Math.PI)/2)+0.5;
};
MochiKit.Visual.Transitions.reverse=function(pos){
return 1-pos;
};
MochiKit.Visual.Transitions.flicker=function(pos){
return ((-Math.cos(pos*Math.PI)/4)+0.75)+Math.random()/4;
};
MochiKit.Visual.Transitions.wobble=function(pos){
return (-Math.cos(pos*Math.PI*(9*pos))/2)+0.5;
};
MochiKit.Visual.Transitions.pulse=function(pos){
return (Math.floor(pos*10)%2==0?(pos*10-Math.floor(pos*10)):1-(pos*10-Math.floor(pos*10)));
};
MochiKit.Visual.Transitions.none=function(pos){
return 0;
};
MochiKit.Visual.Transitions.full=function(pos){
return 1;
};
MochiKit.Visual.ScopedQueue=function(){
this.__init__();
};
MochiKit.Base.update(MochiKit.Visual.ScopedQueue.prototype,{__init__:function(){
this.effects=[];
this.interval=null;
},add:function(_651){
var _652=new Date().getTime();
var _653=(typeof (_651.options.queue)=="string")?_651.options.queue:_651.options.queue.position;
var fe=MochiKit.Iter.forEach;
switch(_653){
case "front":
fe(this.effects,function(e){
if(e.state=="idle"){
e.startOn+=_651.finishOn;
e.finishOn+=_651.finishOn;
}
});
break;
case "end":
var _654;
fe(this.effects,function(e){
var i=e.finishOn;
if(i>=(_654||i)){
_654=i;
}
});
_652=_654||_652;
break;
}
_651.startOn+=_652;
_651.finishOn+=_652;
if(!_651.options.queue.limit||this.effects.length<_651.options.queue.limit){
this.effects.push(_651);
}
if(!this.interval){
this.interval=setInterval(MochiKit.Base.bind(this.loop,this),40);
}
},remove:function(_655){
this.effects=MochiKit.Base.filter(function(e){
return e!=_655;
},this.effects);
if(this.effects.length==0){
clearInterval(this.interval);
this.interval=null;
}
},loop:function(){
var _656=new Date().getTime();
MochiKit.Iter.forEach(this.effects,function(_657){
_657.loop(_656);
});
}});
MochiKit.Visual.Queues={instances:{},get:function(_658){
if(typeof (_658)!="string"){
return _658;
}
if(!this.instances[_658]){
this.instances[_658]=new MochiKit.Visual.ScopedQueue();
}
return this.instances[_658];
}};
MochiKit.Visual.Queue=MochiKit.Visual.Queues.get("global");
MochiKit.Visual.DefaultOptions={transition:MochiKit.Visual.Transitions.sinoidal,duration:1,fps:25,sync:false,from:0,to:1,delay:0,queue:"parallel"};
MochiKit.Visual.Base=function(){
};
MochiKit.Visual.Base.prototype={__class__:MochiKit.Visual.Base,start:function(_659){
var v=MochiKit.Visual;
this.options=MochiKit.Base.setdefault(_659||{},v.DefaultOptions);
this.currentFrame=0;
this.state="idle";
this.startOn=this.options.delay*1000;
this.finishOn=this.startOn+(this.options.duration*1000);
this.event("beforeStart");
if(!this.options.sync){
v.Queues.get(typeof (this.options.queue)=="string"?"global":this.options.queue.scope).add(this);
}
},loop:function(_660){
if(_660>=this.startOn){
if(_660>=this.finishOn){
this.render(1);
this.cancel();
this.event("beforeFinish");
this.finish();
this.event("afterFinish");
return;
}
var pos=(_660-this.startOn)/(this.finishOn-this.startOn);
var _661=Math.round(pos*this.options.fps*this.options.duration);
if(_661>this.currentFrame){
this.render(pos);
this.currentFrame=_661;
}
}
},render:function(pos){
if(this.state=="idle"){
this.state="running";
this.event("beforeSetup");
this.setup();
this.event("afterSetup");
}
if(this.state=="running"){
if(this.options.transition){
pos=this.options.transition(pos);
}
pos*=(this.options.to-this.options.from);
pos+=this.options.from;
this.event("beforeUpdate");
this.update(pos);
this.event("afterUpdate");
}
},cancel:function(){
if(!this.options.sync){
MochiKit.Visual.Queues.get(typeof (this.options.queue)=="string"?"global":this.options.queue.scope).remove(this);
}
this.state="finished";
},setup:function(){
},finish:function(){
},update:function(_662){
},event:function(_663){
if(this.options[_663+"Internal"]){
this.options[_663+"Internal"](this);
}
if(this.options[_663]){
this.options[_663](this);
}
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.Visual.Parallel=function(_664,_665){
this.__init__(_664,_665);
};
MochiKit.Visual.Parallel.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Parallel.prototype,{__init__:function(_666,_667){
this.effects=_666||[];
this.start(_667);
},update:function(_668){
MochiKit.Iter.forEach(this.effects,function(_669){
_669.render(_668);
});
},finish:function(){
MochiKit.Iter.forEach(this.effects,function(_670){
_670.render(1);
_670.cancel();
_670.event("beforeFinish");
_670.finish();
_670.event("afterFinish");
});
}});
MochiKit.Visual.Opacity=function(_671,_672){
this.__init__(_671,_672);
};
MochiKit.Visual.Opacity.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Opacity.prototype,{__init__:function(_673,_674){
var b=MochiKit.Base;
var d=MochiKit.DOM;
this.element=d.getElement(_673);
if(b.isIE()&&(!this.element.currentStyle.hasLayout)){
d.setStyle(this.element,{zoom:1});
}
_674=b.update({from:d.getOpacity(this.element)||0,to:1},_674||{});
this.start(_674);
},update:function(_675){
MochiKit.DOM.setOpacity(this.element,_675);
}});
MochiKit.Visual.Move=function(_676,_677){
this.__init__(_676,_677);
};
MochiKit.Visual.Move.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Move.prototype,{__init__:function(_678,_679){
this.element=MochiKit.DOM.getElement(_678);
_679=MochiKit.Base.update({x:0,y:0,mode:"relative"},_679||{});
this.start(_679);
},setup:function(){
var d=MochiKit.DOM;
d.makePositioned(this.element);
var s=this.element.style;
var _680=s.visibility;
var _681=s.display;
if(_681=="none"){
s.visibility="hidden";
s.display="";
}
this.originalLeft=parseFloat(d.getStyle(this.element,"left")||"0");
this.originalTop=parseFloat(d.getStyle(this.element,"top")||"0");
if(this.options.mode=="absolute"){
this.options.x-=this.originalLeft;
this.options.y-=this.originalTop;
}
if(_681=="none"){
s.visibility=_680;
s.display=_681;
}
},update:function(_682){
MochiKit.DOM.setStyle(this.element,{left:this.options.x*_682+this.originalLeft+"px",top:this.options.y*_682+this.originalTop+"px"});
}});
MochiKit.Visual.Scale=function(_683,_684,_685){
this.__init__(_683,_684,_685);
};
MochiKit.Visual.Scale.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Scale.prototype,{__init__:function(_686,_687,_688){
this.element=MochiKit.DOM.getElement(_686);
_688=MochiKit.Base.update({scaleX:true,scaleY:true,scaleContent:true,scaleFromCenter:false,scaleMode:"box",scaleFrom:100,scaleTo:_687},_688||{});
this.start(_688);
},setup:function(){
this.restoreAfterFinish=this.options.restoreAfterFinish||false;
this.elementPositioning=MochiKit.DOM.getStyle(this.element,"position");
var fe=MochiKit.Iter.forEach;
var b=MochiKit.Base.bind;
this.originalStyle={};
fe(["top","left","width","height","fontSize"],b(function(k){
this.originalStyle[k]=this.element.style[k];
},this));
this.originalTop=this.element.offsetTop;
this.originalLeft=this.element.offsetLeft;
var _689=MochiKit.DOM.getStyle(this.element,"font-size")||"100%";
fe(["em","px","%"],b(function(_690){
if(_689.indexOf(_690)>0){
this.fontSize=parseFloat(_689);
this.fontSizeType=_690;
}
},this));
this.factor=(this.options.scaleTo-this.options.scaleFrom)/100;
if(/^content/.test(this.options.scaleMode)){
this.dims=[this.element.scrollHeight,this.element.scrollWidth];
}else{
if(this.options.scaleMode=="box"){
this.dims=[this.element.offsetHeight,this.element.offsetWidth];
}else{
this.dims=[this.options.scaleMode.originalHeight,this.options.scaleMode.originalWidth];
}
}
},update:function(_691){
var _692=(this.options.scaleFrom/100)+(this.factor*_691);
if(this.options.scaleContent&&this.fontSize){
MochiKit.DOM.setStyle(this.element,{fontSize:this.fontSize*_692+this.fontSizeType});
}
this.setDimensions(this.dims[0]*_692,this.dims[1]*_692);
},finish:function(){
if(this.restoreAfterFinish){
MochiKit.DOM.setStyle(this.element,this.originalStyle);
}
},setDimensions:function(_693,_694){
var d={};
if(this.options.scaleX){
d.width=_694+"px";
}
if(this.options.scaleY){
d.height=_693+"px";
}
if(this.options.scaleFromCenter){
var topd=(_693-this.dims[0])/2;
var _696=(_694-this.dims[1])/2;
if(this.elementPositioning=="absolute"){
if(this.options.scaleY){
d.top=this.originalTop-topd+"px";
}
if(this.options.scaleX){
d.left=this.originalLeft-_696+"px";
}
}else{
if(this.options.scaleY){
d.top=-topd+"px";
}
if(this.options.scaleX){
d.left=-_696+"px";
}
}
}
MochiKit.DOM.setStyle(this.element,d);
}});
MochiKit.Visual.Highlight=function(_697,_698){
this.__init__(_697,_698);
};
MochiKit.Visual.Highlight.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Highlight.prototype,{__init__:function(_699,_700){
this.element=MochiKit.DOM.getElement(_699);
_700=MochiKit.Base.update({startcolor:"#ffff99"},_700||{});
this.start(_700);
},setup:function(){
var d=MochiKit.DOM;
var b=MochiKit.Base;
if(d.getStyle(this.element,"display")=="none"){
this.cancel();
return;
}
this.oldStyle={backgroundImage:d.getStyle(this.element,"background-image")};
d.setStyle(this.element,{backgroundImage:"none"});
if(!this.options.endcolor){
this.options.endcolor=MochiKit.Color.Color.fromBackground(this.element).toHexString();
}
if(!this.options.restorecolor){
this.options.restorecolor=d.getStyle(this.element,"background-color");
}
this._base=b.map(b.bind(function(i){
return parseInt(this.options.startcolor.slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
this._delta=b.map(b.bind(function(i){
return parseInt(this.options.endcolor.slice(i*2+1,i*2+3),16)-this._base[i];
},this),[0,1,2]);
},update:function(_701){
var m="#";
MochiKit.Iter.forEach([0,1,2],MochiKit.Base.bind(function(i){
m+=MochiKit.Color.toColorPart(Math.round(this._base[i]+this._delta[i]*_701));
},this));
MochiKit.DOM.setStyle(this.element,{backgroundColor:m});
},finish:function(){
MochiKit.DOM.setStyle(this.element,MochiKit.Base.update(this.oldStyle,{backgroundColor:this.options.endcolor}));
}});
MochiKit.Visual.ScrollTo=function(_702,_703){
this.__init__(_702,_703);
};
MochiKit.Visual.ScrollTo.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.ScrollTo.prototype,{__init__:function(_704,_705){
this.element=MochiKit.DOM.getElement(_704);
this.start(_705||{});
},setup:function(){
var p=MochiKit.Position;
p.prepare();
var _706=p.cumulativeOffset(this.element);
if(this.options.offset){
_706.y+=this.options.offset;
}
var max;
if(window.innerHeight){
max=window.innerHeight-window.height;
}else{
if(document.documentElement&&document.documentElement.clientHeight){
max=document.documentElement.clientHeight-document.body.scrollHeight;
}else{
if(document.body){
max=document.body.clientHeight-document.body.scrollHeight;
}
}
}
this.scrollStart=p.windowOffset.y;
this.delta=(_706.y>max?max:_706.y)-this.scrollStart;
},update:function(_707){
var p=MochiKit.Position;
p.prepare();
window.scrollTo(p.windowOffset.x,this.scrollStart+(_707*this.delta));
}});
MochiKit.Visual.fade=function(_708,_709){
var d=MochiKit.DOM;
var _710=d.getInlineOpacity(_708);
_709=MochiKit.Base.update({from:d.getOpacity(_708)||1,to:0,afterFinishInternal:function(_711){
if(_711.options.to!==0){
return;
}
MochiKit.Style.hideElement(_711.element);
d.setStyle(_711.element,{opacity:_710});
}},_709||{});
return new MochiKit.Visual.Opacity(_708,_709);
};
MochiKit.Visual.appear=function(_712,_713){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
_713=MochiKit.Base.update({from:(d.getStyle(_712,"display")=="none"?0:d.getOpacity(_712)||0),to:1,afterFinishInternal:function(_714){
v.forceRerendering(_714.element);
},beforeSetupInternal:function(_715){
d.setOpacity(_715.element,_715.options.from);
MochiKit.Style.showElement(_715.element);
}},_713||{});
return new v.Opacity(_712,_713);
};
MochiKit.Visual.puff=function(_716,_717){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
_716=d.getElement(_716);
var _718={opacity:d.getInlineOpacity(_716),position:d.getStyle(_716,"position")};
_717=MochiKit.Base.update({beforeSetupInternal:function(_719){
d.setStyle(_719.effects[0].element,{position:"absolute"});
},afterFinishInternal:function(_720){
MochiKit.Style.hideElement(_720.effects[0].element);
d.setStyle(_720.effects[0].element,_718);
}},_717||{});
return new v.Parallel([new v.Scale(_716,200,{sync:true,scaleFromCenter:true,scaleContent:true,restoreAfterFinish:true}),new v.Opacity(_716,{sync:true,to:0})],_717);
};
MochiKit.Visual.blindUp=function(_721,_722){
var d=MochiKit.DOM;
_721=d.getElement(_721);
d.makeClipping(_721);
_722=MochiKit.Base.update({scaleContent:false,scaleX:false,restoreAfterFinish:true,afterFinishInternal:function(_723){
MochiKit.Style.hideElement(_723.element);
d.undoClipping(_723.element);
}},_722||{});
return new MochiKit.Visual.Scale(_721,0,_722);
};
MochiKit.Visual.blindDown=function(_724,_725){
var d=MochiKit.DOM;
_724=d.getElement(_724);
var _726=MochiKit.Style.getElementDimensions(_724);
_725=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleFrom:0,scaleMode:{originalHeight:_726.h,originalWidth:_726.w},restoreAfterFinish:true,afterSetupInternal:function(_727){
d.makeClipping(_727.element);
d.setStyle(_727.element,{height:"0px"});
MochiKit.Style.showElement(_727.element);
},afterFinishInternal:function(_728){
d.undoClipping(_728.element);
}},_725||{});
return new MochiKit.Visual.Scale(_724,100,_725);
};
MochiKit.Visual.switchOff=function(_729,_730){
var d=MochiKit.DOM;
_729=d.getElement(_729);
var _731=d.getInlineOpacity(_729);
var _730=MochiKit.Base.update({duration:0.3,scaleFromCenter:true,scaleX:false,scaleContent:false,restoreAfterFinish:true,beforeSetupInternal:function(_732){
d.makePositioned(_732.element);
d.makeClipping(_732.element);
},afterFinishInternal:function(_733){
MochiKit.Style.hideElement(_733.element);
d.undoClipping(_733.element);
d.undoPositioned(_733.element);
d.setStyle(_733.element,{opacity:_731});
}},_730||{});
var v=MochiKit.Visual;
return new v.appear(_729,{duration:0.4,from:0,transition:v.Transitions.flicker,afterFinishInternal:function(_734){
new v.Scale(_734.element,1,_730);
}});
};
MochiKit.Visual.dropOut=function(_735,_736){
var d=MochiKit.DOM;
_735=d.getElement(_735);
var _737={top:d.getStyle(_735,"top"),left:d.getStyle(_735,"left"),opacity:d.getInlineOpacity(_735)};
_736=MochiKit.Base.update({duration:0.5,beforeSetupInternal:function(_738){
d.makePositioned(_738.effects[0].element);
},afterFinishInternal:function(_739){
MochiKit.Style.hideElement(_739.effects[0].element);
d.undoPositioned(_739.effects[0].element);
d.setStyle(_739.effects[0].element,_737);
}},_736||{});
var v=MochiKit.Visual;
return new v.Parallel([new v.Move(_735,{x:0,y:100,sync:true}),new v.Opacity(_735,{sync:true,to:0})],_736);
};
MochiKit.Visual.shake=function(_740,_741){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
_740=d.getElement(_740);
_741=MochiKit.Base.update({x:-20,y:0,duration:0.05,afterFinishInternal:function(_742){
d.undoPositioned(_742.element);
d.setStyle(_742.element,oldStyle);
}},_741||{});
var _743={top:d.getStyle(_740,"top"),left:d.getStyle(_740,"left")};
return new v.Move(_740,{x:20,y:0,duration:0.05,afterFinishInternal:function(_744){
new v.Move(_744.element,{x:-40,y:0,duration:0.1,afterFinishInternal:function(_744){
new v.Move(_744.element,{x:40,y:0,duration:0.1,afterFinishInternal:function(_744){
new v.Move(_744.element,{x:-40,y:0,duration:0.1,afterFinishInternal:function(_744){
new v.Move(_744.element,{x:40,y:0,duration:0.1,afterFinishInternal:function(_744){
new v.Move(_744.element,_741);
}});
}});
}});
}});
}});
};
MochiKit.Visual.slideDown=function(_745,_746){
var d=MochiKit.DOM;
var b=MochiKit.Base;
_745=d.getElement(_745);
if(!_745.firstChild){
throw "MochiKit.Visual.slideDown must be used on a element with a child";
}
d.removeEmptyTextNodes(_745);
var _747=d.getStyle(_745.firstChild,"bottom")||0;
var _748=MochiKit.Style.getElementDimensions(_745);
_746=b.update({scaleContent:false,scaleX:false,scaleFrom:0,scaleMode:{originalHeight:_748.h,originalWidth:_748.w},restoreAfterFinish:true,afterSetupInternal:function(_749){
d.makePositioned(_749.element);
d.makePositioned(_749.element.firstChild);
if(b.isOpera()){
d.setStyle(_749.element,{top:""});
}
d.makeClipping(_749.element);
d.setStyle(_749.element,{height:"0px"});
MochiKit.Style.showElement(_745);
},afterUpdateInternal:function(_750){
d.setStyle(_750.element.firstChild,{bottom:(_750.dims[0]-_750.element.clientHeight)+"px"});
},afterFinishInternal:function(_751){
d.undoClipping(_751.element);
if(b.isIE()){
d.undoPositioned(_751.element);
d.undoPositioned(_751.element.firstChild);
}else{
d.undoPositioned(_751.element.firstChild);
d.undoPositioned(_751.element);
}
d.setStyle(_751.element.firstChild,{bottom:_747});
}},_746||{});
return new MochiKit.Visual.Scale(_745,100,_746);
};
MochiKit.Visual.slideUp=function(_752,_753){
var d=MochiKit.DOM;
var b=MochiKit.Base;
_752=d.getElement(_752);
if(!_752.firstChild){
throw "MochiKit.Visual.slideUp must be used on a element with a child";
}
d.removeEmptyTextNodes(_752);
var _754=d.getStyle(_752.firstChild,"bottom");
_753=b.update({scaleContent:false,scaleX:false,scaleMode:"box",scaleFrom:100,restoreAfterFinish:true,beforeStartInternal:function(_755){
d.makePositioned(_755.element);
d.makePositioned(_755.element.firstChild);
if(b.isOpera()){
d.setStyle(_755.element,{top:""});
}
d.makeClipping(_755.element);
MochiKit.Style.showElement(_752);
},afterUpdateInternal:function(_756){
d.setStyle(_756.element.firstChild,{bottom:(_756.dims[0]-_756.element.clientHeight)+"px"});
},afterFinishInternal:function(_757){
MochiKit.Style.hideElement(_757.element);
d.undoClipping(_757.element);
d.undoPositioned(_757.element.firstChild);
d.undoPositioned(_757.element);
d.setStyle(_757.element.firstChild,{bottom:_754});
}},_753||{});
return new MochiKit.Visual.Scale(_752,0,_753);
};
MochiKit.Visual.squish=function(_758,_759){
var d=MochiKit.DOM;
var b=MochiKit.Base;
_759=b.update({restoreAfterFinish:true,beforeSetupInternal:function(_760){
d.makeClipping(_760.element);
},afterFinishInternal:function(_761){
MochiKit.Style.hideElement(_761.element);
d.undoClipping(_761.element);
}},_759||{});
return new MochiKit.Visual.Scale(_758,b.isOpera()?1:0,_759);
};
MochiKit.Visual.grow=function(_762,_763){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
_762=d.getElement(_762);
_763=MochiKit.Base.update({direction:"center",moveTransition:v.Transitions.sinoidal,scaleTransition:v.Transitions.sinoidal,opacityTransition:v.Transitions.full},_763||{});
var _764={top:_762.style.top,left:_762.style.left,height:_762.style.height,width:_762.style.width,opacity:d.getInlineOpacity(_762)};
var dims=MochiKit.Style.getElementDimensions(_762);
var _766,initialMoveY;
var _767,moveY;
switch(_763.direction){
case "top-left":
_766=initialMoveY=_767=moveY=0;
break;
case "top-right":
_766=dims.w;
initialMoveY=moveY=0;
_767=-dims.w;
break;
case "bottom-left":
_766=_767=0;
initialMoveY=dims.h;
moveY=-dims.h;
break;
case "bottom-right":
_766=dims.w;
initialMoveY=dims.h;
_767=-dims.w;
moveY=-dims.h;
break;
case "center":
_766=dims.w/2;
initialMoveY=dims.h/2;
_767=-dims.w/2;
moveY=-dims.h/2;
break;
}
var _768=MochiKit.Base.update({beforeSetupInternal:function(_769){
d.setStyle(_769.effects[0].element,{height:"0px"});
MochiKit.Style.showElement(_769.effects[0].element);
},afterFinishInternal:function(_770){
d.undoClipping(_770.effects[0].element);
d.undoPositioned(_770.effects[0].element);
d.setStyle(_770.effects[0].element,_764);
}},_763||{});
return new v.Move(_762,{x:_766,y:initialMoveY,duration:0.01,beforeSetupInternal:function(_771){
MochiKit.Style.hideElement(_771.element);
d.makeClipping(_771.element);
d.makePositioned(_771.element);
},afterFinishInternal:function(_772){
new v.Parallel([new v.Opacity(_772.element,{sync:true,to:1,from:0,transition:_763.opacityTransition}),new v.Move(_772.element,{x:_767,y:moveY,sync:true,transition:_763.moveTransition}),new v.Scale(_772.element,100,{scaleMode:{originalHeight:dims.h,originalWidth:dims.w},sync:true,scaleFrom:MochiKit.Base.isOpera()?1:0,transition:_763.scaleTransition,restoreAfterFinish:true})],_768);
}});
};
MochiKit.Visual.shrink=function(_773,_774){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
_773=d.getElement(_773);
_774=MochiKit.Base.update({direction:"center",moveTransition:v.Transitions.sinoidal,scaleTransition:v.Transitions.sinoidal,opacityTransition:v.Transitions.none},_774||{});
var _775={top:_773.style.top,left:_773.style.left,height:_773.style.height,width:_773.style.width,opacity:d.getInlineOpacity(_773)};
var dims=MochiKit.Style.getElementDimensions(_773);
var _776,moveY;
switch(_774.direction){
case "top-left":
_776=moveY=0;
break;
case "top-right":
_776=dims.w;
moveY=0;
break;
case "bottom-left":
_776=0;
moveY=dims.h;
break;
case "bottom-right":
_776=dims.w;
moveY=dims.h;
break;
case "center":
_776=dims.w/2;
moveY=dims.h/2;
break;
}
var _777=MochiKit.Base.update({beforeStartInternal:function(_778){
d.makePositioned(_778.effects[0].element);
d.makeClipping(_778.effects[0].element);
},afterFinishInternal:function(_779){
MochiKit.Style.hideElement(_779.effects[0].element);
d.undoClipping(_779.effects[0].element);
d.undoPositioned(_779.effects[0].element);
d.setStyle(_779.effects[0].element,_775);
}},_774||{});
return new v.Parallel([new v.Opacity(_773,{sync:true,to:0,from:1,transition:_774.opacityTransition}),new v.Scale(_773,MochiKit.Base.isOpera()?1:0,{sync:true,transition:_774.scaleTransition,restoreAfterFinish:true}),new v.Move(_773,{x:_776,y:moveY,sync:true,transition:_774.moveTransition})],_777);
};
MochiKit.Visual.pulsate=function(_780,_781){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var b=MochiKit.Base;
_780=d.getElement(_780);
var _782=d.getInlineOpacity(_780);
_781=b.update({duration:3,from:0,afterFinishInternal:function(_783){
d.setStyle(_783.element,{opacity:_782});
}},_781||{});
var _784=_781.transition||v.Transitions.sinoidal;
var _785=b.bind(function(pos){
return _784(1-v.Transitions.pulse(pos));
},_784);
b.bind(_785,_784);
return new v.Opacity(_780,b.update({transition:_785},_781));
};
MochiKit.Visual.fold=function(_786,_787){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
_786=d.getElement(_786);
var _788={top:_786.style.top,left:_786.style.left,width:_786.style.width,height:_786.style.height};
d.makeClipping(_786);
_787=MochiKit.Base.update({scaleContent:false,scaleX:false,afterFinishInternal:function(_789){
new v.Scale(_786,1,{scaleContent:false,scaleY:false,afterFinishInternal:function(_789){
MochiKit.Style.hideElement(_789.element);
d.undoClipping(_789.element);
d.setStyle(_789.element,_788);
}});
}},_787||{});
return new v.Scale(_786,5,_787);
};
MochiKit.Visual.Color=MochiKit.Color.Color;
MochiKit.Visual.getElementsComputedStyle=MochiKit.DOM.computedStyle;
MochiKit.Visual.__new__=function(){
var m=MochiKit.Base;
m.nameFunctions(this);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
};
MochiKit.Visual.EXPORT=["roundElement","roundClass","tagifyText","multiple","toggle","Base","Parallel","Opacity","Move","Scale","Highlight","ScrollTo","fade","appear","puff","blindUp","blindDown","switchOff","dropOut","shake","slideDown","slideUp","squish","grow","shrink","pulsate","fold"];
MochiKit.Visual.EXPORT_OK=["PAIRS"];
MochiKit.Visual.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Visual);
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.MochiKit)=="undefined"){
MochiKit.MochiKit={};
}
MochiKit.MochiKit.NAME="MochiKit.MochiKit";
MochiKit.MochiKit.VERSION="1.4";
MochiKit.MochiKit.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.MochiKit.toString=function(){
return this.__repr__();
};
MochiKit.MochiKit.SUBMODULES=["Base","Iter","Logging","DateTime","Format","Async","DOM","Style","LoggingPane","Color","Signal","Visual"];
if(typeof (JSAN)!="undefined"||typeof (dojo)!="undefined"){
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.MochiKit");
dojo.require("MochiKit.*");
}
if(typeof (JSAN)!="undefined"){
(function(lst){
for(var i=0;i<lst.length;i++){
JSAN.use("MochiKit."+lst[i],[]);
}
})(MochiKit.MochiKit.SUBMODULES);
}
(function(){
var _790=MochiKit.Base.extend;
var self=MochiKit.MochiKit;
var _791=self.SUBMODULES;
var _792=[];
var _793=[];
var _794={};
var i,k,m,all;
for(i=0;i<_791.length;i++){
m=MochiKit[_791[i]];
_790(_792,m.EXPORT);
_790(_793,m.EXPORT_OK);
for(k in m.EXPORT_TAGS){
_794[k]=_790(_794[k],m.EXPORT_TAGS[k]);
}
all=m.EXPORT_TAGS[":all"];
if(!all){
all=_790(null,m.EXPORT,m.EXPORT_OK);
}
var j;
for(j=0;j<all.length;j++){
k=all[j];
self[k]=m[k];
}
}
self.EXPORT=_792;
self.EXPORT_OK=_793;
self.EXPORT_TAGS=_794;
}());
}else{
if(typeof (MochiKit.__compat__)=="undefined"){
MochiKit.__compat__=true;
}
(function(){
if(typeof (document)=="undefined"){
return;
}
var _795=document.getElementsByTagName("script");
var _796="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
var base=null;
var _797=null;
var _798={};
var i;
for(i=0;i<_795.length;i++){
var src=_795[i].getAttribute("src");
if(!src){
continue;
}
_798[src]=true;
if(src.match(/MochiKit.js$/)){
base=src.substring(0,src.lastIndexOf("MochiKit.js"));
_797=_795[i];
}
}
if(base===null){
return;
}
var _799=MochiKit.MochiKit.SUBMODULES;
for(var i=0;i<_799.length;i++){
if(MochiKit[_799[i]]){
continue;
}
var uri=base+_799[i]+".js";
if(uri in _798){
continue;
}
if(document.documentElement&&document.documentElement.namespaceURI==_796){
var s=document.createElementNS(_796,"script");
s.setAttribute("id","MochiKit_"+base+_799[i]);
s.setAttribute("src",uri);
s.setAttribute("type","application/x-javascript");
_797.parentNode.appendChild(s);
}else{
document.write("<script src=\""+uri+"\" type=\"text/javascript\"></script>");
}
}
})();
}


