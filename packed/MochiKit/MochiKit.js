/***

    MochiKit.MochiKit 1.5 : PACKED VERSION

    THIS FILE IS AUTOMATICALLY GENERATED.  If creating patches, please
    diff against the source tree, not this file.

    See <http://mochikit.com/> for documentation, downloads, license, etc.

    (c) 2005 Bob Ippolito.  All rights Reserved.

***/

if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.__export__)=="undefined"){
MochiKit.__export__=true;
}
if(typeof (MochiKit.Base)=="undefined"){
MochiKit.Base={};
}
MochiKit.Base._module=function(_1,_2,_3){
if(!(_1 in MochiKit)){
MochiKit[_1]={};
}
var _4=MochiKit[_1];
_4.NAME="MochiKit."+_1;
_4.VERSION=_2;
_4.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
_4.toString=function(){
return this.__repr__();
};
for(var i=0;i<_3.length;i++){
if(!(_3[i] in MochiKit)){
throw "MochiKit."+_1+" depends on MochiKit."+_3[i]+"!";
}
}
};
MochiKit.Base._module("Base","1.5",[]);
MochiKit.Base.update=function(_6,_7){
if(_6===null||_6===undefined){
_6={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
_6[k]=o[k];
}
}
}
return _6;
};
MochiKit.Base.update(MochiKit.Base,{camelize:function(_b){
var _c=_b.split("-");
var cc=_c[0];
for(var i=1;i<_c.length;i++){
cc+=_c[i].charAt(0).toUpperCase()+_c[i].substring(1);
}
return cc;
},counter:function(n){
if(arguments.length===0){
n=1;
}
return function(){
return n++;
};
},clone:function(obj){
var me=arguments.callee;
if(arguments.length==1){
me.prototype=obj;
return new me();
}
},_flattenArray:function(res,lst){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(o instanceof Array){
arguments.callee(res,o);
}else{
res.push(o);
}
}
return res;
},flattenArray:function(lst){
return MochiKit.Base._flattenArray([],lst);
},flattenArguments:function(lst){
var res=[];
var m=MochiKit.Base;
var _1a=m.extend(null,arguments);
while(_1a.length){
var o=_1a.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
for(var i=o.length-1;i>=0;i--){
_1a.unshift(o[i]);
}
}else{
res.push(o);
}
}
return res;
},extend:function(_1d,obj,_1f){
if(!_1f){
_1f=0;
}
if(obj){
var l=obj.length;
if(typeof (l)!="number"){
if(typeof (MochiKit.Iter)!="undefined"){
obj=MochiKit.Iter.list(obj);
l=obj.length;
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(!_1d){
_1d=[];
}
for(var i=_1f;i<l;i++){
_1d.push(obj[i]);
}
}
return _1d;
},updatetree:function(_22,obj){
if(_22===null||_22===undefined){
_22={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
var v=o[k];
if(typeof (_22[k])=="object"&&typeof (v)=="object"){
arguments.callee(_22[k],v);
}else{
_22[k]=v;
}
}
}
}
return _22;
},setdefault:function(_28,obj){
if(_28===null||_28===undefined){
_28={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
for(var k in o){
if(!(k in _28)){
_28[k]=o[k];
}
}
}
return _28;
},keys:function(obj){
var _2e=[];
for(var _2f in obj){
_2e.push(_2f);
}
return _2e;
},values:function(obj){
var _31=[];
for(var _32 in obj){
_31.push(obj[_32]);
}
return _31;
},items:function(obj){
var _34=[];
var e;
for(var _36 in obj){
var v;
try{
v=obj[_36];
}
catch(e){
continue;
}
_34.push([_36,v]);
}
return _34;
},_newNamedError:function(_38,_39,_3a){
_3a.prototype=new MochiKit.Base.NamedError(_38.NAME+"."+_39);
_38[_39]=_3a;
},operator:{truth:function(a){
return !!a;
},lognot:function(a){
return !a;
},identity:function(a){
return a;
},not:function(a){
return ~a;
},neg:function(a){
return -a;
},add:function(a,b){
return a+b;
},sub:function(a,b){
return a-b;
},div:function(a,b){
return a/b;
},mod:function(a,b){
return a%b;
},mul:function(a,b){
return a*b;
},and:function(a,b){
return a&b;
},or:function(a,b){
return a|b;
},xor:function(a,b){
return a^b;
},lshift:function(a,b){
return a<<b;
},rshift:function(a,b){
return a>>b;
},zrshift:function(a,b){
return a>>>b;
},eq:function(a,b){
return a==b;
},ne:function(a,b){
return a!=b;
},gt:function(a,b){
return a>b;
},ge:function(a,b){
return a>=b;
},lt:function(a,b){
return a<b;
},le:function(a,b){
return a<=b;
},seq:function(a,b){
return a===b;
},sne:function(a,b){
return a!==b;
},ceq:function(a,b){
return MochiKit.Base.compare(a,b)===0;
},cne:function(a,b){
return MochiKit.Base.compare(a,b)!==0;
},cgt:function(a,b){
return MochiKit.Base.compare(a,b)==1;
},cge:function(a,b){
return MochiKit.Base.compare(a,b)!=-1;
},clt:function(a,b){
return MochiKit.Base.compare(a,b)==-1;
},cle:function(a,b){
return MochiKit.Base.compare(a,b)!=1;
},logand:function(a,b){
return a&&b;
},logor:function(a,b){
return a||b;
},contains:function(a,b){
return b in a;
}},forwardCall:function(_78){
return function(){
return this[_78].apply(this,arguments);
};
},itemgetter:function(_79){
return function(arg){
return arg[_79];
};
},typeMatcher:function(){
var _7b={};
for(var i=0;i<arguments.length;i++){
var typ=arguments[i];
_7b[typ]=typ;
}
return function(){
for(var i=0;i<arguments.length;i++){
if(!(typeof (arguments[i]) in _7b)){
return false;
}
}
return true;
};
},isNull:function(){
for(var i=0;i<arguments.length;i++){
if(arguments[i]!==null){
return false;
}
}
return true;
},isUndefinedOrNull:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(typeof (o)=="undefined"||o===null)){
return false;
}
}
return true;
},isEmpty:function(obj){
return !MochiKit.Base.isNotEmpty.apply(this,arguments);
},isNotEmpty:function(obj){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(o&&o.length)){
return false;
}
}
return true;
},isArrayLike:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
var typ=typeof (o);
if((typ!="object"&&!(typ=="function"&&typeof (o.item)=="function"))||o===null||typeof (o.length)!="number"||o.nodeType===3||o.nodeType===4){
return false;
}
}
return true;
},isDateLike:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="object"||o===null||typeof (o.getTime)!="function"){
return false;
}
}
return true;
},xmap:function(fn){
if(fn===null){
return MochiKit.Base.extend(null,arguments,1);
}
var _8c=[];
for(var i=1;i<arguments.length;i++){
_8c.push(fn(arguments[i]));
}
return _8c;
},map:function(fn,lst){
var m=MochiKit.Base;
var itr=MochiKit.Iter;
var _92=m.isArrayLike;
if(arguments.length<=2){
if(!_92(lst)){
if(itr){
lst=itr.list(lst);
if(fn===null){
return lst;
}
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
return m.extend(null,lst);
}
var _93=[];
for(var i=0;i<lst.length;i++){
_93.push(fn(lst[i]));
}
return _93;
}else{
if(fn===null){
fn=Array;
}
var _95=null;
for(i=1;i<arguments.length;i++){
if(!_92(arguments[i])){
if(itr){
return itr.list(itr.imap.apply(null,arguments));
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
var l=arguments[i].length;
if(_95===null||_95>l){
_95=l;
}
}
_93=[];
for(i=0;i<_95;i++){
var _97=[];
for(var j=1;j<arguments.length;j++){
_97.push(arguments[j][i]);
}
_93.push(fn.apply(this,_97));
}
return _93;
}
},xfilter:function(fn){
var _9a=[];
if(fn===null){
fn=MochiKit.Base.operator.truth;
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(fn(o)){
_9a.push(o);
}
}
return _9a;
},filter:function(fn,lst,_9f){
var _a0=[];
var m=MochiKit.Base;
if(!m.isArrayLike(lst)){
if(MochiKit.Iter){
lst=MochiKit.Iter.list(lst);
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
fn=m.operator.truth;
}
if(typeof (Array.prototype.filter)=="function"){
return Array.prototype.filter.call(lst,fn,_9f);
}else{
if(typeof (_9f)=="undefined"||_9f===null){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(fn(o)){
_a0.push(o);
}
}
}else{
for(i=0;i<lst.length;i++){
o=lst[i];
if(fn.call(_9f,o)){
_a0.push(o);
}
}
}
}
return _a0;
},_wrapDumbFunction:function(_a4){
return function(){
switch(arguments.length){
case 0:
return _a4();
case 1:
return _a4(arguments[0]);
case 2:
return _a4(arguments[0],arguments[1]);
case 3:
return _a4(arguments[0],arguments[1],arguments[2]);
}
var _a5=[];
for(var i=0;i<arguments.length;i++){
_a5.push("arguments["+i+"]");
}
return eval("(func("+_a5.join(",")+"))");
};
},methodcaller:function(_a7){
var _a8=MochiKit.Base.extend(null,arguments,1);
if(typeof (_a7)=="function"){
return function(obj){
return _a7.apply(obj,_a8);
};
}else{
return function(obj){
return obj[_a7].apply(obj,_a8);
};
}
},method:function(_ab,_ac){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([_ac,_ab],arguments,2));
},compose:function(f1,f2){
var _b0=[];
var m=MochiKit.Base;
if(arguments.length===0){
throw new TypeError("compose() requires at least one argument");
}
for(var i=0;i<arguments.length;i++){
var fn=arguments[i];
if(typeof (fn)!="function"){
throw new TypeError(m.repr(fn)+" is not a function");
}
_b0.push(fn);
}
return function(){
var _b4=arguments;
for(var i=_b0.length-1;i>=0;i--){
_b4=[_b0[i].apply(this,_b4)];
}
return _b4[0];
};
},bind:function(_b6,_b7){
if(typeof (_b6)=="string"){
_b6=_b7[_b6];
}
var _b8=_b6.im_func;
var _b9=_b6.im_preargs;
var _ba=_b6.im_self;
var m=MochiKit.Base;
if(typeof (_b6)=="function"&&typeof (_b6.apply)=="undefined"){
_b6=m._wrapDumbFunction(_b6);
}
if(typeof (_b8)!="function"){
_b8=_b6;
}
if(typeof (_b7)!="undefined"){
_ba=_b7;
}
if(typeof (_b9)=="undefined"){
_b9=[];
}else{
_b9=_b9.slice();
}
m.extend(_b9,arguments,2);
var _bc=function(){
var _bd=arguments;
var me=arguments.callee;
if(me.im_preargs.length>0){
_bd=m.concat(me.im_preargs,_bd);
}
var _bf=me.im_self;
if(!_bf){
_bf=this;
}
return me.im_func.apply(_bf,_bd);
};
_bc.im_self=_ba;
_bc.im_func=_b8;
_bc.im_preargs=_b9;
return _bc;
},bindLate:function(_c0,_c1){
var m=MochiKit.Base;
if(typeof (_c0)!="string"){
return m.bind.apply(this,arguments);
}
var _c3=m.extend([],arguments,2);
var _c4=function(){
var _c5=arguments;
var me=arguments.callee;
if(me.im_preargs.length>0){
_c5=m.concat(me.im_preargs,_c5);
}
var _c7=me.im_self;
if(!_c7){
_c7=this;
}
return _c7[me.im_func].apply(_c7,_c5);
};
_c4.im_self=_c1;
_c4.im_func=_c0;
_c4.im_preargs=_c3;
return _c4;
},bindMethods:function(_c8){
var _c9=MochiKit.Base.bind;
for(var k in _c8){
var _cb=_c8[k];
if(typeof (_cb)=="function"){
_c8[k]=_c9(_cb,_c8);
}
}
},registerComparator:function(_cc,_cd,_ce,_cf){
MochiKit.Base.comparatorRegistry.register(_cc,_cd,_ce,_cf);
},_primitives:{"boolean":true,"string":true,"number":true},compare:function(a,b){
if(a==b){
return 0;
}
var _d2=(typeof (a)=="undefined"||a===null);
var _d3=(typeof (b)=="undefined"||b===null);
if(_d2&&_d3){
return 0;
}else{
if(_d2){
return -1;
}else{
if(_d3){
return 1;
}
}
}
var m=MochiKit.Base;
var _d5=m._primitives;
if(!(typeof (a) in _d5&&typeof (b) in _d5)){
try{
return m.comparatorRegistry.match(a,b);
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
}
if(a<b){
return -1;
}else{
if(a>b){
return 1;
}
}
var _d6=m.repr;
throw new TypeError(_d6(a)+" and "+_d6(b)+" can not be compared");
},compareDateLike:function(a,b){
return MochiKit.Base.compare(a.getTime(),b.getTime());
},compareArrayLike:function(a,b){
var _db=MochiKit.Base.compare;
var _dc=a.length;
var _dd=0;
if(_dc>b.length){
_dd=1;
_dc=b.length;
}else{
if(_dc<b.length){
_dd=-1;
}
}
for(var i=0;i<_dc;i++){
var cmp=_db(a[i],b[i]);
if(cmp){
return cmp;
}
}
return _dd;
},registerRepr:function(_e0,_e1,_e2,_e3){
MochiKit.Base.reprRegistry.register(_e0,_e1,_e2,_e3);
},repr:function(o){
if(typeof (o)=="undefined"){
return "undefined";
}else{
if(o===null){
return "null";
}
}
try{
if(typeof (o.__repr__)=="function"){
return o.__repr__();
}else{
if(typeof (o.repr)=="function"&&o.repr!=arguments.callee){
return o.repr();
}
}
return MochiKit.Base.reprRegistry.match(o);
}
catch(e){
if(typeof (o.NAME)=="string"&&(o.toString==Function.prototype.toString||o.toString==Object.prototype.toString)){
return o.NAME;
}
}
try{
var _e5=(o+"");
}
catch(e){
return "["+typeof (o)+"]";
}
if(typeof (o)=="function"){
_e5=_e5.replace(/^\s+/,"").replace(/\s+/g," ");
_e5=_e5.replace(/,(\S)/,", $1");
var idx=_e5.indexOf("{");
if(idx!=-1){
_e5=_e5.substr(0,idx)+"{...}";
}
}
return _e5;
},reprArrayLike:function(o){
var m=MochiKit.Base;
return "["+m.map(m.repr,o).join(", ")+"]";
},reprString:function(o){
return ("\""+o.replace(/(["\\])/g,"\\$1")+"\"").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\v]/g,"\\v").replace(/[\r]/g,"\\r");
},reprNumber:function(o){
return o+"";
},registerJSON:function(_eb,_ec,_ed,_ee){
MochiKit.Base.jsonRegistry.register(_eb,_ec,_ed,_ee);
},evalJSON:function(){
return eval("("+MochiKit.Base._filterJSON(arguments[0])+")");
},_filterJSON:function(s){
var m=s.match(/^\s*\/\*(.*)\*\/\s*$/);
if(m){
return m[1];
}
return s;
},serializeJSON:function(o){
var _f2=typeof (o);
if(_f2=="number"||_f2=="boolean"){
return o+"";
}else{
if(o===null){
return "null";
}else{
if(_f2=="string"){
var res="";
for(var i=0;i<o.length;i++){
var c=o.charAt(i);
if(c=="\""){
res+="\\\"";
}else{
if(c=="\\"){
res+="\\\\";
}else{
if(c=="\b"){
res+="\\b";
}else{
if(c=="\f"){
res+="\\f";
}else{
if(c=="\n"){
res+="\\n";
}else{
if(c=="\r"){
res+="\\r";
}else{
if(c=="\t"){
res+="\\t";
}else{
if(o.charCodeAt(i)<=31){
var hex=o.charCodeAt(i).toString(16);
if(hex.length<2){
hex="0"+hex;
}
res+="\\u00"+hex.toUpperCase();
}else{
res+=c;
}
}
}
}
}
}
}
}
}
return "\""+res+"\"";
}
}
}
var me=arguments.callee;
var _f8;
if(typeof (o.__json__)=="function"){
_f8=o.__json__();
if(o!==_f8){
return me(_f8);
}
}
if(typeof (o.json)=="function"){
_f8=o.json();
if(o!==_f8){
return me(_f8);
}
}
if(_f2!="function"&&typeof (o.length)=="number"){
var res=[];
for(var i=0;i<o.length;i++){
var val=me(o[i]);
if(typeof (val)!="string"){
continue;
}
res.push(val);
}
return "["+res.join(", ")+"]";
}
var m=MochiKit.Base;
try{
_f8=m.jsonRegistry.match(o);
if(o!==_f8){
return me(_f8);
}
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
if(_f2=="undefined"){
throw new TypeError("undefined can not be serialized as JSON");
}
if(_f2=="function"){
return null;
}
res=[];
for(var k in o){
var _fc;
if(typeof (k)=="number"){
_fc="\""+k+"\"";
}else{
if(typeof (k)=="string"){
_fc=me(k);
}else{
continue;
}
}
val=me(o[k]);
if(typeof (val)!="string"){
continue;
}
res.push(_fc+":"+val);
}
return "{"+res.join(", ")+"}";
},objEqual:function(a,b){
return (MochiKit.Base.compare(a,b)===0);
},arrayEqual:function(_ff,arr){
if(_ff.length!=arr.length){
return false;
}
return (MochiKit.Base.compare(_ff,arr)===0);
},concat:function(){
var rval=[];
var _102=MochiKit.Base.extend;
for(var i=0;i<arguments.length;i++){
_102(rval,arguments[i]);
}
return rval;
},keyComparator:function(key){
var m=MochiKit.Base;
var _106=m.compare;
if(arguments.length==1){
return function(a,b){
return _106(a[key],b[key]);
};
}
var _109=m.extend(null,arguments);
return function(a,b){
var rval=0;
for(var i=0;(rval===0)&&(i<_109.length);i++){
var key=_109[i];
rval=_106(a[key],b[key]);
}
return rval;
};
},reverseKeyComparator:function(key){
var _110=MochiKit.Base.keyComparator.apply(this,arguments);
return function(a,b){
return _110(b,a);
};
},partial:function(func){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([func,undefined],arguments,1));
},listMinMax:function(_115,lst){
if(lst.length===0){
return null;
}
var cur=lst[0];
var _118=MochiKit.Base.compare;
for(var i=1;i<lst.length;i++){
var o=lst[i];
if(_118(o,cur)==_115){
cur=o;
}
}
return cur;
},objMax:function(){
return MochiKit.Base.listMinMax(1,arguments);
},objMin:function(){
return MochiKit.Base.listMinMax(-1,arguments);
},findIdentical:function(lst,_11c,_11d,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_11d)=="undefined"||_11d===null){
_11d=0;
}
for(var i=_11d;i<end;i++){
if(lst[i]===_11c){
return i;
}
}
return -1;
},mean:function(){
var sum=0;
var m=MochiKit.Base;
var args=m.extend(null,arguments);
var _123=args.length;
while(args.length){
var o=args.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
_123+=o.length-1;
for(var i=o.length-1;i>=0;i--){
sum+=o[i];
}
}else{
sum+=o;
}
}
if(_123<=0){
throw new TypeError("mean() requires at least one argument");
}
return sum/_123;
},median:function(){
var data=MochiKit.Base.flattenArguments(arguments);
if(data.length===0){
throw new TypeError("median() requires at least one argument");
}
data.sort(compare);
if(data.length%2==0){
var _127=data.length/2;
return (data[_127]+data[_127-1])/2;
}else{
return data[(data.length-1)/2];
}
},findValue:function(lst,_129,_12a,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_12a)=="undefined"||_12a===null){
_12a=0;
}
var cmp=MochiKit.Base.compare;
for(var i=_12a;i<end;i++){
if(cmp(lst[i],_129)===0){
return i;
}
}
return -1;
},nodeWalk:function(node,_12f){
var _130=[node];
var _131=MochiKit.Base.extend;
while(_130.length){
var res=_12f(_130.shift());
if(res){
_131(_130,res);
}
}
},nameFunctions:function(_133){
var base=_133.NAME;
if(typeof (base)=="undefined"){
base="";
}else{
base=base+".";
}
for(var name in _133){
var o=_133[name];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+name;
}
catch(e){
}
}
}
},queryString:function(_137,_138){
if(typeof (MochiKit.DOM)!="undefined"&&arguments.length==1&&(typeof (_137)=="string"||(typeof (_137.nodeType)!="undefined"&&_137.nodeType>0))){
var kv=MochiKit.DOM.formContents(_137);
_137=kv[0];
_138=kv[1];
}else{
if(arguments.length==1){
if(typeof (_137.length)=="number"&&_137.length==2){
return arguments.callee(_137[0],_137[1]);
}
var o=_137;
_137=[];
_138=[];
for(var k in o){
var v=o[k];
if(typeof (v)=="function"){
continue;
}else{
if(MochiKit.Base.isArrayLike(v)){
for(var i=0;i<v.length;i++){
_137.push(k);
_138.push(v[i]);
}
}else{
_137.push(k);
_138.push(v);
}
}
}
}
}
var rval=[];
var len=Math.min(_137.length,_138.length);
var _140=MochiKit.Base.urlEncode;
for(var i=0;i<len;i++){
v=_138[i];
if(typeof (v)!="undefined"&&v!==null){
rval.push(_140(_137[i])+"="+_140(v));
}
}
return rval.join("&");
},parseQueryString:function(_141,_142){
var qstr=(_141.charAt(0)=="?")?_141.substring(1):_141;
var _144=qstr.replace(/\+/g,"%20").split(/\&amp\;|\&\#38\;|\&#x26;|\&/);
var o={};
var _146;
if(typeof (decodeURIComponent)!="undefined"){
_146=decodeURIComponent;
}else{
_146=unescape;
}
if(_142){
for(var i=0;i<_144.length;i++){
var pair=_144[i].split("=");
var name=_146(pair.shift());
if(!name){
continue;
}
var arr=o[name];
if(!(arr instanceof Array)){
arr=[];
o[name]=arr;
}
arr.push(_146(pair.join("=")));
}
}else{
for(i=0;i<_144.length;i++){
pair=_144[i].split("=");
var name=pair.shift();
if(!name){
continue;
}
o[_146(name)]=_146(pair.join("="));
}
}
return o;
}});
MochiKit.Base.AdapterRegistry=function(){
this.pairs=[];
};
MochiKit.Base.AdapterRegistry.prototype={register:function(name,_14c,wrap,_14e){
if(_14e){
this.pairs.unshift([name,_14c,wrap]);
}else{
this.pairs.push([name,_14c,wrap]);
}
},match:function(){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[1].apply(this,arguments)){
return pair[2].apply(this,arguments);
}
}
throw MochiKit.Base.NotFound;
},unregister:function(name){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[0]==name){
this.pairs.splice(i,1);
return true;
}
}
return false;
}};
MochiKit.Base._exportSymbols=function(_154,_155){
if(MochiKit.__export__===false||_155.__export__===false){
return;
}
for(var k in _155){
var v=_155[k];
if(v!=null){
var _158=(k[0]!=="_"&&k!=="toString");
if(v.__export__===true||(v.__export__!==false&&_158)){
_154[k]=_155[k];
}
}
}
};
MochiKit.Base._deprecated=function(_159,name,_15b,_15c,_15d){
if(typeof (_159)==="string"){
if(_159.indexOf("MochiKit.")===0){
_159=_159.substring(9);
}
_159=MochiKit[_159];
}
var _15e=_15b.split(".")[1];
var _15f=_15b.split(".")[2];
var func=function(){
var self=arguments.callee;
var msg=_159.NAME+"."+name+" is deprecated since version "+_15c+". Use "+_15b+" instead.";
if(self.logged!==true){
self.logged=true;
if(MochiKit.Logging){
MochiKit.Logging.logDebug(msg);
}else{
if(console&&console.log){
console.log(msg);
}
}
}
if(!MochiKit[_15e]){
throw new Error(msg);
}
return MochiKit[_15e][_15f].apply(this,arguments);
};
if(_15d===false){
func.__export__=false;
}
_159[name]=func;
};
MochiKit.Base.__new__=function(){
var m=this;
m.noop=m.operator.identity;
m._deprecated(m,"forward","MochiKit.Base.forwardCall","1.3",false);
m._deprecated(m,"find","MochiKit.Base.findValue","1.3",false);
if(typeof (encodeURIComponent)!="undefined"){
m.urlEncode=function(_164){
return encodeURIComponent(_164).replace(/\'/g,"%27");
};
}else{
m.urlEncode=function(_165){
return escape(_165).replace(/\+/g,"%2B").replace(/\"/g,"%22").rval.replace(/\'/g,"%27");
};
}
m.NamedError=function(name){
this.message=name;
this.name=name;
};
m.NamedError.prototype=new Error();
m.update(m.NamedError.prototype,{repr:function(){
if(this.message&&this.message!=this.name){
return this.name+"("+m.repr(this.message)+")";
}else{
return this.name+"()";
}
},toString:m.forwardCall("repr")});
m.NotFound=new m.NamedError("MochiKit.Base.NotFound");
m.listMax=m.partial(m.listMinMax,1);
m.listMin=m.partial(m.listMinMax,-1);
m.isCallable=m.typeMatcher("function");
m.isUndefined=m.typeMatcher("undefined");
m.merge=m.partial(m.update,null);
m.zip=m.partial(m.map,null);
m.average=m.mean;
m.comparatorRegistry=new m.AdapterRegistry();
m.registerComparator("dateLike",m.isDateLike,m.compareDateLike);
m.registerComparator("arrayLike",m.isArrayLike,m.compareArrayLike);
m.reprRegistry=new m.AdapterRegistry();
m.registerRepr("arrayLike",m.isArrayLike,m.reprArrayLike);
m.registerRepr("string",m.typeMatcher("string"),m.reprString);
m.registerRepr("numbers",m.typeMatcher("number","boolean"),m.reprNumber);
m.jsonRegistry=new m.AdapterRegistry();
m.nameFunctions(this);
};
MochiKit.Base.__new__();
if(MochiKit.__export__){
compare=MochiKit.Base.compare;
compose=MochiKit.Base.compose;
serializeJSON=MochiKit.Base.serializeJSON;
mean=MochiKit.Base.mean;
median=MochiKit.Base.median;
}
MochiKit.Base._exportSymbols(this,MochiKit.Base);
MochiKit.Base._module("Iter","1.5",["Base"]);
MochiKit.Base.update(MochiKit.Iter,{registerIteratorFactory:function(name,_168,_169,_16a){
MochiKit.Iter.iteratorRegistry.register(name,_168,_169,_16a);
},isIterable:function(o){
return o!=null&&(typeof (o.next)=="function"||typeof (o.iter)=="function");
},iter:function(_16c,_16d){
var self=MochiKit.Iter;
if(arguments.length==2){
return self.takewhile(function(a){
return a!=_16d;
},_16c);
}
if(typeof (_16c.next)=="function"){
return _16c;
}else{
if(typeof (_16c.iter)=="function"){
return _16c.iter();
}
}
try{
return self.iteratorRegistry.match(_16c);
}
catch(e){
var m=MochiKit.Base;
if(e==m.NotFound){
e=new TypeError(typeof (_16c)+": "+m.repr(_16c)+" is not iterable");
}
throw e;
}
},count:function(n){
if(!n){
n=0;
}
var m=MochiKit.Base;
return {repr:function(){
return "count("+n+")";
},toString:m.forwardCall("repr"),next:m.counter(n)};
},cycle:function(p){
var self=MochiKit.Iter;
var m=MochiKit.Base;
var lst=[];
var _177=self.iter(p);
return {repr:function(){
return "cycle(...)";
},toString:m.forwardCall("repr"),next:function(){
try{
var rval=_177.next();
lst.push(rval);
return rval;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
if(lst.length===0){
this.next=function(){
throw self.StopIteration;
};
}else{
var i=-1;
this.next=function(){
i=(i+1)%lst.length;
return lst[i];
};
}
return this.next();
}
}};
},repeat:function(elem,n){
var m=MochiKit.Base;
if(typeof (n)=="undefined"){
return {repr:function(){
return "repeat("+m.repr(elem)+")";
},toString:m.forwardCall("repr"),next:function(){
return elem;
}};
}
return {repr:function(){
return "repeat("+m.repr(elem)+", "+n+")";
},toString:m.forwardCall("repr"),next:function(){
if(n<=0){
throw MochiKit.Iter.StopIteration;
}
n-=1;
return elem;
}};
},next:function(_17d){
return _17d.next();
},izip:function(p,q){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var next=self.next;
var _183=m.map(self.iter,arguments);
return {repr:function(){
return "izip(...)";
},toString:m.forwardCall("repr"),next:function(){
return m.map(next,_183);
}};
},ifilter:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilter(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(pred(rval)){
return rval;
}
}
return undefined;
}};
},ifilterfalse:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilterfalse(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
return rval;
}
}
return undefined;
}};
},islice:function(seq){
var self=MochiKit.Iter;
var m=MochiKit.Base;
seq=self.iter(seq);
var _18f=0;
var stop=0;
var step=1;
var i=-1;
if(arguments.length==2){
stop=arguments[1];
}else{
if(arguments.length==3){
_18f=arguments[1];
stop=arguments[2];
}else{
_18f=arguments[1];
stop=arguments[2];
step=arguments[3];
}
}
return {repr:function(){
return "islice("+["...",_18f,stop,step].join(", ")+")";
},toString:m.forwardCall("repr"),next:function(){
var rval;
while(i<_18f){
rval=seq.next();
i++;
}
if(_18f>=stop){
throw self.StopIteration;
}
_18f+=step;
return rval;
}};
},imap:function(fun,p,q){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var _199=m.map(self.iter,m.extend(null,arguments,1));
var map=m.map;
var next=self.next;
return {repr:function(){
return "imap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(this,map(next,_199));
}};
},applymap:function(fun,seq,self){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
return {repr:function(){
return "applymap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(self,seq.next());
}};
},chain:function(p,q){
var self=MochiKit.Iter;
var m=MochiKit.Base;
if(arguments.length==1){
return self.iter(arguments[0]);
}
var _1a4=m.map(self.iter,arguments);
return {repr:function(){
return "chain(...)";
},toString:m.forwardCall("repr"),next:function(){
while(_1a4.length>1){
try{
var _1a5=_1a4[0].next();
return _1a5;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
_1a4.shift();
var _1a5=_1a4[0].next();
return _1a5;
}
}
if(_1a4.length==1){
var arg=_1a4.shift();
this.next=m.bind("next",arg);
return this.next();
}
throw self.StopIteration;
}};
},takewhile:function(pred,seq){
var self=MochiKit.Iter;
seq=self.iter(seq);
return {repr:function(){
return "takewhile(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=seq.next();
if(!pred(rval)){
this.next=function(){
throw self.StopIteration;
};
this.next();
}
return rval;
}};
},dropwhile:function(pred,seq){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
var bind=m.bind;
return {"repr":function(){
return "dropwhile(...)";
},"toString":m.forwardCall("repr"),"next":function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
break;
}
}
this.next=bind("next",seq);
return rval;
}};
},_tee:function(_1b0,sync,_1b2){
sync.pos[_1b0]=-1;
var m=MochiKit.Base;
var _1b4=m.listMin;
return {repr:function(){
return "tee("+_1b0+", ...)";
},toString:m.forwardCall("repr"),next:function(){
var rval;
var i=sync.pos[_1b0];
if(i==sync.max){
rval=_1b2.next();
sync.deque.push(rval);
sync.max+=1;
sync.pos[_1b0]+=1;
}else{
rval=sync.deque[i-sync.min];
sync.pos[_1b0]+=1;
if(i==sync.min&&_1b4(sync.pos)!=sync.min){
sync.min+=1;
sync.deque.shift();
}
}
return rval;
}};
},tee:function(_1b7,n){
var rval=[];
var sync={"pos":[],"deque":[],"max":-1,"min":-1};
if(arguments.length==1||typeof (n)=="undefined"||n===null){
n=2;
}
var self=MochiKit.Iter;
_1b7=self.iter(_1b7);
var _tee=self._tee;
for(var i=0;i<n;i++){
rval.push(_tee(i,sync,_1b7));
}
return rval;
},list:function(_1be){
var rval;
if(_1be instanceof Array){
return _1be.slice();
}
if(typeof (_1be)=="function"&&!(_1be instanceof Function)&&typeof (_1be.length)=="number"){
rval=[];
for(var i=0;i<_1be.length;i++){
rval.push(_1be[i]);
}
return rval;
}
var self=MochiKit.Iter;
_1be=self.iter(_1be);
var rval=[];
var _1c2;
try{
while(true){
_1c2=_1be.next();
rval.push(_1c2);
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return rval;
}
return undefined;
},reduce:function(fn,_1c4,_1c5){
var i=0;
var x=_1c5;
var self=MochiKit.Iter;
_1c4=self.iter(_1c4);
if(arguments.length<3){
try{
x=_1c4.next();
}
catch(e){
if(e==self.StopIteration){
e=new TypeError("reduce() of empty sequence with no initial value");
}
throw e;
}
i++;
}
try{
while(true){
x=fn(x,_1c4.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},range:function(){
var _1c9=0;
var stop=0;
var step=1;
if(arguments.length==1){
stop=arguments[0];
}else{
if(arguments.length==2){
_1c9=arguments[0];
stop=arguments[1];
}else{
if(arguments.length==3){
_1c9=arguments[0];
stop=arguments[1];
step=arguments[2];
}else{
throw new TypeError("range() takes 1, 2, or 3 arguments!");
}
}
}
if(step===0){
throw new TypeError("range() step must not be 0");
}
return {next:function(){
if((step>0&&_1c9>=stop)||(step<0&&_1c9<=stop)){
throw MochiKit.Iter.StopIteration;
}
var rval=_1c9;
_1c9+=step;
return rval;
},repr:function(){
return "range("+[_1c9,stop,step].join(", ")+")";
},toString:MochiKit.Base.forwardCall("repr")};
},sum:function(_1cd,_1ce){
if(typeof (_1ce)=="undefined"||_1ce===null){
_1ce=0;
}
var x=_1ce;
var self=MochiKit.Iter;
_1cd=self.iter(_1cd);
try{
while(true){
x+=_1cd.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},exhaust:function(_1d1){
var self=MochiKit.Iter;
_1d1=self.iter(_1d1);
try{
while(true){
_1d1.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
},forEach:function(_1d3,func,obj){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length>2){
func=m.bind(func,obj);
}
if(m.isArrayLike(_1d3)&&!self.isIterable(_1d3)){
try{
for(var i=0;i<_1d3.length;i++){
func(_1d3[i]);
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
}else{
self.exhaust(self.imap(func,_1d3));
}
},every:function(_1d9,func){
var self=MochiKit.Iter;
try{
self.ifilterfalse(func,_1d9).next();
return false;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return true;
}
},sorted:function(_1dc,cmp){
var rval=MochiKit.Iter.list(_1dc);
if(arguments.length==1){
cmp=MochiKit.Base.compare;
}
rval.sort(cmp);
return rval;
},reversed:function(_1df){
var rval=MochiKit.Iter.list(_1df);
rval.reverse();
return rval;
},some:function(_1e1,func){
var self=MochiKit.Iter;
try{
self.ifilter(func,_1e1).next();
return true;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return false;
}
},iextend:function(lst,_1e5){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(m.isArrayLike(_1e5)&&!self.isIterable(_1e5)){
for(var i=0;i<_1e5.length;i++){
lst.push(_1e5[i]);
}
}else{
_1e5=self.iter(_1e5);
try{
while(true){
lst.push(_1e5.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
}
return lst;
},groupby:function(_1e9,_1ea){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_1ea=m.operator.identity;
}
_1e9=self.iter(_1e9);
var pk=undefined;
var k=undefined;
var v;
function fetch(){
v=_1e9.next();
k=_1ea(v);
}
function eat(){
var ret=v;
v=undefined;
return ret;
}
var _1f1=true;
var _1f2=m.compare;
return {repr:function(){
return "groupby(...)";
},next:function(){
while(_1f2(k,pk)===0){
fetch();
if(_1f1){
_1f1=false;
break;
}
}
pk=k;
return [k,{next:function(){
if(v==undefined){
fetch();
}
if(_1f2(k,pk)!==0){
throw self.StopIteration;
}
return eat();
}}];
}};
},groupby_as_array:function(_1f3,_1f4){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_1f4=m.operator.identity;
}
_1f3=self.iter(_1f3);
var _1f7=[];
var _1f8=true;
var _1f9;
var _1fa=m.compare;
while(true){
try{
var _1fb=_1f3.next();
var key=_1f4(_1fb);
}
catch(e){
if(e==self.StopIteration){
break;
}
throw e;
}
if(_1f8||_1fa(key,_1f9)!==0){
var _1fd=[];
_1f7.push([key,_1fd]);
}
_1fd.push(_1fb);
_1f8=false;
_1f9=key;
}
return _1f7;
},arrayLikeIter:function(_1fe){
var i=0;
return {repr:function(){
return "arrayLikeIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(i>=_1fe.length){
throw MochiKit.Iter.StopIteration;
}
return _1fe[i++];
}};
},hasIterateNext:function(_200){
return (_200&&typeof (_200.iterateNext)=="function");
},iterateNextIter:function(_201){
return {repr:function(){
return "iterateNextIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=_201.iterateNext();
if(rval===null||rval===undefined){
throw MochiKit.Iter.StopIteration;
}
return rval;
}};
}});
MochiKit.Iter.__new__=function(){
var m=MochiKit.Base;
if(typeof (StopIteration)!="undefined"){
this.StopIteration=StopIteration;
}else{
this.StopIteration=new m.NamedError("StopIteration");
}
this.iteratorRegistry=new m.AdapterRegistry();
this.registerIteratorFactory("arrayLike",m.isArrayLike,this.arrayLikeIter);
this.registerIteratorFactory("iterateNext",this.hasIterateNext,this.iterateNextIter);
m.nameFunctions(this);
};
MochiKit.Iter.__new__();
if(MochiKit.__export__){
reduce=MochiKit.Iter.reduce;
}
MochiKit.Base._exportSymbols(this,MochiKit.Iter);
MochiKit.Base._module("Logging","1.5",["Base"]);
MochiKit.Logging.LogMessage=function(num,_205,info){
this.num=num;
this.level=_205;
this.info=info;
this.timestamp=new Date();
};
MochiKit.Logging.LogMessage.prototype={repr:function(){
var m=MochiKit.Base;
return "LogMessage("+m.map(m.repr,[this.num,this.level,this.info]).join(", ")+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Base.update(MochiKit.Logging,{logLevelAtLeast:function(_208){
var self=MochiKit.Logging;
if(typeof (_208)=="string"){
_208=self.LogLevel[_208];
}
return function(msg){
var _20b=msg.level;
if(typeof (_20b)=="string"){
_20b=self.LogLevel[_20b];
}
return _20b>=_208;
};
},isLogMessage:function(){
var _20c=MochiKit.Logging.LogMessage;
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof _20c)){
return false;
}
}
return true;
},compareLogMessage:function(a,b){
return MochiKit.Base.compare([a.level,a.info],[b.level,b.info]);
},alertListener:function(msg){
alert("num: "+msg.num+"\nlevel: "+msg.level+"\ninfo: "+msg.info.join(" "));
}});
MochiKit.Logging.Logger=function(_211){
this.counter=0;
if(typeof (_211)=="undefined"||_211===null){
_211=-1;
}
this.maxSize=_211;
this._messages=[];
this.listeners={};
this.useNativeConsole=false;
};
MochiKit.Logging.Logger.prototype={clear:function(){
this._messages.splice(0,this._messages.length);
},logToConsole:function(msg){
if(typeof (window)!="undefined"&&window.console&&window.console.log){
window.console.log(msg.replace(/%/g,"\uff05"));
}else{
if(typeof (opera)!="undefined"&&opera.postError){
opera.postError(msg);
}else{
if(typeof (printfire)=="function"){
printfire(msg);
}else{
if(typeof (Debug)!="undefined"&&Debug.writeln){
Debug.writeln(msg);
}else{
if(typeof (debug)!="undefined"&&debug.trace){
debug.trace(msg);
}
}
}
}
}
},dispatchListeners:function(msg){
for(var k in this.listeners){
var pair=this.listeners[k];
if(pair.ident!=k||(pair[0]&&!pair[0](msg))){
continue;
}
pair[1](msg);
}
},addListener:function(_216,_217,_218){
if(typeof (_217)=="string"){
_217=MochiKit.Logging.logLevelAtLeast(_217);
}
var _219=[_217,_218];
_219.ident=_216;
this.listeners[_216]=_219;
},removeListener:function(_21a){
delete this.listeners[_21a];
},baseLog:function(_21b,_21c){
if(typeof (_21b)=="number"){
if(_21b>=MochiKit.Logging.LogLevel.FATAL){
_21b="FATAL";
}else{
if(_21b>=MochiKit.Logging.LogLevel.ERROR){
_21b="ERROR";
}else{
if(_21b>=MochiKit.Logging.LogLevel.WARNING){
_21b="WARNING";
}else{
if(_21b>=MochiKit.Logging.LogLevel.INFO){
_21b="INFO";
}else{
_21b="DEBUG";
}
}
}
}
}
var msg=new MochiKit.Logging.LogMessage(this.counter,_21b,MochiKit.Base.extend(null,arguments,1));
this._messages.push(msg);
this.dispatchListeners(msg);
if(this.useNativeConsole){
this.logToConsole(msg.level+": "+msg.info.join(" "));
}
this.counter+=1;
while(this.maxSize>=0&&this._messages.length>this.maxSize){
this._messages.shift();
}
},getMessages:function(_21e){
var _21f=0;
if(!(typeof (_21e)=="undefined"||_21e===null)){
_21f=Math.max(0,this._messages.length-_21e);
}
return this._messages.slice(_21f);
},getMessageText:function(_220){
if(typeof (_220)=="undefined"||_220===null){
_220=30;
}
var _221=this.getMessages(_220);
if(_221.length){
var lst=map(function(m){
return "\n  ["+m.num+"] "+m.level+": "+m.info.join(" ");
},_221);
lst.unshift("LAST "+_221.length+" MESSAGES:");
return lst.join("");
}
return "";
},debuggingBookmarklet:function(_224){
if(typeof (MochiKit.LoggingPane)=="undefined"){
alert(this.getMessageText());
}else{
MochiKit.LoggingPane.createLoggingPane(_224||false);
}
}};
MochiKit.Logging.__new__=function(){
this.LogLevel={ERROR:40,FATAL:50,WARNING:30,INFO:20,DEBUG:10};
var m=MochiKit.Base;
m.registerComparator("LogMessage",this.isLogMessage,this.compareLogMessage);
var _226=m.partial;
var _227=this.Logger;
var _228=_227.prototype.baseLog;
m.update(this.Logger.prototype,{debug:_226(_228,"DEBUG"),log:_226(_228,"INFO"),error:_226(_228,"ERROR"),fatal:_226(_228,"FATAL"),warning:_226(_228,"WARNING")});
var self=this;
var _22a=function(name){
return function(){
self.logger[name].apply(self.logger,arguments);
};
};
this.log=_22a("log");
this.logError=_22a("error");
this.logDebug=_22a("debug");
this.logFatal=_22a("fatal");
this.logWarning=_22a("warning");
this.logger=new _227();
this.logger.useNativeConsole=true;
m.nameFunctions(this);
};
if(typeof (printfire)=="undefined"&&typeof (document)!="undefined"&&document.createEvent&&typeof (dispatchEvent)!="undefined"){
printfire=function(){
printfire.args=arguments;
var ev=document.createEvent("Events");
ev.initEvent("printfire",false,true);
dispatchEvent(ev);
};
}
MochiKit.Logging.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Logging);
MochiKit.Base._module("DateTime","1.5",["Base"]);
MochiKit.DateTime.isoDate=function(str){
str=str+"";
if(typeof (str)!="string"||str.length===0){
return null;
}
var iso=str.split("-");
if(iso.length===0){
return null;
}
var date=new Date(iso[0],iso[1]-1,iso[2]);
date.setFullYear(iso[0]);
date.setMonth(iso[1]-1);
date.setDate(iso[2]);
return date;
};
MochiKit.DateTime._isoRegexp=/(\d{4,})(?:-(\d{1,2})(?:-(\d{1,2})(?:[T ](\d{1,2}):(\d{1,2})(?::(\d{1,2})(?:\.(\d+))?)?(?:(Z)|([+-])(\d{1,2})(?::(\d{1,2}))?)?)?)?)?/;
MochiKit.DateTime.isoTimestamp=function(str){
str=str+"";
if(typeof (str)!="string"||str.length===0){
return null;
}
var res=str.match(MochiKit.DateTime._isoRegexp);
if(typeof (res)=="undefined"||res===null){
return null;
}
var year,_233,day,hour,min,sec,msec;
year=parseInt(res[1],10);
if(typeof (res[2])=="undefined"||res[2]===""){
return new Date(year);
}
_233=parseInt(res[2],10)-1;
day=parseInt(res[3],10);
if(typeof (res[4])=="undefined"||res[4]===""){
return new Date(year,_233,day);
}
hour=parseInt(res[4],10);
min=parseInt(res[5],10);
sec=(typeof (res[6])!="undefined"&&res[6]!=="")?parseInt(res[6],10):0;
if(typeof (res[7])!="undefined"&&res[7]!==""){
msec=Math.round(1000*parseFloat("0."+res[7]));
}else{
msec=0;
}
if((typeof (res[8])=="undefined"||res[8]==="")&&(typeof (res[9])=="undefined"||res[9]==="")){
return new Date(year,_233,day,hour,min,sec,msec);
}
var ofs;
if(typeof (res[9])!="undefined"&&res[9]!==""){
ofs=parseInt(res[10],10)*3600000;
if(typeof (res[11])!="undefined"&&res[11]!==""){
ofs+=parseInt(res[11],10)*60000;
}
if(res[9]=="-"){
ofs=-ofs;
}
}else{
ofs=0;
}
return new Date(Date.UTC(year,_233,day,hour,min,sec,msec)-ofs);
};
MochiKit.DateTime.toISOTime=function(date,_23b){
if(typeof (date)=="undefined"||date===null){
return null;
}
var hh=date.getHours();
var mm=date.getMinutes();
var ss=date.getSeconds();
var lst=[((_23b&&(hh<10))?"0"+hh:hh),((mm<10)?"0"+mm:mm),((ss<10)?"0"+ss:ss)];
return lst.join(":");
};
MochiKit.DateTime.toISOTimestamp=function(date,_241){
if(typeof (date)=="undefined"||date===null){
return null;
}
var sep=_241?"T":" ";
var foot=_241?"Z":"";
if(_241){
date=new Date(date.getTime()+(date.getTimezoneOffset()*60000));
}
return MochiKit.DateTime.toISODate(date)+sep+MochiKit.DateTime.toISOTime(date,_241)+foot;
};
MochiKit.DateTime.toISODate=function(date){
if(typeof (date)=="undefined"||date===null){
return null;
}
var _245=MochiKit.DateTime._padTwo;
var _246=MochiKit.DateTime._padFour;
return [_246(date.getFullYear()),_245(date.getMonth()+1),_245(date.getDate())].join("-");
};
MochiKit.DateTime.americanDate=function(d){
d=d+"";
if(typeof (d)!="string"||d.length===0){
return null;
}
var a=d.split("/");
return new Date(a[2],a[0]-1,a[1]);
};
MochiKit.DateTime._padTwo=function(n){
return (n>9)?n:"0"+n;
};
MochiKit.DateTime._padFour=function(n){
switch(n.toString().length){
case 1:
return "000"+n;
break;
case 2:
return "00"+n;
break;
case 3:
return "0"+n;
break;
case 4:
default:
return n;
}
};
MochiKit.DateTime.toPaddedAmericanDate=function(d){
if(typeof (d)=="undefined"||d===null){
return null;
}
var _24c=MochiKit.DateTime._padTwo;
return [_24c(d.getMonth()+1),_24c(d.getDate()),d.getFullYear()].join("/");
};
MochiKit.DateTime.toAmericanDate=function(d){
if(typeof (d)=="undefined"||d===null){
return null;
}
return [d.getMonth()+1,d.getDate(),d.getFullYear()].join("/");
};
MochiKit.DateTime.__new__=function(){
MochiKit.Base.nameFunctions(this);
};
MochiKit.DateTime.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.DateTime);
MochiKit.Base._module("Format","1.5",["Base"]);
MochiKit.Format._numberFormatter=function(_24e,_24f,_250,_251,_252,_253,_254,_255,_256){
return function(num){
num=parseFloat(num);
if(typeof (num)=="undefined"||num===null||isNaN(num)){
return _24e;
}
var _258=_24f;
var _259=_250;
if(num<0){
num=-num;
}else{
_258=_258.replace(/-/,"");
}
var me=arguments.callee;
var fmt=MochiKit.Format.formatLocale(_251);
if(_252){
num=num*100;
_259=fmt.percent+_259;
}
num=MochiKit.Format.roundToFixed(num,_253);
var _25c=num.split(/\./);
var _25d=_25c[0];
var frac=(_25c.length==1)?"":_25c[1];
var res="";
while(_25d.length<_254){
_25d="0"+_25d;
}
if(_255){
while(_25d.length>_255){
var i=_25d.length-_255;
res=fmt.separator+_25d.substring(i,_25d.length)+res;
_25d=_25d.substring(0,i);
}
}
res=_25d+res;
if(_253>0){
while(frac.length<_256){
frac=frac+"0";
}
res=res+fmt.decimal+frac;
}
return _258+res+_259;
};
};
MochiKit.Format.numberFormatter=function(_261,_262,_263){
if(typeof (_262)=="undefined"){
_262="";
}
var _264=_261.match(/((?:[0#]+,)?[0#]+)(?:\.([0#]+))?(%)?/);
if(!_264){
throw TypeError("Invalid pattern");
}
var _265=_261.substr(0,_264.index);
var _266=_261.substr(_264.index+_264[0].length);
if(_265.search(/-/)==-1){
_265=_265+"-";
}
var _267=_264[1];
var frac=(typeof (_264[2])=="string"&&_264[2]!="")?_264[2]:"";
var _269=(typeof (_264[3])=="string"&&_264[3]!="");
var tmp=_267.split(/,/);
var _26b;
if(typeof (_263)=="undefined"){
_263="default";
}
if(tmp.length==1){
_26b=null;
}else{
_26b=tmp[1].length;
}
var _26c=_267.length-_267.replace(/0/g,"").length;
var _26d=frac.length-frac.replace(/0/g,"").length;
var _26e=frac.length;
var rval=MochiKit.Format._numberFormatter(_262,_265,_266,_263,_269,_26e,_26c,_26b,_26d);
var m=MochiKit.Base;
if(m){
var fn=arguments.callee;
var args=m.concat(arguments);
rval.repr=function(){
return [self.NAME,"(",map(m.repr,args).join(", "),")"].join("");
};
}
return rval;
};
MochiKit.Format.formatLocale=function(_273){
if(typeof (_273)=="undefined"||_273===null){
_273="default";
}
if(typeof (_273)=="string"){
var rval=MochiKit.Format.LOCALE[_273];
if(typeof (rval)=="string"){
rval=arguments.callee(rval);
MochiKit.Format.LOCALE[_273]=rval;
}
return rval;
}else{
return _273;
}
};
MochiKit.Format.twoDigitAverage=function(_275,_276){
if(_276){
var res=_275/_276;
if(!isNaN(res)){
return MochiKit.Format.twoDigitFloat(res);
}
}
return "0";
};
MochiKit.Format.twoDigitFloat=function(_278){
var res=roundToFixed(_278,2);
if(res.indexOf(".00")>0){
return res.substring(0,res.length-3);
}else{
if(res.charAt(res.length-1)=="0"){
return res.substring(0,res.length-1);
}else{
return res;
}
}
};
MochiKit.Format.lstrip=function(str,_27b){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_27b){
return str.replace(/^\s+/,"");
}else{
return str.replace(new RegExp("^["+_27b+"]+"),"");
}
};
MochiKit.Format.rstrip=function(str,_27d){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_27d){
return str.replace(/\s+$/,"");
}else{
return str.replace(new RegExp("["+_27d+"]+$"),"");
}
};
MochiKit.Format.strip=function(str,_27f){
var self=MochiKit.Format;
return self.rstrip(self.lstrip(str,_27f),_27f);
};
MochiKit.Format.truncToFixed=function(_281,_282){
var res=Math.floor(_281).toFixed(0);
if(_281<0){
res=Math.ceil(_281).toFixed(0);
if(res.charAt(0)!="-"&&_282>0){
res="-"+res;
}
}
if(res.indexOf("e")<0&&_282>0){
var tail=_281.toString();
if(tail.indexOf("e")>0){
tail=".";
}else{
if(tail.indexOf(".")<0){
tail=".";
}else{
tail=tail.substring(tail.indexOf("."));
}
}
if(tail.length-1>_282){
tail=tail.substring(0,_282+1);
}
while(tail.length-1<_282){
tail+="0";
}
res+=tail;
}
return res;
};
MochiKit.Format.roundToFixed=function(_285,_286){
var _287=Math.abs(_285)+0.5*Math.pow(10,-_286);
var res=MochiKit.Format.truncToFixed(_287,_286);
if(_285<0){
res="-"+res;
}
return res;
};
MochiKit.Format.percentFormat=function(_289){
return MochiKit.Format.twoDigitFloat(100*_289)+"%";
};
MochiKit.Format.LOCALE={en_US:{separator:",",decimal:".",percent:"%"},de_DE:{separator:".",decimal:",",percent:"%"},pt_BR:{separator:".",decimal:",",percent:"%"},fr_FR:{separator:" ",decimal:",",percent:"%"},"default":"en_US",__export__:false};
MochiKit.Format.__new__=function(){
MochiKit.Base.nameFunctions(this);
var base=this.NAME+".";
var k,v,o;
for(k in this.LOCALE){
o=this.LOCALE[k];
if(typeof (o)=="object"){
o.repr=function(){
return this.NAME;
};
o.NAME=base+"LOCALE."+k;
}
}
};
MochiKit.Format.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Format);
MochiKit.Base._module("Async","1.5",["Base"]);
MochiKit.Async.Deferred=function(_28e){
this.chain=[];
this.id=this._nextId();
this.fired=-1;
this.paused=0;
this.results=[null,null];
this.canceller=_28e;
this.silentlyCancelled=false;
this.chained=false;
};
MochiKit.Async.Deferred.prototype={repr:function(){
var _28f;
if(this.fired==-1){
_28f="unfired";
}else{
if(this.fired===0){
_28f="success";
}else{
_28f="error";
}
}
return "Deferred("+this.id+", "+_28f+")";
},toString:MochiKit.Base.forwardCall("repr"),_nextId:MochiKit.Base.counter(),cancel:function(){
var self=MochiKit.Async;
if(this.fired==-1){
if(this.canceller){
this.canceller(this);
}else{
this.silentlyCancelled=true;
}
if(this.fired==-1){
this.errback(new self.CancelledError(this));
}
}else{
if((this.fired===0)&&(this.results[0] instanceof self.Deferred)){
this.results[0].cancel();
}
}
},_resback:function(res){
this.fired=((res instanceof Error)?1:0);
this.results[this.fired]=res;
this._fire();
},_check:function(){
if(this.fired!=-1){
if(!this.silentlyCancelled){
throw new MochiKit.Async.AlreadyCalledError(this);
}
this.silentlyCancelled=false;
return;
}
},callback:function(res){
this._check();
if(res instanceof MochiKit.Async.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
this._resback(res);
},errback:function(res){
this._check();
var self=MochiKit.Async;
if(res instanceof self.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
if(!(res instanceof Error)){
res=new self.GenericError(res);
}
this._resback(res);
},addBoth:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,fn);
},addCallback:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,null);
},addErrback:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(null,fn);
},addCallbacks:function(cb,eb){
if(this.chained){
throw new Error("Chained Deferreds can not be re-used");
}
this.chain.push([cb,eb]);
if(this.fired>=0){
this._fire();
}
return this;
},_fire:function(){
var _29a=this.chain;
var _29b=this.fired;
var res=this.results[_29b];
var self=this;
var cb=null;
while(_29a.length>0&&this.paused===0){
var pair=_29a.shift();
var f=pair[_29b];
if(f===null){
continue;
}
try{
res=f(res);
_29b=((res instanceof Error)?1:0);
if(res instanceof MochiKit.Async.Deferred){
cb=function(res){
self._resback(res);
self.paused--;
if((self.paused===0)&&(self.fired>=0)){
self._fire();
}
};
this.paused++;
}
}
catch(err){
_29b=1;
if(!(err instanceof Error)){
err=new MochiKit.Async.GenericError(err);
}
res=err;
}
}
this.fired=_29b;
this.results[_29b]=res;
if(cb&&this.paused){
res.addBoth(cb);
res.chained=true;
}
}};
MochiKit.Base.update(MochiKit.Async,{evalJSONRequest:function(req){
return MochiKit.Base.evalJSON(req.responseText);
},succeed:function(_2a3){
var d=new MochiKit.Async.Deferred();
d.callback.apply(d,arguments);
return d;
},fail:function(_2a5){
var d=new MochiKit.Async.Deferred();
d.errback.apply(d,arguments);
return d;
},getXMLHttpRequest:function(){
var self=arguments.callee;
if(!self.XMLHttpRequest){
var _2a8=[function(){
return new XMLHttpRequest();
},function(){
return new ActiveXObject("Msxml2.XMLHTTP");
},function(){
return new ActiveXObject("Microsoft.XMLHTTP");
},function(){
return new ActiveXObject("Msxml2.XMLHTTP.4.0");
},function(){
throw new MochiKit.Async.BrowserComplianceError("Browser does not support XMLHttpRequest");
}];
for(var i=0;i<_2a8.length;i++){
var func=_2a8[i];
try{
self.XMLHttpRequest=func;
return func();
}
catch(e){
}
}
}
return self.XMLHttpRequest();
},_xhr_onreadystatechange:function(d){
var m=MochiKit.Base;
if(this.readyState==4){
try{
this.onreadystatechange=null;
}
catch(e){
try{
this.onreadystatechange=m.noop;
}
catch(e){
}
}
var _2ad=null;
try{
_2ad=this.status;
if(!_2ad&&m.isNotEmpty(this.responseText)){
_2ad=304;
}
}
catch(e){
}
if(_2ad==200||_2ad==201||_2ad==204||_2ad==304||_2ad==1223){
d.callback(this);
}else{
var err=new MochiKit.Async.XMLHttpRequestError(this,"Request failed");
if(err.number){
d.errback(err);
}else{
d.errback(err);
}
}
}
},_xhr_canceller:function(req){
try{
req.onreadystatechange=null;
}
catch(e){
try{
req.onreadystatechange=MochiKit.Base.noop;
}
catch(e){
}
}
req.abort();
},sendXMLHttpRequest:function(req,_2b1){
if(typeof (_2b1)=="undefined"||_2b1===null){
_2b1="";
}
var m=MochiKit.Base;
var self=MochiKit.Async;
var d=new self.Deferred(m.partial(self._xhr_canceller,req));
try{
req.onreadystatechange=m.bind(self._xhr_onreadystatechange,req,d);
req.send(_2b1);
}
catch(e){
try{
req.onreadystatechange=null;
}
catch(ignore){
}
d.errback(e);
}
return d;
},doXHR:function(url,opts){
var self=MochiKit.Async;
return self.callLater(0,self._doXHR,url,opts);
},_doXHR:function(url,opts){
var m=MochiKit.Base;
opts=m.update({method:"GET",sendContent:""},opts);
var self=MochiKit.Async;
var req=self.getXMLHttpRequest();
if(opts.queryString){
var qs=m.queryString(opts.queryString);
if(qs){
url+="?"+qs;
}
}
if("username" in opts){
req.open(opts.method,url,true,opts.username,opts.password);
}else{
req.open(opts.method,url,true);
}
if(req.overrideMimeType&&opts.mimeType){
req.overrideMimeType(opts.mimeType);
}
req.setRequestHeader("X-Requested-With","XMLHttpRequest");
if(opts.headers){
var _2be=opts.headers;
if(!m.isArrayLike(_2be)){
_2be=m.items(_2be);
}
for(var i=0;i<_2be.length;i++){
var _2c0=_2be[i];
var name=_2c0[0];
var _2c2=_2c0[1];
req.setRequestHeader(name,_2c2);
}
}
return self.sendXMLHttpRequest(req,opts.sendContent);
},_buildURL:function(url){
if(arguments.length>1){
var m=MochiKit.Base;
var qs=m.queryString.apply(null,m.extend(null,arguments,1));
if(qs){
return url+"?"+qs;
}
}
return url;
},doSimpleXMLHttpRequest:function(url){
var self=MochiKit.Async;
url=self._buildURL.apply(self,arguments);
return self.doXHR(url);
},loadJSONDoc:function(url){
var self=MochiKit.Async;
url=self._buildURL.apply(self,arguments);
var d=self.doXHR(url,{"mimeType":"text/plain","headers":[["Accept","application/json"]]});
d=d.addCallback(self.evalJSONRequest);
return d;
},wait:function(_2cb,_2cc){
var d=new MochiKit.Async.Deferred();
var m=MochiKit.Base;
if(typeof (_2cc)!="undefined"){
d.addCallback(function(){
return _2cc;
});
}
var _2cf=setTimeout(m.bind("callback",d),Math.floor(_2cb*1000));
d.canceller=function(){
try{
clearTimeout(_2cf);
}
catch(e){
}
};
return d;
},callLater:function(_2d0,func){
var m=MochiKit.Base;
var _2d3=m.partial.apply(m,m.extend(null,arguments,1));
return MochiKit.Async.wait(_2d0).addCallback(function(res){
return _2d3();
});
}});
MochiKit.Async.DeferredLock=function(){
this.waiting=[];
this.locked=false;
this.id=this._nextId();
};
MochiKit.Async.DeferredLock.prototype={__class__:MochiKit.Async.DeferredLock,acquire:function(){
var d=new MochiKit.Async.Deferred();
if(this.locked){
this.waiting.push(d);
}else{
this.locked=true;
d.callback(this);
}
return d;
},release:function(){
if(!this.locked){
throw TypeError("Tried to release an unlocked DeferredLock");
}
this.locked=false;
if(this.waiting.length>0){
this.locked=true;
this.waiting.shift().callback(this);
}
},_nextId:MochiKit.Base.counter(),repr:function(){
var _2d6;
if(this.locked){
_2d6="locked, "+this.waiting.length+" waiting";
}else{
_2d6="unlocked";
}
return "DeferredLock("+this.id+", "+_2d6+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Async.DeferredList=function(list,_2d8,_2d9,_2da,_2db){
MochiKit.Async.Deferred.apply(this,[_2db]);
this.list=list;
var _2dc=[];
this.resultList=_2dc;
this.finishedCount=0;
this.fireOnOneCallback=_2d8;
this.fireOnOneErrback=_2d9;
this.consumeErrors=_2da;
var cb=MochiKit.Base.bind(this._cbDeferred,this);
for(var i=0;i<list.length;i++){
var d=list[i];
_2dc.push(undefined);
d.addCallback(cb,i,true);
d.addErrback(cb,i,false);
}
if(list.length===0&&!_2d8){
this.callback(this.resultList);
}
};
MochiKit.Async.DeferredList.prototype=new MochiKit.Async.Deferred();
MochiKit.Async.DeferredList.prototype._cbDeferred=function(_2e0,_2e1,_2e2){
this.resultList[_2e0]=[_2e1,_2e2];
this.finishedCount+=1;
if(this.fired==-1){
if(_2e1&&this.fireOnOneCallback){
this.callback([_2e0,_2e2]);
}else{
if(!_2e1&&this.fireOnOneErrback){
this.errback(_2e2);
}else{
if(this.finishedCount==this.list.length){
this.callback(this.resultList);
}
}
}
}
if(!_2e1&&this.consumeErrors){
_2e2=null;
}
return _2e2;
};
MochiKit.Async.gatherResults=function(_2e3){
var d=new MochiKit.Async.DeferredList(_2e3,false,true,false);
d.addCallback(function(_2e5){
var ret=[];
for(var i=0;i<_2e5.length;i++){
ret.push(_2e5[i][1]);
}
return ret;
});
return d;
};
MochiKit.Async.maybeDeferred=function(func){
var self=MochiKit.Async;
var _2ea;
try{
var r=func.apply(null,MochiKit.Base.extend([],arguments,1));
if(r instanceof self.Deferred){
_2ea=r;
}else{
if(r instanceof Error){
_2ea=self.fail(r);
}else{
_2ea=self.succeed(r);
}
}
}
catch(e){
_2ea=self.fail(e);
}
return _2ea;
};
MochiKit.Async.__new__=function(){
var m=MochiKit.Base;
var ne=m.partial(m._newNamedError,this);
ne("AlreadyCalledError",function(_2ee){
this.deferred=_2ee;
});
ne("CancelledError",function(_2ef){
this.deferred=_2ef;
});
ne("BrowserComplianceError",function(msg){
this.message=msg;
});
ne("GenericError",function(msg){
this.message=msg;
});
ne("XMLHttpRequestError",function(req,msg){
this.req=req;
this.message=msg;
try{
this.number=req.status;
}
catch(e){
}
});
m.nameFunctions(this);
};
MochiKit.Async.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Async);
MochiKit.Base._module("DOM","1.5",["Base"]);
MochiKit.Base.update(MochiKit.DOM,{currentWindow:function(){
return MochiKit.DOM._window;
},currentDocument:function(){
return MochiKit.DOM._document;
},withWindow:function(win,func){
var self=MochiKit.DOM;
var _2f7=self._document;
var _2f8=self._window;
var rval;
try{
self._window=win;
self._document=win.document;
rval=func();
}
catch(e){
self._window=_2f8;
self._document=_2f7;
throw e;
}
self._window=_2f8;
self._document=_2f7;
return rval;
},formContents:function(elem){
var _2fb=[];
var _2fc=[];
var m=MochiKit.Base;
var self=MochiKit.DOM;
if(typeof (elem)=="undefined"||elem===null){
elem=self._document.body;
}else{
elem=self.getElement(elem);
}
m.nodeWalk(elem,function(elem){
var name=elem.name;
if(m.isNotEmpty(name)){
var _301=elem.tagName.toUpperCase();
if(_301==="INPUT"&&(elem.type=="radio"||elem.type=="checkbox")&&!elem.checked){
return null;
}
if(_301==="SELECT"){
if(elem.type=="select-one"){
if(elem.selectedIndex>=0){
var opt=elem.options[elem.selectedIndex];
var v=opt.value;
if(!v){
var h=opt.outerHTML;
if(h&&!h.match(/^[^>]+\svalue\s*=/i)){
v=opt.text;
}
}
_2fb.push(name);
_2fc.push(v);
return null;
}
_2fb.push(name);
_2fc.push("");
return null;
}else{
var opts=elem.options;
if(!opts.length){
_2fb.push(name);
_2fc.push("");
return null;
}
for(var i=0;i<opts.length;i++){
var opt=opts[i];
if(!opt.selected){
continue;
}
var v=opt.value;
if(!v){
var h=opt.outerHTML;
if(h&&!h.match(/^[^>]+\svalue\s*=/i)){
v=opt.text;
}
}
_2fb.push(name);
_2fc.push(v);
}
return null;
}
}
if(_301==="FORM"||_301==="P"||_301==="SPAN"||_301==="DIV"){
return elem.childNodes;
}
_2fb.push(name);
_2fc.push(elem.value||"");
return null;
}
return elem.childNodes;
});
return [_2fb,_2fc];
},withDocument:function(doc,func){
var self=MochiKit.DOM;
var _30a=self._document;
var rval;
try{
self._document=doc;
rval=func();
}
catch(e){
self._document=_30a;
throw e;
}
self._document=_30a;
return rval;
},registerDOMConverter:function(name,_30d,wrap,_30f){
MochiKit.DOM.domConverters.register(name,_30d,wrap,_30f);
},coerceToDOM:function(node,ctx){
var m=MochiKit.Base;
var im=MochiKit.Iter;
var self=MochiKit.DOM;
if(im){
var iter=im.iter;
var _316=im.repeat;
}
var map=m.map;
var _318=self.domConverters;
var _319=arguments.callee;
var _31a=m.NotFound;
while(true){
if(typeof (node)=="undefined"||node===null){
return null;
}
if(typeof (node)=="function"&&typeof (node.length)=="number"&&!(node instanceof Function)){
node=im?im.list(node):m.extend(null,node);
}
if(typeof (node.nodeType)!="undefined"&&node.nodeType>0){
return node;
}
if(typeof (node)=="number"||typeof (node)=="boolean"){
node=node.toString();
}
if(typeof (node)=="string"){
return self._document.createTextNode(node);
}
if(typeof (node.__dom__)=="function"){
node=node.__dom__(ctx);
continue;
}
if(typeof (node.dom)=="function"){
node=node.dom(ctx);
continue;
}
if(typeof (node)=="function"){
node=node.apply(ctx,[ctx]);
continue;
}
if(im){
var _31b=null;
try{
_31b=iter(node);
}
catch(e){
}
if(_31b){
return map(_319,_31b,_316(ctx));
}
}else{
if(m.isArrayLike(node)){
var func=function(n){
return _319(n,ctx);
};
return map(func,node);
}
}
try{
node=_318.match(node,ctx);
continue;
}
catch(e){
if(e!=_31a){
throw e;
}
}
return self._document.createTextNode(node.toString());
}
return undefined;
},isChildNode:function(node,_31f){
var self=MochiKit.DOM;
if(typeof (node)=="string"){
node=self.getElement(node);
}
if(typeof (_31f)=="string"){
_31f=self.getElement(_31f);
}
if(typeof (node)=="undefined"||node===null){
return false;
}
while(node!=null&&node!==self._document){
if(node===_31f){
return true;
}
node=node.parentNode;
}
return false;
},setNodeAttribute:function(node,attr,_323){
var o={};
o[attr]=_323;
try{
return MochiKit.DOM.updateNodeAttributes(node,o);
}
catch(e){
}
return null;
},getNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _328=self.attributeArray.renames[attr];
var _329=self.attributeArray.ignoreAttr[attr];
node=self.getElement(node);
try{
if(_328){
return node[_328];
}
var _32a=node.getAttribute(attr);
if(_32a!=_329){
return _32a;
}
}
catch(e){
}
return null;
},removeNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _32e=self.attributeArray.renames[attr];
node=self.getElement(node);
try{
if(_32e){
return node[_32e];
}
return node.removeAttribute(attr);
}
catch(e){
}
return null;
},updateNodeAttributes:function(node,_330){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
if(_330){
var _333=MochiKit.Base.updatetree;
if(self.attributeArray.compliant){
for(var k in _330){
var v=_330[k];
if(typeof (v)=="object"&&typeof (elem[k])=="object"){
if(k=="style"&&MochiKit.Style){
MochiKit.Style.setStyle(elem,v);
}else{
_333(elem[k],v);
}
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
if(typeof (elem[k])=="string"&&elem[k]!=v){
elem[k]=v;
}
}
}else{
var _336=self.attributeArray.renames;
for(var k in _330){
v=_330[k];
var _337=_336[k];
if(k=="style"&&typeof (v)=="string"){
elem.style.cssText=v;
}else{
if(typeof (_337)=="string"){
elem[_337]=v;
}else{
if(typeof (elem[k])=="object"&&typeof (v)=="object"){
if(k=="style"&&MochiKit.Style){
MochiKit.Style.setStyle(elem,v);
}else{
_333(elem[k],v);
}
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}
if(typeof (elem[k])=="string"&&elem[k]!=v){
elem[k]=v;
}
}
}
}
return elem;
},appendChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _33b=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _33c=MochiKit.Base.concat;
while(_33b.length){
var n=_33b.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
elem.appendChild(n);
}else{
_33b=_33c(n,_33b);
}
}
}
return elem;
},insertSiblingNodesBefore:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _341=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _342=elem.parentNode;
var _343=MochiKit.Base.concat;
while(_341.length){
var n=_341.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
_342.insertBefore(n,elem);
}else{
_341=_343(n,_341);
}
}
}
return _342;
},insertSiblingNodesAfter:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _348=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
if(elem.nextSibling){
return self.insertSiblingNodesBefore(elem.nextSibling,_348);
}else{
return self.appendChildNodes(elem.parentNode,_348);
}
},replaceChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
arguments[0]=elem;
}
var _34c;
while((_34c=elem.firstChild)){
elem.removeChild(_34c);
}
if(arguments.length<2){
return elem;
}else{
return self.appendChildNodes.apply(this,arguments);
}
},createDOM:function(name,_34e){
var elem;
var self=MochiKit.DOM;
var m=MochiKit.Base;
if(typeof (_34e)=="string"||typeof (_34e)=="number"){
var args=m.extend([name,null],arguments,1);
return arguments.callee.apply(this,args);
}
if(typeof (name)=="string"){
var _353=self._xhtml;
if(_34e&&!self.attributeArray.compliant){
var _354="";
if("name" in _34e){
_354+=" name=\""+self.escapeHTML(_34e.name)+"\"";
}
if(name=="input"&&"type" in _34e){
_354+=" type=\""+self.escapeHTML(_34e.type)+"\"";
}
if(_354){
name="<"+name+_354+">";
_353=false;
}
}
var d=self._document;
if(_353&&d===document){
elem=d.createElementNS("http://www.w3.org/1999/xhtml",name);
}else{
elem=d.createElement(name);
}
}else{
elem=name;
}
if(_34e){
self.updateNodeAttributes(elem,_34e);
}
if(arguments.length<=2){
return elem;
}else{
var args=m.extend([elem],arguments,2);
return self.appendChildNodes.apply(this,args);
}
},createDOMFunc:function(){
var m=MochiKit.Base;
return m.partial.apply(this,m.extend([MochiKit.DOM.createDOM],arguments));
},removeElement:function(elem){
var self=MochiKit.DOM;
var e=self.coerceToDOM(self.getElement(elem));
e.parentNode.removeChild(e);
return e;
},swapDOM:function(dest,src){
var self=MochiKit.DOM;
dest=self.getElement(dest);
var _35d=dest.parentNode;
if(src){
src=self.coerceToDOM(self.getElement(src),_35d);
_35d.replaceChild(src,dest);
}else{
_35d.removeChild(dest);
}
return src;
},getElement:function(id){
var self=MochiKit.DOM;
if(arguments.length==1){
return ((typeof (id)=="string")?self._document.getElementById(id):id);
}else{
return MochiKit.Base.map(self.getElement,arguments);
}
},getElementsByTagAndClassName:function(_360,_361,_362){
var self=MochiKit.DOM;
if(typeof (_360)=="undefined"||_360===null){
_360="*";
}
if(typeof (_362)=="undefined"||_362===null){
_362=self._document;
}
_362=self.getElement(_362);
if(_362==null){
return [];
}
var _364=(_362.getElementsByTagName(_360)||self._document.all);
if(typeof (_361)=="undefined"||_361===null){
return MochiKit.Base.extend(null,_364);
}
var _365=[];
for(var i=0;i<_364.length;i++){
var _367=_364[i];
var cls=_367.className;
if(typeof (cls)!="string"){
cls=_367.getAttribute("class");
}
if(typeof (cls)=="string"){
var _369=cls.split(" ");
for(var j=0;j<_369.length;j++){
if(_369[j]==_361){
_365.push(_367);
break;
}
}
}
}
return _365;
},_newCallStack:function(path,once){
var rval=function(){
var _36e=arguments.callee.callStack;
for(var i=0;i<_36e.length;i++){
if(_36e[i].apply(this,arguments)===false){
break;
}
}
if(once){
try{
this[path]=null;
}
catch(e){
}
}
};
rval.callStack=[];
return rval;
},addToCallStack:function(_370,path,func,once){
var self=MochiKit.DOM;
var _375=_370[path];
var _376=_375;
if(!(typeof (_375)=="function"&&typeof (_375.callStack)=="object"&&_375.callStack!==null)){
_376=self._newCallStack(path,once);
if(typeof (_375)=="function"){
_376.callStack.push(_375);
}
_370[path]=_376;
}
_376.callStack.push(func);
},addLoadEvent:function(func){
var self=MochiKit.DOM;
self.addToCallStack(self._window,"onload",func,true);
},focusOnLoad:function(_379){
var self=MochiKit.DOM;
self.addLoadEvent(function(){
_379=self.getElement(_379);
if(_379){
_379.focus();
}
});
},setElementClass:function(_37b,_37c){
var self=MochiKit.DOM;
var obj=self.getElement(_37b);
if(self.attributeArray.compliant){
obj.setAttribute("class",_37c);
}else{
obj.setAttribute("className",_37c);
}
},toggleElementClass:function(_37f){
var self=MochiKit.DOM;
for(var i=1;i<arguments.length;i++){
var obj=self.getElement(arguments[i]);
if(!self.addElementClass(obj,_37f)){
self.removeElementClass(obj,_37f);
}
}
},addElementClass:function(_383,_384){
var self=MochiKit.DOM;
var obj=self.getElement(_383);
var cls=obj.className;
if(typeof (cls)!="string"){
cls=obj.getAttribute("class");
}
if(typeof (cls)!="string"||cls.length===0){
self.setElementClass(obj,_384);
return true;
}
if(cls==_384){
return false;
}
var _388=cls.split(" ");
for(var i=0;i<_388.length;i++){
if(_388[i]==_384){
return false;
}
}
self.setElementClass(obj,cls+" "+_384);
return true;
},removeElementClass:function(_38a,_38b){
var self=MochiKit.DOM;
var obj=self.getElement(_38a);
var cls=obj.className;
if(typeof (cls)!="string"){
cls=obj.getAttribute("class");
}
if(typeof (cls)!="string"||cls.length===0){
return false;
}
if(cls==_38b){
self.setElementClass(obj,"");
return true;
}
var _38f=cls.split(" ");
for(var i=0;i<_38f.length;i++){
if(_38f[i]==_38b){
_38f.splice(i,1);
self.setElementClass(obj,_38f.join(" "));
return true;
}
}
return false;
},swapElementClass:function(_391,_392,_393){
var obj=MochiKit.DOM.getElement(_391);
var res=MochiKit.DOM.removeElementClass(obj,_392);
if(res){
MochiKit.DOM.addElementClass(obj,_393);
}
return res;
},hasElementClass:function(_396,_397){
var obj=MochiKit.DOM.getElement(_396);
if(obj==null){
return false;
}
var cls=obj.className;
if(typeof (cls)!="string"&&typeof (obj.getAttribute)=="function"){
cls=obj.getAttribute("class");
}
if(typeof (cls)!="string"){
return false;
}
var _39a=cls.split(" ");
for(var i=1;i<arguments.length;i++){
var good=false;
for(var j=0;j<_39a.length;j++){
if(_39a[j]==arguments[i]){
good=true;
break;
}
}
if(!good){
return false;
}
}
return true;
},escapeHTML:function(s){
return s.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/</g,"&lt;").replace(/>/g,"&gt;");
},toHTML:function(dom){
return MochiKit.DOM.emitHTML(dom).join("");
},emitHTML:function(dom,lst){
if(typeof (lst)=="undefined"||lst===null){
lst=[];
}
var _3a2=[dom];
var self=MochiKit.DOM;
var _3a4=self.escapeHTML;
var _3a5=self.attributeArray;
while(_3a2.length){
dom=_3a2.pop();
if(typeof (dom)=="string"){
lst.push(dom);
}else{
if(dom.nodeType==1){
lst.push("<"+dom.tagName.toLowerCase());
var _3a6=[];
var _3a7=_3a5(dom);
for(var i=0;i<_3a7.length;i++){
var a=_3a7[i];
_3a6.push([" ",a.name,"=\"",_3a4(a.value),"\""]);
}
_3a6.sort();
for(i=0;i<_3a6.length;i++){
var _3aa=_3a6[i];
for(var j=0;j<_3aa.length;j++){
lst.push(_3aa[j]);
}
}
if(dom.hasChildNodes()){
lst.push(">");
_3a2.push("</"+dom.tagName.toLowerCase()+">");
var _3ac=dom.childNodes;
for(i=_3ac.length-1;i>=0;i--){
_3a2.push(_3ac[i]);
}
}else{
lst.push("/>");
}
}else{
if(dom.nodeType==3){
lst.push(_3a4(dom.nodeValue));
}
}
}
}
return lst;
},scrapeText:function(node,_3ae){
var rval=[];
(function(node){
var cn=node.childNodes;
if(cn){
for(var i=0;i<cn.length;i++){
arguments.callee.call(this,cn[i]);
}
}
var _3b3=node.nodeValue;
if(typeof (_3b3)=="string"){
rval.push(_3b3);
}
})(MochiKit.DOM.getElement(node));
if(_3ae){
return rval;
}else{
return rval.join("");
}
},removeEmptyTextNodes:function(_3b4){
_3b4=MochiKit.DOM.getElement(_3b4);
for(var i=0;i<_3b4.childNodes.length;i++){
var node=_3b4.childNodes[i];
if(node.nodeType==3&&!/\S/.test(node.nodeValue)){
node.parentNode.removeChild(node);
}
}
},getFirstElementByTagAndClassName:function(_3b7,_3b8,_3b9){
var self=MochiKit.DOM;
if(typeof (_3b7)=="undefined"||_3b7===null){
_3b7="*";
}
if(typeof (_3b9)=="undefined"||_3b9===null){
_3b9=self._document;
}
_3b9=self.getElement(_3b9);
if(_3b9==null){
return null;
}
var _3bb=(_3b9.getElementsByTagName(_3b7)||self._document.all);
if(_3bb.length<=0){
return null;
}else{
if(typeof (_3b8)=="undefined"||_3b8===null){
return _3bb[0];
}
}
for(var i=0;i<_3bb.length;i++){
var _3bd=_3bb[i];
var cls=_3bd.className;
if(typeof (cls)!="string"){
cls=_3bd.getAttribute("class");
}
if(typeof (cls)=="string"){
var _3bf=cls.split(" ");
for(var j=0;j<_3bf.length;j++){
if(_3bf[j]==_3b8){
return _3bd;
}
}
}
}
return null;
},getFirstParentByTagAndClassName:function(elem,_3c2,_3c3){
var self=MochiKit.DOM;
elem=self.getElement(elem);
if(typeof (_3c2)=="undefined"||_3c2===null){
_3c2="*";
}else{
_3c2=_3c2.toUpperCase();
}
if(typeof (_3c3)=="undefined"||_3c3===null){
_3c3=null;
}
if(elem){
elem=elem.parentNode;
}
while(elem&&elem.tagName){
var _3c5=elem.tagName.toUpperCase();
if((_3c2==="*"||_3c2==_3c5)&&(_3c3===null||self.hasElementClass(elem,_3c3))){
return elem;
}
elem=elem.parentNode;
}
return null;
},__new__:function(win){
var m=MochiKit.Base;
if(typeof (document)!="undefined"){
this._document=document;
var _3c8="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
this._xhtml=(document.documentElement&&document.createElementNS&&document.documentElement.namespaceURI===_3c8);
}else{
if(MochiKit.MockDOM){
this._document=MochiKit.MockDOM.document;
}
}
this._window=win;
this.domConverters=new m.AdapterRegistry();
var _3c9=this._document.createElement("span");
var _3ca;
if(_3c9&&_3c9.attributes&&_3c9.attributes.length>0){
var _3cb=m.filter;
_3ca=function(node){
return _3cb(_3ca.ignoreAttrFilter,node.attributes);
};
_3ca.ignoreAttr={};
var _3cd=_3c9.attributes;
var _3ce=_3ca.ignoreAttr;
for(var i=0;i<_3cd.length;i++){
var a=_3cd[i];
_3ce[a.name]=a.value;
}
_3ca.ignoreAttrFilter=function(a){
return (_3ca.ignoreAttr[a.name]!=a.value);
};
_3ca.compliant=false;
_3ca.renames={"class":"className","checked":"defaultChecked","usemap":"useMap","for":"htmlFor","readonly":"readOnly","colspan":"colSpan","bgcolor":"bgColor","cellspacing":"cellSpacing","cellpadding":"cellPadding"};
}else{
_3ca=function(node){
return node.attributes;
};
_3ca.compliant=true;
_3ca.ignoreAttr={};
_3ca.renames={};
}
_3ca.__export__=false;
this.attributeArray=_3ca;
m._deprecated(this,"computedStyle","MochiKit.Style.getStyle","1.4");
m._deprecated(this,"elementDimensions","MochiKit.Style.getElementDimensions","1.4");
m._deprecated(this,"elementPosition","MochiKit.Style.getElementPosition","1.4");
m._deprecated(this,"getViewportDimensions","MochiKit.Style.getViewportDimensions","1.4");
m._deprecated(this,"hideElement","MochiKit.Style.hideElement","1.4");
m._deprecated(this,"makeClipping","MochiKit.Style.makeClipping","1.4.1");
m._deprecated(this,"makePositioned","MochiKit.Style.makePositioned","1.4.1");
m._deprecated(this,"setElementDimensions","MochiKit.Style.setElementDimensions","1.4");
m._deprecated(this,"setElementPosition","MochiKit.Style.setElementPosition","1.4");
m._deprecated(this,"setDisplayForElement","MochiKit.Style.setDisplayForElement","1.4");
m._deprecated(this,"setOpacity","MochiKit.Style.setOpacity","1.4");
m._deprecated(this,"showElement","MochiKit.Style.showElement","1.4");
m._deprecated(this,"undoClipping","MochiKit.Style.undoClipping","1.4.1");
m._deprecated(this,"undoPositioned","MochiKit.Style.undoPositioned","1.4.1");
m._deprecated(this,"Coordinates","MochiKit.Style.Coordinates","1.4");
m._deprecated(this,"Dimensions","MochiKit.Style.Dimensions","1.4");
var _3d3=this.createDOMFunc;
this.UL=_3d3("ul");
this.OL=_3d3("ol");
this.LI=_3d3("li");
this.DL=_3d3("dl");
this.DT=_3d3("dt");
this.DD=_3d3("dd");
this.TD=_3d3("td");
this.TR=_3d3("tr");
this.TBODY=_3d3("tbody");
this.THEAD=_3d3("thead");
this.TFOOT=_3d3("tfoot");
this.TABLE=_3d3("table");
this.TH=_3d3("th");
this.INPUT=_3d3("input");
this.SPAN=_3d3("span");
this.A=_3d3("a");
this.DIV=_3d3("div");
this.IMG=_3d3("img");
this.BUTTON=_3d3("button");
this.TT=_3d3("tt");
this.PRE=_3d3("pre");
this.H1=_3d3("h1");
this.H2=_3d3("h2");
this.H3=_3d3("h3");
this.H4=_3d3("h4");
this.H5=_3d3("h5");
this.H6=_3d3("h6");
this.BR=_3d3("br");
this.HR=_3d3("hr");
this.LABEL=_3d3("label");
this.TEXTAREA=_3d3("textarea");
this.FORM=_3d3("form");
this.P=_3d3("p");
this.SELECT=_3d3("select");
this.OPTION=_3d3("option");
this.OPTGROUP=_3d3("optgroup");
this.LEGEND=_3d3("legend");
this.FIELDSET=_3d3("fieldset");
this.STRONG=_3d3("strong");
this.CANVAS=_3d3("canvas");
this.$=this.getElement;
m.nameFunctions(this);
}});
MochiKit.DOM.__new__(((typeof (window)=="undefined")?this:window));
if(MochiKit.__export__){
withWindow=MochiKit.DOM.withWindow;
withDocument=MochiKit.DOM.withDocument;
}
MochiKit.Base._exportSymbols(this,MochiKit.DOM);
MochiKit.Base._module("Selector","1.5",["Base","DOM","Iter"]);
MochiKit.Selector.Selector=function(_3d4){
this.params={classNames:[],pseudoClassNames:[]};
this.expression=_3d4.toString().replace(/(^\s+|\s+$)/g,"");
this.parseExpression();
this.compileMatcher();
};
MochiKit.Selector.Selector.prototype={__class__:MochiKit.Selector.Selector,parseExpression:function(){
function abort(_3d5){
throw "Parse error in selector: "+_3d5;
}
if(this.expression==""){
abort("empty expression");
}
var repr=MochiKit.Base.repr;
var _3d7=this.params;
var expr=this.expression;
var _3d9,_3da,_3db,rest;
while(_3d9=expr.match(/^(.*)\[([a-z0-9_:-]+?)(?:([~\|!^$*]?=)(?:"([^"]*)"|([^\]\s]*)))?\]$/i)){
_3d7.attributes=_3d7.attributes||[];
_3d7.attributes.push({name:_3d9[2],operator:_3d9[3],value:_3d9[4]||_3d9[5]||""});
expr=_3d9[1];
}
if(expr=="*"){
return this.params.wildcard=true;
}
while(_3d9=expr.match(/^([^a-z0-9_-])?([a-z0-9_-]+(?:\([^)]*\))?)(.*)/i)){
_3da=_3d9[1];
_3db=_3d9[2];
rest=_3d9[3];
switch(_3da){
case "#":
_3d7.id=_3db;
break;
case ".":
_3d7.classNames.push(_3db);
break;
case ":":
_3d7.pseudoClassNames.push(_3db);
break;
case "":
case undefined:
_3d7.tagName=_3db.toUpperCase();
break;
default:
abort(repr(expr));
}
expr=rest;
}
if(expr.length>0){
abort(repr(expr));
}
},buildMatchExpression:function(){
var repr=MochiKit.Base.repr;
var _3de=this.params;
var _3df=[];
var _3e0,i;
function childElements(_3e2){
return "MochiKit.Base.filter(function (node) { return node.nodeType == 1; }, "+_3e2+".childNodes)";
}
if(_3de.wildcard){
_3df.push("true");
}
if(_3e0=_3de.id){
_3df.push("element.id == "+repr(_3e0));
}
if(_3e0=_3de.tagName){
_3df.push("element.tagName.toUpperCase() == "+repr(_3e0));
}
if((_3e0=_3de.classNames).length>0){
for(i=0;i<_3e0.length;i++){
_3df.push("MochiKit.DOM.hasElementClass(element, "+repr(_3e0[i])+")");
}
}
if((_3e0=_3de.pseudoClassNames).length>0){
for(i=0;i<_3e0.length;i++){
var _3e3=_3e0[i].match(/^([^(]+)(?:\((.*)\))?$/);
var _3e4=_3e3[1];
var _3e5=_3e3[2];
switch(_3e4){
case "root":
_3df.push("element.nodeType == 9 || element === element.ownerDocument.documentElement");
break;
case "nth-child":
case "nth-last-child":
case "nth-of-type":
case "nth-last-of-type":
_3e3=_3e5.match(/^((?:(\d+)n\+)?(\d+)|odd|even)$/);
if(!_3e3){
throw "Invalid argument to pseudo element nth-child: "+_3e5;
}
var a,b;
if(_3e3[0]=="odd"){
a=2;
b=1;
}else{
if(_3e3[0]=="even"){
a=2;
b=0;
}else{
a=_3e3[2]&&parseInt(_3e3)||null;
b=parseInt(_3e3[3]);
}
}
_3df.push("this.nthChild(element,"+a+","+b+","+!!_3e4.match("^nth-last")+","+!!_3e4.match("of-type$")+")");
break;
case "first-child":
_3df.push("this.nthChild(element, null, 1)");
break;
case "last-child":
_3df.push("this.nthChild(element, null, 1, true)");
break;
case "first-of-type":
_3df.push("this.nthChild(element, null, 1, false, true)");
break;
case "last-of-type":
_3df.push("this.nthChild(element, null, 1, true, true)");
break;
case "only-child":
_3df.push(childElements("element.parentNode")+".length == 1");
break;
case "only-of-type":
_3df.push("MochiKit.Base.filter(function (node) { return node.tagName == element.tagName; }, "+childElements("element.parentNode")+").length == 1");
break;
case "empty":
_3df.push("element.childNodes.length == 0");
break;
case "enabled":
_3df.push("(this.isUIElement(element) && element.disabled === false)");
break;
case "disabled":
_3df.push("(this.isUIElement(element) && element.disabled === true)");
break;
case "checked":
_3df.push("(this.isUIElement(element) && element.checked === true)");
break;
case "not":
var _3e8=new MochiKit.Selector.Selector(_3e5);
_3df.push("!( "+_3e8.buildMatchExpression()+")");
break;
}
}
}
if(_3e0=_3de.attributes){
MochiKit.Base.map(function(_3e9){
var _3ea="MochiKit.DOM.getNodeAttribute(element, "+repr(_3e9.name)+")";
var _3eb=function(_3ec){
return _3ea+".split("+repr(_3ec)+")";
};
_3df.push(_3ea+" != null");
switch(_3e9.operator){
case "=":
_3df.push(_3ea+" == "+repr(_3e9.value));
break;
case "~=":
_3df.push("MochiKit.Base.findValue("+_3eb(" ")+", "+repr(_3e9.value)+") > -1");
break;
case "^=":
_3df.push(_3ea+".substring(0, "+_3e9.value.length+") == "+repr(_3e9.value));
break;
case "$=":
_3df.push(_3ea+".substring("+_3ea+".length - "+_3e9.value.length+") == "+repr(_3e9.value));
break;
case "*=":
_3df.push(_3ea+".match("+repr(_3e9.value)+")");
break;
case "|=":
_3df.push(_3eb("-")+"[0].toUpperCase() == "+repr(_3e9.value.toUpperCase()));
break;
case "!=":
_3df.push(_3ea+" != "+repr(_3e9.value));
break;
case "":
case undefined:
break;
default:
throw "Unknown operator "+_3e9.operator+" in selector";
}
},_3e0);
}
return _3df.join(" && ");
},compileMatcher:function(){
var code="return (!element.tagName) ? false : "+this.buildMatchExpression()+";";
this.match=new Function("element",code);
},nthChild:function(_3ee,a,b,_3f1,_3f2){
var _3f3=MochiKit.Base.filter(function(node){
return node.nodeType==1;
},_3ee.parentNode.childNodes);
if(_3f2){
_3f3=MochiKit.Base.filter(function(node){
return node.tagName==_3ee.tagName;
},_3f3);
}
if(_3f1){
_3f3=MochiKit.Iter.reversed(_3f3);
}
if(a){
var _3f6=MochiKit.Base.findIdentical(_3f3,_3ee);
return ((_3f6+1-b)/a)%1==0;
}else{
return b==MochiKit.Base.findIdentical(_3f3,_3ee)+1;
}
},isUIElement:function(_3f7){
return MochiKit.Base.findValue(["input","button","select","option","textarea","object"],_3f7.tagName.toLowerCase())>-1;
},findElements:function(_3f8,axis){
var _3fa;
if(axis==undefined){
axis="";
}
function inScope(_3fb,_3fc){
if(axis==""){
return MochiKit.DOM.isChildNode(_3fb,_3fc);
}else{
if(axis==">"){
return _3fb.parentNode===_3fc;
}else{
if(axis=="+"){
return _3fb===nextSiblingElement(_3fc);
}else{
if(axis=="~"){
var _3fd=_3fc;
while(_3fd=nextSiblingElement(_3fd)){
if(_3fb===_3fd){
return true;
}
}
return false;
}else{
throw "Invalid axis: "+axis;
}
}
}
}
}
if(_3fa=MochiKit.DOM.getElement(this.params.id)){
if(this.match(_3fa)){
if(!_3f8||inScope(_3fa,_3f8)){
return [_3fa];
}
}
}
function nextSiblingElement(node){
node=node.nextSibling;
while(node&&node.nodeType!=1){
node=node.nextSibling;
}
return node;
}
if(axis==""){
_3f8=(_3f8||MochiKit.DOM.currentDocument()).getElementsByTagName(this.params.tagName||"*");
}else{
if(axis==">"){
if(!_3f8){
throw "> combinator not allowed without preceeding expression";
}
_3f8=MochiKit.Base.filter(function(node){
return node.nodeType==1;
},_3f8.childNodes);
}else{
if(axis=="+"){
if(!_3f8){
throw "+ combinator not allowed without preceeding expression";
}
_3f8=nextSiblingElement(_3f8)&&[nextSiblingElement(_3f8)];
}else{
if(axis=="~"){
if(!_3f8){
throw "~ combinator not allowed without preceeding expression";
}
var _400=[];
while(nextSiblingElement(_3f8)){
_3f8=nextSiblingElement(_3f8);
_400.push(_3f8);
}
_3f8=_400;
}
}
}
}
if(!_3f8){
return [];
}
var _401=MochiKit.Base.filter(MochiKit.Base.bind(function(_402){
return this.match(_402);
},this),_3f8);
return _401;
},repr:function(){
return "Selector("+this.expression+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Base.update(MochiKit.Selector,{findChildElements:function(_403,_404){
_403=MochiKit.DOM.getElement(_403);
var uniq=function(arr){
var res=[];
for(var i=0;i<arr.length;i++){
if(MochiKit.Base.findIdentical(res,arr[i])<0){
res.push(arr[i]);
}
}
return res;
};
return MochiKit.Base.flattenArray(MochiKit.Base.map(function(_409){
var _40a="";
var _40b=function(_40c,expr){
if(match=expr.match(/^[>+~]$/)){
_40a=match[0];
return _40c;
}else{
var _40e=new MochiKit.Selector.Selector(expr);
var _40f=MochiKit.Iter.reduce(function(_410,_411){
return MochiKit.Base.extend(_410,_40e.findElements(_411||_403,_40a));
},_40c,[]);
_40a="";
return _40f;
}
};
var _412=_409.replace(/(^\s+|\s+$)/g,"").split(/\s+/);
return uniq(MochiKit.Iter.reduce(_40b,_412,[null]));
},_404));
},findDocElements:function(){
return MochiKit.Selector.findChildElements(MochiKit.DOM.currentDocument(),arguments);
},__new__:function(){
this.$$=this.findDocElements;
MochiKit.Base.nameFunctions(this);
}});
MochiKit.Selector.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Selector);
MochiKit.Base._module("Style","1.5",["Base","DOM"]);
MochiKit.Style.Dimensions=function(w,h){
if(!(this instanceof MochiKit.Style.Dimensions)){
return new MochiKit.Style.Dimensions(w,h);
}
this.w=w;
this.h=h;
};
MochiKit.Style.Dimensions.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{w: "+repr(this.w)+", h: "+repr(this.h)+"}";
};
MochiKit.Style.Dimensions.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Style.Coordinates=function(x,y){
if(!(this instanceof MochiKit.Style.Coordinates)){
return new MochiKit.Style.Coordinates(x,y);
}
this.x=x;
this.y=y;
};
MochiKit.Style.Coordinates.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{x: "+repr(this.x)+", y: "+repr(this.y)+"}";
};
MochiKit.Style.Coordinates.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Base.update(MochiKit.Style,{getStyle:function(elem,_41a){
var dom=MochiKit.DOM;
var d=dom._document;
elem=dom.getElement(elem);
_41a=MochiKit.Base.camelize(_41a);
if(!elem||elem==d){
return undefined;
}
if(_41a=="opacity"&&typeof (elem.filters)!="undefined"){
var _41d=(MochiKit.Style.getStyle(elem,"filter")||"").match(/alpha\(opacity=(.*)\)/);
if(_41d&&_41d[1]){
return parseFloat(_41d[1])/100;
}
return 1;
}
if(_41a=="float"||_41a=="cssFloat"||_41a=="styleFloat"){
if(elem.style["float"]){
return elem.style["float"];
}else{
if(elem.style.cssFloat){
return elem.style.cssFloat;
}else{
if(elem.style.styleFloat){
return elem.style.styleFloat;
}else{
return "none";
}
}
}
}
var _41e=elem.style?elem.style[_41a]:null;
if(!_41e){
if(d.defaultView&&d.defaultView.getComputedStyle){
var css=d.defaultView.getComputedStyle(elem,null);
_41a=_41a.replace(/([A-Z])/g,"-$1").toLowerCase();
_41e=css?css.getPropertyValue(_41a):null;
}else{
if(elem.currentStyle){
_41e=elem.currentStyle[_41a];
if(/^\d/.test(_41e)&&!/px$/.test(_41e)&&_41a!="fontWeight"){
var left=elem.style.left;
var _421=elem.runtimeStyle.left;
elem.runtimeStyle.left=elem.currentStyle.left;
elem.style.left=_41e||0;
_41e=elem.style.pixelLeft+"px";
elem.style.left=left;
elem.runtimeStyle.left=_421;
}
}
}
}
if(_41a=="opacity"){
_41e=parseFloat(_41e);
}
if(/Opera/.test(navigator.userAgent)&&(MochiKit.Base.findValue(["left","top","right","bottom"],_41a)!=-1)){
if(MochiKit.Style.getStyle(elem,"position")=="static"){
_41e="auto";
}
}
return _41e=="auto"?null:_41e;
},setStyle:function(elem,_423){
elem=MochiKit.DOM.getElement(elem);
for(var name in _423){
switch(name){
case "opacity":
MochiKit.Style.setOpacity(elem,_423[name]);
break;
case "float":
case "cssFloat":
case "styleFloat":
if(typeof (elem.style["float"])!="undefined"){
elem.style["float"]=_423[name];
}else{
if(typeof (elem.style.cssFloat)!="undefined"){
elem.style.cssFloat=_423[name];
}else{
elem.style.styleFloat=_423[name];
}
}
break;
default:
elem.style[MochiKit.Base.camelize(name)]=_423[name];
}
}
},setOpacity:function(elem,o){
elem=MochiKit.DOM.getElement(elem);
var self=MochiKit.Style;
if(o==1){
var _428=/Gecko/.test(navigator.userAgent)&&!(/Konqueror|AppleWebKit|KHTML/.test(navigator.userAgent));
elem.style["opacity"]=_428?0.999999:1;
if(/MSIE/.test(navigator.userAgent)){
elem.style["filter"]=self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"");
}
}else{
if(o<0.00001){
o=0;
}
elem.style["opacity"]=o;
if(/MSIE/.test(navigator.userAgent)){
elem.style["filter"]=self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"")+"alpha(opacity="+o*100+")";
}
}
},getElementPosition:function(elem,_42a){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
elem=dom.getElement(elem);
if(!elem||(!(elem.x&&elem.y)&&(!elem.parentNode===null||self.getStyle(elem,"display")=="none"))){
return undefined;
}
var c=new self.Coordinates(0,0);
var box=null;
var _42f=null;
var d=MochiKit.DOM._document;
var de=d.documentElement;
var b=d.body;
if(!elem.parentNode&&elem.x&&elem.y){
c.x+=elem.x||0;
c.y+=elem.y||0;
}else{
if(elem.getBoundingClientRect){
box=elem.getBoundingClientRect();
c.x+=box.left+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
c.y+=box.top+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
}else{
if(elem.offsetParent){
c.x+=elem.offsetLeft;
c.y+=elem.offsetTop;
_42f=elem.offsetParent;
if(_42f!=elem){
while(_42f){
c.x+=parseInt(_42f.style.borderLeftWidth)||0;
c.y+=parseInt(_42f.style.borderTopWidth)||0;
c.x+=_42f.offsetLeft;
c.y+=_42f.offsetTop;
_42f=_42f.offsetParent;
}
}
var ua=navigator.userAgent.toLowerCase();
if((typeof (opera)!="undefined"&&parseFloat(opera.version())<9)||(ua.indexOf("AppleWebKit")!=-1&&self.getStyle(elem,"position")=="absolute")){
c.x-=b.offsetLeft;
c.y-=b.offsetTop;
}
if(elem.parentNode){
_42f=elem.parentNode;
}else{
_42f=null;
}
while(_42f){
var _434=_42f.tagName.toUpperCase();
if(_434==="BODY"||_434==="HTML"){
break;
}
var disp=self.getStyle(_42f,"display");
if(disp.search(/^inline|table-row.*$/i)){
c.x-=_42f.scrollLeft;
c.y-=_42f.scrollTop;
}
if(_42f.parentNode){
_42f=_42f.parentNode;
}else{
_42f=null;
}
}
}
}
}
if(typeof (_42a)!="undefined"){
_42a=arguments.callee(_42a);
if(_42a){
c.x-=(_42a.x||0);
c.y-=(_42a.y||0);
}
}
return c;
},setElementPosition:function(elem,_437,_438){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_438)=="undefined"){
_438="px";
}
var _439={};
var _43a=MochiKit.Base.isUndefinedOrNull;
if(!_43a(_437.x)){
_439["left"]=_437.x+_438;
}
if(!_43a(_437.y)){
_439["top"]=_437.y+_438;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_439});
},makePositioned:function(_43b){
_43b=MochiKit.DOM.getElement(_43b);
var pos=MochiKit.Style.getStyle(_43b,"position");
if(pos=="static"||!pos){
_43b.style.position="relative";
if(/Opera/.test(navigator.userAgent)){
_43b.style.top=0;
_43b.style.left=0;
}
}
},undoPositioned:function(_43d){
_43d=MochiKit.DOM.getElement(_43d);
if(_43d.style.position=="relative"){
_43d.style.position=_43d.style.top=_43d.style.left=_43d.style.bottom=_43d.style.right="";
}
},makeClipping:function(_43e){
_43e=MochiKit.DOM.getElement(_43e);
var s=_43e.style;
var _440={"overflow":s.overflow,"overflow-x":s.overflowX,"overflow-y":s.overflowY};
if((MochiKit.Style.getStyle(_43e,"overflow")||"visible")!="hidden"){
_43e.style.overflow="hidden";
_43e.style.overflowX="hidden";
_43e.style.overflowY="hidden";
}
return _440;
},undoClipping:function(_441,_442){
_441=MochiKit.DOM.getElement(_441);
if(typeof (_442)=="string"){
_441.style.overflow=_442;
}else{
if(_442!=null){
_441.style.overflow=_442["overflow"];
_441.style.overflowX=_442["overflow-x"];
_441.style.overflowY=_442["overflow-y"];
}
}
},getElementDimensions:function(elem,_444){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
if(typeof (elem.w)=="number"||typeof (elem.h)=="number"){
return new self.Dimensions(elem.w||0,elem.h||0);
}
elem=dom.getElement(elem);
if(!elem){
return undefined;
}
var disp=self.getStyle(elem,"display");
if(disp=="none"||disp==""||typeof (disp)=="undefined"){
var s=elem.style;
var _449=s.visibility;
var _44a=s.position;
var _44b=s.display;
s.visibility="hidden";
s.position="absolute";
s.display=self._getDefaultDisplay(elem);
var _44c=elem.offsetWidth;
var _44d=elem.offsetHeight;
s.display=_44b;
s.position=_44a;
s.visibility=_449;
}else{
_44c=elem.offsetWidth||0;
_44d=elem.offsetHeight||0;
}
if(_444){
var _44e="colSpan" in elem&&"rowSpan" in elem;
var _44f=(_44e&&elem.parentNode&&self.getStyle(elem.parentNode,"borderCollapse")=="collapse");
if(_44f){
if(/MSIE/.test(navigator.userAgent)){
var _450=elem.previousSibling?0.5:1;
var _451=elem.nextSibling?0.5:1;
}else{
var _450=0.5;
var _451=0.5;
}
}else{
var _450=1;
var _451=1;
}
_44c-=Math.round((parseFloat(self.getStyle(elem,"paddingLeft"))||0)+(parseFloat(self.getStyle(elem,"paddingRight"))||0)+_450*(parseFloat(self.getStyle(elem,"borderLeftWidth"))||0)+_451*(parseFloat(self.getStyle(elem,"borderRightWidth"))||0));
if(_44e){
if(/Gecko|Opera/.test(navigator.userAgent)&&!/Konqueror|AppleWebKit|KHTML/.test(navigator.userAgent)){
var _452=0;
}else{
if(/MSIE/.test(navigator.userAgent)){
var _452=1;
}else{
var _452=_44f?0.5:1;
}
}
}else{
var _452=1;
}
_44d-=Math.round((parseFloat(self.getStyle(elem,"paddingTop"))||0)+(parseFloat(self.getStyle(elem,"paddingBottom"))||0)+_452*((parseFloat(self.getStyle(elem,"borderTopWidth"))||0)+(parseFloat(self.getStyle(elem,"borderBottomWidth"))||0)));
}
return new self.Dimensions(_44c,_44d);
},setElementDimensions:function(elem,_454,_455){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_455)=="undefined"){
_455="px";
}
var _456={};
var _457=MochiKit.Base.isUndefinedOrNull;
if(!_457(_454.w)){
_456["width"]=_454.w+_455;
}
if(!_457(_454.h)){
_456["height"]=_454.h+_455;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_456});
},_getDefaultDisplay:function(elem){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
elem=dom.getElement(elem);
if(!elem){
return undefined;
}
var _45b=elem.tagName.toUpperCase();
return self._defaultDisplay[_45b]||"block";
},setDisplayForElement:function(_45c,_45d){
var _45e=MochiKit.Base.extend(null,arguments,1);
var _45f=MochiKit.DOM.getElement;
for(var i=0;i<_45e.length;i++){
_45d=_45f(_45e[i]);
if(_45d){
_45d.style.display=_45c;
}
}
},getViewportDimensions:function(){
var d=new MochiKit.Style.Dimensions();
var w=MochiKit.DOM._window;
var b=MochiKit.DOM._document.body;
if(w.innerWidth){
d.w=w.innerWidth;
d.h=w.innerHeight;
}else{
if(b&&b.parentElement&&b.parentElement.clientWidth){
d.w=b.parentElement.clientWidth;
d.h=b.parentElement.clientHeight;
}else{
if(b&&b.clientWidth){
d.w=b.clientWidth;
d.h=b.clientHeight;
}
}
}
return d;
},getViewportPosition:function(){
var c=new MochiKit.Style.Coordinates(0,0);
var d=MochiKit.DOM._document;
var de=d.documentElement;
var db=d.body;
if(de&&(de.scrollTop||de.scrollLeft)){
c.x=de.scrollLeft;
c.y=de.scrollTop;
}else{
if(db){
c.x=db.scrollLeft;
c.y=db.scrollTop;
}
}
return c;
},__new__:function(){
var m=MochiKit.Base;
var _469=["A","ABBR","ACRONYM","B","BASEFONT","BDO","BIG","BR","CITE","CODE","DFN","EM","FONT","I","IMG","KBD","LABEL","Q","S","SAMP","SMALL","SPAN","STRIKE","STRONG","SUB","SUP","TEXTAREA","TT","U","VAR"];
this._defaultDisplay={"TABLE":"table","THEAD":"table-header-group","TBODY":"table-row-group","TFOOT":"table-footer-group","COLGROUP":"table-column-group","COL":"table-column","TR":"table-row","TD":"table-cell","TH":"table-cell","CAPTION":"table-caption","LI":"list-item","INPUT":"inline-block","SELECT":"inline-block"};
if(/MSIE/.test(navigator.userAgent)){
for(var k in this._defaultDisplay){
var v=this._defaultDisplay[k];
if(v.indexOf("table")==0){
this._defaultDisplay[k]="block";
}
}
}
for(var i=0;i<_469.length;i++){
this._defaultDisplay[_469[i]]="inline";
}
m._deprecated(this,"elementPosition","MochiKit.Style.getElementPosition","1.3");
m._deprecated(this,"elementDimensions","MochiKit.Style.getElementDimensions","1.3");
this.hideElement=m.partial(this.setDisplayForElement,"none");
this.showElement=m.partial(this.setDisplayForElement,"block");
m.nameFunctions(this);
}});
MochiKit.Style.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Style);
MochiKit.Base._module("LoggingPane","1.5",["Base","Logging"]);
MochiKit.LoggingPane.createLoggingPane=function(_46d){
var m=MochiKit.LoggingPane;
_46d=!(!_46d);
if(m._loggingPane&&m._loggingPane.inline!=_46d){
m._loggingPane.closePane();
m._loggingPane=null;
}
if(!m._loggingPane||m._loggingPane.closed){
m._loggingPane=new m.LoggingPane(_46d,MochiKit.Logging.logger);
}
return m._loggingPane;
};
MochiKit.LoggingPane.LoggingPane=function(_46f,_470){
if(typeof (_470)=="undefined"||_470===null){
_470=MochiKit.Logging.logger;
}
this.logger=_470;
var _471=MochiKit.Base.update;
var _472=MochiKit.Base.updatetree;
var bind=MochiKit.Base.bind;
var _474=MochiKit.Base.clone;
var win=window;
var uid="_MochiKit_LoggingPane";
if(typeof (MochiKit.DOM)!="undefined"){
win=MochiKit.DOM.currentWindow();
}
if(!_46f){
var url=win.location.href.split("?")[0].replace(/[#:\/.><&%-]/g,"_");
var name=uid+"_"+url;
var nwin=win.open("",name,"dependent,resizable,height=200");
if(!nwin){
alert("Not able to open debugging window due to pop-up blocking.");
return undefined;
}
nwin.document.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" "+"\"http://www.w3.org/TR/html4/loose.dtd\">"+"<html><head><title>[MochiKit.LoggingPane]</title></head>"+"<body></body></html>");
nwin.document.close();
nwin.document.title+=" "+win.document.title;
win=nwin;
}
var doc=win.document;
this.doc=doc;
var _47b=doc.getElementById(uid);
var _47c=!!_47b;
if(_47b&&typeof (_47b.loggingPane)!="undefined"){
_47b.loggingPane.logger=this.logger;
_47b.loggingPane.buildAndApplyFilter();
return _47b.loggingPane;
}
if(_47c){
var _47d;
while((_47d=_47b.firstChild)){
_47b.removeChild(_47d);
}
}else{
_47b=doc.createElement("div");
_47b.id=uid;
}
_47b.loggingPane=this;
var _47e=doc.createElement("input");
var _47f=doc.createElement("input");
var _480=doc.createElement("button");
var _481=doc.createElement("button");
var _482=doc.createElement("button");
var _483=doc.createElement("button");
var _484=doc.createElement("div");
var _485=doc.createElement("div");
var _486=uid+"_Listener";
this.colorTable=_474(this.colorTable);
var _487=[];
var _488=null;
var _489=function(msg){
var _48b=msg.level;
if(typeof (_48b)=="number"){
_48b=MochiKit.Logging.LogLevel[_48b];
}
return _48b;
};
var _48c=function(msg){
return msg.info.join(" ");
};
var _48e=bind(function(msg){
var _490=_489(msg);
var text=_48c(msg);
var c=this.colorTable[_490];
var p=doc.createElement("span");
p.className="MochiKit-LogMessage MochiKit-LogLevel-"+_490;
p.style.cssText="margin: 0px; white-space: -moz-pre-wrap; white-space: -o-pre-wrap; white-space: pre-wrap; white-space: pre-line; word-wrap: break-word; wrap-option: emergency; color: "+c;
p.appendChild(doc.createTextNode(_490+": "+text));
_485.appendChild(p);
_485.appendChild(doc.createElement("br"));
if(_484.offsetHeight>_484.scrollHeight){
_484.scrollTop=0;
}else{
_484.scrollTop=_484.scrollHeight;
}
},this);
var _494=function(msg){
_487[_487.length]=msg;
_48e(msg);
};
var _496=function(){
var _497,_498;
try{
_497=new RegExp(_47e.value);
_498=new RegExp(_47f.value);
}
catch(e){
logDebug("Error in filter regex: "+e.message);
return null;
}
return function(msg){
return (_497.test(_489(msg))&&_498.test(_48c(msg)));
};
};
var _49a=function(){
while(_485.firstChild){
_485.removeChild(_485.firstChild);
}
};
var _49b=function(){
_487=[];
_49a();
};
var _49c=bind(function(){
if(this.closed){
return;
}
this.closed=true;
if(MochiKit.LoggingPane._loggingPane==this){
MochiKit.LoggingPane._loggingPane=null;
}
this.logger.removeListener(_486);
try{
try{
_47b.loggingPane=null;
}
catch(e){
logFatal("Bookmarklet was closed incorrectly.");
}
if(_46f){
_47b.parentNode.removeChild(_47b);
}else{
this.win.close();
}
}
catch(e){
}
},this);
var _49d=function(){
_49a();
for(var i=0;i<_487.length;i++){
var msg=_487[i];
if(_488===null||_488(msg)){
_48e(msg);
}
}
};
this.buildAndApplyFilter=function(){
_488=_496();
_49d();
this.logger.removeListener(_486);
this.logger.addListener(_486,_488,_494);
};
var _4a0=bind(function(){
_487=this.logger.getMessages();
_49d();
},this);
var _4a1=bind(function(_4a2){
_4a2=_4a2||window.event;
key=_4a2.which||_4a2.keyCode;
if(key==13){
this.buildAndApplyFilter();
}
},this);
var _4a3="display: block; z-index: 1000; left: 0px; bottom: 0px; position: fixed; width: 100%; background-color: white; font: "+this.logFont;
if(_46f){
_4a3+="; height: 10em; border-top: 2px solid black";
}else{
_4a3+="; height: 100%;";
}
_47b.style.cssText=_4a3;
if(!_47c){
doc.body.appendChild(_47b);
}
_4a3={"cssText":"width: 33%; display: inline; font: "+this.logFont};
_472(_47e,{"value":"FATAL|ERROR|WARNING|INFO|DEBUG","onkeypress":_4a1,"style":_4a3});
_47b.appendChild(_47e);
_472(_47f,{"value":".*","onkeypress":_4a1,"style":_4a3});
_47b.appendChild(_47f);
_4a3="width: 8%; display:inline; font: "+this.logFont;
_480.appendChild(doc.createTextNode("Filter"));
_480.onclick=bind("buildAndApplyFilter",this);
_480.style.cssText=_4a3;
_47b.appendChild(_480);
_481.appendChild(doc.createTextNode("Load"));
_481.onclick=_4a0;
_481.style.cssText=_4a3;
_47b.appendChild(_481);
_482.appendChild(doc.createTextNode("Clear"));
_482.onclick=_49b;
_482.style.cssText=_4a3;
_47b.appendChild(_482);
_483.appendChild(doc.createTextNode("Close"));
_483.onclick=_49c;
_483.style.cssText=_4a3;
_47b.appendChild(_483);
_484.style.cssText="overflow: auto; width: 100%";
_485.style.cssText="width: 100%; height: "+(_46f?"8em":"100%");
_484.appendChild(_485);
_47b.appendChild(_484);
this.buildAndApplyFilter();
_4a0();
if(_46f){
this.win=undefined;
}else{
this.win=win;
}
this.inline=_46f;
this.closePane=_49c;
this.closed=false;
return this;
};
MochiKit.LoggingPane.LoggingPane.prototype={"logFont":"8pt Verdana,sans-serif","colorTable":{"ERROR":"red","FATAL":"darkred","WARNING":"blue","INFO":"black","DEBUG":"green"}};
MochiKit.LoggingPane.__new__=function(){
MochiKit.Base.nameFunctions(this);
MochiKit.LoggingPane._loggingPane=null;
};
MochiKit.LoggingPane.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.LoggingPane);
MochiKit.Base._module("Color","1.5",["Base","DOM","Style"]);
MochiKit.Color.Color=function(red,_4a5,blue,_4a7){
if(typeof (_4a7)=="undefined"||_4a7===null){
_4a7=1;
}
this.rgb={r:red,g:_4a5,b:blue,a:_4a7};
};
MochiKit.Color.Color.prototype={__class__:MochiKit.Color.Color,colorWithAlpha:function(_4a8){
var rgb=this.rgb;
var m=MochiKit.Color;
return m.Color.fromRGB(rgb.r,rgb.g,rgb.b,_4a8);
},colorWithHue:function(hue){
var hsl=this.asHSL();
hsl.h=hue;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithSaturation:function(_4ae){
var hsl=this.asHSL();
hsl.s=_4ae;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithLightness:function(_4b1){
var hsl=this.asHSL();
hsl.l=_4b1;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},darkerColorWithLevel:function(_4b4){
var hsl=this.asHSL();
hsl.l=Math.max(hsl.l-_4b4,0);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},lighterColorWithLevel:function(_4b7){
var hsl=this.asHSL();
hsl.l=Math.min(hsl.l+_4b7,1);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},blendedColor:function(_4ba,_4bb){
if(typeof (_4bb)=="undefined"||_4bb===null){
_4bb=0.5;
}
var sf=1-_4bb;
var s=this.rgb;
var d=_4ba.rgb;
var df=_4bb;
return MochiKit.Color.Color.fromRGB((s.r*sf)+(d.r*df),(s.g*sf)+(d.g*df),(s.b*sf)+(d.b*df),(s.a*sf)+(d.a*df));
},compareRGB:function(_4c0){
var a=this.asRGB();
var b=_4c0.asRGB();
return MochiKit.Base.compare([a.r,a.g,a.b,a.a],[b.r,b.g,b.b,b.a]);
},isLight:function(){
return this.asHSL().b>0.5;
},isDark:function(){
return (!this.isLight());
},toHSLString:function(){
var c=this.asHSL();
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hslString;
if(!rval){
var mid=(ccc(c.h,360).toFixed(0)+","+ccc(c.s,100).toPrecision(4)+"%"+","+ccc(c.l,100).toPrecision(4)+"%");
var a=c.a;
if(a>=1){
a=1;
rval="hsl("+mid+")";
}else{
if(a<=0){
a=0;
}
rval="hsla("+mid+","+a+")";
}
this._hslString=rval;
}
return rval;
},toRGBString:function(){
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._rgbString;
if(!rval){
var mid=(ccc(c.r,255).toFixed(0)+","+ccc(c.g,255).toFixed(0)+","+ccc(c.b,255).toFixed(0));
if(c.a!=1){
rval="rgba("+mid+","+c.a+")";
}else{
rval="rgb("+mid+")";
}
this._rgbString=rval;
}
return rval;
},asRGB:function(){
return MochiKit.Base.clone(this.rgb);
},toHexString:function(){
var m=MochiKit.Color;
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hexString;
if(!rval){
rval=("#"+m.toColorPart(ccc(c.r,255))+m.toColorPart(ccc(c.g,255))+m.toColorPart(ccc(c.b,255)));
this._hexString=rval;
}
return rval;
},asHSV:function(){
var hsv=this.hsv;
var c=this.rgb;
if(typeof (hsv)=="undefined"||hsv===null){
hsv=MochiKit.Color.rgbToHSV(this.rgb);
this.hsv=hsv;
}
return MochiKit.Base.clone(hsv);
},asHSL:function(){
var hsl=this.hsl;
var c=this.rgb;
if(typeof (hsl)=="undefined"||hsl===null){
hsl=MochiKit.Color.rgbToHSL(this.rgb);
this.hsl=hsl;
}
return MochiKit.Base.clone(hsl);
},toString:function(){
return this.toRGBString();
},repr:function(){
var c=this.rgb;
var col=[c.r,c.g,c.b,c.a];
return this.__class__.NAME+"("+col.join(", ")+")";
}};
MochiKit.Base.update(MochiKit.Color.Color,{fromRGB:function(red,_4d7,blue,_4d9){
var _4da=MochiKit.Color.Color;
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_4d7=rgb.g;
blue=rgb.b;
if(typeof (rgb.a)=="undefined"){
_4d9=undefined;
}else{
_4d9=rgb.a;
}
}
return new _4da(red,_4d7,blue,_4d9);
},fromHSL:function(hue,_4dd,_4de,_4df){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hslToRGB.apply(m,arguments));
},fromHSV:function(hue,_4e2,_4e3,_4e4){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hsvToRGB.apply(m,arguments));
},fromName:function(name){
var _4e7=MochiKit.Color.Color;
if(name.charAt(0)=="\""){
name=name.substr(1,name.length-2);
}
var _4e8=_4e7._namedColors[name.toLowerCase()];
if(typeof (_4e8)=="string"){
return _4e7.fromHexString(_4e8);
}else{
if(name=="transparent"){
return _4e7.transparentColor();
}
}
return null;
},fromString:function(_4e9){
var self=MochiKit.Color.Color;
var _4eb=_4e9.substr(0,3);
if(_4eb=="rgb"){
return self.fromRGBString(_4e9);
}else{
if(_4eb=="hsl"){
return self.fromHSLString(_4e9);
}else{
if(_4e9.charAt(0)=="#"){
return self.fromHexString(_4e9);
}
}
}
return self.fromName(_4e9);
},fromHexString:function(_4ec){
if(_4ec.charAt(0)=="#"){
_4ec=_4ec.substring(1);
}
var _4ed=[];
var i,hex;
if(_4ec.length==3){
for(i=0;i<3;i++){
hex=_4ec.substr(i,1);
_4ed.push(parseInt(hex+hex,16)/255);
}
}else{
for(i=0;i<6;i+=2){
hex=_4ec.substr(i,2);
_4ed.push(parseInt(hex,16)/255);
}
}
var _4f0=MochiKit.Color.Color;
return _4f0.fromRGB.apply(_4f0,_4ed);
},_fromColorString:function(pre,_4f2,_4f3,_4f4){
if(_4f4.indexOf(pre)===0){
_4f4=_4f4.substring(_4f4.indexOf("(",3)+1,_4f4.length-1);
}
var _4f5=_4f4.split(/\s*,\s*/);
var _4f6=[];
for(var i=0;i<_4f5.length;i++){
var c=_4f5[i];
var val;
var _4fa=c.substring(c.length-3);
if(c.charAt(c.length-1)=="%"){
val=0.01*parseFloat(c.substring(0,c.length-1));
}else{
if(_4fa=="deg"){
val=parseFloat(c)/360;
}else{
if(_4fa=="rad"){
val=parseFloat(c)/(Math.PI*2);
}else{
val=_4f3[i]*parseFloat(c);
}
}
}
_4f6.push(val);
}
return this[_4f2].apply(this,_4f6);
},fromComputedStyle:function(elem,_4fc){
var d=MochiKit.DOM;
var cls=MochiKit.Color.Color;
for(elem=d.getElement(elem);elem;elem=elem.parentNode){
var _4ff=MochiKit.Style.getStyle.apply(d,arguments);
if(!_4ff){
continue;
}
var _500=cls.fromString(_4ff);
if(!_500){
break;
}
if(_500.asRGB().a>0){
return _500;
}
}
return null;
},fromBackground:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"backgroundColor","background-color")||cls.whiteColor();
},fromText:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"color","color")||cls.blackColor();
},namedColors:function(){
return MochiKit.Base.clone(MochiKit.Color.Color._namedColors);
}});
MochiKit.Base.update(MochiKit.Color,{clampColorComponent:function(v,_506){
v*=_506;
if(v<0){
return 0;
}else{
if(v>_506){
return _506;
}else{
return v;
}
}
},_hslValue:function(n1,n2,hue){
if(hue>6){
hue-=6;
}else{
if(hue<0){
hue+=6;
}
}
var val;
if(hue<1){
val=n1+(n2-n1)*hue;
}else{
if(hue<3){
val=n2;
}else{
if(hue<4){
val=n1+(n2-n1)*(4-hue);
}else{
val=n1;
}
}
}
return val;
},hsvToRGB:function(hue,_50c,_50d,_50e){
if(arguments.length==1){
var hsv=hue;
hue=hsv.h;
_50c=hsv.s;
_50d=hsv.v;
_50e=hsv.a;
}
var red;
var _511;
var blue;
if(_50c===0){
red=_50d;
_511=_50d;
blue=_50d;
}else{
var i=Math.floor(hue*6);
var f=(hue*6)-i;
var p=_50d*(1-_50c);
var q=_50d*(1-(_50c*f));
var t=_50d*(1-(_50c*(1-f)));
switch(i){
case 1:
red=q;
_511=_50d;
blue=p;
break;
case 2:
red=p;
_511=_50d;
blue=t;
break;
case 3:
red=p;
_511=q;
blue=_50d;
break;
case 4:
red=t;
_511=p;
blue=_50d;
break;
case 5:
red=_50d;
_511=p;
blue=q;
break;
case 6:
case 0:
red=_50d;
_511=t;
blue=p;
break;
}
}
return {r:red,g:_511,b:blue,a:_50e};
},hslToRGB:function(hue,_519,_51a,_51b){
if(arguments.length==1){
var hsl=hue;
hue=hsl.h;
_519=hsl.s;
_51a=hsl.l;
_51b=hsl.a;
}
var red;
var _51e;
var blue;
if(_519===0){
red=_51a;
_51e=_51a;
blue=_51a;
}else{
var m2;
if(_51a<=0.5){
m2=_51a*(1+_519);
}else{
m2=_51a+_519-(_51a*_519);
}
var m1=(2*_51a)-m2;
var f=MochiKit.Color._hslValue;
var h6=hue*6;
red=f(m1,m2,h6+2);
_51e=f(m1,m2,h6);
blue=f(m1,m2,h6-2);
}
return {r:red,g:_51e,b:blue,a:_51b};
},rgbToHSV:function(red,_525,blue,_527){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_525=rgb.g;
blue=rgb.b;
_527=rgb.a;
}
var max=Math.max(Math.max(red,_525),blue);
var min=Math.min(Math.min(red,_525),blue);
var hue;
var _52c;
var _52d=max;
if(min==max){
hue=0;
_52c=0;
}else{
var _52e=(max-min);
_52c=_52e/max;
if(red==max){
hue=(_525-blue)/_52e;
}else{
if(_525==max){
hue=2+((blue-red)/_52e);
}else{
hue=4+((red-_525)/_52e);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_52c,v:_52d,a:_527};
},rgbToHSL:function(red,_530,blue,_532){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_530=rgb.g;
blue=rgb.b;
_532=rgb.a;
}
var max=Math.max(red,Math.max(_530,blue));
var min=Math.min(red,Math.min(_530,blue));
var hue;
var _537;
var _538=(max+min)/2;
var _539=max-min;
if(_539===0){
hue=0;
_537=0;
}else{
if(_538<=0.5){
_537=_539/(max+min);
}else{
_537=_539/(2-max-min);
}
if(red==max){
hue=(_530-blue)/_539;
}else{
if(_530==max){
hue=2+((blue-red)/_539);
}else{
hue=4+((red-_530)/_539);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_537,l:_538,a:_532};
},toColorPart:function(num){
num=Math.round(num);
var _53b=num.toString(16);
if(num<16){
return "0"+_53b;
}
return _53b;
},__new__:function(){
var m=MochiKit.Base;
this.Color.fromRGBString=m.bind(this.Color._fromColorString,this.Color,"rgb","fromRGB",[1/255,1/255,1/255,1]);
this.Color.fromHSLString=m.bind(this.Color._fromColorString,this.Color,"hsl","fromHSL",[1/360,0.01,0.01,1]);
var _53d=1/3;
var _53e={black:[0,0,0],blue:[0,0,1],brown:[0.6,0.4,0.2],cyan:[0,1,1],darkGray:[_53d,_53d,_53d],gray:[0.5,0.5,0.5],green:[0,1,0],lightGray:[2*_53d,2*_53d,2*_53d],magenta:[1,0,1],orange:[1,0.5,0],purple:[0.5,0,0.5],red:[1,0,0],transparent:[0,0,0,0],white:[1,1,1],yellow:[1,1,0]};
var _53f=function(name,r,g,b,a){
var rval=this.fromRGB(r,g,b,a);
this[name]=function(){
return rval;
};
return rval;
};
for(var k in _53e){
var name=k+"Color";
var _548=m.concat([_53f,this.Color,name],_53e[k]);
this.Color[name]=m.bind.apply(null,_548);
}
var _549=function(){
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof MochiKit.Color.Color)){
return false;
}
}
return true;
};
var _54b=function(a,b){
return a.compareRGB(b);
};
m.nameFunctions(this);
m.registerComparator(this.Color.NAME,_549,_54b);
}});
MochiKit.Color.__new__();
MochiKit.Color.Color._namedColors={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"};
MochiKit.Base._exportSymbols(this,MochiKit.Color);
MochiKit.Base._module("Signal","1.5",["Base","DOM","Style"]);
MochiKit.Signal._observers=[];
MochiKit.Signal.Event=function(src,e){
this._event=e||window.event;
this._src=src;
};
MochiKit.Signal.Event.__export__=false;
MochiKit.Base.update(MochiKit.Signal.Event.prototype,{__repr__:function(){
var repr=MochiKit.Base.repr;
var str="{event(): "+repr(this.event())+", src(): "+repr(this.src())+", type(): "+repr(this.type())+", target(): "+repr(this.target());
if(this.type()&&this.type().indexOf("key")===0||this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu"){
str+=", modifier(): "+"{alt: "+repr(this.modifier().alt)+", ctrl: "+repr(this.modifier().ctrl)+", meta: "+repr(this.modifier().meta)+", shift: "+repr(this.modifier().shift)+", any: "+repr(this.modifier().any)+"}";
}
if(this.type()&&this.type().indexOf("key")===0){
str+=", key(): {code: "+repr(this.key().code)+", string: "+repr(this.key().string)+"}";
}
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
str+=", mouse(): {page: "+repr(this.mouse().page)+", client: "+repr(this.mouse().client);
if(this.type()!="mousemove"&&this.type()!="mousewheel"){
str+=", button: {left: "+repr(this.mouse().button.left)+", middle: "+repr(this.mouse().button.middle)+", right: "+repr(this.mouse().button.right)+"}";
}
if(this.type()=="mousewheel"){
str+=", wheel: "+repr(this.mouse().wheel);
}
str+="}";
}
if(this.type()=="mouseover"||this.type()=="mouseout"||this.type()=="mouseenter"||this.type()=="mouseleave"){
str+=", relatedTarget(): "+repr(this.relatedTarget());
}
str+="}";
return str;
},toString:function(){
return this.__repr__();
},src:function(){
return this._src;
},event:function(){
return this._event;
},type:function(){
if(this._event.type==="DOMMouseScroll"){
return "mousewheel";
}else{
return this._event.type||undefined;
}
},target:function(){
return this._event.target||this._event.srcElement;
},_relatedTarget:null,relatedTarget:function(){
if(this._relatedTarget!==null){
return this._relatedTarget;
}
var elem=null;
if(this.type()=="mouseover"||this.type()=="mouseenter"){
elem=(this._event.relatedTarget||this._event.fromElement);
}else{
if(this.type()=="mouseout"||this.type()=="mouseleave"){
elem=(this._event.relatedTarget||this._event.toElement);
}
}
try{
if(elem!==null&&elem.nodeType!==null){
this._relatedTarget=elem;
return elem;
}
}
catch(ignore){
}
return undefined;
},_modifier:null,modifier:function(){
if(this._modifier!==null){
return this._modifier;
}
var m={};
m.alt=this._event.altKey;
m.ctrl=this._event.ctrlKey;
m.meta=this._event.metaKey||false;
m.shift=this._event.shiftKey;
m.any=m.alt||m.ctrl||m.shift||m.meta;
this._modifier=m;
return m;
},_key:null,key:function(){
if(this._key!==null){
return this._key;
}
var k={};
if(this.type()&&this.type().indexOf("key")===0){
if(this.type()=="keydown"||this.type()=="keyup"){
k.code=this._event.keyCode;
k.string=(MochiKit.Signal._specialKeys[k.code]||"KEY_UNKNOWN");
this._key=k;
return k;
}else{
if(this.type()=="keypress"){
k.code=0;
k.string="";
if(typeof (this._event.charCode)!="undefined"&&this._event.charCode!==0&&!MochiKit.Signal._specialMacKeys[this._event.charCode]){
k.code=this._event.charCode;
k.string=String.fromCharCode(k.code);
}else{
if(this._event.keyCode&&typeof (this._event.charCode)=="undefined"){
k.code=this._event.keyCode;
k.string=String.fromCharCode(k.code);
}
}
this._key=k;
return k;
}
}
}
return undefined;
},_mouse:null,mouse:function(){
if(this._mouse!==null){
return this._mouse;
}
var m={};
var e=this._event;
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
m.client=new MochiKit.Style.Coordinates(0,0);
if(e.clientX||e.clientY){
m.client.x=(!e.clientX||e.clientX<0)?0:e.clientX;
m.client.y=(!e.clientY||e.clientY<0)?0:e.clientY;
}
m.page=new MochiKit.Style.Coordinates(0,0);
if(e.pageX||e.pageY){
m.page.x=(!e.pageX||e.pageX<0)?0:e.pageX;
m.page.y=(!e.pageY||e.pageY<0)?0:e.pageY;
}else{
var de=MochiKit.DOM._document.documentElement;
var b=MochiKit.DOM._document.body;
m.page.x=e.clientX+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
m.page.y=e.clientY+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
}
if(this.type()!="mousemove"&&this.type()!="mousewheel"){
m.button={};
m.button.left=false;
m.button.right=false;
m.button.middle=false;
if(e.which){
m.button.left=(e.which==1);
m.button.middle=(e.which==2);
m.button.right=(e.which==3);
}else{
m.button.left=!!(e.button&1);
m.button.right=!!(e.button&2);
m.button.middle=!!(e.button&4);
}
}
if(this.type()=="mousewheel"){
m.wheel=new MochiKit.Style.Coordinates(0,0);
if(e.wheelDeltaX||e.wheelDeltaY){
m.wheel.x=e.wheelDeltaX/-40||0;
m.wheel.y=e.wheelDeltaY/-40||0;
}else{
if(e.wheelDelta){
m.wheel.y=e.wheelDelta/-40;
}else{
m.wheel.y=e.detail||0;
}
}
}
this._mouse=m;
return m;
}
return undefined;
},stop:function(){
this.stopPropagation();
this.preventDefault();
},stopPropagation:function(){
if(this._event.stopPropagation){
this._event.stopPropagation();
}else{
this._event.cancelBubble=true;
}
},preventDefault:function(){
if(this._event.preventDefault){
this._event.preventDefault();
}else{
if(this._confirmUnload===null){
this._event.returnValue=false;
}
}
},_confirmUnload:null,confirmUnload:function(msg){
if(this.type()=="beforeunload"){
this._confirmUnload=msg;
this._event.returnValue=msg;
}
}});
MochiKit.Signal._specialMacKeys={3:"KEY_ENTER",63289:"KEY_NUM_PAD_CLEAR",63276:"KEY_PAGE_UP",63277:"KEY_PAGE_DOWN",63275:"KEY_END",63273:"KEY_HOME",63234:"KEY_ARROW_LEFT",63232:"KEY_ARROW_UP",63235:"KEY_ARROW_RIGHT",63233:"KEY_ARROW_DOWN",63302:"KEY_INSERT",63272:"KEY_DELETE"};
(function(){
var _55a=MochiKit.Signal._specialMacKeys;
for(i=63236;i<=63242;i++){
_55a[i]="KEY_F"+(i-63236+1);
}
})();
MochiKit.Signal._specialKeys={8:"KEY_BACKSPACE",9:"KEY_TAB",12:"KEY_NUM_PAD_CLEAR",13:"KEY_ENTER",16:"KEY_SHIFT",17:"KEY_CTRL",18:"KEY_ALT",19:"KEY_PAUSE",20:"KEY_CAPS_LOCK",27:"KEY_ESCAPE",32:"KEY_SPACEBAR",33:"KEY_PAGE_UP",34:"KEY_PAGE_DOWN",35:"KEY_END",36:"KEY_HOME",37:"KEY_ARROW_LEFT",38:"KEY_ARROW_UP",39:"KEY_ARROW_RIGHT",40:"KEY_ARROW_DOWN",44:"KEY_PRINT_SCREEN",45:"KEY_INSERT",46:"KEY_DELETE",59:"KEY_SEMICOLON",91:"KEY_WINDOWS_LEFT",92:"KEY_WINDOWS_RIGHT",93:"KEY_SELECT",106:"KEY_NUM_PAD_ASTERISK",107:"KEY_NUM_PAD_PLUS_SIGN",109:"KEY_NUM_PAD_HYPHEN-MINUS",110:"KEY_NUM_PAD_FULL_STOP",111:"KEY_NUM_PAD_SOLIDUS",144:"KEY_NUM_LOCK",145:"KEY_SCROLL_LOCK",186:"KEY_SEMICOLON",187:"KEY_EQUALS_SIGN",188:"KEY_COMMA",189:"KEY_HYPHEN-MINUS",190:"KEY_FULL_STOP",191:"KEY_SOLIDUS",192:"KEY_GRAVE_ACCENT",219:"KEY_LEFT_SQUARE_BRACKET",220:"KEY_REVERSE_SOLIDUS",221:"KEY_RIGHT_SQUARE_BRACKET",222:"KEY_APOSTROPHE"};
(function(){
var _55b=MochiKit.Signal._specialKeys;
for(var i=48;i<=57;i++){
_55b[i]="KEY_"+(i-48);
}
for(i=65;i<=90;i++){
_55b[i]="KEY_"+String.fromCharCode(i);
}
for(i=96;i<=105;i++){
_55b[i]="KEY_NUM_PAD_"+(i-96);
}
for(i=112;i<=123;i++){
_55b[i]="KEY_F"+(i-112+1);
}
})();
MochiKit.Signal.Ident=function(_55d){
this.source=_55d.source;
this.signal=_55d.signal;
this.listener=_55d.listener;
this.isDOM=_55d.isDOM;
this.objOrFunc=_55d.objOrFunc;
this.funcOrStr=_55d.funcOrStr;
this.connected=_55d.connected;
};
MochiKit.Signal.Ident.__export__=false;
MochiKit.Signal.Ident.prototype={};
MochiKit.Base.update(MochiKit.Signal,{_unloadCache:function(){
var self=MochiKit.Signal;
var _55f=self._observers;
for(var i=0;i<_55f.length;i++){
if(_55f[i].signal!=="onload"&&_55f[i].signal!=="onunload"){
self._disconnect(_55f[i]);
}
}
},_listener:function(src,sig,func,obj,_565){
var self=MochiKit.Signal;
var E=self.Event;
if(!_565){
if(typeof (func.im_self)=="undefined"){
return MochiKit.Base.bindLate(func,obj);
}else{
return func;
}
}
obj=obj||src;
if(typeof (func)=="string"){
if(sig==="onload"||sig==="onunload"){
return function(_568){
obj[func].apply(obj,[new E(src,_568)]);
var _569=new MochiKit.Signal.Ident({source:src,signal:sig,objOrFunc:obj,funcOrStr:func});
MochiKit.Signal._disconnect(_569);
};
}else{
return function(_56a){
obj[func].apply(obj,[new E(src,_56a)]);
};
}
}else{
if(sig==="onload"||sig==="onunload"){
return function(_56b){
func.apply(obj,[new E(src,_56b)]);
var _56c=new MochiKit.Signal.Ident({source:src,signal:sig,objOrFunc:func});
MochiKit.Signal._disconnect(_56c);
};
}else{
return function(_56d){
func.apply(obj,[new E(src,_56d)]);
};
}
}
},_browserAlreadyHasMouseEnterAndLeave:function(){
return /MSIE/.test(navigator.userAgent);
},_browserLacksMouseWheelEvent:function(){
return /Gecko\//.test(navigator.userAgent);
},_mouseEnterListener:function(src,sig,func,obj){
var E=MochiKit.Signal.Event;
return function(_573){
var e=new E(src,_573);
try{
e.relatedTarget().nodeName;
}
catch(err){
return;
}
e.stop();
if(MochiKit.DOM.isChildNode(e.relatedTarget(),src)){
return;
}
e.type=function(){
return sig;
};
if(typeof (func)=="string"){
return obj[func].apply(obj,[e]);
}else{
return func.apply(obj,[e]);
}
};
},_getDestPair:function(_575,_576){
var obj=null;
var func=null;
if(typeof (_576)!="undefined"){
obj=_575;
func=_576;
if(typeof (_576)=="string"){
if(typeof (_575[_576])!="function"){
throw new Error("'funcOrStr' must be a function on 'objOrFunc'");
}
}else{
if(typeof (_576)!="function"){
throw new Error("'funcOrStr' must be a function or string");
}
}
}else{
if(typeof (_575)!="function"){
throw new Error("'objOrFunc' must be a function if 'funcOrStr' is not given");
}else{
func=_575;
}
}
return [obj,func];
},connect:function(src,sig,_57b,_57c){
src=MochiKit.DOM.getElement(src);
var self=MochiKit.Signal;
if(typeof (sig)!="string"){
throw new Error("'sig' must be a string");
}
var _57e=self._getDestPair(_57b,_57c);
var obj=_57e[0];
var func=_57e[1];
if(typeof (obj)=="undefined"||obj===null){
obj=src;
}
var _581=!!(src.addEventListener||src.attachEvent);
if(_581&&(sig==="onmouseenter"||sig==="onmouseleave")&&!self._browserAlreadyHasMouseEnterAndLeave()){
var _582=self._mouseEnterListener(src,sig.substr(2),func,obj);
if(sig==="onmouseenter"){
sig="onmouseover";
}else{
sig="onmouseout";
}
}else{
if(_581&&sig=="onmousewheel"&&self._browserLacksMouseWheelEvent()){
var _582=self._listener(src,sig,func,obj,_581);
sig="onDOMMouseScroll";
}else{
var _582=self._listener(src,sig,func,obj,_581);
}
}
if(src.addEventListener){
src.addEventListener(sig.substr(2),_582,false);
}else{
if(src.attachEvent){
src.attachEvent(sig,_582);
}
}
var _583=new MochiKit.Signal.Ident({source:src,signal:sig,listener:_582,isDOM:_581,objOrFunc:_57b,funcOrStr:_57c,connected:true});
self._observers.push(_583);
if(!_581&&typeof (src.__connect__)=="function"){
var args=MochiKit.Base.extend([_583],arguments,1);
src.__connect__.apply(src,args);
}
return _583;
},_disconnect:function(_585){
if(!_585.connected){
return;
}
_585.connected=false;
var src=_585.source;
var sig=_585.signal;
var _588=_585.listener;
if(!_585.isDOM){
if(typeof (src.__disconnect__)=="function"){
src.__disconnect__(_585,sig,_585.objOrFunc,_585.funcOrStr);
}
return;
}
if(src.removeEventListener){
src.removeEventListener(sig.substr(2),_588,false);
}else{
if(src.detachEvent){
src.detachEvent(sig,_588);
}else{
throw new Error("'src' must be a DOM element");
}
}
},disconnect:function(_589){
var self=MochiKit.Signal;
var _58b=self._observers;
var m=MochiKit.Base;
if(arguments.length>1){
var src=MochiKit.DOM.getElement(arguments[0]);
var sig=arguments[1];
var obj=arguments[2];
var func=arguments[3];
for(var i=_58b.length-1;i>=0;i--){
var o=_58b[i];
if(o.source===src&&o.signal===sig&&o.objOrFunc===obj&&o.funcOrStr===func){
self._disconnect(o);
if(!self._lock){
_58b.splice(i,1);
}else{
self._dirty=true;
}
return true;
}
}
}else{
var idx=m.findIdentical(_58b,_589);
if(idx>=0){
self._disconnect(_589);
if(!self._lock){
_58b.splice(idx,1);
}else{
self._dirty=true;
}
return true;
}
}
return false;
},disconnectAllTo:function(_594,_595){
var self=MochiKit.Signal;
var _597=self._observers;
var _598=self._disconnect;
var _599=self._lock;
var _59a=self._dirty;
if(typeof (_595)==="undefined"){
_595=null;
}
for(var i=_597.length-1;i>=0;i--){
var _59c=_597[i];
if(_59c.objOrFunc===_594&&(_595===null||_59c.funcOrStr===_595)){
_598(_59c);
if(_599){
_59a=true;
}else{
_597.splice(i,1);
}
}
}
self._dirty=_59a;
},disconnectAll:function(src,sig){
src=MochiKit.DOM.getElement(src);
var m=MochiKit.Base;
var _5a0=m.flattenArguments(m.extend(null,arguments,1));
var self=MochiKit.Signal;
var _5a2=self._disconnect;
var _5a3=self._observers;
var i,_5a5;
var _5a6=self._lock;
var _5a7=self._dirty;
if(_5a0.length===0){
for(i=_5a3.length-1;i>=0;i--){
_5a5=_5a3[i];
if(_5a5.source===src){
_5a2(_5a5);
if(!_5a6){
_5a3.splice(i,1);
}else{
_5a7=true;
}
}
}
}else{
var sigs={};
for(i=0;i<_5a0.length;i++){
sigs[_5a0[i]]=true;
}
for(i=_5a3.length-1;i>=0;i--){
_5a5=_5a3[i];
if(_5a5.source===src&&_5a5.signal in sigs){
_5a2(_5a5);
if(!_5a6){
_5a3.splice(i,1);
}else{
_5a7=true;
}
}
}
}
self._dirty=_5a7;
},signal:function(src,sig){
var self=MochiKit.Signal;
var _5ac=self._observers;
src=MochiKit.DOM.getElement(src);
var args=MochiKit.Base.extend(null,arguments,2);
var _5ae=[];
self._lock=true;
for(var i=0;i<_5ac.length;i++){
var _5b0=_5ac[i];
if(_5b0.source===src&&_5b0.signal===sig&&_5b0.connected){
try{
if(_5b0.isDOM&&_5b0.funcOrStr!=null){
var obj=_5b0.objOrFunc;
obj[_5b0.funcOrStr].apply(obj,args);
}else{
if(_5b0.isDOM){
_5b0.objOrFunc.apply(src,args);
}else{
_5b0.listener.apply(src,args);
}
}
}
catch(e){
_5ae.push(e);
}
}
}
self._lock=false;
if(self._dirty){
self._dirty=false;
for(var i=_5ac.length-1;i>=0;i--){
if(!_5ac[i].connected){
_5ac.splice(i,1);
}
}
}
if(_5ae.length==1){
throw _5ae[0];
}else{
if(_5ae.length>1){
var e=new Error("Multiple errors thrown in handling 'sig', see errors property");
e.errors=_5ae;
throw e;
}
}
}});
MochiKit.Signal.__new__=function(win){
var m=MochiKit.Base;
this._document=document;
this._window=win;
this._lock=false;
this._dirty=false;
try{
this.connect(window,"onunload",this._unloadCache);
}
catch(e){
}
m.nameFunctions(this);
};
MochiKit.Signal.__new__(this);
if(MochiKit.__export__){
connect=MochiKit.Signal.connect;
disconnect=MochiKit.Signal.disconnect;
disconnectAll=MochiKit.Signal.disconnectAll;
signal=MochiKit.Signal.signal;
}
MochiKit.Base._exportSymbols(this,MochiKit.Signal);
MochiKit.Base._module("Position","1.5",["Base","DOM","Style"]);
MochiKit.Base.update(MochiKit.Position,{__export__:false,includeScrollOffsets:false,prepare:function(){
var _5b5=window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0;
var _5b6=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;
this.windowOffset=new MochiKit.Style.Coordinates(_5b5,_5b6);
},cumulativeOffset:function(_5b7){
var _5b8=0;
var _5b9=0;
do{
_5b8+=_5b7.offsetTop||0;
_5b9+=_5b7.offsetLeft||0;
_5b7=_5b7.offsetParent;
}while(_5b7);
return new MochiKit.Style.Coordinates(_5b9,_5b8);
},realOffset:function(_5ba){
var _5bb=0;
var _5bc=0;
do{
_5bb+=_5ba.scrollTop||0;
_5bc+=_5ba.scrollLeft||0;
_5ba=_5ba.parentNode;
}while(_5ba);
return new MochiKit.Style.Coordinates(_5bc,_5bb);
},within:function(_5bd,x,y){
if(this.includeScrollOffsets){
return this.withinIncludingScrolloffsets(_5bd,x,y);
}
this.xcomp=x;
this.ycomp=y;
this.offset=this.cumulativeOffset(_5bd);
if(_5bd.style.position=="fixed"){
this.offset.x+=this.windowOffset.x;
this.offset.y+=this.windowOffset.y;
}
return (y>=this.offset.y&&y<this.offset.y+_5bd.offsetHeight&&x>=this.offset.x&&x<this.offset.x+_5bd.offsetWidth);
},withinIncludingScrolloffsets:function(_5c0,x,y){
var _5c3=this.realOffset(_5c0);
this.xcomp=x+_5c3.x-this.windowOffset.x;
this.ycomp=y+_5c3.y-this.windowOffset.y;
this.offset=this.cumulativeOffset(_5c0);
return (this.ycomp>=this.offset.y&&this.ycomp<this.offset.y+_5c0.offsetHeight&&this.xcomp>=this.offset.x&&this.xcomp<this.offset.x+_5c0.offsetWidth);
},overlap:function(mode,_5c5){
if(!mode){
return 0;
}
if(mode=="vertical"){
return ((this.offset.y+_5c5.offsetHeight)-this.ycomp)/_5c5.offsetHeight;
}
if(mode=="horizontal"){
return ((this.offset.x+_5c5.offsetWidth)-this.xcomp)/_5c5.offsetWidth;
}
},absolutize:function(_5c6){
_5c6=MochiKit.DOM.getElement(_5c6);
if(_5c6.style.position=="absolute"){
return;
}
MochiKit.Position.prepare();
var _5c7=MochiKit.Position.positionedOffset(_5c6);
var _5c8=_5c6.clientWidth;
var _5c9=_5c6.clientHeight;
var _5ca={"position":_5c6.style.position,"left":_5c7.x-parseFloat(_5c6.style.left||0),"top":_5c7.y-parseFloat(_5c6.style.top||0),"width":_5c6.style.width,"height":_5c6.style.height};
_5c6.style.position="absolute";
_5c6.style.top=_5c7.y+"px";
_5c6.style.left=_5c7.x+"px";
_5c6.style.width=_5c8+"px";
_5c6.style.height=_5c9+"px";
return _5ca;
},positionedOffset:function(_5cb){
var _5cc=0,_5cd=0;
do{
_5cc+=_5cb.offsetTop||0;
_5cd+=_5cb.offsetLeft||0;
_5cb=_5cb.offsetParent;
if(_5cb){
p=MochiKit.Style.getStyle(_5cb,"position");
if(p=="relative"||p=="absolute"){
break;
}
}
}while(_5cb);
return new MochiKit.Style.Coordinates(_5cd,_5cc);
},relativize:function(_5ce,_5cf){
_5ce=MochiKit.DOM.getElement(_5ce);
if(_5ce.style.position=="relative"){
return;
}
MochiKit.Position.prepare();
var top=parseFloat(_5ce.style.top||0)-(_5cf["top"]||0);
var left=parseFloat(_5ce.style.left||0)-(_5cf["left"]||0);
_5ce.style.position=_5cf["position"];
_5ce.style.top=top+"px";
_5ce.style.left=left+"px";
_5ce.style.width=_5cf["width"];
_5ce.style.height=_5cf["height"];
},clone:function(_5d2,_5d3){
_5d2=MochiKit.DOM.getElement(_5d2);
_5d3=MochiKit.DOM.getElement(_5d3);
_5d3.style.position="absolute";
var _5d4=this.cumulativeOffset(_5d2);
_5d3.style.top=_5d4.y+"px";
_5d3.style.left=_5d4.x+"px";
_5d3.style.width=_5d2.offsetWidth+"px";
_5d3.style.height=_5d2.offsetHeight+"px";
},page:function(_5d5){
var _5d6=0;
var _5d7=0;
var _5d8=_5d5;
do{
_5d6+=_5d8.offsetTop||0;
_5d7+=_5d8.offsetLeft||0;
if(_5d8.offsetParent==document.body&&MochiKit.Style.getStyle(_5d8,"position")=="absolute"){
break;
}
}while(_5d8=_5d8.offsetParent);
_5d8=_5d5;
do{
_5d6-=_5d8.scrollTop||0;
_5d7-=_5d8.scrollLeft||0;
}while(_5d8=_5d8.parentNode);
return new MochiKit.Style.Coordinates(_5d7,_5d6);
}});
MochiKit.Position.__new__=function(win){
MochiKit.Base.nameFunctions(this);
};
MochiKit.Position.__new__(this);
MochiKit.Base._exportSymbols(this,MochiKit.Position);
MochiKit.Base._module("Visual","1.5",["Base","DOM","Style","Color","Position"]);
MochiKit.Visual._RoundCorners=function(e,_5db){
e=MochiKit.DOM.getElement(e);
this._setOptions(_5db);
if(this.options.__unstable__wrapElement){
e=this._doWrap(e);
}
var _5dc=this.options.color;
var C=MochiKit.Color.Color;
if(this.options.color==="fromElement"){
_5dc=C.fromBackground(e);
}else{
if(!(_5dc instanceof C)){
_5dc=C.fromString(_5dc);
}
}
this.isTransparent=(_5dc.asRGB().a<=0);
var _5de=this.options.bgColor;
if(this.options.bgColor==="fromParent"){
_5de=C.fromBackground(e.offsetParent);
}else{
if(!(_5de instanceof C)){
_5de=C.fromString(_5de);
}
}
this._roundCornersImpl(e,_5dc,_5de);
};
MochiKit.Visual._RoundCorners.prototype={_doWrap:function(e){
var _5e0=e.parentNode;
var doc=MochiKit.DOM.currentDocument();
if(typeof (doc.defaultView)==="undefined"||doc.defaultView===null){
return e;
}
var _5e2=doc.defaultView.getComputedStyle(e,null);
if(typeof (_5e2)==="undefined"||_5e2===null){
return e;
}
var _5e3=MochiKit.DOM.DIV({"style":{display:"block",marginTop:_5e2.getPropertyValue("padding-top"),marginRight:_5e2.getPropertyValue("padding-right"),marginBottom:_5e2.getPropertyValue("padding-bottom"),marginLeft:_5e2.getPropertyValue("padding-left"),padding:"0px"}});
_5e3.innerHTML=e.innerHTML;
e.innerHTML="";
e.appendChild(_5e3);
return e;
},_roundCornersImpl:function(e,_5e5,_5e6){
if(this.options.border){
this._renderBorder(e,_5e6);
}
if(this._isTopRounded()){
this._roundTopCorners(e,_5e5,_5e6);
}
if(this._isBottomRounded()){
this._roundBottomCorners(e,_5e5,_5e6);
}
},_renderBorder:function(el,_5e8){
var _5e9="1px solid "+this._borderColor(_5e8);
var _5ea="border-left: "+_5e9;
var _5eb="border-right: "+_5e9;
var _5ec="style='"+_5ea+";"+_5eb+"'";
el.innerHTML="<div "+_5ec+">"+el.innerHTML+"</div>";
},_roundTopCorners:function(el,_5ee,_5ef){
var _5f0=this._createCorner(_5ef);
for(var i=0;i<this.options.numSlices;i++){
_5f0.appendChild(this._createCornerSlice(_5ee,_5ef,i,"top"));
}
el.style.paddingTop=0;
el.insertBefore(_5f0,el.firstChild);
},_roundBottomCorners:function(el,_5f3,_5f4){
var _5f5=this._createCorner(_5f4);
for(var i=(this.options.numSlices-1);i>=0;i--){
_5f5.appendChild(this._createCornerSlice(_5f3,_5f4,i,"bottom"));
}
el.style.paddingBottom=0;
el.appendChild(_5f5);
},_createCorner:function(_5f7){
var dom=MochiKit.DOM;
return dom.DIV({style:{backgroundColor:_5f7.toString()}});
},_createCornerSlice:function(_5f9,_5fa,n,_5fc){
var _5fd=MochiKit.DOM.SPAN();
var _5fe=_5fd.style;
_5fe.backgroundColor=_5f9.toString();
_5fe.display="block";
_5fe.height="1px";
_5fe.overflow="hidden";
_5fe.fontSize="1px";
var _5ff=this._borderColor(_5f9,_5fa);
if(this.options.border&&n===0){
_5fe.borderTopStyle="solid";
_5fe.borderTopWidth="1px";
_5fe.borderLeftWidth="0px";
_5fe.borderRightWidth="0px";
_5fe.borderBottomWidth="0px";
_5fe.height="0px";
_5fe.borderColor=_5ff.toString();
}else{
if(_5ff){
_5fe.borderColor=_5ff.toString();
_5fe.borderStyle="solid";
_5fe.borderWidth="0px 1px";
}
}
if(!this.options.compact&&(n==(this.options.numSlices-1))){
_5fe.height="2px";
}
this._setMargin(_5fd,n,_5fc);
this._setBorder(_5fd,n,_5fc);
return _5fd;
},_setOptions:function(_600){
this.options={corners:"all",color:"fromElement",bgColor:"fromParent",blend:true,border:false,compact:false,__unstable__wrapElement:false};
MochiKit.Base.update(this.options,_600);
this.options.numSlices=(this.options.compact?2:4);
},_whichSideTop:function(){
var _601=this.options.corners;
if(this._hasString(_601,"all","top")){
return "";
}
var _602=(_601.indexOf("tl")!=-1);
var _603=(_601.indexOf("tr")!=-1);
if(_602&&_603){
return "";
}
if(_602){
return "left";
}
if(_603){
return "right";
}
return "";
},_whichSideBottom:function(){
var _604=this.options.corners;
if(this._hasString(_604,"all","bottom")){
return "";
}
var _605=(_604.indexOf("bl")!=-1);
var _606=(_604.indexOf("br")!=-1);
if(_605&&_606){
return "";
}
if(_605){
return "left";
}
if(_606){
return "right";
}
return "";
},_borderColor:function(_607,_608){
if(_607=="transparent"){
return _608;
}else{
if(this.options.border){
return this.options.border;
}else{
if(this.options.blend){
return _608.blendedColor(_607);
}
}
}
return "";
},_setMargin:function(el,n,_60b){
var _60c=this._marginSize(n)+"px";
var _60d=(_60b=="top"?this._whichSideTop():this._whichSideBottom());
var _60e=el.style;
if(_60d=="left"){
_60e.marginLeft=_60c;
_60e.marginRight="0px";
}else{
if(_60d=="right"){
_60e.marginRight=_60c;
_60e.marginLeft="0px";
}else{
_60e.marginLeft=_60c;
_60e.marginRight=_60c;
}
}
},_setBorder:function(el,n,_611){
var _612=this._borderSize(n)+"px";
var _613=(_611=="top"?this._whichSideTop():this._whichSideBottom());
var _614=el.style;
if(_613=="left"){
_614.borderLeftWidth=_612;
_614.borderRightWidth="0px";
}else{
if(_613=="right"){
_614.borderRightWidth=_612;
_614.borderLeftWidth="0px";
}else{
_614.borderLeftWidth=_612;
_614.borderRightWidth=_612;
}
}
},_marginSize:function(n){
if(this.isTransparent){
return 0;
}
var o=this.options;
if(o.compact&&o.blend){
var _617=[1,0];
return _617[n];
}else{
if(o.compact){
var _618=[2,1];
return _618[n];
}else{
if(o.blend){
var _619=[3,2,1,0];
return _619[n];
}else{
var _61a=[5,3,2,1];
return _61a[n];
}
}
}
},_borderSize:function(n){
var o=this.options;
var _61d;
if(o.compact&&(o.blend||this.isTransparent)){
return 1;
}else{
if(o.compact){
_61d=[1,0];
}else{
if(o.blend){
_61d=[2,1,1,1];
}else{
if(o.border){
_61d=[0,2,0,0];
}else{
if(this.isTransparent){
_61d=[5,3,2,1];
}else{
return 0;
}
}
}
}
}
return _61d[n];
},_hasString:function(str){
for(var i=1;i<arguments.length;i++){
if(str.indexOf(arguments[i])!=-1){
return true;
}
}
return false;
},_isTopRounded:function(){
return this._hasString(this.options.corners,"all","top","tl","tr");
},_isBottomRounded:function(){
return this._hasString(this.options.corners,"all","bottom","bl","br");
},_hasSingleTextChild:function(el){
return (el.childNodes.length==1&&el.childNodes[0].nodeType==3);
}};
MochiKit.Visual.roundElement=function(e,_622){
new MochiKit.Visual._RoundCorners(e,_622);
};
MochiKit.Visual.roundClass=function(_623,_624,_625){
var _626=MochiKit.DOM.getElementsByTagAndClassName(_623,_624);
for(var i=0;i<_626.length;i++){
MochiKit.Visual.roundElement(_626[i],_625);
}
};
MochiKit.Visual.tagifyText=function(_628,_629){
_629=_629||"position:relative";
if(/MSIE/.test(navigator.userAgent)){
_629+=";zoom:1";
}
_628=MochiKit.DOM.getElement(_628);
var ma=MochiKit.Base.map;
ma(function(_62b){
if(_62b.nodeType==3){
ma(function(_62c){
_628.insertBefore(MochiKit.DOM.SPAN({style:_629},_62c==" "?String.fromCharCode(160):_62c),_62b);
},_62b.nodeValue.split(""));
MochiKit.DOM.removeElement(_62b);
}
},_628.childNodes);
};
MochiKit.Visual._forceRerendering=function(_62d){
try{
_62d=MochiKit.DOM.getElement(_62d);
var n=document.createTextNode(" ");
_62d.appendChild(n);
_62d.removeChild(n);
}
catch(e){
}
};
MochiKit.Visual.multiple=function(_62f,_630,_631){
_631=MochiKit.Base.update({speed:0.1,delay:0},_631);
var _632=_631.delay;
var _633=0;
MochiKit.Base.map(function(_634){
_631.delay=_633*_631.speed+_632;
new _630(_634,_631);
_633+=1;
},_62f);
};
MochiKit.Visual.PAIRS={"slide":["slideDown","slideUp"],"blind":["blindDown","blindUp"],"appear":["appear","fade"],"size":["grow","shrink"]};
MochiKit.Visual.toggle=function(_635,_636,_637){
_635=MochiKit.DOM.getElement(_635);
_636=(_636||"appear").toLowerCase();
_637=MochiKit.Base.update({queue:{position:"end",scope:(_635.id||"global"),limit:1}},_637);
var v=MochiKit.Visual;
v[MochiKit.Style.getStyle(_635,"display")!="none"?v.PAIRS[_636][1]:v.PAIRS[_636][0]](_635,_637);
};
MochiKit.Visual.Transitions={__export__:false};
MochiKit.Visual.Transitions.linear=function(pos){
return pos;
};
MochiKit.Visual.Transitions.sinoidal=function(pos){
return 0.5-Math.cos(pos*Math.PI)/2;
};
MochiKit.Visual.Transitions.reverse=function(pos){
return 1-pos;
};
MochiKit.Visual.Transitions.flicker=function(pos){
return 0.25-Math.cos(pos*Math.PI)/4+Math.random()/2;
};
MochiKit.Visual.Transitions.wobble=function(pos){
return 0.5-Math.cos(9*pos*Math.PI)/2;
};
MochiKit.Visual.Transitions.pulse=function(pos,_63f){
if(_63f){
pos*=2*_63f;
}else{
pos*=10;
}
var _640=pos-Math.floor(pos);
return (Math.floor(pos)%2==0)?_640:1-_640;
};
MochiKit.Visual.Transitions.parabolic=function(pos){
return pos*pos;
};
MochiKit.Visual.Transitions.none=function(pos){
return 0;
};
MochiKit.Visual.Transitions.full=function(pos){
return 1;
};
MochiKit.Visual.ScopedQueue=function(){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls();
}
this.__init__();
};
MochiKit.Visual.ScopedQueue.__export__=false;
MochiKit.Base.update(MochiKit.Visual.ScopedQueue.prototype,{__init__:function(){
this.effects=[];
this.interval=null;
},add:function(_645){
var _646=new Date().getTime();
var _647=(typeof (_645.options.queue)=="string")?_645.options.queue:_645.options.queue.position;
var ma=MochiKit.Base.map;
switch(_647){
case "front":
ma(function(e){
if(e.state=="idle"){
e.startOn+=_645.finishOn;
e.finishOn+=_645.finishOn;
}
},this.effects);
break;
case "end":
var _64a;
ma(function(e){
var i=e.finishOn;
if(i>=(_64a||i)){
_64a=i;
}
},this.effects);
_646=_64a||_646;
break;
case "break":
ma(function(e){
e.finalize();
},this.effects);
break;
}
_645.startOn+=_646;
_645.finishOn+=_646;
if(!_645.options.queue.limit||this.effects.length<_645.options.queue.limit){
this.effects.push(_645);
}
if(!this.interval){
this.interval=this.startLoop(MochiKit.Base.bind(this.loop,this),40);
}
},startLoop:function(func,_64f){
return setInterval(func,_64f);
},remove:function(_650){
this.effects=MochiKit.Base.filter(function(e){
return e!=_650;
},this.effects);
if(!this.effects.length){
this.stopLoop(this.interval);
this.interval=null;
}
},stopLoop:function(_652){
clearInterval(_652);
},loop:function(){
var _653=new Date().getTime();
MochiKit.Base.map(function(_654){
_654.loop(_653);
},this.effects);
}});
MochiKit.Visual.Queues={__export__:false,instances:{},get:function(_655){
if(typeof (_655)!="string"){
return _655;
}
if(!this.instances[_655]){
this.instances[_655]=new MochiKit.Visual.ScopedQueue();
}
return this.instances[_655];
}};
MochiKit.Visual.Queue=MochiKit.Visual.Queues.get("global");
MochiKit.Visual.Queue.__export__=false;
MochiKit.Visual.DefaultOptions={__export__:false,transition:MochiKit.Visual.Transitions.sinoidal,duration:1,fps:25,sync:false,from:0,to:1,delay:0,queue:"parallel"};
MochiKit.Visual.Base=function(){
};
MochiKit.Visual.Base.prototype={__class__:MochiKit.Visual.Base,start:function(_656){
var v=MochiKit.Visual;
this.options=MochiKit.Base.setdefault(_656,v.DefaultOptions);
this.currentFrame=0;
this.state="idle";
this.startOn=this.options.delay*1000;
this.finishOn=this.startOn+(this.options.duration*1000);
this.event("beforeStart");
if(!this.options.sync){
v.Queues.get(typeof (this.options.queue)=="string"?"global":this.options.queue.scope).add(this);
}
},loop:function(_658){
if(_658>=this.startOn){
if(_658>=this.finishOn){
return this.finalize();
}
var pos=(_658-this.startOn)/(this.finishOn-this.startOn);
var _65a=Math.round(pos*this.options.fps*this.options.duration);
if(_65a>this.currentFrame){
this.render(pos);
this.currentFrame=_65a;
}
}
},render:function(pos){
if(this.state=="idle"){
this.state="running";
this.event("beforeSetup");
this.setup();
this.event("afterSetup");
}
if(this.state=="running"){
if(this.options.transition){
pos=this.options.transition(pos);
}
pos*=(this.options.to-this.options.from);
pos+=this.options.from;
this.event("beforeUpdate");
this.update(pos);
this.event("afterUpdate");
}
},cancel:function(){
if(!this.options.sync){
MochiKit.Visual.Queues.get(typeof (this.options.queue)=="string"?"global":this.options.queue.scope).remove(this);
}
this.state="finished";
},finalize:function(){
this.render(1);
this.cancel();
this.event("beforeFinish");
this.finish();
this.event("afterFinish");
},setup:function(){
},finish:function(){
},update:function(_65c){
},event:function(_65d){
if(this.options[_65d+"Internal"]){
this.options[_65d+"Internal"](this);
}
if(this.options[_65d]){
this.options[_65d](this);
}
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.Visual.Parallel=function(_65e,_65f){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_65e,_65f);
}
this.__init__(_65e,_65f);
};
MochiKit.Visual.Parallel.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Parallel.prototype,{__class__:MochiKit.Visual.Parallel,__init__:function(_661,_662){
this.effects=_661||[];
this.start(_662);
},update:function(_663){
MochiKit.Base.map(function(_664){
_664.render(_663);
},this.effects);
},finish:function(){
MochiKit.Base.map(function(_665){
_665.finalize();
},this.effects);
}});
MochiKit.Visual.Sequence=function(_666,_667){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_666,_667);
}
this.__init__(_666,_667);
};
MochiKit.Visual.Sequence.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Sequence.prototype,{__class__:MochiKit.Visual.Sequence,__init__:function(_669,_66a){
var defs={transition:MochiKit.Visual.Transitions.linear,duration:0};
this.effects=_669||[];
MochiKit.Base.map(function(_66c){
defs.duration+=_66c.options.duration;
},this.effects);
MochiKit.Base.setdefault(_66a,defs);
this.start(_66a);
},update:function(_66d){
var time=_66d*this.options.duration;
for(var i=0;i<this.effects.length;i++){
var _670=this.effects[i];
if(time<=_670.options.duration){
_670.render(time/_670.options.duration);
break;
}else{
time-=_670.options.duration;
}
}
},finish:function(){
MochiKit.Base.map(function(_671){
_671.finalize();
},this.effects);
}});
MochiKit.Visual.Opacity=function(_672,_673){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_672,_673);
}
this.__init__(_672,_673);
};
MochiKit.Visual.Opacity.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Opacity.prototype,{__class__:MochiKit.Visual.Opacity,__init__:function(_675,_676){
var b=MochiKit.Base;
var s=MochiKit.Style;
this.element=MochiKit.DOM.getElement(_675);
if(this.element.currentStyle&&(!this.element.currentStyle.hasLayout)){
s.setStyle(this.element,{zoom:1});
}
_676=b.update({from:s.getStyle(this.element,"opacity")||0,to:1},_676);
this.start(_676);
},update:function(_679){
MochiKit.Style.setStyle(this.element,{"opacity":_679});
}});
MochiKit.Visual.Move=function(_67a,_67b){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_67a,_67b);
}
this.__init__(_67a,_67b);
};
MochiKit.Visual.Move.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Move.prototype,{__class__:MochiKit.Visual.Move,__init__:function(_67d,_67e){
this.element=MochiKit.DOM.getElement(_67d);
_67e=MochiKit.Base.update({x:0,y:0,mode:"relative"},_67e);
this.start(_67e);
},setup:function(){
MochiKit.Style.makePositioned(this.element);
var s=this.element.style;
var _680=s.visibility;
var _681=s.display;
if(_681=="none"){
s.visibility="hidden";
s.display="";
}
this.originalLeft=parseFloat(MochiKit.Style.getStyle(this.element,"left")||"0");
this.originalTop=parseFloat(MochiKit.Style.getStyle(this.element,"top")||"0");
if(this.options.mode=="absolute"){
this.options.x-=this.originalLeft;
this.options.y-=this.originalTop;
}
if(_681=="none"){
s.visibility=_680;
s.display=_681;
}
},update:function(_682){
MochiKit.Style.setStyle(this.element,{left:Math.round(this.options.x*_682+this.originalLeft)+"px",top:Math.round(this.options.y*_682+this.originalTop)+"px"});
}});
MochiKit.Visual.Scale=function(_683,_684,_685){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_683,_684,_685);
}
this.__init__(_683,_684,_685);
};
MochiKit.Visual.Scale.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Scale.prototype,{__class__:MochiKit.Visual.Scale,__init__:function(_687,_688,_689){
this.element=MochiKit.DOM.getElement(_687);
_689=MochiKit.Base.update({scaleX:true,scaleY:true,scaleContent:true,scaleFromCenter:false,scaleMode:"box",scaleFrom:100,scaleTo:_688},_689);
this.start(_689);
},setup:function(){
this.restoreAfterFinish=this.options.restoreAfterFinish||false;
this.elementPositioning=MochiKit.Style.getStyle(this.element,"position");
var ma=MochiKit.Base.map;
var b=MochiKit.Base.bind;
this.originalStyle={};
ma(b(function(k){
this.originalStyle[k]=this.element.style[k];
},this),["top","left","width","height","fontSize"]);
this.originalTop=this.element.offsetTop;
this.originalLeft=this.element.offsetLeft;
var _68d=MochiKit.Style.getStyle(this.element,"font-size")||"100%";
ma(b(function(_68e){
if(_68d.indexOf(_68e)>0){
this.fontSize=parseFloat(_68d);
this.fontSizeType=_68e;
}
},this),["em","px","%"]);
this.factor=(this.options.scaleTo-this.options.scaleFrom)/100;
if(/^content/.test(this.options.scaleMode)){
this.dims=[this.element.scrollHeight,this.element.scrollWidth];
}else{
if(this.options.scaleMode=="box"){
this.dims=[this.element.offsetHeight,this.element.offsetWidth];
}else{
this.dims=[this.options.scaleMode.originalHeight,this.options.scaleMode.originalWidth];
}
}
},update:function(_68f){
var _690=(this.options.scaleFrom/100)+(this.factor*_68f);
if(this.options.scaleContent&&this.fontSize){
MochiKit.Style.setStyle(this.element,{fontSize:this.fontSize*_690+this.fontSizeType});
}
this.setDimensions(this.dims[0]*_690,this.dims[1]*_690);
},finish:function(){
if(this.restoreAfterFinish){
MochiKit.Style.setStyle(this.element,this.originalStyle);
}
},setDimensions:function(_691,_692){
var d={};
var r=Math.round;
if(/MSIE/.test(navigator.userAgent)){
r=Math.ceil;
}
if(this.options.scaleX){
d.width=r(_692)+"px";
}
if(this.options.scaleY){
d.height=r(_691)+"px";
}
if(this.options.scaleFromCenter){
var topd=(_691-this.dims[0])/2;
var _696=(_692-this.dims[1])/2;
if(this.elementPositioning=="absolute"){
if(this.options.scaleY){
d.top=this.originalTop-topd+"px";
}
if(this.options.scaleX){
d.left=this.originalLeft-_696+"px";
}
}else{
if(this.options.scaleY){
d.top=-topd+"px";
}
if(this.options.scaleX){
d.left=-_696+"px";
}
}
}
MochiKit.Style.setStyle(this.element,d);
}});
MochiKit.Visual.Highlight=function(_697,_698){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_697,_698);
}
this.__init__(_697,_698);
};
MochiKit.Visual.Highlight.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Highlight.prototype,{__class__:MochiKit.Visual.Highlight,__init__:function(_69a,_69b){
this.element=MochiKit.DOM.getElement(_69a);
_69b=MochiKit.Base.update({startcolor:"#ffff99"},_69b);
this.start(_69b);
},setup:function(){
var b=MochiKit.Base;
var s=MochiKit.Style;
if(s.getStyle(this.element,"display")=="none"){
this.cancel();
return;
}
this.oldStyle={backgroundImage:s.getStyle(this.element,"background-image")};
s.setStyle(this.element,{backgroundImage:"none"});
if(!this.options.endcolor){
this.options.endcolor=MochiKit.Color.Color.fromBackground(this.element).toHexString();
}
if(b.isUndefinedOrNull(this.options.restorecolor)){
this.options.restorecolor=s.getStyle(this.element,"background-color");
}
this._base=b.map(b.bind(function(i){
return parseInt(this.options.startcolor.slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
this._delta=b.map(b.bind(function(i){
return parseInt(this.options.endcolor.slice(i*2+1,i*2+3),16)-this._base[i];
},this),[0,1,2]);
},update:function(_6a0){
var m="#";
MochiKit.Base.map(MochiKit.Base.bind(function(i){
m+=MochiKit.Color.toColorPart(Math.round(this._base[i]+this._delta[i]*_6a0));
},this),[0,1,2]);
MochiKit.Style.setStyle(this.element,{backgroundColor:m});
},finish:function(){
MochiKit.Style.setStyle(this.element,MochiKit.Base.update(this.oldStyle,{backgroundColor:this.options.restorecolor}));
}});
MochiKit.Visual.ScrollTo=function(_6a3,_6a4){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_6a3,_6a4);
}
this.__init__(_6a3,_6a4);
};
MochiKit.Visual.ScrollTo.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.ScrollTo.prototype,{__class__:MochiKit.Visual.ScrollTo,__init__:function(_6a6,_6a7){
this.element=MochiKit.DOM.getElement(_6a6);
this.start(_6a7);
},setup:function(){
var p=MochiKit.Position;
p.prepare();
var _6a9=p.cumulativeOffset(this.element);
if(this.options.offset){
_6a9.y+=this.options.offset;
}
var max;
if(window.innerHeight){
max=window.innerHeight-window.height;
}else{
if(document.documentElement&&document.documentElement.clientHeight){
max=document.documentElement.clientHeight-document.body.scrollHeight;
}else{
if(document.body){
max=document.body.clientHeight-document.body.scrollHeight;
}
}
}
this.scrollStart=p.windowOffset.y;
this.delta=(_6a9.y>max?max:_6a9.y)-this.scrollStart;
},update:function(_6ab){
var p=MochiKit.Position;
p.prepare();
window.scrollTo(p.windowOffset.x,this.scrollStart+(_6ab*this.delta));
}});
MochiKit.Visual._CSS_LENGTH=/^(([\+\-]?[0-9\.]+)(em|ex|px|in|cm|mm|pt|pc|\%))|0$/;
MochiKit.Visual.Morph=function(_6ad,_6ae){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_6ad,_6ae);
}
this.__init__(_6ad,_6ae);
};
MochiKit.Visual.Morph.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Morph.prototype,{__class__:MochiKit.Visual.Morph,__init__:function(_6b0,_6b1){
this.element=MochiKit.DOM.getElement(_6b0);
this.start(_6b1);
},setup:function(){
var b=MochiKit.Base;
var _6b3=this.options.style;
this.styleStart={};
this.styleEnd={};
this.units={};
var _6b4,unit;
for(var s in _6b3){
_6b4=_6b3[s];
s=b.camelize(s);
if(MochiKit.Visual._CSS_LENGTH.test(_6b4)){
var _6b7=_6b4.match(/^([\+\-]?[0-9\.]+)(.*)$/);
_6b4=parseFloat(_6b7[1]);
unit=(_6b7.length==3)?_6b7[2]:null;
this.styleEnd[s]=_6b4;
this.units[s]=unit;
_6b4=MochiKit.Style.getStyle(this.element,s);
_6b7=_6b4.match(/^([\+\-]?[0-9\.]+)(.*)$/);
_6b4=parseFloat(_6b7[1]);
this.styleStart[s]=_6b4;
}else{
if(/[Cc]olor$/.test(s)){
var c=MochiKit.Color.Color;
_6b4=c.fromString(_6b4);
if(_6b4){
this.units[s]="color";
this.styleEnd[s]=_6b4.toHexString();
_6b4=MochiKit.Style.getStyle(this.element,s);
this.styleStart[s]=c.fromString(_6b4).toHexString();
this.styleStart[s]=b.map(b.bind(function(i){
return parseInt(this.styleStart[s].slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
this.styleEnd[s]=b.map(b.bind(function(i){
return parseInt(this.styleEnd[s].slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
}
}else{
this.element.style[s]=_6b4;
}
}
}
},update:function(_6bb){
var _6bc;
for(var s in this.styleStart){
if(this.units[s]=="color"){
var m="#";
var _6bf=this.styleStart[s];
var end=this.styleEnd[s];
MochiKit.Base.map(MochiKit.Base.bind(function(i){
m+=MochiKit.Color.toColorPart(Math.round(_6bf[i]+(end[i]-_6bf[i])*_6bb));
},this),[0,1,2]);
this.element.style[s]=m;
}else{
_6bc=this.styleStart[s]+Math.round((this.styleEnd[s]-this.styleStart[s])*_6bb*1000)/1000+this.units[s];
this.element.style[s]=_6bc;
}
}
}});
MochiKit.Visual.fade=function(_6c2,_6c3){
var s=MochiKit.Style;
var _6c5=s.getStyle(_6c2,"opacity");
_6c3=MochiKit.Base.update({from:s.getStyle(_6c2,"opacity")||1,to:0,afterFinishInternal:function(_6c6){
if(_6c6.options.to!==0){
return;
}
s.hideElement(_6c6.element);
s.setStyle(_6c6.element,{"opacity":_6c5});
}},_6c3);
return new MochiKit.Visual.Opacity(_6c2,_6c3);
};
MochiKit.Visual.appear=function(_6c7,_6c8){
var s=MochiKit.Style;
var v=MochiKit.Visual;
_6c8=MochiKit.Base.update({from:(s.getStyle(_6c7,"display")=="none"?0:s.getStyle(_6c7,"opacity")||0),to:1,afterFinishInternal:function(_6cb){
v._forceRerendering(_6cb.element);
},beforeSetupInternal:function(_6cc){
s.setStyle(_6cc.element,{"opacity":_6cc.options.from});
s.showElement(_6cc.element);
}},_6c8);
return new v.Opacity(_6c7,_6c8);
};
MochiKit.Visual.puff=function(_6cd,_6ce){
var s=MochiKit.Style;
var v=MochiKit.Visual;
_6cd=MochiKit.DOM.getElement(_6cd);
var _6d1=MochiKit.Style.getElementDimensions(_6cd,true);
var _6d2={position:s.getStyle(_6cd,"position"),top:_6cd.style.top,left:_6cd.style.left,width:_6cd.style.width,height:_6cd.style.height,opacity:s.getStyle(_6cd,"opacity")};
_6ce=MochiKit.Base.update({beforeSetupInternal:function(_6d3){
MochiKit.Position.absolutize(_6d3.effects[0].element);
},afterFinishInternal:function(_6d4){
s.hideElement(_6d4.effects[0].element);
s.setStyle(_6d4.effects[0].element,_6d2);
},scaleContent:true,scaleFromCenter:true},_6ce);
return new v.Parallel([new v.Scale(_6cd,200,{sync:true,scaleFromCenter:_6ce.scaleFromCenter,scaleMode:{originalHeight:_6d1.h,originalWidth:_6d1.w},scaleContent:_6ce.scaleContent,restoreAfterFinish:true}),new v.Opacity(_6cd,{sync:true,to:0})],_6ce);
};
MochiKit.Visual.blindUp=function(_6d5,_6d6){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_6d5=d.getElement(_6d5);
var _6d9=s.getElementDimensions(_6d5,true);
var _6da=s.makeClipping(_6d5);
_6d6=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleMode:{originalHeight:_6d9.h,originalWidth:_6d9.w},restoreAfterFinish:true,afterFinishInternal:function(_6db){
s.hideElement(_6db.element);
s.undoClipping(_6db.element,_6da);
}},_6d6);
return new MochiKit.Visual.Scale(_6d5,0,_6d6);
};
MochiKit.Visual.blindDown=function(_6dc,_6dd){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_6dc=d.getElement(_6dc);
var _6e0=s.getElementDimensions(_6dc,true);
var _6e1;
_6dd=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleFrom:0,scaleMode:{originalHeight:_6e0.h,originalWidth:_6e0.w},restoreAfterFinish:true,afterSetupInternal:function(_6e2){
_6e1=s.makeClipping(_6e2.element);
s.setStyle(_6e2.element,{height:"0px"});
s.showElement(_6e2.element);
},afterFinishInternal:function(_6e3){
s.undoClipping(_6e3.element,_6e1);
}},_6dd);
return new MochiKit.Visual.Scale(_6dc,100,_6dd);
};
MochiKit.Visual.switchOff=function(_6e4,_6e5){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_6e4=d.getElement(_6e4);
var _6e8=s.getElementDimensions(_6e4,true);
var _6e9=s.getStyle(_6e4,"opacity");
var _6ea;
_6e5=MochiKit.Base.update({duration:0.7,restoreAfterFinish:true,beforeSetupInternal:function(_6eb){
s.makePositioned(_6e4);
_6ea=s.makeClipping(_6e4);
},afterFinishInternal:function(_6ec){
s.hideElement(_6e4);
s.undoClipping(_6e4,_6ea);
s.undoPositioned(_6e4);
s.setStyle(_6e4,{"opacity":_6e9});
}},_6e5);
var v=MochiKit.Visual;
return new v.Sequence([new v.appear(_6e4,{sync:true,duration:0.57*_6e5.duration,from:0,transition:v.Transitions.flicker}),new v.Scale(_6e4,1,{sync:true,duration:0.43*_6e5.duration,scaleFromCenter:true,scaleX:false,scaleMode:{originalHeight:_6e8.h,originalWidth:_6e8.w},scaleContent:false,restoreAfterFinish:true})],_6e5);
};
MochiKit.Visual.dropOut=function(_6ee,_6ef){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_6ee=d.getElement(_6ee);
var _6f2={top:s.getStyle(_6ee,"top"),left:s.getStyle(_6ee,"left"),opacity:s.getStyle(_6ee,"opacity")};
_6ef=MochiKit.Base.update({duration:0.5,distance:100,beforeSetupInternal:function(_6f3){
s.makePositioned(_6f3.effects[0].element);
},afterFinishInternal:function(_6f4){
s.hideElement(_6f4.effects[0].element);
s.undoPositioned(_6f4.effects[0].element);
s.setStyle(_6f4.effects[0].element,_6f2);
}},_6ef);
var v=MochiKit.Visual;
return new v.Parallel([new v.Move(_6ee,{x:0,y:_6ef.distance,sync:true}),new v.Opacity(_6ee,{sync:true,to:0})],_6ef);
};
MochiKit.Visual.shake=function(_6f6,_6f7){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_6f6=d.getElement(_6f6);
var _6fb={top:s.getStyle(_6f6,"top"),left:s.getStyle(_6f6,"left")};
_6f7=MochiKit.Base.update({duration:0.5,afterFinishInternal:function(_6fc){
s.undoPositioned(_6f6);
s.setStyle(_6f6,_6fb);
}},_6f7);
return new v.Sequence([new v.Move(_6f6,{sync:true,duration:0.1*_6f7.duration,x:20,y:0}),new v.Move(_6f6,{sync:true,duration:0.2*_6f7.duration,x:-40,y:0}),new v.Move(_6f6,{sync:true,duration:0.2*_6f7.duration,x:40,y:0}),new v.Move(_6f6,{sync:true,duration:0.2*_6f7.duration,x:-40,y:0}),new v.Move(_6f6,{sync:true,duration:0.2*_6f7.duration,x:40,y:0}),new v.Move(_6f6,{sync:true,duration:0.1*_6f7.duration,x:-20,y:0})],_6f7);
};
MochiKit.Visual.slideDown=function(_6fd,_6fe){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
_6fd=d.getElement(_6fd);
if(!_6fd.firstChild){
throw new Error("MochiKit.Visual.slideDown must be used on a element with a child");
}
d.removeEmptyTextNodes(_6fd);
var _702=s.getStyle(_6fd.firstChild,"bottom")||0;
var _703=s.getElementDimensions(_6fd,true);
var _704;
_6fe=b.update({scaleContent:false,scaleX:false,scaleFrom:0,scaleMode:{originalHeight:_703.h,originalWidth:_703.w},restoreAfterFinish:true,afterSetupInternal:function(_705){
s.makePositioned(_705.element);
s.makePositioned(_705.element.firstChild);
if(/Opera/.test(navigator.userAgent)){
s.setStyle(_705.element,{top:""});
}
_704=s.makeClipping(_705.element);
s.setStyle(_705.element,{height:"0px"});
s.showElement(_705.element);
},afterUpdateInternal:function(_706){
var _707=s.getElementDimensions(_706.element,true);
s.setStyle(_706.element.firstChild,{bottom:(_706.dims[0]-_707.h)+"px"});
},afterFinishInternal:function(_708){
s.undoClipping(_708.element,_704);
if(/MSIE/.test(navigator.userAgent)){
s.undoPositioned(_708.element);
s.undoPositioned(_708.element.firstChild);
}else{
s.undoPositioned(_708.element.firstChild);
s.undoPositioned(_708.element);
}
s.setStyle(_708.element.firstChild,{bottom:_702});
}},_6fe);
return new MochiKit.Visual.Scale(_6fd,100,_6fe);
};
MochiKit.Visual.slideUp=function(_709,_70a){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
_709=d.getElement(_709);
if(!_709.firstChild){
throw new Error("MochiKit.Visual.slideUp must be used on a element with a child");
}
d.removeEmptyTextNodes(_709);
var _70e=s.getStyle(_709.firstChild,"bottom");
var _70f=s.getElementDimensions(_709,true);
var _710;
_70a=b.update({scaleContent:false,scaleX:false,scaleMode:{originalHeight:_70f.h,originalWidth:_70f.w},scaleFrom:100,restoreAfterFinish:true,beforeStartInternal:function(_711){
s.makePositioned(_711.element);
s.makePositioned(_711.element.firstChild);
if(/Opera/.test(navigator.userAgent)){
s.setStyle(_711.element,{top:""});
}
_710=s.makeClipping(_711.element);
s.showElement(_711.element);
},afterUpdateInternal:function(_712){
var _713=s.getElementDimensions(_712.element,true);
s.setStyle(_712.element.firstChild,{bottom:(_712.dims[0]-_713.h)+"px"});
},afterFinishInternal:function(_714){
s.hideElement(_714.element);
s.undoClipping(_714.element,_710);
s.undoPositioned(_714.element.firstChild);
s.undoPositioned(_714.element);
s.setStyle(_714.element.firstChild,{bottom:_70e});
}},_70a);
return new MochiKit.Visual.Scale(_709,0,_70a);
};
MochiKit.Visual.squish=function(_715,_716){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
var _71a=s.getElementDimensions(_715,true);
var _71b;
_716=b.update({restoreAfterFinish:true,scaleMode:{originalHeight:_71a.w,originalWidth:_71a.h},beforeSetupInternal:function(_71c){
_71b=s.makeClipping(_71c.element);
},afterFinishInternal:function(_71d){
s.hideElement(_71d.element);
s.undoClipping(_71d.element,_71b);
}},_716);
return new MochiKit.Visual.Scale(_715,/Opera/.test(navigator.userAgent)?1:0,_716);
};
MochiKit.Visual.grow=function(_71e,_71f){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_71e=d.getElement(_71e);
_71f=MochiKit.Base.update({direction:"center",moveTransition:v.Transitions.sinoidal,scaleTransition:v.Transitions.sinoidal,opacityTransition:v.Transitions.full,scaleContent:true,scaleFromCenter:false},_71f);
var _723={top:_71e.style.top,left:_71e.style.left,height:_71e.style.height,width:_71e.style.width,opacity:s.getStyle(_71e,"opacity")};
var dims=s.getElementDimensions(_71e,true);
var _725,_726;
var _727,_728;
switch(_71f.direction){
case "top-left":
_725=_726=_727=_728=0;
break;
case "top-right":
_725=dims.w;
_726=_728=0;
_727=-dims.w;
break;
case "bottom-left":
_725=_727=0;
_726=dims.h;
_728=-dims.h;
break;
case "bottom-right":
_725=dims.w;
_726=dims.h;
_727=-dims.w;
_728=-dims.h;
break;
case "center":
_725=dims.w/2;
_726=dims.h/2;
_727=-dims.w/2;
_728=-dims.h/2;
break;
}
var _729=MochiKit.Base.update({beforeSetupInternal:function(_72a){
s.setStyle(_72a.effects[0].element,{height:"0px"});
s.showElement(_72a.effects[0].element);
},afterFinishInternal:function(_72b){
s.undoClipping(_72b.effects[0].element);
s.undoPositioned(_72b.effects[0].element);
s.setStyle(_72b.effects[0].element,_723);
}},_71f);
return new v.Move(_71e,{x:_725,y:_726,duration:0.01,beforeSetupInternal:function(_72c){
s.hideElement(_72c.element);
s.makeClipping(_72c.element);
s.makePositioned(_72c.element);
},afterFinishInternal:function(_72d){
new v.Parallel([new v.Opacity(_72d.element,{sync:true,to:1,from:0,transition:_71f.opacityTransition}),new v.Move(_72d.element,{x:_727,y:_728,sync:true,transition:_71f.moveTransition}),new v.Scale(_72d.element,100,{scaleMode:{originalHeight:dims.h,originalWidth:dims.w},sync:true,scaleFrom:/Opera/.test(navigator.userAgent)?1:0,transition:_71f.scaleTransition,scaleContent:_71f.scaleContent,scaleFromCenter:_71f.scaleFromCenter,restoreAfterFinish:true})],_729);
}});
};
MochiKit.Visual.shrink=function(_72e,_72f){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_72e=d.getElement(_72e);
_72f=MochiKit.Base.update({direction:"center",moveTransition:v.Transitions.sinoidal,scaleTransition:v.Transitions.sinoidal,opacityTransition:v.Transitions.none,scaleContent:true,scaleFromCenter:false},_72f);
var _733={top:_72e.style.top,left:_72e.style.left,height:_72e.style.height,width:_72e.style.width,opacity:s.getStyle(_72e,"opacity")};
var dims=s.getElementDimensions(_72e,true);
var _735,_736;
switch(_72f.direction){
case "top-left":
_735=_736=0;
break;
case "top-right":
_735=dims.w;
_736=0;
break;
case "bottom-left":
_735=0;
_736=dims.h;
break;
case "bottom-right":
_735=dims.w;
_736=dims.h;
break;
case "center":
_735=dims.w/2;
_736=dims.h/2;
break;
}
var _737;
var _738=MochiKit.Base.update({beforeStartInternal:function(_739){
s.makePositioned(_739.effects[0].element);
_737=s.makeClipping(_739.effects[0].element);
},afterFinishInternal:function(_73a){
s.hideElement(_73a.effects[0].element);
s.undoClipping(_73a.effects[0].element,_737);
s.undoPositioned(_73a.effects[0].element);
s.setStyle(_73a.effects[0].element,_733);
}},_72f);
return new v.Parallel([new v.Opacity(_72e,{sync:true,to:0,from:1,transition:_72f.opacityTransition}),new v.Scale(_72e,/Opera/.test(navigator.userAgent)?1:0,{scaleMode:{originalHeight:dims.h,originalWidth:dims.w},sync:true,transition:_72f.scaleTransition,scaleContent:_72f.scaleContent,scaleFromCenter:_72f.scaleFromCenter,restoreAfterFinish:true}),new v.Move(_72e,{x:_735,y:_736,sync:true,transition:_72f.moveTransition})],_738);
};
MochiKit.Visual.pulsate=function(_73b,_73c){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var b=MochiKit.Base;
var _740=MochiKit.Style.getStyle(_73b,"opacity");
_73c=b.update({duration:3,from:0,afterFinishInternal:function(_741){
MochiKit.Style.setStyle(_741.element,{"opacity":_740});
}},_73c);
var _742=_73c.transition||v.Transitions.sinoidal;
_73c.transition=function(pos){
return _742(1-v.Transitions.pulse(pos,_73c.pulses));
};
return new v.Opacity(_73b,_73c);
};
MochiKit.Visual.fold=function(_744,_745){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_744=d.getElement(_744);
var _749=s.getElementDimensions(_744,true);
var _74a={top:_744.style.top,left:_744.style.left,width:_744.style.width,height:_744.style.height};
var _74b=s.makeClipping(_744);
_745=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleMode:{originalHeight:_749.h,originalWidth:_749.w},afterFinishInternal:function(_74c){
new v.Scale(_744,1,{scaleContent:false,scaleY:false,scaleMode:{originalHeight:_749.h,originalWidth:_749.w},afterFinishInternal:function(_74d){
s.hideElement(_74d.element);
s.undoClipping(_74d.element,_74b);
s.setStyle(_74d.element,_74a);
}});
}},_745);
return new v.Scale(_744,5,_745);
};
MochiKit.Visual.__new__=function(){
var m=MochiKit.Base;
m._deprecated(this,"Color","MochiKit.Color.Color","1.1");
m._deprecated(this,"getElementsComputedStyle","MochiKit.Style.getStyle","1.1");
m.nameFunctions(this);
};
MochiKit.Visual.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Visual);
MochiKit.Base._module("DragAndDrop","1.5",["Base","Iter","DOM","Signal","Visual","Position"]);
MochiKit.DragAndDrop.Droppables={drops:[],remove:function(_74f){
this.drops=MochiKit.Base.filter(function(d){
return d.element!=MochiKit.DOM.getElement(_74f);
},this.drops);
},register:function(drop){
this.drops.push(drop);
},unregister:function(drop){
this.drops=MochiKit.Base.filter(function(d){
return d!=drop;
},this.drops);
},prepare:function(_754){
MochiKit.Base.map(function(drop){
if(drop.isAccepted(_754)){
if(drop.options.activeclass){
MochiKit.DOM.addElementClass(drop.element,drop.options.activeclass);
}
drop.options.onactive(drop.element,_754);
}
},this.drops);
},findDeepestChild:function(_756){
deepest=_756[0];
for(i=1;i<_756.length;++i){
if(MochiKit.DOM.isChildNode(_756[i].element,deepest.element)){
deepest=_756[i];
}
}
return deepest;
},show:function(_757,_758){
if(!this.drops.length){
return;
}
var _759=[];
if(this.last_active){
this.last_active.deactivate();
}
MochiKit.Iter.forEach(this.drops,function(drop){
if(drop.isAffected(_757,_758)){
_759.push(drop);
}
});
if(_759.length>0){
drop=this.findDeepestChild(_759);
MochiKit.Position.within(drop.element,_757.page.x,_757.page.y);
drop.options.onhover(_758,drop.element,MochiKit.Position.overlap(drop.options.overlap,drop.element));
drop.activate();
}
},fire:function(_75b,_75c){
if(!this.last_active){
return;
}
MochiKit.Position.prepare();
if(this.last_active.isAffected(_75b.mouse(),_75c)){
this.last_active.options.ondrop(_75c,this.last_active.element,_75b);
}
},reset:function(_75d){
MochiKit.Base.map(function(drop){
if(drop.options.activeclass){
MochiKit.DOM.removeElementClass(drop.element,drop.options.activeclass);
}
drop.options.ondesactive(drop.element,_75d);
},this.drops);
if(this.last_active){
this.last_active.deactivate();
}
}};
MochiKit.DragAndDrop.Droppable=function(_75f,_760){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_75f,_760);
}
this.__init__(_75f,_760);
};
MochiKit.DragAndDrop.Droppable.prototype={__class__:MochiKit.DragAndDrop.Droppable,__init__:function(_762,_763){
var d=MochiKit.DOM;
var b=MochiKit.Base;
this.element=d.getElement(_762);
this.options=b.update({greedy:true,hoverclass:null,activeclass:null,hoverfunc:b.noop,accept:null,onactive:b.noop,ondesactive:b.noop,onhover:b.noop,ondrop:b.noop,containment:[],tree:false},_763);
this.options._containers=[];
b.map(MochiKit.Base.bind(function(c){
this.options._containers.push(d.getElement(c));
},this),this.options.containment);
MochiKit.Style.makePositioned(this.element);
MochiKit.DragAndDrop.Droppables.register(this);
},isContained:function(_767){
if(this.options._containers.length){
var _768;
if(this.options.tree){
_768=_767.treeNode;
}else{
_768=_767.parentNode;
}
return MochiKit.Iter.some(this.options._containers,function(c){
return _768==c;
});
}else{
return true;
}
},isAccepted:function(_76a){
return ((!this.options.accept)||MochiKit.Iter.some(this.options.accept,function(c){
return MochiKit.DOM.hasElementClass(_76a,c);
}));
},isAffected:function(_76c,_76d){
return ((this.element!=_76d)&&this.isContained(_76d)&&this.isAccepted(_76d)&&MochiKit.Position.within(this.element,_76c.page.x,_76c.page.y));
},deactivate:function(){
if(this.options.hoverclass){
MochiKit.DOM.removeElementClass(this.element,this.options.hoverclass);
}
this.options.hoverfunc(this.element,false);
MochiKit.DragAndDrop.Droppables.last_active=null;
},activate:function(){
if(this.options.hoverclass){
MochiKit.DOM.addElementClass(this.element,this.options.hoverclass);
}
this.options.hoverfunc(this.element,true);
MochiKit.DragAndDrop.Droppables.last_active=this;
},destroy:function(){
MochiKit.DragAndDrop.Droppables.unregister(this);
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.DragAndDrop.Draggables={drags:[],register:function(_76e){
if(this.drags.length===0){
var conn=MochiKit.Signal.connect;
this.eventMouseUp=conn(document,"onmouseup",this,this.endDrag);
this.eventMouseMove=conn(document,"onmousemove",this,this.updateDrag);
this.eventKeypress=conn(document,"onkeypress",this,this.keyPress);
}
this.drags.push(_76e);
},unregister:function(_770){
this.drags=MochiKit.Base.filter(function(d){
return d!=_770;
},this.drags);
if(this.drags.length===0){
var disc=MochiKit.Signal.disconnect;
disc(this.eventMouseUp);
disc(this.eventMouseMove);
disc(this.eventKeypress);
}
},activate:function(_773){
window.focus();
this.activeDraggable=_773;
},deactivate:function(){
this.activeDraggable=null;
},updateDrag:function(_774){
if(!this.activeDraggable){
return;
}
var _775=_774.mouse();
if(this._lastPointer&&(MochiKit.Base.repr(this._lastPointer.page)==MochiKit.Base.repr(_775.page))){
return;
}
this._lastPointer=_775;
this.activeDraggable.updateDrag(_774,_775);
},endDrag:function(_776){
if(!this.activeDraggable){
return;
}
this._lastPointer=null;
this.activeDraggable.endDrag(_776);
this.activeDraggable=null;
},keyPress:function(_777){
if(this.activeDraggable){
this.activeDraggable.keyPress(_777);
}
},notify:function(_778,_779,_77a){
MochiKit.Signal.signal(this,_778,_779,_77a);
}};
MochiKit.DragAndDrop.Draggable=function(_77b,_77c){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_77b,_77c);
}
this.__init__(_77b,_77c);
};
MochiKit.DragAndDrop.Draggable.prototype={__class__:MochiKit.DragAndDrop.Draggable,__init__:function(_77e,_77f){
var v=MochiKit.Visual;
var b=MochiKit.Base;
_77f=b.update({handle:false,starteffect:function(_782){
this._savedOpacity=MochiKit.Style.getStyle(_782,"opacity")||1;
new v.Opacity(_782,{duration:0.2,from:this._savedOpacity,to:0.7});
},reverteffect:function(_783,_784,_785){
var dur=Math.sqrt(Math.abs(_784^2)+Math.abs(_785^2))*0.02;
return new v.Move(_783,{x:-_785,y:-_784,duration:dur});
},endeffect:function(_787){
new v.Opacity(_787,{duration:0.2,from:0.7,to:this._savedOpacity});
},onchange:b.noop,zindex:1000,revert:false,scroll:false,scrollSensitivity:20,scrollSpeed:15,snap:false},_77f);
var d=MochiKit.DOM;
this.element=d.getElement(_77e);
if(_77f.handle&&(typeof (_77f.handle)=="string")){
this.handle=d.getFirstElementByTagAndClassName(null,_77f.handle,this.element);
}
if(!this.handle){
this.handle=d.getElement(_77f.handle);
}
if(!this.handle){
this.handle=this.element;
}
if(_77f.scroll&&!_77f.scroll.scrollTo&&!_77f.scroll.outerHTML){
_77f.scroll=d.getElement(_77f.scroll);
this._isScrollChild=MochiKit.DOM.isChildNode(this.element,_77f.scroll);
}
MochiKit.Style.makePositioned(this.element);
this.delta=this.currentDelta();
this.options=_77f;
this.dragging=false;
this.eventMouseDown=MochiKit.Signal.connect(this.handle,"onmousedown",this,this.initDrag);
MochiKit.DragAndDrop.Draggables.register(this);
},destroy:function(){
MochiKit.Signal.disconnect(this.eventMouseDown);
MochiKit.DragAndDrop.Draggables.unregister(this);
},currentDelta:function(){
var s=MochiKit.Style.getStyle;
return [parseInt(s(this.element,"left")||"0"),parseInt(s(this.element,"top")||"0")];
},initDrag:function(_78a){
if(!_78a.mouse().button.left){
return;
}
var src=_78a.target();
var _78c=(src.tagName||"").toUpperCase();
if(_78c==="INPUT"||_78c==="SELECT"||_78c==="OPTION"||_78c==="BUTTON"||_78c==="TEXTAREA"){
return;
}
if(this._revert){
this._revert.cancel();
this._revert=null;
}
var _78d=_78a.mouse();
var pos=MochiKit.Position.cumulativeOffset(this.element);
this.offset=[_78d.page.x-pos.x,_78d.page.y-pos.y];
MochiKit.DragAndDrop.Draggables.activate(this);
_78a.stop();
},startDrag:function(_78f){
this.dragging=true;
if(this.options.selectclass){
MochiKit.DOM.addElementClass(this.element,this.options.selectclass);
}
if(this.options.zindex){
this.originalZ=parseInt(MochiKit.Style.getStyle(this.element,"z-index")||"0");
this.element.style.zIndex=this.options.zindex;
}
if(this.options.ghosting){
this._clone=this.element.cloneNode(true);
this.ghostPosition=MochiKit.Position.absolutize(this.element);
this.element.parentNode.insertBefore(this._clone,this.element);
}
if(this.options.scroll){
if(this.options.scroll==window){
var _790=this._getWindowScroll(this.options.scroll);
this.originalScrollLeft=_790.left;
this.originalScrollTop=_790.top;
}else{
this.originalScrollLeft=this.options.scroll.scrollLeft;
this.originalScrollTop=this.options.scroll.scrollTop;
}
}
MochiKit.DragAndDrop.Droppables.prepare(this.element);
MochiKit.DragAndDrop.Draggables.notify("start",this,_78f);
if(this.options.starteffect){
this.options.starteffect(this.element);
}
},updateDrag:function(_791,_792){
if(!this.dragging){
this.startDrag(_791);
}
MochiKit.Position.prepare();
MochiKit.DragAndDrop.Droppables.show(_792,this.element);
MochiKit.DragAndDrop.Draggables.notify("drag",this,_791);
this.draw(_792);
this.options.onchange(this);
if(this.options.scroll){
this.stopScrolling();
var p,q;
if(this.options.scroll==window){
var s=this._getWindowScroll(this.options.scroll);
p=new MochiKit.Style.Coordinates(s.left,s.top);
q=new MochiKit.Style.Coordinates(s.left+s.width,s.top+s.height);
}else{
p=MochiKit.Position.page(this.options.scroll);
p.x+=this.options.scroll.scrollLeft;
p.y+=this.options.scroll.scrollTop;
p.x+=(window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0);
p.y+=(window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0);
q=new MochiKit.Style.Coordinates(p.x+this.options.scroll.offsetWidth,p.y+this.options.scroll.offsetHeight);
}
var _796=[0,0];
if(_792.page.x>(q.x-this.options.scrollSensitivity)){
_796[0]=_792.page.x-(q.x-this.options.scrollSensitivity);
}else{
if(_792.page.x<(p.x+this.options.scrollSensitivity)){
_796[0]=_792.page.x-(p.x+this.options.scrollSensitivity);
}
}
if(_792.page.y>(q.y-this.options.scrollSensitivity)){
_796[1]=_792.page.y-(q.y-this.options.scrollSensitivity);
}else{
if(_792.page.y<(p.y+this.options.scrollSensitivity)){
_796[1]=_792.page.y-(p.y+this.options.scrollSensitivity);
}
}
this.startScrolling(_796);
}
if(/AppleWebKit/.test(navigator.appVersion)){
window.scrollBy(0,0);
}
_791.stop();
},finishDrag:function(_797,_798){
var dr=MochiKit.DragAndDrop;
this.dragging=false;
if(this.options.selectclass){
MochiKit.DOM.removeElementClass(this.element,this.options.selectclass);
}
if(this.options.ghosting){
MochiKit.Position.relativize(this.element,this.ghostPosition);
MochiKit.DOM.removeElement(this._clone);
this._clone=null;
}
if(_798){
dr.Droppables.fire(_797,this.element);
}
dr.Draggables.notify("end",this,_797);
var _79a=this.options.revert;
if(_79a&&typeof (_79a)=="function"){
_79a=_79a(this.element);
}
var d=this.currentDelta();
if(_79a&&this.options.reverteffect){
this._revert=this.options.reverteffect(this.element,d[1]-this.delta[1],d[0]-this.delta[0]);
}else{
this.delta=d;
}
if(this.options.zindex){
this.element.style.zIndex=this.originalZ;
}
if(this.options.endeffect){
this.options.endeffect(this.element);
}
dr.Draggables.deactivate();
dr.Droppables.reset(this.element);
},keyPress:function(_79c){
if(_79c.key().string!="KEY_ESCAPE"){
return;
}
this.finishDrag(_79c,false);
_79c.stop();
},endDrag:function(_79d){
if(!this.dragging){
return;
}
this.stopScrolling();
this.finishDrag(_79d,true);
_79d.stop();
},draw:function(_79e){
var pos=MochiKit.Position.cumulativeOffset(this.element);
var d=this.currentDelta();
pos.x-=d[0];
pos.y-=d[1];
if(this.options.scroll&&(this.options.scroll!=window&&this._isScrollChild)){
pos.x-=this.options.scroll.scrollLeft-this.originalScrollLeft;
pos.y-=this.options.scroll.scrollTop-this.originalScrollTop;
}
var p=[_79e.page.x-pos.x-this.offset[0],_79e.page.y-pos.y-this.offset[1]];
if(this.options.snap){
if(typeof (this.options.snap)=="function"){
p=this.options.snap(p[0],p[1]);
}else{
if(this.options.snap instanceof Array){
var i=-1;
p=MochiKit.Base.map(MochiKit.Base.bind(function(v){
i+=1;
return Math.round(v/this.options.snap[i])*this.options.snap[i];
},this),p);
}else{
p=MochiKit.Base.map(MochiKit.Base.bind(function(v){
return Math.round(v/this.options.snap)*this.options.snap;
},this),p);
}
}
}
var _7a5=this.element.style;
if((!this.options.constraint)||(this.options.constraint=="horizontal")){
_7a5.left=p[0]+"px";
}
if((!this.options.constraint)||(this.options.constraint=="vertical")){
_7a5.top=p[1]+"px";
}
if(_7a5.visibility=="hidden"){
_7a5.visibility="";
}
},stopScrolling:function(){
if(this.scrollInterval){
clearInterval(this.scrollInterval);
this.scrollInterval=null;
MochiKit.DragAndDrop.Draggables._lastScrollPointer=null;
}
},startScrolling:function(_7a6){
if(!_7a6[0]&&!_7a6[1]){
return;
}
this.scrollSpeed=[_7a6[0]*this.options.scrollSpeed,_7a6[1]*this.options.scrollSpeed];
this.lastScrolled=new Date();
this.scrollInterval=setInterval(MochiKit.Base.bind(this.scroll,this),10);
},scroll:function(){
var _7a7=new Date();
var _7a8=_7a7-this.lastScrolled;
this.lastScrolled=_7a7;
if(this.options.scroll==window){
var s=this._getWindowScroll(this.options.scroll);
if(this.scrollSpeed[0]||this.scrollSpeed[1]){
var dm=_7a8/1000;
this.options.scroll.scrollTo(s.left+dm*this.scrollSpeed[0],s.top+dm*this.scrollSpeed[1]);
}
}else{
this.options.scroll.scrollLeft+=this.scrollSpeed[0]*_7a8/1000;
this.options.scroll.scrollTop+=this.scrollSpeed[1]*_7a8/1000;
}
var d=MochiKit.DragAndDrop;
MochiKit.Position.prepare();
d.Droppables.show(d.Draggables._lastPointer,this.element);
d.Draggables.notify("drag",this);
if(this._isScrollChild){
d.Draggables._lastScrollPointer=d.Draggables._lastScrollPointer||d.Draggables._lastPointer;
d.Draggables._lastScrollPointer.x+=this.scrollSpeed[0]*_7a8/1000;
d.Draggables._lastScrollPointer.y+=this.scrollSpeed[1]*_7a8/1000;
if(d.Draggables._lastScrollPointer.x<0){
d.Draggables._lastScrollPointer.x=0;
}
if(d.Draggables._lastScrollPointer.y<0){
d.Draggables._lastScrollPointer.y=0;
}
this.draw(d.Draggables._lastScrollPointer);
}
this.options.onchange(this);
},_getWindowScroll:function(win){
var vp,w,h;
MochiKit.DOM.withWindow(win,function(){
vp=MochiKit.Style.getViewportPosition(win.document);
});
if(win.innerWidth){
w=win.innerWidth;
h=win.innerHeight;
}else{
if(win.document.documentElement&&win.document.documentElement.clientWidth){
w=win.document.documentElement.clientWidth;
h=win.document.documentElement.clientHeight;
}else{
w=win.document.body.offsetWidth;
h=win.document.body.offsetHeight;
}
}
return {top:vp.y,left:vp.x,width:w,height:h};
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.DragAndDrop.__new__=function(){
MochiKit.Base.nameFunctions(this);
};
MochiKit.DragAndDrop.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.DragAndDrop);
MochiKit.Base._module("Sortable","1.5",["Base","Iter","DOM","Position","DragAndDrop"]);
MochiKit.Base.update(MochiKit.Sortable,{__export__:false,sortables:{},_findRootElement:function(_7b0){
while(_7b0.tagName.toUpperCase()!="BODY"){
if(_7b0.id&&MochiKit.Sortable.sortables[_7b0.id]){
return _7b0;
}
_7b0=_7b0.parentNode;
}
},_createElementId:function(_7b1){
if(_7b1.id==null||_7b1.id==""){
var d=MochiKit.DOM;
var id;
var _7b4=1;
while(d.getElement(id="sortable"+_7b4)!=null){
_7b4+=1;
}
d.setNodeAttribute(_7b1,"id",id);
}
},options:function(_7b5){
_7b5=MochiKit.Sortable._findRootElement(MochiKit.DOM.getElement(_7b5));
if(!_7b5){
return;
}
return MochiKit.Sortable.sortables[_7b5.id];
},destroy:function(_7b6){
var s=MochiKit.Sortable.options(_7b6);
var b=MochiKit.Base;
var d=MochiKit.DragAndDrop;
if(s){
MochiKit.Signal.disconnect(s.startHandle);
MochiKit.Signal.disconnect(s.endHandle);
b.map(function(dr){
d.Droppables.remove(dr);
},s.droppables);
b.map(function(dr){
dr.destroy();
},s.draggables);
delete MochiKit.Sortable.sortables[s.element.id];
}
},create:function(_7bc,_7bd){
_7bc=MochiKit.DOM.getElement(_7bc);
var self=MochiKit.Sortable;
self._createElementId(_7bc);
_7bd=MochiKit.Base.update({element:_7bc,tag:"li",dropOnEmpty:false,tree:false,treeTag:"ul",overlap:"vertical",constraint:"vertical",containment:[_7bc],handle:false,only:false,hoverclass:null,ghosting:false,scroll:false,scrollSensitivity:20,scrollSpeed:15,format:/^[^_]*_(.*)$/,onChange:MochiKit.Base.noop,onUpdate:MochiKit.Base.noop,accept:null},_7bd);
self.destroy(_7bc);
var _7bf={revert:true,ghosting:_7bd.ghosting,scroll:_7bd.scroll,scrollSensitivity:_7bd.scrollSensitivity,scrollSpeed:_7bd.scrollSpeed,constraint:_7bd.constraint,handle:_7bd.handle};
if(_7bd.starteffect){
_7bf.starteffect=_7bd.starteffect;
}
if(_7bd.reverteffect){
_7bf.reverteffect=_7bd.reverteffect;
}else{
if(_7bd.ghosting){
_7bf.reverteffect=function(_7c0){
_7c0.style.top=0;
_7c0.style.left=0;
};
}
}
if(_7bd.endeffect){
_7bf.endeffect=_7bd.endeffect;
}
if(_7bd.zindex){
_7bf.zindex=_7bd.zindex;
}
var _7c1={overlap:_7bd.overlap,containment:_7bd.containment,hoverclass:_7bd.hoverclass,onhover:self.onHover,tree:_7bd.tree,accept:_7bd.accept};
var _7c2={onhover:self.onEmptyHover,overlap:_7bd.overlap,containment:_7bd.containment,hoverclass:_7bd.hoverclass,accept:_7bd.accept};
MochiKit.DOM.removeEmptyTextNodes(_7bc);
_7bd.draggables=[];
_7bd.droppables=[];
if(_7bd.dropOnEmpty||_7bd.tree){
new MochiKit.DragAndDrop.Droppable(_7bc,_7c2);
_7bd.droppables.push(_7bc);
}
MochiKit.Base.map(function(e){
var _7c4=_7bd.handle?MochiKit.DOM.getFirstElementByTagAndClassName(null,_7bd.handle,e):e;
_7bd.draggables.push(new MochiKit.DragAndDrop.Draggable(e,MochiKit.Base.update(_7bf,{handle:_7c4})));
new MochiKit.DragAndDrop.Droppable(e,_7c1);
if(_7bd.tree){
e.treeNode=_7bc;
}
_7bd.droppables.push(e);
},(self.findElements(_7bc,_7bd)||[]));
if(_7bd.tree){
MochiKit.Base.map(function(e){
new MochiKit.DragAndDrop.Droppable(e,_7c2);
e.treeNode=_7bc;
_7bd.droppables.push(e);
},(self.findTreeElements(_7bc,_7bd)||[]));
}
self.sortables[_7bc.id]=_7bd;
_7bd.lastValue=self.serialize(_7bc);
_7bd.startHandle=MochiKit.Signal.connect(MochiKit.DragAndDrop.Draggables,"start",MochiKit.Base.partial(self.onStart,_7bc));
_7bd.endHandle=MochiKit.Signal.connect(MochiKit.DragAndDrop.Draggables,"end",MochiKit.Base.partial(self.onEnd,_7bc));
},onStart:function(_7c6,_7c7){
var self=MochiKit.Sortable;
var _7c9=self.options(_7c6);
_7c9.lastValue=self.serialize(_7c9.element);
},onEnd:function(_7ca,_7cb){
var self=MochiKit.Sortable;
self.unmark();
var _7cd=self.options(_7ca);
if(_7cd.lastValue!=self.serialize(_7cd.element)){
_7cd.onUpdate(_7cd.element);
}
},findElements:function(_7ce,_7cf){
return MochiKit.Sortable.findChildren(_7ce,_7cf.only,_7cf.tree,_7cf.tag);
},findTreeElements:function(_7d0,_7d1){
return MochiKit.Sortable.findChildren(_7d0,_7d1.only,_7d1.tree?true:false,_7d1.treeTag);
},findChildren:function(_7d2,only,_7d4,_7d5){
if(!_7d2.hasChildNodes()){
return null;
}
_7d5=_7d5.toUpperCase();
if(only){
only=MochiKit.Base.flattenArray([only]);
}
var _7d6=[];
MochiKit.Base.map(function(e){
if(e.tagName&&e.tagName.toUpperCase()==_7d5&&(!only||MochiKit.Iter.some(only,function(c){
return MochiKit.DOM.hasElementClass(e,c);
}))){
_7d6.push(e);
}
if(_7d4){
var _7d9=MochiKit.Sortable.findChildren(e,only,_7d4,_7d5);
if(_7d9&&_7d9.length>0){
_7d6=_7d6.concat(_7d9);
}
}
},_7d2.childNodes);
return _7d6;
},onHover:function(_7da,_7db,_7dc){
if(MochiKit.DOM.isChildNode(_7db,_7da)){
return;
}
var self=MochiKit.Sortable;
if(_7dc>0.33&&_7dc<0.66&&self.options(_7db).tree){
return;
}else{
if(_7dc>0.5){
self.mark(_7db,"before");
if(_7db.previousSibling!=_7da){
var _7de=_7da.parentNode;
_7da.style.visibility="hidden";
_7db.parentNode.insertBefore(_7da,_7db);
if(_7db.parentNode!=_7de){
self.options(_7de).onChange(_7da);
}
self.options(_7db.parentNode).onChange(_7da);
}
}else{
self.mark(_7db,"after");
var _7df=_7db.nextSibling||null;
if(_7df!=_7da){
var _7de=_7da.parentNode;
_7da.style.visibility="hidden";
_7db.parentNode.insertBefore(_7da,_7df);
if(_7db.parentNode!=_7de){
self.options(_7de).onChange(_7da);
}
self.options(_7db.parentNode).onChange(_7da);
}
}
}
},_offsetSize:function(_7e0,type){
if(type=="vertical"||type=="height"){
return _7e0.offsetHeight;
}else{
return _7e0.offsetWidth;
}
},onEmptyHover:function(_7e2,_7e3,_7e4){
var _7e5=_7e2.parentNode;
var self=MochiKit.Sortable;
var _7e7=self.options(_7e3);
if(!MochiKit.DOM.isChildNode(_7e3,_7e2)){
var _7e8;
var _7e9=self.findElements(_7e3,{tag:_7e7.tag,only:_7e7.only});
var _7ea=null;
if(_7e9){
var _7eb=self._offsetSize(_7e3,_7e7.overlap)*(1-_7e4);
for(_7e8=0;_7e8<_7e9.length;_7e8+=1){
if(_7eb-self._offsetSize(_7e9[_7e8],_7e7.overlap)>=0){
_7eb-=self._offsetSize(_7e9[_7e8],_7e7.overlap);
}else{
if(_7eb-(self._offsetSize(_7e9[_7e8],_7e7.overlap)/2)>=0){
_7ea=_7e8+1<_7e9.length?_7e9[_7e8+1]:null;
break;
}else{
_7ea=_7e9[_7e8];
break;
}
}
}
}
_7e3.insertBefore(_7e2,_7ea);
self.options(_7e5).onChange(_7e2);
_7e7.onChange(_7e2);
}
},unmark:function(){
var m=MochiKit.Sortable._marker;
if(m){
MochiKit.Style.hideElement(m);
}
},mark:function(_7ed,_7ee){
var d=MochiKit.DOM;
var self=MochiKit.Sortable;
var _7f1=self.options(_7ed.parentNode);
if(_7f1&&!_7f1.ghosting){
return;
}
if(!self._marker){
self._marker=d.getElement("dropmarker")||document.createElement("DIV");
MochiKit.Style.hideElement(self._marker);
d.addElementClass(self._marker,"dropmarker");
self._marker.style.position="absolute";
document.getElementsByTagName("body").item(0).appendChild(self._marker);
}
var _7f2=MochiKit.Position.cumulativeOffset(_7ed);
self._marker.style.left=_7f2.x+"px";
self._marker.style.top=_7f2.y+"px";
if(_7ee=="after"){
if(_7f1.overlap=="horizontal"){
self._marker.style.left=(_7f2.x+_7ed.clientWidth)+"px";
}else{
self._marker.style.top=(_7f2.y+_7ed.clientHeight)+"px";
}
}
MochiKit.Style.showElement(self._marker);
},_tree:function(_7f3,_7f4,_7f5){
var self=MochiKit.Sortable;
var _7f7=self.findElements(_7f3,_7f4)||[];
for(var i=0;i<_7f7.length;++i){
var _7f9=_7f7[i].id.match(_7f4.format);
if(!_7f9){
continue;
}
var _7fa={id:encodeURIComponent(_7f9?_7f9[1]:null),element:_7f3,parent:_7f5,children:[],position:_7f5.children.length,container:self._findChildrenElement(_7f7[i],_7f4.treeTag.toUpperCase())};
if(_7fa.container){
self._tree(_7fa.container,_7f4,_7fa);
}
_7f5.children.push(_7fa);
}
return _7f5;
},_findChildrenElement:function(_7fb,_7fc){
if(_7fb&&_7fb.hasChildNodes){
_7fc=_7fc.toUpperCase();
for(var i=0;i<_7fb.childNodes.length;++i){
if(_7fb.childNodes[i].tagName.toUpperCase()==_7fc){
return _7fb.childNodes[i];
}
}
}
return null;
},tree:function(_7fe,_7ff){
_7fe=MochiKit.DOM.getElement(_7fe);
var _800=MochiKit.Sortable.options(_7fe);
_7ff=MochiKit.Base.update({tag:_800.tag,treeTag:_800.treeTag,only:_800.only,name:_7fe.id,format:_800.format},_7ff||{});
var root={id:null,parent:null,children:new Array,container:_7fe,position:0};
return MochiKit.Sortable._tree(_7fe,_7ff,root);
},setSequence:function(_802,_803,_804){
var self=MochiKit.Sortable;
var b=MochiKit.Base;
_802=MochiKit.DOM.getElement(_802);
_804=b.update(self.options(_802),_804||{});
var _807={};
b.map(function(n){
var m=n.id.match(_804.format);
if(m){
_807[m[1]]=[n,n.parentNode];
}
n.parentNode.removeChild(n);
},self.findElements(_802,_804));
b.map(function(_80a){
var n=_807[_80a];
if(n){
n[1].appendChild(n[0]);
delete _807[_80a];
}
},_803);
},_constructIndex:function(node){
var _80d="";
do{
if(node.id){
_80d="["+node.position+"]"+_80d;
}
}while((node=node.parent)!=null);
return _80d;
},sequence:function(_80e,_80f){
_80e=MochiKit.DOM.getElement(_80e);
var self=MochiKit.Sortable;
var _80f=MochiKit.Base.update(self.options(_80e),_80f||{});
return MochiKit.Base.map(function(item){
return item.id.match(_80f.format)?item.id.match(_80f.format)[1]:"";
},MochiKit.DOM.getElement(self.findElements(_80e,_80f)||[]));
},serialize:function(_812,_813){
_812=MochiKit.DOM.getElement(_812);
var self=MochiKit.Sortable;
_813=MochiKit.Base.update(self.options(_812),_813||{});
var name=encodeURIComponent(_813.name||_812.id);
if(_813.tree){
return MochiKit.Base.flattenArray(MochiKit.Base.map(function(item){
return [name+self._constructIndex(item)+"[id]="+encodeURIComponent(item.id)].concat(item.children.map(arguments.callee));
},self.tree(_812,_813).children)).join("&");
}else{
return MochiKit.Base.map(function(item){
return name+"[]="+encodeURIComponent(item);
},self.sequence(_812,_813)).join("&");
}
}});
MochiKit.Sortable.Sortable=MochiKit.Sortable;
MochiKit.Sortable.__new__=function(){
MochiKit.Base.nameFunctions(this);
};
MochiKit.Sortable.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Sortable);
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.MochiKit)=="undefined"){
MochiKit.MochiKit={};
}
MochiKit.MochiKit.NAME="MochiKit.MochiKit";
MochiKit.MochiKit.VERSION="1.5";
MochiKit.MochiKit.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.MochiKit.toString=function(){
return this.__repr__();
};
MochiKit.MochiKit.SUBMODULES=["Base","Iter","Logging","DateTime","Format","Async","DOM","Selector","Style","LoggingPane","Color","Signal","Position","Visual","DragAndDrop","Sortable"];
(function(){
if(typeof (document)=="undefined"){
return;
}
var _818=document.getElementsByTagName("script");
var _819="http://www.w3.org/1999/xhtml";
var _81a="http://www.w3.org/2000/svg";
var _81b="http://www.w3.org/1999/xlink";
var _81c="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
var base=null;
var _81e=null;
var _81f={};
var i;
var src;
for(i=0;i<_818.length;i++){
src=null;
switch(_818[i].namespaceURI){
case _81a:
src=_818[i].getAttributeNS(_81b,"href");
break;
default:
src=_818[i].getAttribute("src");
break;
}
if(!src){
continue;
}
_81f[src]=true;
if(src.match(/MochiKit.js(\?.*)?$/)){
base=src.substring(0,src.lastIndexOf("MochiKit.js"));
_81e=_818[i];
}
}
if(base===null){
return;
}
var _822=MochiKit.MochiKit.SUBMODULES;
for(var i=0;i<_822.length;i++){
if(MochiKit[_822[i]]){
continue;
}
var uri=base+_822[i]+".js";
if(uri in _81f){
continue;
}
if(_81e.namespaceURI==_81a||_81e.namespaceURI==_81c){
var s=document.createElementNS(_81e.namespaceURI,"script");
s.setAttribute("id","MochiKit_"+base+_822[i]);
if(_81e.namespaceURI==_81a){
s.setAttributeNS(_81b,"href",uri);
}else{
s.setAttribute("src",uri);
}
s.setAttribute("type","application/x-javascript");
_81e.parentNode.appendChild(s);
}else{
document.write("<"+_81e.nodeName+" src=\""+uri+"\" type=\"text/javascript\"></script>");
}
}
})();


