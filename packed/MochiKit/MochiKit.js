/***

    MochiKit.MochiKit 1.0 : PACKED VERSION

    THIS FILE IS AUTOMATICALLY GENERATED.  If creating patches, please
    diff against the source tree, not this file.

    See <http://mochikit.com/> for documentation, downloads, license, etc.

    (c) 2005 Bob Ippolito.  All rights Reserved.

***/

if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Base");
}
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.Base)=="undefined"){
MochiKit.Base={};
}
MochiKit.Base.VERSION="1.0";
MochiKit.Base.NAME="MochiKit.Base";
MochiKit.Base.update=function(_1,_2){
if(_1==null){
_1={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!=null){
for(var k in o){
_1[k]=o[k];
}
}
}
return _1;
};
MochiKit.Base.update(MochiKit.Base,{__repr__:function(){
return "["+this.NAME+" "+this.VERSION+"]";
},toString:function(){
return this.__repr__();
},counter:function(n){
if(arguments.length==0){
n=1;
}
return function(){
return n++;
};
},clone:function(_7){
var me=arguments.callee;
if(arguments.length==1){
me.prototype=_7;
return new me();
}
},extend:function(_9,obj,_11){
if(!_11){
_11=0;
}
if(obj){
var l=obj.length;
if(typeof (l)!="number"){
if(typeof (MochiKit.Iter)!="undefined"){
obj=MochiKit.Iter.list(obj);
l=obj.length;
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(!_9){
_9=[];
}
for(var i=_11;i<l;i++){
_9.push(obj[i]);
}
}
return _9;
},updatetree:function(_13,obj){
if(_13==null){
_13={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!=null){
for(var k in o){
var v=o[k];
if(typeof (_13[k])=="object"&&typeof (v)=="object"){
arguments.callee(_13[k],v);
}else{
_13[k]=v;
}
}
}
}
return _13;
},setdefault:function(_15,obj){
if(_15==null){
_15={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
for(var k in o){
if(!(k in _15)){
_15[k]=o[k];
}
}
}
return _15;
},keys:function(obj){
var _16=[];
for(var _17 in obj){
_16.push(_17);
}
return _16;
},items:function(obj){
var _18=[];
for(var _19 in obj){
_18.push([_19,obj[_19]]);
}
return _18;
},_newNamedError:function(_20,_21,_22){
_22.prototype=new MochiKit.Base.NamedError(_20.NAME+"."+_21);
_20[_21]=_22;
},operator:{truth:function(a){
return !!a;
},lognot:function(a){
return !a;
},identity:function(a){
return a;
},not:function(a){
return ~a;
},neg:function(a){
return -a;
},add:function(a,b){
return a+b;
},sub:function(a,b){
return a-b;
},div:function(a,b){
return a/b;
},mod:function(a,b){
return a%b;
},and:function(a,b){
return a&b;
},or:function(a,b){
return a|b;
},xor:function(a,b){
return a^b;
},lshift:function(a,b){
return a<<b;
},rshift:function(a,b){
return a>>b;
},zrshift:function(a,b){
return a>>>b;
},eq:function(a,b){
return a==b;
},ne:function(a,b){
return a!=b;
},gt:function(a,b){
return a>b;
},ge:function(a,b){
return a>=b;
},lt:function(a,b){
return a<b;
},le:function(a,b){
return a<=b;
},ceq:function(a,b){
return MochiKit.Base.compare(a,b)==0;
},cne:function(a,b){
return MochiKit.Base.compare(a,b)!=0;
},cgt:function(a,b){
return MochiKit.Base.compare(a,b)==1;
},cge:function(a,b){
return MochiKit.Base.compare(a,b)!=-1;
},clt:function(a,b){
return MochiKit.Base.compare(a,b)==-1;
},cle:function(a,b){
return MochiKit.Base.compare(a,b)!=1;
},logand:function(a,b){
return a&&b;
},logor:function(a,b){
return a||b;
},contains:function(a,b){
return b in a;
}},forward:function(_25){
return function(){
return this[_25].apply(this,arguments);
};
},itemgetter:function(_26){
return function(arg){
return arg[_26];
};
},typeMatcher:function(){
var _28={};
for(var i=0;i<arguments.length;i++){
var typ=arguments[i];
_28[typ]=typ;
}
return function(){
for(var i=0;i<arguments.length;i++){
if(!(typeof (arguments[i]) in _28)){
return false;
}
}
return true;
};
},isNull:function(){
for(var i=0;i<arguments.length;i++){
if(arguments[i]!=null){
return false;
}
}
return true;
},isUndefinedOrNull:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(typeof (o)=="undefined"||o==null)){
return false;
}
}
return true;
},isNotEmpty:function(obj){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(o&&o.length)){
return false;
}
}
return true;
},isArrayLike:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
var typ=typeof (o);
if((typ!="object"&&!(typ=="function"&&typeof (o.item)=="function"))||o==null||typeof (o.length)!="number"){
return false;
}
}
return true;
},isDateLike:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="object"||typeof (o.getTime)!="function"){
return false;
}
}
return true;
},xmap:function(fn){
if(fn==null){
return MochiKit.Base.extend(null,arguments,1);
}
var _31=[];
for(var i=1;i<arguments.length;i++){
_31.push(fn(arguments[i]));
}
return _31;
},map:function(fn,lst){
var m=MochiKit.Base;
var _34=m.isArrayLike;
if(arguments.length<=2){
if(!_34(lst)){
if(MochiKit.Iter){
lst=MochiKit.Iter.list(lst);
if(fn==null){
return lst;
}
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn==null){
return m.extend(null,lst);
}
var _35=[];
for(var i=0;i<lst.length;i++){
_35.push(fn(lst[i]));
}
return _35;
}else{
if(fn==null){
fn=Array;
}
var _36=null;
for(i=1;i<arguments.length;i++){
if(!_34(arguments[i])){
if(MochiKit.Iter){
arguments[i]=MochiKit.Iter.list(arguments[i]);
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
var l=arguments[i].length;
if(_36==null||_36>l){
_36=l;
}
}
_35=[];
for(i=0;i<_36;i++){
var _37=[];
for(var j=1;j<arguments.length;j++){
_37.push(arguments[j][i]);
}
_35.push(fn.apply(this,_37));
}
return _35;
}
},xfilter:function(fn){
var _39=[];
if(fn==null){
fn=MochiKit.Base.operator.truth;
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(fn(o)){
_39.push(o);
}
}
return _39;
},filter:function(fn,lst,_40){
var _41=[];
var m=MochiKit.Base;
if(!m.isArrayLike(lst)){
if(MochiKit.Iter){
lst=MochiKit.Iter.list(lst);
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn==null){
fn=m.operator.truth;
}
if(typeof (Array.prototype.filter)=="function"){
return Array.prototype.filter.call(lst,fn,_40);
}else{
if(typeof (_40)=="undefined"||_40==null){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(fn(o)){
_41.push(o);
}
}
}else{
for(i=0;i<lst.length;i++){
o=lst[i];
if(fn.call(_40,o)){
_41.push(o);
}
}
}
}
return _41;
},_wrapDumbFunction:function(_42){
return function(){
switch(arguments.length){
case 0:
return _42();
case 1:
return _42(arguments[0]);
case 2:
return _42(arguments[0],arguments[1]);
case 3:
return _42(arguments[0],arguments[1],arguments[2]);
}
var _43=[];
for(var i=0;i<arguments.length;i++){
_43.push("arguments["+i+"]");
}
return eval("(func("+_43.join(",")+"))");
};
},bind:function(_44,_45){
var _46=_44.im_func;
var _47=_44.im_preargs;
var _48=_44.im_self;
var m=MochiKit.Base;
if(typeof (_44)=="function"&&typeof (_44.apply)=="undefined"){
_44=m._wrapDumbFunction(_44);
}
if(typeof (_46)!="function"){
_46=_44;
}
if(typeof (_45)!="undefined"){
_48=_45;
}
if(typeof (_47)=="undefined"){
_47=[];
}else{
_47=_47.slice();
}
m.extend(_47,arguments,2);
var _49=function(){
var _50=arguments;
var me=arguments.callee;
if(me.im_preargs.length>0){
_50=m.concat(me.im_preargs,_50);
}
var _45=me.im_self;
if(!_45){
_45=this;
}
return me.im_func.apply(_45,_50);
};
_49.im_self=_48;
_49.im_func=_46;
_49.im_preargs=_47;
return _49;
},bindMethods:function(_51){
var _52=MochiKit.Base.bind;
for(var k in _51){
var _53=_51[k];
if(typeof (_53)=="function"){
_51[k]=_52(_53,_51);
}
}
},registerComparator:function(_54,_55,_56,_57){
MochiKit.Base.comparatorRegistry.register(_54,_55,_56,_57);
},compare:function(a,b){
if(a==b){
return 0;
}
var _58=(typeof (a)=="undefined"||a==null);
var _59=(typeof (b)=="undefined"||b==null);
if(_58&&_59){
return 0;
}else{
if(_58){
return -1;
}else{
if(_59){
return 1;
}
}
}
var m=MochiKit.Base;
try{
return m.comparatorRegistry.match(a,b);
}
catch(e){
if(e!=m.NotFound){
throw e;
}
if(a<b){
return -1;
}else{
if(a>b){
return 1;
}
}
var _60=m.repr;
throw new TypeError(_60(a)+" and "+_60(b)+" can not be compared");
}
},compareDateLike:function(a,b){
a=a.getTime();
b=b.getTime();
if(a==b){
return 0;
}else{
if(a<b){
return -1;
}else{
if(a>b){
return 1;
}
}
}
var _61=MochiKit.Base.repr;
throw new TypeError(_61(a)+" and "+_61(b)+" can not be compared");
},compareArrayLike:function(a,b){
var _62=MochiKit.Base.compare;
var _63=a.length;
var _64=0;
if(_63>b.length){
_64=1;
_63=b.length;
}else{
if(_63<b.length){
_64=-1;
}
}
for(var i=0;i<_63;i++){
var cmp=_62(a[i],b[i]);
if(cmp){
return cmp;
}
}
return _64;
},registerRepr:function(_66,_67,_68,_69){
MochiKit.Base.reprRegistry.register(_66,_67,_68,_69);
},repr:function(o){
if(typeof (o)=="undefined"){
return "undefined";
}else{
if(o===null){
return "null";
}
}
try{
if(typeof (o.__repr__)=="function"){
return o.__repr__();
}else{
if(typeof (o.repr)=="function"&&o.repr!=arguments.callee){
return o.repr();
}
}
return MochiKit.Base.reprRegistry.match(o);
}
catch(e){
if(typeof (o.NAME)=="string"&&(o.toString==Function.prototype.toString||o.toString==Object.prototype.toString)){
return o.NAME;
}
}
if(typeof (o)=="function"){
o=(o+"").replace(/^\s+/,"");
var idx=o.indexOf("{");
if(idx!=-1){
o=o.substr(0,idx)+"{...}";
}
}
return o+"";
},reprArrayLike:function(o){
var m=MochiKit.Base;
return "["+m.map(m.repr,o).join(", ")+"]";
},reprString:function(o){
return ("\""+o.replace(/(["\\])/g,"\\$1")+"\"").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\r]/g,"\\r");
},reprNumber:function(o){
return o+"";
},registerJSON:function(_71,_72,_73,_74){
MochiKit.Base.jsonRegistry.register(_71,_72,_73,_74);
},evalJSON:function(){
return eval("("+arguments[0]+")");
},serializeJSON:function(o){
var _75=typeof (o);
if(_75=="undefined"){
return "undefined";
}else{
if(_75=="number"||_75=="boolean"){
return o+"";
}else{
if(o===null){
return "null";
}
}
}
var m=MochiKit.Base;
var _76=m.reprString;
if(_75=="string"){
return _76(o);
}
var me=arguments.callee;
var _77;
if(typeof (o.__json__)=="function"){
_77=o.__json__();
if(o!==_77){
return me(_77);
}
}
if(typeof (o.json)=="function"){
_77=o.json();
if(o!==_77){
return me(_77);
}
}
if(_75!="function"&&typeof (o.length)=="number"){
var res=[];
for(var i=0;i<o.length;i++){
var val=me(o[i]);
if(typeof (val)!="string"){
val="undefined";
}
res.push(val);
}
return "["+res.join(",")+"]";
}
try{
_77=m.jsonRegistry.match(o);
return me(_77);
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
if(_75=="function"){
return null;
}
res=[];
for(var k in o){
var _80;
if(typeof (k)=="number"){
_80="\""+k+"\"";
}else{
if(typeof (k)=="string"){
_80=_76(k);
}else{
continue;
}
}
val=me(o[k]);
if(typeof (val)!="string"){
continue;
}
res.push(_80+":"+val);
}
return "{"+res.join(",")+"}";
},objEqual:function(a,b){
return (MochiKit.Base.compare(a,b)==0);
},arrayEqual:function(_81,arr){
if(_81.length!=arr.length){
return false;
}
return (MochiKit.Base.compare(_81,arr)==0);
},concat:function(){
var _83=[];
var _84=MochiKit.Base.extend;
for(var i=0;i<arguments.length;i++){
_84(_83,arguments[i]);
}
return _83;
},keyComparator:function(key){
var m=MochiKit.Base;
var _86=m.compare;
if(arguments.length==1){
return function(a,b){
return _86(a[key],b[key]);
};
}
var _87=m.extend(null,arguments);
return function(a,b){
var _88=0;
for(var i=0;(_88==0)&&(i<_87.length);i++){
var key=_87[i];
_88=_86(a[key],b[key]);
}
return _88;
};
},reverseKeyComparator:function(key){
var _89=MochiKit.Base.keyComparator.apply(this,arguments);
return function(a,b){
return _89(b,a);
};
},partial:function(_90){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([_90,undefined],arguments,1));
},listMinMax:function(_91,lst){
if(lst.length==0){
return null;
}
var cur=lst[0];
var _93=MochiKit.Base.compare;
for(var i=1;i<lst.length;i++){
var o=lst[i];
if(_93(o,cur)==_91){
cur=o;
}
}
return cur;
},objMax:function(){
return MochiKit.Base.listMinMax(1,arguments);
},objMin:function(){
return MochiKit.Base.listMinMax(-1,arguments);
},nodeWalk:function(_94,_95){
var _96=[_94];
var _97=MochiKit.Base.extend;
while(_96.length){
var res=_95(_96.shift());
if(res){
_97(_96,res);
}
}
},nameFunctions:function(_98){
var _99=_98.NAME;
if(typeof (_99)=="undefined"){
_99="";
}else{
_99=_99+".";
}
for(var name in _98){
var o=_98[name];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=_99+name;
}
catch(e){
}
}
}
},queryString:function(_101,_102){
if(arguments.length==1){
var o=_101;
_101=[];
_102=[];
for(var k in o){
var v=o[k];
if(typeof (v)!="function"){
_101.push(k);
_102.push(v);
}
}
}
var rval=[];
var len=Math.min(_101.length,_102.length);
var _105=MochiKit.Base.urlEncode;
for(var i=0;i<len;i++){
v=_102[i];
if(typeof (v)!="undefined"&&v!=null){
rval.push(_105(_101[i])+"="+_105(v));
}
}
return rval.join("&");
},parseQueryString:function(_106,_107){
var _108=_106.replace(/\+/g,"%20").split("&");
var o={};
var _109;
if(typeof (decodeURIComponent)!="undefined"){
_109=decodeURIComponent;
}else{
_109=unescape;
}
if(_107){
for(var i=0;i<_108.length;i++){
var pair=_108[i].split("=");
var name=_109(pair[0]);
var arr=o[name];
if(!(arr instanceof Array)){
arr=[];
o[name]=arr;
}
arr.push(_109(pair[1]));
}
}else{
for(i=0;i<_108.length;i++){
pair=_108[i].split("=");
o[_109(pair[0])]=_109(pair[1]);
}
}
return o;
}});
MochiKit.Base.AdapterRegistry=function(){
this.pairs=[];
};
MochiKit.Base.AdapterRegistry.prototype={register:function(name,_111,wrap,_113){
if(_113){
this.pairs.unshift([name,_111,wrap]);
}else{
this.pairs.push([name,_111,wrap]);
}
},match:function(){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[1].apply(this,arguments)){
return pair[2].apply(this,arguments);
}
}
throw MochiKit.Base.NotFound;
},unregister:function(name){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[0]==name){
this.pairs.splice(i,1);
return true;
}
}
return false;
}};
MochiKit.Base.EXPORT=["counter","clone","extend","update","updatetree","setdefault","keys","items","NamedError","operator","forward","itemgetter","typeMatcher","isCallable","isUndefined","isUndefinedOrNull","isNull","isNotEmpty","isArrayLike","isDateLike","xmap","map","xfilter","filter","bind","bindMethods","NotFound","AdapterRegistry","registerComparator","compare","registerRepr","repr","objEqual","arrayEqual","concat","keyComparator","reverseKeyComparator","partial","merge","listMinMax","listMax","listMin","objMax","objMin","nodeWalk","zip","urlEncode","queryString","serializeJSON","registerJSON","evalJSON","parseQueryString"];
MochiKit.Base.EXPORT_OK=["nameFunctions","comparatorRegistry","reprRegistry","jsonRegistry","compareDateLike","compareArrayLike","reprArrayLike","reprString","reprNumber"];
MochiKit.Base._exportSymbols=function(_114,_115){
if((typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined")||(typeof (MochiKit.__compat__)=="boolean"&&MochiKit.__compat__)){
var all=_115.EXPORT_TAGS[":all"];
for(var i=0;i<all.length;i++){
_114[all[i]]=_115[all[i]];
}
}
};
MochiKit.Base.__new__=function(){
var m=this;
if(typeof (encodeURIComponent)!="undefined"){
m.urlEncode=function(_117){
return encodeURIComponent(_117).replace(/\'/g,"%27");
};
}else{
m.urlEncode=function(_118){
return escape(_118).replace(/\+/g,"%2B").replace(/\"/g,"%22").rval.replace(/\'/g,"%27");
};
}
m.NamedError=function(name){
this.message=name;
this.name=name;
};
m.NamedError.prototype=new Error();
m.update(m.NamedError.prototype,{repr:function(){
if(this.message&&this.message!=this.name){
return this.name+"("+m.repr(this.message)+")";
}else{
return this.name+"()";
}
},toString:m.forward("repr")});
m.NotFound=new m.NamedError("MochiKit.Base.NotFound");
m.listMax=m.partial(m.listMinMax,1);
m.listMin=m.partial(m.listMinMax,-1);
m.isCallable=m.typeMatcher("function");
m.isUndefined=m.typeMatcher("undefined");
m.merge=m.partial(m.update,null);
m.zip=m.partial(m.map,null);
m.comparatorRegistry=new m.AdapterRegistry();
m.registerComparator("dateLike",m.isDateLike,m.compareDateLike);
m.registerComparator("arrayLike",m.isArrayLike,m.compareArrayLike);
m.reprRegistry=new m.AdapterRegistry();
m.registerRepr("arrayLike",m.isArrayLike,m.reprArrayLike);
m.registerRepr("string",m.typeMatcher("string"),m.reprString);
m.registerRepr("numbers",m.typeMatcher("number","boolean"),m.reprNumber);
m.jsonRegistry=new m.AdapterRegistry();
var all=m.concat(m.EXPORT,m.EXPORT_OK);
m.EXPORT_TAGS={":common":m.concat(m.EXPORT_OK),":all":all};
m.nameFunctions(this);
};
MochiKit.Base.__new__();
compare=MochiKit.Base.compare;
MochiKit.Base._exportSymbols(this,MochiKit.Base);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Iter");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Iter depends on MochiKit.Base!";
}
if(typeof (MochiKit.Iter)=="undefined"){
MochiKit.Iter={};
}
MochiKit.Iter.NAME="MochiKit.Iter";
MochiKit.Iter.VERSION="1.0";
MochiKit.Base.update(MochiKit.Iter,{__repr__:function(){
return "["+this.NAME+" "+this.VERSION+"]";
},toString:function(){
return this.__repr__();
},registerIteratorFactory:function(name,_119,_120,_121){
MochiKit.Iter.iteratorRegistry.register(name,_119,_120,_121);
},iter:function(_122,_123){
var self=MochiKit.Iter;
if(arguments.length==2){
return self.takewhile(function(a){
return a!=_123;
},_122);
}
if(typeof (_122.next)=="function"){
return _122;
}else{
if(typeof (_122.iter)=="function"){
return _122.iter();
}
}
try{
return self.iteratorRegistry.match(_122);
}
catch(e){
var m=MochiKit.Base;
if(e==m.NotFound){
e=new TypeError(typeof (_122)+": "+m.repr(_122)+" is not iterable");
}
throw e;
}
},count:function(n){
if(!n){
n=0;
}
var m=MochiKit.Base;
return {repr:function(){
return "count("+n+")";
},toString:m.forward("repr"),next:m.counter(n)};
},cycle:function(p){
var self=MochiKit.Iter;
var m=MochiKit.Base;
var lst=[];
var _126=self.iter(p);
return {repr:function(){
return "cycle(...)";
},toString:m.forward("repr"),next:function(){
try{
var rval=_126.next();
lst.push(rval);
return rval;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
if(lst.length==0){
this.next=function(){
throw self.StopIteration;
};
}else{
var i=-1;
this.next=function(){
i=(i+1)%lst.length;
return lst[i];
};
}
return this.next();
}
}};
},repeat:function(elem,n){
var m=MochiKit.Base;
if(typeof (n)=="undefined"){
return {repr:function(){
return "repeat("+m.repr(elem)+")";
},toString:m.forward("repr"),next:function(){
return elem;
}};
}
return {repr:function(){
return "repeat("+m.repr(elem)+", "+n+")";
},toString:m.forward("repr"),next:function(){
if(n<=0){
throw MochiKit.Iter.StopIteration;
}
n-=1;
return elem;
}};
},next:function(_128){
return _128.next();
},izip:function(p,q){
var m=MochiKit.Base;
var next=MochiKit.Iter.next;
var _131=m.map(iter,arguments);
return {repr:function(){
return "izip(...)";
},toString:m.forward("repr"),next:function(){
return m.map(next,_131);
}};
},ifilter:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred==null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilter(...)";
},toString:m.forward("repr"),next:function(){
while(true){
var rval=seq.next();
if(pred(rval)){
return rval;
}
}
return undefined;
}};
},ifilterfalse:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred==null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilterfalse(...)";
},toString:m.forward("repr"),next:function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
return rval;
}
}
return undefined;
}};
},islice:function(seq){
var self=MochiKit.Iter;
var m=MochiKit.Base;
seq=self.iter(seq);
var _134=0;
var stop=0;
var step=1;
var i=-1;
if(arguments.length==2){
stop=arguments[1];
}else{
if(arguments.length==3){
_134=arguments[1];
stop=arguments[2];
}else{
_134=arguments[1];
stop=arguments[2];
step=arguments[3];
}
}
return {repr:function(){
return "islice("+["...",_134,stop,step].join(", ")+")";
},toString:m.forward("repr"),next:function(){
var rval;
while(i<_134){
rval=seq.next();
i++;
}
if(_134>=stop){
throw self.StopIteration;
}
_134+=step;
return rval;
}};
},imap:function(fun,p,q){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var _138=m.map(self.iter,m.extend(null,arguments,1));
var map=m.map;
var next=self.next;
return {repr:function(){
return "imap(...)";
},toString:m.forward("repr"),next:function(){
return fun.apply(this,map(next,_138));
}};
},applymap:function(fun,seq,self){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
return {repr:function(){
return "applymap(...)";
},toString:m.forward("repr"),next:function(){
return fun.apply(self,seq.next());
}};
},chain:function(p,q){
var self=MochiKit.Iter;
var m=MochiKit.Base;
if(arguments.length==1){
return self.iter(arguments[0]);
}
var _140=m.map(self.iter,arguments);
return {repr:function(){
return "chain(...)";
},toString:m.forward("repr"),next:function(){
while(_140.length>1){
try{
return _140[0].next();
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
_140.shift();
}
}
if(_140.length==1){
var arg=_140.shift();
this.next=m.bind(arg.next,arg);
return this.next();
}
throw self.StopIteration;
}};
},takewhile:function(pred,seq){
var self=MochiKit.Iter;
seq=self.iter(seq);
return {repr:function(){
return "takewhile(...)";
},toString:MochiKit.Base.forward("repr"),next:function(){
var rval=seq.next();
if(!pred(rval)){
this.next=function(){
throw self.StopIteration;
};
this.next();
}
return rval;
}};
},dropwhile:function(pred,seq){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
var bind=m.bind;
return {"repr":function(){
return "dropwhile(...)";
},"toString":m.forward("repr"),"next":function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
break;
}
}
this.next=bind(seq.next,seq);
return rval;
}};
},_tee:function(_142,sync,_144){
sync.pos[_142]=-1;
var m=MochiKit.Base;
var _145=m.listMin;
return {repr:function(){
return "tee("+_142+", ...)";
},toString:m.forward("repr"),next:function(){
var rval;
var i=sync.pos[_142];
if(i==sync.max){
rval=_144.next();
sync.deque.push(rval);
sync.max+=1;
sync.pos[_142]+=1;
}else{
rval=sync.deque[i-sync.min];
sync.pos[_142]+=1;
if(i==sync.min&&_145(sync.pos)!=sync.min){
sync.min+=1;
sync.deque.shift();
}
}
return rval;
}};
},tee:function(_146,n){
var rval=[];
var sync={"pos":[],"deque":[],"max":-1,"min":-1};
if(arguments.length==1){
n=2;
}
var self=MochiKit.Iter;
_146=self.iter(_146);
var _tee=self._tee;
for(var i=0;i<n;i++){
rval.push(_tee(i,sync,_146));
}
return rval;
},list:function(_148){
var m=MochiKit.Base;
if(typeof (_148.slice)=="function"){
return _148.slice();
}else{
if(m.isArrayLike(_148)){
return m.concat(_148);
}
}
var self=MochiKit.Iter;
_148=self.iter(_148);
var rval=[];
try{
while(true){
rval.push(_148.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return rval;
}
return undefined;
},reduce:function(fn,_149,_150){
var i=0;
var x=_150;
var self=MochiKit.Iter;
_149=self.iter(_149);
if(arguments.length<3){
try{
x=_149.next();
}
catch(e){
if(e==self.StopIteration){
e=new TypeError("reduce() of empty sequence with no initial value");
}
throw e;
}
i++;
}
try{
while(true){
x=fn(x,_149.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},range:function(){
var _152=0;
var stop=0;
var step=1;
if(arguments.length==1){
stop=arguments[0];
}else{
if(arguments.length==2){
_152=arguments[0];
stop=arguments[1];
}else{
if(arguments.length==3){
_152=arguments[0];
stop=arguments[1];
step=arguments[2];
}else{
throw new TypeError("range() takes 1, 2, or 3 arguments!");
}
}
}
if(step==0){
throw new TypeError("range() step must not be 0");
}
return {next:function(){
if((step>0&&_152>=stop)||(step<0&&_152<=stop)){
throw MochiKit.Iter.StopIteration;
}
var rval=_152;
_152+=step;
return rval;
},repr:function(){
return "range("+[_152,stop,step].join(", ")+")";
},toString:MochiKit.Base.forward("repr")};
},sum:function(_153,_154){
var x=_154||0;
var self=MochiKit.Iter;
_153=self.iter(_153);
try{
while(true){
x+=_153.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},exhaust:function(_155){
var self=MochiKit.Iter;
_155=self.iter(_155);
try{
while(true){
_155.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
},forEach:function(_156,func,self){
var m=MochiKit.Base;
if(arguments.length>2){
func=m.bind(func,self);
}
if(m.isArrayLike(_156)){
for(var i=0;i<_156.length;i++){
func(_156[i]);
}
}else{
self=MochiKit.Iter;
self.exhaust(self.imap(func,_156));
}
},every:function(_158,func){
var self=MochiKit.Iter;
try{
self.ifilterfalse(func,_158).next();
return false;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return true;
}
},sorted:function(_159,cmp){
var rval=MochiKit.Iter.list(_159);
if(arguments.length==1){
cmp=MochiKit.Base.compare;
}
rval.sort(cmp);
return rval;
},reversed:function(_160){
var rval=MochiKit.Iter.list(_160);
rval.reverse();
return rval;
},some:function(_161,func){
var self=MochiKit.Iter;
try{
self.ifilter(func,_161).next();
return true;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return false;
}
},iextend:function(lst,_162){
if(MochiKit.Base.isArrayLike(_162)){
for(var i=0;i<_162.length;i++){
lst.push(_162[i]);
}
}else{
var self=MochiKit.Iter;
_162=self.iter(_162);
try{
while(true){
lst.push(_162.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
}
return lst;
},arrayLikeIter:function(_163){
var i=0;
return {repr:function(){
return "arrayLikeIter(...)";
},toString:MochiKit.Base.forward("repr"),next:function(){
if(i>=_163.length){
throw MochiKit.Iter.StopIteration;
}
return _163[i++];
}};
}});
MochiKit.Iter.EXPORT_OK=["iteratorRegistry","arrayLikeIter"];
MochiKit.Iter.EXPORT=["StopIteration","registerIteratorFactory","iter","count","cycle","repeat","next","izip","ifilter","ifilterfalse","islice","imap","applymap","chain","takewhile","dropwhile","tee","list","reduce","range","sum","exhaust","forEach","every","sorted","reversed","some","iextend"];
MochiKit.Iter.__new__=function(){
var m=MochiKit.Base;
this.StopIteration=new m.NamedError("StopIteration");
this.iteratorRegistry=new m.AdapterRegistry();
this.registerIteratorFactory("arrayLike",m.isArrayLike,this.arrayLikeIter);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Iter.__new__();
reduce=MochiKit.Iter.reduce;
MochiKit.Base._exportSymbols(this,MochiKit.Iter);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Logging");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Logging depends on MochiKit.Base!";
}
if(typeof (MochiKit.Logging)=="undefined"){
MochiKit.Logging={};
}
MochiKit.Logging.NAME="MochiKit.Logging";
MochiKit.Logging.VERSION="1.0";
MochiKit.Logging.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Logging.toString=function(){
return this.__repr__();
};
MochiKit.Logging.EXPORT=["LogLevel","LogMessage","Logger","alertListener","logger","log","logError","logDebug","logFatal","logWarning"];
MochiKit.Logging.EXPORT_OK=["logLevelAtLeast","isLogMessage","compareLogMessage"];
MochiKit.Logging.LogMessage=function(num,_165,info){
this.num=num;
this.level=_165;
this.info=info;
this.timestamp=new Date();
};
MochiKit.Logging.LogMessage.prototype={repr:function(){
var m=MochiKit.Base;
return "LogMessage("+m.map(m.repr,[this.num,this.level,this.info]).join(", ")+")";
},toString:MochiKit.Base.forward("repr")};
MochiKit.Base.update(MochiKit.Logging,{logLevelAtLeast:function(_167){
var self=MochiKit.Logging;
if(typeof (_167)=="string"){
_167=self.LogLevel[_167];
}
return function(msg){
var _169=msg.level;
if(typeof (_169)=="string"){
_169=self.LogLevel[_169];
}
return _169>=_167;
};
},isLogMessage:function(){
var _170=MochiKit.Logging.LogMessage;
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof _170)){
return false;
}
}
return true;
},compareLogMessage:function(a,b){
return MochiKit.Base.compare([a.level,a.info],[b.level,b.info]);
},alertListener:function(msg){
alert("num: "+msg.num+"\nlevel: "+msg.level+"\ninfo: "+msg.info.join(" "));
}});
MochiKit.Logging.Logger=function(_171){
this.counter=0;
if(typeof (_171)=="undefined"||_171==null){
_171=-1;
}
this.maxSize=_171;
this._messages=[];
this.listeners={};
};
MochiKit.Logging.Logger.prototype={clear:function(){
this._messages.splice(0,this._messages.length);
},dispatchListeners:function(msg){
for(var k in this.listeners){
var pair=this.listeners[k];
if(pair[0]&&!pair[0](msg)){
continue;
}
pair[1](msg);
}
},addListener:function(_172,_173,_174){
if(typeof (_173)=="string"){
_173=MochiKit.Logging.logLevelAtLeast(_173);
}
this.listeners[_172]=[_173,_174];
},removeListener:function(_175){
delete this.listeners[_175];
},baseLog:function(_176,_177){
var msg=new MochiKit.Logging.LogMessage(this.counter,_176,MochiKit.Base.extend(null,arguments,1));
this._messages.push(msg);
this.dispatchListeners(msg);
this.counter+=1;
while(this.maxSize>=0&&this._messages.length>this.maxSize){
this._messges.shift();
}
},getMessages:function(_178){
var _179=0;
if(!(typeof (_178)=="undefined"||_178==null)){
_179=Math.max(0,this._messages.length-_178);
}
return this._messages.slice(_179);
},getMessageText:function(_180){
if(typeof (_180)=="undefined"||_180==null){
_180=30;
}
var _181=this.getMessages(_180);
if(_181.length){
var lst=map(function(m){
return "\n  ["+m.num+"] "+m.level+": "+m.info.join(" ");
},_181);
lst.unshift("LAST "+_181.length+" MESSAGES:");
return lst.join("");
}
return "";
},debuggingBookmarklet:function(_182){
if(typeof (MochiKit.LoggingPane)=="undefined"){
alert(this.getMessageText());
}else{
MochiKit.LoggingPane.createLoggingPane(_182||false);
}
}};
MochiKit.Logging.__new__=function(){
this.LogLevel={ERROR:40,FATAL:50,WARNING:30,INFO:20,DEBUG:10};
var m=MochiKit.Base;
m.registerComparator("LogMessage",this.isLogMessage,this.compareLogMessage);
var _183=m.partial;
var _184=this.Logger;
var _185=_184.prototype.baseLog;
m.update(this.Logger.prototype,{debug:_183(_185,"DEBUG"),log:_183(_185,"INFO"),error:_183(_185,"ERROR"),fatal:_183(_185,"FATAL"),warning:_183(_185,"WARNING")});
var self=this;
var _186=function(name){
return function(){
self.logger[name].apply(self.logger,arguments);
};
};
this.log=_186("log");
this.logError=_186("error");
this.logDebug=_186("debug");
this.logFatal=_186("fatal");
this.logWarning=_186("warning");
this.logger=new _184();
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Logging.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Logging);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.DateTime");
}
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.DateTime)=="undefined"){
MochiKit.DateTime={};
}
MochiKit.DateTime.NAME="MochiKit.DateTime";
MochiKit.DateTime.VERSION="1.0";
MochiKit.DateTime.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.DateTime.toString=function(){
return this.__repr__();
};
MochiKit.DateTime.isoDate=function(str){
str=str+"";
if(typeof (str)!="string"||str.length==0){
return null;
}
var iso=str.split("-");
if(iso.length==0){
return null;
}
return new Date(iso[0],iso[1]-1,iso[2]);
};
MochiKit.DateTime._isoRegexp=/(\d{4,})(?:-(\d{1,2})(?:-(\d{1,2})(?:[T ](\d{1,2}):(\d{1,2})(?::(\d{1,2})(?:\.(\d+))?)?(?:(Z)|([+-])(\d{1,2})(?::(\d{1,2}))?)?)?)?)?/;
MochiKit.DateTime.isoTimestamp=function(str){
str=str+"";
if(typeof (str)!="string"||str.length==0){
return null;
}
var res=str.match(MochiKit.DateTime._isoRegexp);
if(typeof (res)=="undefined"||res==null){
return null;
}
var year,month,day,hour,min,sec,msec;
year=parseInt(res[1],10);
if(typeof (res[2])=="undefined"||res[2]==""){
return new Date(year);
}
month=parseInt(res[2],10)-1;
day=parseInt(res[3],10);
if(typeof (res[4])=="undefined"||res[4]==""){
return new Date(year,month,day);
}
hour=parseInt(res[4],10);
min=parseInt(res[5],10);
sec=(typeof (res[6])!="undefined"&&res[6]!="")?parseInt(res[6],10):0;
if(typeof (res[7])!="undefined"&&res[7]!=""){
msec=Math.round(1000*parseFloat("0."+res[7]));
}else{
msec=0;
}
if((typeof (res[8])=="undefined"||res[8]=="")&&(typeof (res[9])=="undefined"||res[9]=="")){
return new Date(year,month,day,hour,min,sec,msec);
}
var ofs;
if(typeof (res[9])!="undefined"&&res[9]!=""){
ofs=parseInt(res[10],10)*3600;
if(typeof (res[11])!="undefined"&&res[11]!=""){
ofs+=parseInt(res[11],10)*60;
}
if(res[9]=="-"){
ofs=-ofs;
}
}else{
ofs=0;
}
return new Date(Date.UTC(year,month,day,hour,min,sec,msec)+ofs);
};
MochiKit.DateTime.toISOTime=function(date,_192){
if(typeof (date)=="undefined"||date==null){
return null;
}
var hh=date.getHours();
var mm=date.getMinutes();
var ss=date.getSeconds();
var lst=[((_192&&(hh<10))?"0"+hh:hh),((mm<10)?"0"+mm:mm),((ss<10)?"0"+ss:ss)];
return lst.join(":");
};
MochiKit.DateTime.toISOTimestamp=function(date,_196){
if(typeof (date)=="undefined"||date==null){
return null;
}
var sep=_196?"T":" ";
var foot=_196?"Z":"";
if(_196){
date=new Date(date.getTime()+(date.getTimezoneOffset()*60000));
}
return MochiKit.DateTime.toISODate(date)+sep+MochiKit.DateTime.toISOTime(date,_196)+foot;
};
MochiKit.DateTime.toISODate=function(date){
if(typeof (date)=="undefined"||date==null){
return null;
}
var _199=MochiKit.DateTime._padTwo;
return [date.getFullYear(),_199(date.getMonth()+1),_199(date.getDate())].join("-");
};
MochiKit.DateTime.americanDate=function(d){
d=d+"";
if(typeof (d)!="string"||d.length==0){
return null;
}
var a=d.split("/");
return new Date(a[2],a[0]-1,a[1]);
};
MochiKit.DateTime._padTwo=function(n){
return (n>9)?n:"0"+n;
};
MochiKit.DateTime.toPaddedAmericanDate=function(d){
if(typeof (d)=="undefined"||d==null){
return null;
}
var _201=MochiKit.DateTime._padTwo;
return [_201(d.getMonth()+1),_201(d.getDate()),d.getFullYear()].join("/");
};
MochiKit.DateTime.toAmericanDate=function(d){
if(typeof (d)=="undefined"||d==null){
return null;
}
return [d.getMonth()+1,d.getDate(),d.getFullYear()].join("/");
};
MochiKit.DateTime.EXPORT=["isoDate","isoTimestamp","toISOTime","toISOTimestamp","toISODate","americanDate","toPaddedAmericanDate","toAmericanDate"];
MochiKit.DateTime.EXPORT_OK=[];
MochiKit.DateTime.EXPORT_TAGS={":common":MochiKit.DateTime.EXPORT,":all":MochiKit.DateTime.EXPORT};
MochiKit.DateTime.__new__=function(){
var base=this.NAME+".";
for(var k in this){
var o=this[k];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+k;
}
catch(e){
}
}
}
};
MochiKit.DateTime.__new__();
(function(_203,_204){
if((typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined")||(typeof (MochiKit.__compat__)=="boolean"&&MochiKit.__compat__)){
var all=_204.EXPORT_TAGS[":all"];
for(var i=0;i<all.length;i++){
_203[all[i]]=_204[all[i]];
}
}
})(this,MochiKit.DateTime);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Format");
}
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.Format)=="undefined"){
MochiKit.Format={};
}
MochiKit.Format.NAME="MochiKit.Format";
MochiKit.Format.VERSION="1.0";
MochiKit.Format.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Format.toString=function(){
return this.__repr__();
};
MochiKit.Format._numberFormatter=function(_205,_206,_207,_208,_209,_210,_211,_212,_213){
return function(num){
num=parseFloat(num);
if(typeof (num)=="undefined"||num==null||isNaN(num)){
return _205;
}
var _214=_206;
var _215=_207;
if(num<0){
num=-num;
}else{
_214=_214.replace(/-/,"");
}
var me=arguments.callee;
var fmt=MochiKit.Format.formatLocale(_208);
if(_209){
num=num*100;
_215=fmt.percent+_215;
}
num=MochiKit.Format.roundToFixed(num,_210);
var _217=num.split(/\./);
var _218=_217[0];
var frac=(_217.length==1)?"":_217[1];
var res="";
while(_218.length<_211){
_218="0"+_218;
}
if(_212){
while(_218.length>_212){
var i=_218.length-_212;
res=res+fmt.separator+_218.substring(i,_218.length);
_218=_218.substring(0,i);
}
}
res=_218+res;
if(_210>0){
while(frac.length<_213){
frac=frac+"0";
}
res=res+fmt.decimal+frac;
}
return _214+res+_215;
};
};
MochiKit.Format.numberFormatter=function(_220,_221,_222){
if(typeof (_221)=="undefined"){
_221="";
}
var _223=_220.match(/((?:[0#]+,)?[0#]+)(?:\.([0#]+))?(%)?/);
if(!_223){
throw TypeError("Invalid pattern");
}
var _224=_220.substr(0,_223.index);
var _225=_220.substr(_223.index+_223[0].length);
if(_224.search(/-/)==-1){
_224=_224+"-";
}
var _226=_223[1];
var frac=(typeof (_223[2])=="string"&&_223[2]!="")?_223[2]:"";
var _227=(typeof (_223[3])=="string"&&_223[3]!="");
var tmp=_226.split(/,/);
var _229;
if(typeof (_222)=="undefined"){
_222="default";
}
if(tmp.length==1){
_229=null;
}else{
_229=tmp[1].length;
}
var _230=_226.length-_226.replace(/0/g,"").length;
var _231=frac.length-frac.replace(/0/g,"").length;
var _232=frac.length;
return MochiKit.Format._numberFormatter(_221,_224,_225,_222,_227,_232,_230,_229,_231);
};
MochiKit.Format.formatLocale=function(_233){
if(typeof (_233)=="undefined"||_233==null){
_233="default";
}
if(typeof (_233)=="string"){
var rval=MochiKit.Format.LOCALE[_233];
if(typeof (rval)=="string"){
rval=arguments.callee(rval);
MochiKit.Format.LOCALE[_233]=rval;
}
return rval;
}else{
return _233;
}
};
MochiKit.Format.twoDigitAverage=function(_234,_235){
if(_235){
var res=_234/_235;
if(!isNaN(res)){
return MochiKit.Format.twoDigitFloat(_234/_235);
}
}
return "0";
};
MochiKit.Format.twoDigitFloat=function(_236){
var sign=(_236<0?"-":"");
var s=Math.floor(Math.abs(_236)*100).toString();
if(s=="0"){
return s;
}
if(s.length<3){
while(s.charAt(s.length-1)=="0"){
s=s.substring(0,s.length-1);
}
return sign+"0."+s;
}
var head=sign+s.substring(0,s.length-2);
var tail=s.substring(s.length-2,s.length);
if(tail=="00"){
return head;
}else{
if(tail.charAt(1)=="0"){
return head+"."+tail.charAt(0);
}else{
return head+"."+tail;
}
}
};
MochiKit.Format.lstrip=function(str,_241){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_241){
return str.replace(/^\s+/,"");
}else{
return str.replace(new RegExp("^["+_241+"]+"),"");
}
};
MochiKit.Format.rstrip=function(str,_242){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_242){
return str.replace(/\s+$/,"");
}else{
return str.replace(new RegExp("["+_242+"]+$"),"");
}
};
MochiKit.Format.strip=function(str,_243){
var self=MochiKit.Format;
return self.rstrip(self.lstrip(str,_243),_243);
};
MochiKit.Format.truncToFixed=function(_244,_245){
_244=Math.floor(_244*Math.pow(10,_245));
var res=(_244*Math.pow(10,-_245)).toFixed(_245);
if(res.charAt(0)=="."){
res="0"+res;
}
return res;
};
MochiKit.Format.roundToFixed=function(_246,_247){
return MochiKit.Format.truncToFixed(_246+0.5*Math.pow(10,-_247),_247);
};
MochiKit.Format.percentFormat=function(_248){
return MochiKit.Format.twoDigitFloat(100*_248)+"%";
};
MochiKit.Format.EXPORT=["truncToFixed","roundToFixed","numberFormatter","formatLocale","twoDigitAverage","twoDigitFloat","percentFormat","lstrip","rstrip","strip"];
MochiKit.Format.LOCALE={"en_US":{"separator":",","decimal":".","percent":"%"},"de_DE":{"separator":".","decimal":",","percent":"%"},"fr_FR":{"separator":" ","decimal":",","percent":"%"},"default":"en_US"};
MochiKit.Format.EXPORT_OK=[];
MochiKit.Format.EXPORT_TAGS={":all":MochiKit.Format.EXPORT,":common":MochiKit.Format.EXPORT};
MochiKit.Format.__new__=function(){
var base=this.NAME+".";
for(var k in this){
var o=this[k];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+k;
}
catch(e){
}
}
}
};
MochiKit.Format.__new__();
(function(_249,_250){
if((typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined")||(typeof (MochiKit.__compat__)=="boolean"&&MochiKit.__compat__)){
var all=_250.EXPORT_TAGS[":all"];
for(var i=0;i<all.length;i++){
_249[all[i]]=_250[all[i]];
}
}
})(this,MochiKit.Format);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Async");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Async depends on MochiKit.Base!";
}
if(typeof (MochiKit.Async)=="undefined"){
MochiKit.Async={};
}
MochiKit.Async.NAME="MochiKit.Async";
MochiKit.Async.VERSION="1.0";
MochiKit.Async.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Async.toString=function(){
return this.__repr__();
};
MochiKit.Async.Deferred=function(_251){
this.chain=[];
this.id=this._nextId();
this.fired=-1;
this.paused=0;
this.results=[null,null];
this.canceller=_251;
this.silentlyCancelled=false;
};
MochiKit.Async.Deferred.prototype={repr:function(){
var _252;
if(this.fired==-1){
_252="unfired";
}else{
if(this.fired==0){
_252="success";
}else{
_252="error";
}
}
return "Deferred("+this.id+", "+_252+")";
},toString:MochiKit.Base.forward("repr"),_nextId:MochiKit.Base.counter(),cancel:function(){
var self=MochiKit.Async;
if(this.fired==-1){
if(this.canceller){
this.canceller(this);
}else{
this.silentlyCancelled=true;
}
if(this.fired==-1){
this.errback(new self.CancelledError(this));
}
}else{
if((this.fired==0)&&(this.results[0] instanceof self.Deferred)){
this.results[0].cancel();
}
}
},_pause:function(){
this.paused++;
},_unpause:function(){
this.paused--;
if((this.paused==0)&&(this.fired>=0)){
this._fire();
}
},_continue:function(res){
this._resback(res);
this._unpause();
},_resback:function(res){
this.fired=((res instanceof Error)?1:0);
this.results[this.fired]=res;
this._fire();
},_check:function(){
if(this.fired!=-1){
if(!this.silentlyCancelled){
throw new MochiKit.Async.AlreadyCalledError(this);
}
this.silentlyCancelled=false;
return;
}
},callback:function(res){
this._check();
this._resback(res);
},errback:function(res){
this._check();
if(!(res instanceof Error)){
res=new MochiKit.Async.GenericError(res);
}
this._resback(res);
},addBoth:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,fn);
},addCallback:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,null);
},addErrback:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(null,fn);
},addCallbacks:function(cb,eb){
this.chain.push([cb,eb]);
if(this.fired>=0){
this._fire();
}
return this;
},_fire:function(){
var _255=this.chain;
var _256=this.fired;
var res=this.results[_256];
var self=this;
var cb=null;
while(_255.length>0&&this.paused==0){
var pair=_255.shift();
var f=pair[_256];
if(f==null){
continue;
}
try{
res=f(res);
_256=((res instanceof Error)?1:0);
if(res instanceof MochiKit.Async.Deferred){
cb=function(res){
self._continue(res);
};
this._pause();
}
}
catch(err){
_256=1;
res=err;
}
}
this.fired=_256;
this.results[_256]=res;
if(cb&&this.paused){
res.addBoth(cb);
}
}};
MochiKit.Base.update(MochiKit.Async,{evalJSONRequest:function(){
return eval("("+arguments[0].responseText+")");
},succeed:function(_258){
var d=new MochiKit.Async.Deferred();
d.callback.apply(d,arguments);
return d;
},fail:function(_259){
var d=new MochiKit.Async.Deferred();
d.errback.apply(d,arguments);
return d;
},getXMLHttpRequest:function(){
var self=arguments.callee;
if(!self.XMLHttpRequest){
var _260=[function(){
return new XMLHttpRequest();
},function(){
return new ActiveXObject("Msxml2.XMLHTTP");
},function(){
return new ActiveXObject("Microsoft.XMLHTTP");
},function(){
return new ActiveXObject("Msxml2.XMLHTTP.4.0");
},function(){
throw new MochiKit.Async.BrowserComplianceError("Browser does not support XMLHttpRequest");
}];
for(var i=0;i<_260.length;i++){
var func=_260[i];
try{
self.XMLHttpRequest=func;
return func();
}
catch(e){
}
}
}
return self.XMLHttpRequest();
},sendXMLHttpRequest:function(req,_262){
if(typeof (_262)=="undefined"){
send=null;
}
var _263=function(){
try{
req.onreadystatechange=null;
}
catch(e){
try{
req.onreadystatechange=function(){
};
}
catch(e){
}
}
req.abort();
};
var self=MochiKit.Async;
var d=new self.Deferred(_263);
var _264=function(){
if(req.readyState==4){
try{
req.onreadystatechange=null;
}
catch(e){
try{
req.onreadystatechange=function(){
};
}
catch(e){
}
}
var _265=null;
try{
_265=req.status;
if(!_265&&MochiKit.Base.isNotEmpty(req.responseText)){
_265=304;
}
}
catch(e){
}
if(_265==200||_265==304){
d.callback(req);
}else{
var err=new self.XMLHttpRequestError(req,"Request failed");
if(err.number){
d.errback(err);
}else{
d.errback(err);
}
}
}
};
try{
req.onreadystatechange=_264;
req.send(_262);
}
catch(e){
try{
req.onreadystatechange=null;
}
catch(ignore){
}
d.errback(e);
}
return d;
},doSimpleXMLHttpRequest:function(url){
var self=MochiKit.Async;
var req=self.getXMLHttpRequest();
if(arguments.length>1){
var m=MochiKit.Base;
url+="?"+m.queryString.apply(m.extend(null,arguments,1));
}
req.open("GET",url,true);
return self.sendXMLHttpRequest(req);
},loadJSONDoc:function(url){
var self=MochiKit.Async;
var d=self.doSimpleXMLHttpRequest.apply(self,arguments);
d=d.addCallback(self.evalJSONRequest);
return d;
},wait:function(_268,_269){
var d=new MochiKit.Async.Deferred();
var m=MochiKit.Base;
if(typeof (_269)!="undefined"){
d.addCallback(function(){
return _269;
});
}
var _270=setTimeout(m.bind(d.callback,d),Math.floor(_268*1000));
d.canceller=function(){
try{
clearTimeout(_270);
}
catch(e){
}
};
return d;
},callLater:function(_271,func){
var m=MochiKit.Base;
var _272=m.partial.apply(null,m.extend(null,arguments,1));
return MochiKit.Async.wait(_271).addCallback(function(res){
return _272();
});
}});
MochiKit.Async.DeferredLock=function(){
this.waiting=[];
this.locked=false;
this.id=this._nextId();
};
MochiKit.Async.DeferredLock.prototype={__class__:MochiKit.Async.DeferredLock,acquire:function(){
d=new MochiKit.Async.Deferred();
if(this.locked){
this.waiting.push(d);
}else{
this.locked=true;
d.callback(this);
}
return d;
},release:function(){
if(!this.locked){
throw TypeError("Tried to release an unlocked DeferredLock");
}
this.locked=false;
if(this.waiting.length>0){
this.locked=true;
this.waiting.shift().callback(this);
}
},_nextId:MochiKit.Base.counter(),repr:function(){
var _273;
if(this.locked){
_273="locked, "+this.waiting.length+" waiting";
}else{
_273="unlocked";
}
return "DeferredLock("+this.id+", "+_273+")";
},toString:MochiKit.Base.forward("repr")};
MochiKit.Async.EXPORT=["AlreadyCalledError","CancelledError","BrowserComplianceError","GenericError","XMLHttpRequestError","Deferred","succeed","fail","getXMLHttpRequest","doSimpleXMLHttpRequest","loadJSONDoc","wait","callLater","sendXMLHttpRequest","DeferredLock"];
MochiKit.Async.EXPORT_OK=["evalJSONRequest"];
MochiKit.Async.__new__=function(){
var m=MochiKit.Base;
var ne=m.partial(m._newNamedError,this);
ne("AlreadyCalledError",function(_275){
this.deferred=_275;
});
ne("CancelledError",function(_276){
this.deferred=_276;
});
ne("BrowserComplianceError",function(msg){
this.message=msg;
});
ne("GenericError",function(msg){
this.message=msg;
});
ne("XMLHttpRequestError",function(req,msg){
this.req=req;
this.message=msg;
try{
this.number=req.status;
}
catch(e){
}
});
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Async.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Async);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.DOM");
dojo.require("MochiKit.Iter");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Iter",[]);
}
try{
if(typeof (MochiKit.Iter)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.DOM depends on MochiKit.Iter!";
}
if(typeof (MochiKit.DOM)=="undefined"){
MochiKit.DOM={};
}
MochiKit.DOM.NAME="MochiKit.DOM";
MochiKit.DOM.VERSION="1.0";
MochiKit.DOM.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.DOM.toString=function(){
return this.__repr__();
};
MochiKit.DOM.EXPORT=["registerDOMConverter","coerceToDOM","createDOM","createDOMFunc","getNodeAttribute","setNodeAttribute","updateNodeAttributes","appendChildNodes","replaceChildNodes","removeElement","swapDOM","BUTTON","TT","PRE","H1","H2","H3","BR","HR","LABEL","TEXTAREA","FORM","P","UL","OL","LI","TD","TR","THEAD","TBODY","TFOOT","TABLE","TH","INPUT","SPAN","A","DIV","IMG","getElement","$","computedStyle","getElementsByTagAndClassName","addToCallStack","addLoadEvent","focusOnLoad","setElementClass","toggleElementClass","addElementClass","removeElementClass","swapElementClass","hasElementClass","escapeHTML","toHTML","emitHTML","setDisplayForElement","hideElement","showElement","scrapeText"];
MochiKit.DOM.EXPORT_OK=["domConverters"];
MochiKit.DOM.registerDOMConverter=function(name,_277,wrap,_278){
MochiKit.DOM.domConverters.register(name,_277,wrap,_278);
};
MochiKit.DOM.coerceToDOM=function(node,ctx){
var iter=MochiKit.Iter.iter;
var _282=MochiKit.Iter.repeat;
var imap=MochiKit.Iter.imap;
var _284=MochiKit.DOM.domConverters;
var _285=MochiKit.DOM.coerceToDOM;
var _286=MochiKit.Base.NotFound;
while(true){
if(typeof (node)=="undefined"||node==null){
return null;
}
if(typeof (node.nodeType)!="undefined"&&node.nodeType>0){
return node;
}
if(typeof (node)=="number"||typeof (node)=="bool"){
node=node.toString();
}
if(typeof (node)=="string"){
return document.createTextNode(node);
}
if(typeof (node.toDOM)=="function"){
node=node.toDOM(ctx);
continue;
}
if(typeof (node)=="function"){
node=node(ctx);
continue;
}
var _287=null;
try{
_287=iter(node);
}
catch(e){
}
if(_287){
return imap(_285,_287,_282(ctx));
}
try{
node=_284.match(node,ctx);
continue;
}
catch(e){
if(e!=_286){
throw e;
}
}
return document.createTextNode(node.toString());
}
return undefined;
};
MochiKit.DOM.setNodeAttribute=function(node,attr,_289){
var o={};
o.attr=_289;
try{
return MochiKit.DOM.updateNodeAttributes(node,o);
}
catch(e){
}
return null;
};
MochiKit.DOM.getNodeAttribute=function(node,attr){
var _290=MochiKit.DOM.attributeArray.renames[attr];
node=MochiKit.DOM.getElement(node);
try{
if(_290){
return node[_290];
}
return node.getAttribute(attr);
}
catch(e){
}
return null;
};
MochiKit.DOM.updateNodeAttributes=function(node,_291){
var elem=node;
if(typeof (node)=="string"){
elem=MochiKit.DOM.getElement(node);
}
if(_291){
var _292=MochiKit.Base.updatetree;
if(MochiKit.DOM.attributeArray.compliant){
for(var k in _291){
var v=_291[k];
if(typeof (v)=="object"&&typeof (elem[k])=="object"){
_292(elem[k],v);
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}else{
var _293=MochiKit.DOM.attributeArray.renames;
for(k in _291){
v=_291[k];
var _294=_293[k];
if(typeof (_294)=="string"){
elem[_294]=v;
}else{
if(typeof (elem[k])=="object"&&typeof (v)=="object"){
_292(elem[k],v);
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}
}
}
return elem;
};
MochiKit.DOM.appendChildNodes=function(node){
var elem=node;
if(typeof (node)=="string"){
elem=MochiKit.DOM.getElement(node);
}
var _295=[MochiKit.DOM.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _296=MochiKit.Iter.iextend;
while(_295.length){
var n=_295.shift();
if(typeof (n)=="undefined"||n==null){
}else{
if(typeof (n.nodeType)=="number"){
elem.appendChild(n);
}else{
_296(_295,n);
}
}
}
return elem;
};
MochiKit.DOM.replaceChildNodes=function(node){
var elem=node;
if(typeof (node)=="string"){
elem=MochiKit.DOM.getElement(node);
arguments[0]=elem;
}
var _297;
while((_297=elem.firstChild)){
elem.removeChild(_297);
}
if(arguments.length<2){
return elem;
}else{
return MochiKit.DOM.appendChildNodes.apply(this,arguments);
}
};
MochiKit.DOM.createDOM=function(name,_298){
var elem;
if(typeof (name)=="string"){
elem=document.createElement(name);
}else{
elem=name;
}
if(_298){
MochiKit.DOM.updateNodeAttributes(elem,_298);
}
if(arguments.length<=2){
return elem;
}else{
var args=MochiKit.Base.extend([elem],arguments,2);
return MochiKit.DOM.appendChildNodes.apply(this,args);
}
};
MochiKit.DOM.createDOMFunc=function(){
return MochiKit.Base.partial.apply(this,MochiKit.Base.extend([MochiKit.DOM.createDOM],arguments));
};
MochiKit.DOM.swapDOM=function(dest,src){
dest=MochiKit.DOM.getElement(dest);
var _302=dest.parentNode;
if(src){
src=MochiKit.DOM.getElement(src);
_302.replaceChild(src,dest);
}else{
_302.removeChild(dest);
}
return src;
};
MochiKit.DOM.getElement=function(id){
if(arguments.length==1){
return ((typeof (id)=="string")?document.getElementById(id):id);
}else{
return MochiKit.Base.map(getElement,arguments);
}
};
MochiKit.DOM.computedStyle=function(_304,_305,_306){
if(arguments.length==2){
_306=_305;
}
var el=MochiKit.DOM.getElement(_304);
if(!el||el==document){
return undefined;
}
if(el.currentStyle){
return el.currentStyle[_305];
}
if(typeof (document.defaultView)=="undefined"){
return undefined;
}
if(document.defaultView==null){
return undefined;
}
var _308=document.defaultView.getComputedStyle(el,null);
if(typeof (_308)=="undefined"||_308==null){
return undefined;
}
return _308.getPropertyValue(_306);
};
MochiKit.DOM.getElementsByTagAndClassName=function(_309,_310,_311){
if(typeof (_309)=="undefined"||_309==null){
_309="*";
}
if(typeof (_311)=="undefined"||_311==null){
_311=document;
}
_311=MochiKit.DOM.getElement(_311);
var _312=_311.getElementsByTagName(_309)||document.all;
if(typeof (_310)=="undefined"||_310==null){
return MochiKit.Base.extend(null,_312);
}
var _313=[];
for(var i=0;i<_312.length;i++){
var _314=_312[i];
var _315=_314.className.split(" ");
for(var j=0;j<_315.length;j++){
if(_315[j]==_310){
_313.push(_314);
break;
}
}
}
return _313;
};
MochiKit.DOM._newCallStack=function(path,once){
var rval=function(){
var _318=arguments.callee.callStack;
for(var i=0;i<_318.length;i++){
if(_318[i].apply(this,arguments)===false){
break;
}
}
if(once){
try{
this[path]=null;
}
catch(e){
}
}
};
rval.callStack=[];
return rval;
};
MochiKit.DOM.addToCallStack=function(_319,path,func,once){
var _320=_319[path];
var _321=_320;
if(!(typeof (_320)=="function"&&typeof (_320.callStack)=="object"&&_320.callStack!=null)){
_321=MochiKit.DOM._newCallStack(path,once);
if(typeof (_320)=="function"){
_321.callStack.push(_320);
}
_319[path]=_321;
}
_321.callStack.push(func);
};
MochiKit.DOM.addLoadEvent=function(func){
MochiKit.DOM.addToCallStack(window,"onload",func,true);
};
MochiKit.DOM.focusOnLoad=function(_322){
MochiKit.DOM.addLoadEvent(function(){
_322=MochiKit.DOM.getElement(_322);
if(_322){
_322.focus();
}
});
};
MochiKit.DOM.setElementClass=function(_323,_324){
var obj=MochiKit.DOM.getElement(_323);
if(MochiKit.DOM.attributeArray.compliant){
obj.setAttribute("class",_324);
}else{
obj.setAttribute("className",_324);
}
};
MochiKit.DOM.toggleElementClass=function(_325){
var _326=MochiKit.DOM.getElement;
var _327=MochiKit.DOM.addElementClass;
var _328=MochiKit.DOM.removeElementClass;
for(var i=1;i<arguments.length;i++){
var obj=_326(arguments[i]);
if(!_327(obj,_325)){
_328(obj,_325);
}
}
};
MochiKit.DOM.addElementClass=function(_329,_330){
var obj=MochiKit.DOM.getElement(_329);
var cls=obj.className;
if(cls.length==0){
MochiKit.DOM.setElementClass(obj,_330);
return true;
}
if(cls==_330){
return false;
}
var _332=obj.className.split(" ");
for(var i=0;i<_332.length;i++){
if(_332[i]==_330){
return false;
}
}
MochiKit.DOM.setElementClass(obj,cls+" "+_330);
return true;
};
MochiKit.DOM.removeElementClass=function(_333,_334){
var obj=MochiKit.DOM.getElement(_333);
var cls=obj.className;
if(cls.length==0){
return false;
}
if(cls==_334){
MochiKit.DOM.setElementClass(obj,"");
return true;
}
var _335=obj.className.split(" ");
for(var i=0;i<_335.length;i++){
if(_335[i]==_334){
_335.splice(i,1);
MochiKit.DOM.setElementClass(obj,_335.join(" "));
return true;
}
}
return false;
};
MochiKit.DOM.swapElementClass=function(_336,_337,_338){
var obj=MochiKit.DOM.getElement(_336);
var res=MochiKit.DOM.removeElementClass(obj,_337);
if(res){
MochiKit.DOM.addElementClass(obj,_338);
}
return res;
};
MochiKit.DOM.hasElementClass=function(_339,_340){
var obj=MochiKit.DOM.getElement(_339);
var _341=obj.className.split(" ");
for(var i=1;i<arguments.length;i++){
var good=false;
for(var j=0;j<_341.length;j++){
if(_341[j]==arguments[i]){
good=true;
break;
}
}
if(!good){
return false;
}
}
return true;
};
MochiKit.DOM.escapeHTML=function(s){
return s.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/</g,"&lt;").replace(/>/g,"&gt;");
};
MochiKit.DOM.toHTML=function(dom){
return MochiKit.DOM.emitHTML(dom).join("");
};
MochiKit.DOM.emitHTML=function(dom,lst){
if(typeof (lst)=="undefined"||lst==null){
lst=[];
}
var _344=[dom];
var _345=MochiKit.DOM.escapeHTML;
var _346=MochiKit.DOM.attributeArray;
while(_344.length){
dom=_344.pop();
if(typeof (dom)=="string"){
lst.push(dom);
}else{
if(dom.nodeType==1){
lst.push("<"+dom.nodeName.toLowerCase());
var _347=[];
var _348=_346(dom);
for(var i=0;i<_348.length;i++){
var a=_348[i];
_347.push([" ",a.name,"=\"",_345(a.value),"\""]);
}
_347.sort();
for(i=0;i<_347.length;i++){
var _349=_347[i];
for(var j=0;j<_349.length;j++){
lst.push(_349[j]);
}
}
if(dom.hasChildNodes()){
lst.push(">");
_344.push("</"+dom.nodeName.toLowerCase()+">");
var _350=dom.childNodes;
for(i=_350.length-1;i>=0;i--){
_344.push(_350[i]);
}
}else{
lst.push("/>");
}
}else{
if(dom.nodeType==3){
lst.push(_345(dom.nodeValue));
}
}
}
}
return lst;
};
MochiKit.DOM.setDisplayForElement=function(_351,_352){
var _353=MochiKit.Base.extend(null,arguments,1);
MochiKit.Iter.forEach(MochiKit.Base.filter(null,MochiKit.Base.map(getElement,_353)),function(_352){
_352.style.display=_351;
});
};
MochiKit.DOM.scrapeText=function(node,_354){
var rval=[];
MochiKit.Base.nodeWalk(node,function(node){
var _355=node.nodeValue;
if(typeof (_355)=="string"){
rval.push(_355);
}
return node.childNodes;
});
if(_354){
return rval;
}else{
return rval.join("");
}
};
MochiKit.DOM.__new__=function(){
this.domConverters=new MochiKit.Base.AdapterRegistry();
var _356=document.createElement("span");
var _357;
if(_356.attributes.length>0){
var _358=MochiKit.Base.filter;
_357=function(node){
return _358(_357.ignoreAttrFilter,node.attributes);
};
_357.ignoreAttr={};
MochiKit.Iter.forEach(_356.attributes,function(a){
_357.ignoreAttr[a.name]=a.value;
});
_357.ignoreAttrFilter=function(a){
return (_357.ignoreAttr[a.name]!=a.value);
};
_357.compliant=false;
_357.renames={"class":"className","checked":"defaultChecked"};
}else{
_357=function(node){
return node.attributes;
};
_357.compliant=true;
_357.renames={};
}
this.attributeArray=_357;
var _359=this.createDOMFunc;
this.UL=_359("ul");
this.OL=_359("ol");
this.LI=_359("li");
this.TD=_359("td");
this.TR=_359("tr");
this.TBODY=_359("tbody");
this.THEAD=_359("thead");
this.TFOOT=_359("tfoot");
this.TABLE=_359("table");
this.TH=_359("th");
this.INPUT=_359("input");
this.SPAN=_359("span");
this.A=_359("a");
this.DIV=_359("div");
this.IMG=_359("img");
this.BUTTON=_359("button");
this.TT=_359("tt");
this.PRE=_359("pre");
this.H1=_359("h1");
this.H2=_359("h2");
this.H3=_359("h3");
this.BR=_359("br");
this.HR=_359("hr");
this.LABEL=_359("label");
this.TEXTAREA=_359("textarea");
this.FORM=_359("form");
this.P=_359("p");
var _360=MochiKit.Base.partial;
this.hideElement=_360(this.setDisplayForElement,"none");
this.showElement=_360(this.setDisplayForElement,"block");
this.removeElement=this.swapDOM;
this.$=this.getElement;
this.EXPORT_TAGS={":common":this.EXPORT,":all":MochiKit.Base.concat(this.EXPORT,this.EXPORT_OK)};
MochiKit.Base.nameFunctions(this);
};
MochiKit.DOM.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.DOM);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.LoggingPane");
dojo.require("MochiKit.Logging");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Logging",[]);
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"||typeof (MochiKit.Logging)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.LoggingPane depends on MochiKit.Base and MochiKit.Logging!";
}
if(typeof (MochiKit.LoggingPane)=="undefined"){
MochiKit.LoggingPane={};
}
MochiKit.LoggingPane.NAME="MochiKit.LoggingPane";
MochiKit.LoggingPane.VERSION="1.0";
MochiKit.LoggingPane.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.LoggingPane.toString=function(){
return this.__repr__();
};
MochiKit.LoggingPane.createLoggingPane=function(_361){
var m=MochiKit.LoggingPane;
_361=!(!_361);
if(m._loggingPane&&m._loggingPane.inline!=_361){
m._loggingPane.closePane();
m._loggingPane=null;
}
if(!m._loggingPane||m._loggingPane.closed){
m._loggingPane=new m.LoggingPane(_361,MochiKit.Logging.logger);
}
return m._loggingPane;
};
MochiKit.LoggingPane.LoggingPane=function(_362,_363){
var doc=document;
if(typeof (_363)=="undefined"||_363==null){
MochiKit.Logging.logger;
}
var _365=MochiKit.Base.update;
var _366=MochiKit.Base.updatetree;
var bind=MochiKit.Base.bind;
var _367=MochiKit.Base.clone;
var win;
if(!_362){
win=window.open("","","dependent,resizable,height=200");
if(!win){
alert("Not able to open debugging window due to pop-up blocking.");
return;
}
doc=win.document;
}
this.doc=doc;
var _369=doc.createElement("div");
var _370=doc.createElement("input");
var _371=doc.createElement("input");
var _372=doc.createElement("button");
var _373=doc.createElement("button");
var _374=doc.createElement("button");
var _375=doc.createElement("button");
var _376=doc.createElement("div");
var _377=doc.createElement("div");
var _378="_debugPaneListener";
this.colorTable=_367(this.colorTable);
var _379=[];
var _380=null;
var _381=function(msg){
var _382=msg.level;
if(typeof (_382)=="number"){
_382=MochiKit.Logging.LogLevel[_382];
}
return _382;
};
var _383=function(msg){
return msg.info.join(" ");
};
var _384=bind(function(msg){
var _385=_381(msg);
var text=_383(msg);
var c=this.colorTable[_385];
var p=doc.createElement("span");
p.style.color=c;
p.style.margin="0";
p.appendChild(doc.createTextNode(_385+": "+text));
_377.appendChild(p);
_377.appendChild(doc.createElement("br"));
if(_376.offsetHeight>_376.scrollHeight){
_376.scrollTop=0;
}else{
_376.scrollTop=_376.scrollHeight;
}
},this);
var _388=function(msg){
_379[_379.length]=msg;
_384(msg);
};
var _389=function(){
var _390,infore;
try{
_390=new RegExp(_370.value);
infore=new RegExp(_371.value);
}
catch(e){
logDebug("Error in filter regex: "+e.message);
return null;
}
return function(msg){
return (_390.test(_381(msg))&&infore.test(_383(msg)));
};
};
var _391=function(){
while(_377.firstChild){
_377.removeChild(_377.firstChild);
}
};
var _392=function(){
_379=[];
_391();
};
var _393=bind(function(){
if(this.closed){
return;
}
this.closed=true;
if(MochiKit.LoggingPane._loggingPane==this){
MochiKit.LoggingPane._loggingPane=null;
}
_363.removeListener(_378);
if(_362){
_369.parentNode.removeChild(_369);
}else{
this.win.close();
}
},this);
var _394=function(){
_391();
for(var i=0;i<_379.length;i++){
var msg=_379[i];
if(_380==null||_380(msg)){
_384(msg);
}
}
};
var _395=function(){
_380=_389();
_394();
_363.removeListener(_378);
_363.addListener(_378,_380,_388);
};
var _396=function(){
_379=_363.getMessages();
_394();
};
var _397=function(_398){
_398=_398||window.event;
key=_398.which||_398.keyCode;
if(key==13){
_395();
}
};
var _399={"display":"block","position":"fixed","left":"0px","bottom":"0px","font":this.logFont,"width":"100%","height":"100%","backgroundColor":"white"};
if(_362){
_399.height="10em";
_399.borderTop="2px solid black";
}
_365(_369.style,_399);
doc.body.appendChild(_369);
_399={"width":"33%","display":"inline","font":this.logFont};
_366(_370,{"value":"FATAL|ERROR|WARNING|INFO|DEBUG","onkeypress":_397,"style":_399});
_369.appendChild(_370);
_366(_371,{"value":".*","onkeypress":_397,"style":_399});
_369.appendChild(_371);
_399={"width":"8%","display":"inline","font":this.logFont};
_372.appendChild(doc.createTextNode("Filter"));
_372.onclick=_395;
_365(_372.style,_399);
_369.appendChild(_372);
_373.appendChild(doc.createTextNode("Load"));
_373.onclick=_396;
_365(_373.style,_399);
_369.appendChild(_373);
_374.appendChild(doc.createTextNode("Clear"));
_374.onclick=_392;
_365(_374.style,_399);
_369.appendChild(_374);
_375.appendChild(doc.createTextNode("Close"));
_375.onclick=_393;
_365(_375.style,_399);
_369.appendChild(_375);
_369.style.display="block";
_376.style.overflow="auto";
_376.style.width="100%";
_377.style.whitespace="preserve";
_377.style.width="100%";
_377.style.height="8em";
_376.appendChild(_377);
_369.appendChild(_376);
_395();
_396();
this.win=win;
this.inline=_362;
this.closePane=_393;
this.closed=false;
};
MochiKit.LoggingPane.LoggingPane.prototype={"logFont":"8pt Verdana,sans-serif","colorTable":{"ERROR":"red","FATAL":"darkred","WARNING":"blue","INFO":"black","DEBUG":"green"}};
MochiKit.LoggingPane.EXPORT_OK=["LoggingPane"];
MochiKit.LoggingPane.EXPORT=["createLoggingPane"];
MochiKit.LoggingPane.__new__=function(){
this.EXPORT_TAGS={":common":this.EXPORT,":all":MochiKit.Base.concat(this.EXPORT,this.EXPORT_OK)};
MochiKit.Base.nameFunctions(this);
MochiKit.LoggingPane._loggingPane=null;
};
MochiKit.LoggingPane.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.LoggingPane);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Color");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Color depends on MochiKit.Base";
}
if(typeof (MochiKit.Color)=="undefined"){
MochiKit.Color={};
}
MochiKit.Color.NAME="MochiKit.Color";
MochiKit.Color.VERSION="1.0";
MochiKit.Color.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Color.toString=function(){
return this.__repr__();
};
MochiKit.Color.Color=function(red,_401,blue,_403){
if(typeof (_403)=="undefined"||_403==null){
_403=1;
}
this.rgb={r:red,g:_401,b:blue,a:_403};
};
MochiKit.Color.Color.prototype={__class__:MochiKit.Color.Color,colorWithAlpha:function(_404){
var rgb=this.rgb;
var m=MochiKit.Color;
return m.Color.fromRGB(rgb.r,rgb.g,rgb.b,_404);
},colorWithHue:function(hue){
var hsl=this.asHSL();
hsl.h=hue;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithSaturation:function(_408){
var hsl=this.asHSL();
hsl.s=_408;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithLightness:function(_409){
var hsl=this.asHSL();
hsl.l=_409;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},darkerColorWithLevel:function(_410){
var hsl=this.asHSL();
hsl.l=Math.max(hsl.l-_410,0);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},lighterColorWithLevel:function(_411){
var hsl=this.asHSL();
Math.min(hsl.l+_411,1);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},blendedColor:function(_412,_413){
if(typeof (_413)=="undefined"||_413==null){
_413=0.5;
}
var sf=1-_413;
var s=this.rgb;
var d=_412.rgb;
var df=_413;
return MochiKit.Color.Color.fromRGB((s.r*sf)+(d.r*df),(s.g*sf)+(d.g*df),(s.b*sf)+(d.b*df),(s.a*sf)+(d.a*df));
},compareRGB:function(_416){
var a=this.asRGB();
var b=_416.asRGB();
return MochiKit.Base.compare([a.r,a.g,a.b,a.a],[b.r,b.g,b.b,b.a]);
},isLight:function(){
return this.asHSL().b>0.5;
},isDark:function(){
return (!this.isLight());
},toHSLString:function(){
var c=this.asHSL();
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hslString;
if(!rval){
var mid=(ccc(c.h,360).toFixed(0)+","+ccc(c.s,100).toPrecision(4)+"%"+","+ccc(c.l,100).toPrecision(4)+"%");
var a=c.a;
if(a>=1){
a=1;
rval="hsl("+mid+")";
}else{
if(a<=0){
a=0;
}
rval="hsla("+mid+","+a+")";
}
this._hslString=rval;
}
return rval;
},toRGBString:function(){
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._rgbString;
if(!rval){
var mid=(ccc(c.r,255).toFixed(0)+","+ccc(c.g,255).toFixed(0)+","+ccc(c.b,255).toFixed(0));
if(c.a!=1){
rval="rgba("+mid+","+c.a+")";
}else{
rval="rgb("+mid+")";
}
this._rgbString=rval;
}
return rval;
},asRGB:function(){
return MochiKit.Base.clone(this.rgb);
},toHexString:function(){
var m=MochiKit.Color;
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hexString;
if(!rval){
rval=("#"+m.toColorPart(ccc(c.r,255))+m.toColorPart(ccc(c.g,255))+m.toColorPart(ccc(c.b,255)));
this._hexString=rval;
}
return rval;
},asHSV:function(){
var hsv=this.hsv;
var c=this.rgb;
if(typeof (hsv)=="undefined"||hsv==null){
hsv=MochiKit.Color.rgbToHSV(this.rgb);
this.hsv=hsv;
}
return MochiKit.Base.clone(hsv);
},asHSL:function(){
var hsl=this.hsl;
var c=this.rgb;
if(typeof (hsl)=="undefined"||hsl==null){
hsl=MochiKit.Color.rgbToHSL(this.rgb);
this.hsl=hsl;
}
return MochiKit.Base.clone(hsl);
},toString:function(){
return this.toRGBString();
},repr:function(){
var c=this.rgb;
var col=[c.r,c.g,c.b,c.a];
return this.__class__.NAME+"("+col.join(", ")+")";
}};
MochiKit.Base.update(MochiKit.Color.Color,{fromRGB:function(red,_421,blue,_422){
var _423=MochiKit.Color.Color;
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_421=rgb.g;
blue=rgb.b;
if(typeof (rgb.a)=="undefined"){
_422=undefined;
}else{
_422=rgb.a;
}
}
return new _423(red,_421,blue,_422);
},fromHSL:function(hue,_424,_425,_426){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hslToRGB.apply(m,arguments));
},fromHSV:function(hue,_427,_428,_429){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hsvToRGB.apply(m,arguments));
},fromName:function(name){
var _430=MochiKit.Color.Color;
var _431=_430._namedColors[name.toLowerCase()];
if(typeof (_431)=="string"){
return _430.fromHexString(_431);
}else{
if(name=="transparent"){
return _430.transparentColor();
}
}
return null;
},fromString:function(_432){
var self=MochiKit.Color.Color;
var _433=_432.substr(0,3);
if(_433=="rgb"){
return self.fromRGBString(_432);
}else{
if(_433=="hsl"){
return self.fromHSLString(_432);
}else{
if(_432.charAt(0)=="#"){
return self.fromHexString(_432);
}
}
}
return self.fromName(_432);
},fromHexString:function(_434){
if(_434.charAt(0)=="#"){
_434=_434.substring(1);
}
var _435=[];
var i,hex;
if(_434.length==3){
for(i=0;i<3;i++){
hex=_434.substr(i,1);
_435.push(parseInt(hex+hex,16)/255);
}
}else{
for(i=0;i<6;i+=2){
hex=_434.substr(i,2);
_435.push(parseInt(hex,16)/255);
}
}
var _436=MochiKit.Color.Color;
return _436.fromRGB.apply(_436,_435);
},_fromColorString:function(pre,_438,_439,_440){
if(_440.indexOf(pre)==0){
_440=_440.substring(_440.indexOf("(",3)+1,_440.length-1);
}
var _441=_440.split(/\s*,\s*/);
var _442=[];
for(var i=0;i<_441.length;i++){
var c=_441[i];
var val;
var _443=c.substring(c.length-3);
if(c.charAt(c.length-1)=="%"){
val=0.01*parseFloat(c.substring(0,c.length-1));
}else{
if(_443=="deg"){
val=parseFloat(c)/360;
}else{
if(_443=="rad"){
val=parseFloat(c)/(Math.PI*2);
}else{
val=_439[i]*parseFloat(c);
}
}
}
_442.push(val);
}
return this[_438].apply(this,_442);
},fromBackground:function(elem){
var m=MochiKit.Color;
var d=MochiKit.DOM;
for(elem=d.getElement(elem);elem;elem=elem.parentNode){
var _444=d.computedStyle(elem,"backgroundColor","background-color");
if(!_444){
continue;
}
var _445=m.Color.fromString(_444);
if(!_445){
break;
}
if(_445.asRGB().a>0){
return _445;
}
}
return m.Color.whiteColor();
},namedColors:function(){
return MochiKit.Base.clone(MochiKit.Color.Color._namedColors);
}});
MochiKit.Base.update(MochiKit.Color,{clampColorComponent:function(v,_446){
v*=_446;
if(v<0){
return 0;
}else{
if(v>_446){
return _446;
}else{
return v;
}
}
},_hslValue:function(n1,n2,hue){
if(hue>6){
hue-=6;
}else{
if(hue<0){
hue+=6;
}
}
var val;
if(hue<1){
val=n1+(n2-n1)*hue;
}else{
if(hue<3){
val=n2;
}else{
if(hue<4){
val=n1+(n2-n1)*(4-hue);
}else{
val=n1;
}
}
}
return val;
},hsvToRGB:function(hue,_449,_450,_451){
if(arguments.length==1){
var hsv=hue;
hue=hsv.h;
_449=hsv.s;
_450=hsv.v;
_451=hsv.a;
}
var red;
var _452;
var blue;
if(_449==0){
red=0;
_452=0;
blue=0;
}else{
var i=Math.floor(hue*6);
var f=(hue*6)-i;
var p=_450*(1-_449);
var q=_450*(1-(_449*f));
var t=_450*(1-(_449*(1-f)));
switch(i){
case 1:
red=q;
_452=_450;
blue=p;
break;
case 2:
red=p;
_452=_450;
blue=t;
break;
case 3:
red=p;
_452=q;
blue=_450;
break;
case 4:
red=t;
_452=p;
blue=_450;
break;
case 5:
red=_450;
_452=p;
blue=q;
break;
case 6:
case 0:
red=_450;
_452=t;
blue=p;
break;
}
}
return {r:red,g:_452,b:blue,a:_451};
},hslToRGB:function(hue,_454,_455,_456){
if(arguments.length==1){
var hsl=hue;
hue=hsl.h;
_454=hsl.s;
_455=hsl.l;
_456=hsl.a;
}
var red;
var _457;
var blue;
if(_454==0){
red=_455;
_457=_455;
blue=_455;
}else{
var m2;
if(_455<=0.5){
m2=_455*(1+_454);
}else{
m2=_455+_454-(_455*_454);
}
var m1=(2*_455)-m2;
var f=MochiKit.Color._hslValue;
var h6=hue*6;
red=f(m1,m2,h6+2);
_457=f(m1,m2,h6);
blue=f(m1,m2,h6-2);
}
return {r:red,g:_457,b:blue,a:_456};
},rgbToHSV:function(red,_461,blue,_462){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_461=rgb.g;
blue=rgb.b;
_462=rgb.a;
}
var max=Math.max(Math.max(red,_461),blue);
var min=Math.min(Math.min(red,_461),blue);
var hue;
var _465;
var _466=max;
if(min==max){
hue=0;
_465=0;
}else{
var _467=(max-min);
_465=_467/max;
if(red==max){
hue=(_461-blue)/_467;
}else{
if(_461==max){
hue=2+((blue-red)/_467);
}else{
hue=4+((red-_461)/_467);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_465,v:_466,a:_462};
},rgbToHSL:function(red,_468,blue,_469){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_468=rgb.g;
blue=rgb.b;
_469=rgb.a;
}
var max=Math.max(red,Math.max(_468,blue));
var min=Math.min(red,Math.min(_468,blue));
var hue;
var _470;
var _471=(max+min)/2;
var _472=max-min;
if(_472==0){
hue=0;
_470=0;
}else{
if(_471<=0.5){
_470=_472/(max+min);
}else{
_470=_472/(2-max-min);
}
if(red==max){
hue=(_468-blue)/_472;
}else{
if(_468==max){
hue=2+((blue-red)/_472);
}else{
hue=4+((red-_468)/_472);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_470,l:_471,a:_469};
},toColorPart:function(num){
var _473=Math.round(num).toString(16);
if(num<16){
return "0"+_473;
}
return _473;
},__new__:function(){
var m=MochiKit.Base;
this.Color.fromRGBString=m.bind(this.Color._fromColorString,this.Color,"rgb","fromRGB",[1/255,1/255,1/255,1]);
this.Color.fromHSLString=m.bind(this.Color._fromColorString,this.Color,"hsl","fromHSL",[1/360,0.01,0.01,1]);
var _474=1/3;
var _475={black:[0,0,0],blue:[0,0,1],brown:[0.6,0.4,0.2],cyan:[0,1,1],darkGray:[_474,_474,_474],gray:[0.5,0.5,0.5],green:[0,1,0],lightGray:[2*_474,2*_474,2*_474],magenta:[1,0,1],orange:[1,0.5,0],purple:[0.5,0,0.5],red:[1,0,0],transparent:[0,0,0,0],white:[1,1,1],yellow:[1,1,0]};
var _476=function(name,r,g,b,a){
var rval=this.fromRGB(r,g,b,a);
this[name]=function(){
return rval;
};
return rval;
};
for(var k in _475){
var name=k+"Color";
var _479=m.concat([_476,this.Color,name],_475[k]);
this.Color[name]=m.bind.apply(null,_479);
}
var _480=function(){
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof Color)){
return false;
}
}
return true;
};
var _481=function(a,b){
return a.compareRGB(b);
};
m.nameFunctions(this);
m.registerComparator(this.Color.NAME,_480,_481);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
}});
MochiKit.Color.EXPORT=["Color"];
MochiKit.Color.EXPORT_OK=["clampColorComponent","rgbToHSL","hslToRGB","rgbToHSV","hsvToRGB","toColorPart"];
MochiKit.Color.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Color);
MochiKit.Color.Color._namedColors={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"};
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Visual");
dojo.require("MochiKit.Base");
dojo.require("MochiKit.DOM");
dojo.require("MochiKit.Color");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
JSAN.use("MochiKit.DOM",[]);
JSAN.use("MochiKit.Color",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"||typeof (MochiKit.DOM)=="undefined"||typeof (MochiKit.Color)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Visual depends on MochiKit.Base, MochiKit.DOM and MochiKit.Color!";
}
if(typeof (MochiKit.Visual)=="undefined"){
MochiKit.Visual={};
}
MochiKit.Visual.NAME="MochiKit.Visual";
MochiKit.Visual.VERSION="1.0";
MochiKit.Visual.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Visual.toString=function(){
return this.__repr__();
};
MochiKit.Visual._RoundCorners=function(e,_483){
e=MochiKit.DOM.getElement(e);
this._setOptions(_483);
if(this.options.__unstable__wrapElement){
e=this._doWrap(e);
}
var _484=this.options.color;
var C=MochiKit.Color.Color;
if(this.options.color=="fromElement"){
_484=C.fromBackground(e);
}else{
if(!(_484 instanceof C)){
_484=C.fromString(_484);
}
}
this.isTransparent=(_484.asRGB().a<=0);
var _486=this.options.bgColor;
if(this.options.bgColor=="fromParent"){
_486=C.fromBackground(e.offsetParent);
}else{
if(!(_486 instanceof C)){
_486=C.fromString(_486);
}
}
this._roundCornersImpl(e,_484,_486);
};
MochiKit.Visual._RoundCorners.prototype={_doWrap:function(e){
var _487=e.parentNode;
if(typeof (document.defaultView)=="undefined"||document.defaultView==null){
return e;
}
var _488=document.defaultView.getComputedStyle(e,null);
if(typeof (_488)=="undefined"||_488==null){
return e;
}
var _489=MochiKit.DOM.DIV({"style":{display:"block",marginTop:_488.getPropertyValue("padding-top"),marginRight:_488.getPropertyValue("padding-right"),marginBottom:_488.getPropertyValue("padding-bottom"),marginLeft:_488.getPropertyValue("padding-left"),padding:"0px"}});
_489.innerHTML=e.innerHTML;
e.innerHTML="";
e.appendChild(_489);
return e;
},_roundCornersImpl:function(e,_490,_491){
if(this.options.border){
this._renderBorder(e,_491);
}
if(this._isTopRounded()){
this._roundTopCorners(e,_490,_491);
}
if(this._isBottomRounded()){
this._roundBottomCorners(e,_490,_491);
}
},_renderBorder:function(el,_492){
var _493="1px solid "+this._borderColor(_492);
var _494="border-left: "+_493;
var _495="border-right: "+_493;
var _496="style='"+_494+";"+_495+"'";
el.innerHTML="<div "+_496+">"+el.innerHTML+"</div>";
},_roundTopCorners:function(el,_497,_498){
var _499=this._createCorner(_498);
for(var i=0;i<this.options.numSlices;i++){
_499.appendChild(this._createCornerSlice(_497,_498,i,"top"));
}
el.style.paddingTop=0;
el.insertBefore(_499,el.firstChild);
},_roundBottomCorners:function(el,_500,_501){
var _502=this._createCorner(_501);
for(var i=(this.options.numSlices-1);i>=0;i--){
_502.appendChild(this._createCornerSlice(_500,_501,i,"bottom"));
}
el.style.paddingBottom=0;
el.appendChild(_502);
},_createCorner:function(_503){
var _504=document.createElement("div");
_504.style.backgroundColor=_503.toString();
return _504;
},_createCornerSlice:function(_505,_506,n,_507){
var _508=document.createElement("span");
var _509=_508.style;
_509.backgroundColor=_505.toString();
_509.display="block";
_509.height="1px";
_509.overflow="hidden";
_509.fontSize="1px";
var _510=this._borderColor(_505,_506);
if(this.options.border&&n==0){
_509.borderTopStyle="solid";
_509.borderTopWidth="1px";
_509.borderLeftWidth="0px";
_509.borderRightWidth="0px";
_509.borderBottomWidth="0px";
_509.height="0px";
_509.borderColor=_510.toString();
}else{
if(_510){
_509.borderColor=_510.toString();
_509.borderStyle="solid";
_509.borderWidth="0px 1px";
}
}
if(!this.options.compact&&(n==(this.options.numSlices-1))){
_509.height="2px";
}
this._setMargin(_508,n,_507);
this._setBorder(_508,n,_507);
return _508;
},_setOptions:function(_511){
this.options={corners:"all",color:"fromElement",bgColor:"fromParent",blend:true,border:false,compact:false,__unstable__wrapElement:false};
MochiKit.Base.update(this.options,_511);
this.options.numSlices=(this.options.compact?2:4);
},_whichSideTop:function(){
var _512=this.options.corners;
if(this._hasString(_512,"all","top")){
return "";
}
var _513=(_512.indexOf("tl")!=-1);
var _514=(_512.indexOf("tr")!=-1);
if(_513&&_514){
return "";
}
if(_513){
return "left";
}
if(_514){
return "right";
}
return "";
},_whichSideBottom:function(){
var _515=this.options.corners;
if(this._hasString(_515,"all","bottom")){
return "";
}
var _516=(_515.indexOf("bl")!=-1);
var _517=(_515.indexOf("br")!=-1);
if(_516&&_517){
return "";
}
if(_516){
return "left";
}
if(_517){
return "right";
}
return "";
},_borderColor:function(_518,_519){
if(_518=="transparent"){
return _519;
}else{
if(this.options.border){
return this.options.border;
}else{
if(this.options.blend){
return _519.blendedColor(_518);
}
}
}
return "";
},_setMargin:function(el,n,_520){
var _521=this._marginSize(n)+"px";
var _522=(_520=="top"?this._whichSideTop():this._whichSideBottom());
var _523=el.style;
if(_522=="left"){
_523.marginLeft=_521;
_523.marginRight="0px";
}else{
if(_522=="right"){
_523.marginRight=_521;
_523.marginLeft="0px";
}else{
_523.marginLeft=_521;
_523.marginRight=_521;
}
}
},_setBorder:function(el,n,_524){
var _525=this._borderSize(n)+"px";
var _526=(_524=="top"?this._whichSideTop():this._whichSideBottom());
var _527=el.style;
if(_526=="left"){
_527.borderLeftWidth=_525;
_527.borderRightWidth="0px";
}else{
if(_526=="right"){
_527.borderRightWidth=_525;
_527.borderLeftWidth="0px";
}else{
_527.borderLeftWidth=_525;
_527.borderRightWidth=_525;
}
}
},_marginSize:function(n){
if(this.isTransparent){
return 0;
}
var o=this.options;
if(o.compact&&o.blend){
var _528=[1,0];
return _528[n];
}else{
if(o.compact){
var _529=[2,1];
return _529[n];
}else{
if(o.blend){
var _530=[3,2,1,0];
return _530[n];
}else{
var _531=[5,3,2,1];
return _531[n];
}
}
}
},_borderSize:function(n){
var o=this.options;
var _532;
if(o.compact&&(o.blend||this.isTransparent)){
return 1;
}else{
if(o.compact){
_532=[1,0];
}else{
if(o.blend){
_532=[2,1,1,1];
}else{
if(o.border){
_532=[0,2,0,0];
}else{
if(this.isTransparent){
_532=[5,3,2,1];
}else{
return 0;
}
}
}
}
}
return _532[n];
},_hasString:function(str){
for(var i=1;i<arguments.length;i++){
if(str.indexOf(arguments[i])!=-1){
return true;
}
}
return false;
},_isTopRounded:function(){
return this._hasString(this.options.corners,"all","top","tl","tr");
},_isBottomRounded:function(){
return this._hasString(this.options.corners,"all","bottom","bl","br");
},_hasSingleTextChild:function(el){
return (el.childNodes.length==1&&el.childNodes[0].nodeType==3);
}};
MochiKit.Visual.roundElement=function(e,_533){
new MochiKit.Visual._RoundCorners(e,_533);
};
MochiKit.Visual.roundClass=function(_534,_535,_536){
var _537=MochiKit.DOM.getElementsByTagAndClassName(_534,_535);
for(var i=0;i<_537.length;i++){
MochiKit.Visual.roundElement(_537[i],_536);
}
};
MochiKit.Visual.Color=MochiKit.Color.Color;
MochiKit.Visual.getElementsComputedStyle=MochiKit.DOM.computedStyle;
MochiKit.Visual.__new__=function(){
var m=MochiKit.Base;
m.nameFunctions(this);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
};
MochiKit.Visual.EXPORT=["roundElement","roundClass"];
MochiKit.Visual.EXPORT_OK=[];
MochiKit.Visual.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Visual);
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.MochiKit)=="undefined"){
MochiKit.MochiKit={};
}
MochiKit.MochiKit.NAME="MochiKit.MochiKit";
MochiKit.MochiKit.VERSION="1.0";
MochiKit.MochiKit.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.MochiKit.toString=function(){
return this.__repr__();
};
MochiKit.MochiKit.SUBMODULES=["Base","Iter","Logging","DateTime","Format","Async","DOM","LoggingPane","Color","Visual"];
if(typeof (JSAN)!="undefined"||typeof (dojo)!="undefined"){
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.MochiKit");
dojo.require("MochiKit.*");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
JSAN.use("MochiKit.Iter",[]);
JSAN.use("MochiKit.Logging",[]);
JSAN.use("MochiKit.DateTime",[]);
JSAN.use("MochiKit.Format",[]);
JSAN.use("MochiKit.Async",[]);
JSAN.use("MochiKit.DOM",[]);
JSAN.use("MochiKit.LoggingPane",[]);
JSAN.use("MochiKit.Color",[]);
JSAN.use("MochiKit.Visual",[]);
}
(function(){
var _538=MochiKit.Base.extend;
var self=MochiKit.MochiKit;
var _539=self.SUBMODULES;
var _540=[];
var _541=[];
var _542={};
var i,k,m,all;
for(i=0;i<_539.length;i++){
m=MochiKit[_539[i]];
_538(_540,m.EXPORT);
_538(_541,m.EXPORT_OK);
for(k in m.EXPORT_TAGS){
_542[k]=_538(_542[k],m.EXPORT_TAGS[k]);
}
all=m.EXPORT_TAGS[":all"];
if(!all){
all=_538(null,m.EXPORT,m.EXPORT_OK);
}
for(i=0;i<all.length;i++){
k=all[i];
self[k]=m[k];
}
}
self.EXPORT=_540;
self.EXPORT_OK=_541;
self.EXPORT_TAGS=_542;
}());
}else{
if(typeof (MochiKit.__compat__)=="undefined"){
MochiKit.__compat__=true;
}
(function(){
var _543=document.getElementsByTagName("script");
var _544="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
var base=null;
var _545=null;
var _546={};
var i;
for(i=0;i<_543.length;i++){
var src=_543[i].getAttribute("src");
if(!src){
continue;
}
_546[src]=true;
if(src.match(/MochiKit.js$/)){
base=src.substring(0,src.lastIndexOf("MochiKit.js"));
_545=_543[i];
}
}
if(base==null){
return;
}
var _547=MochiKit.MochiKit.SUBMODULES;
for(i=0;i<_547.length;i++){
if(MochiKit[_547[i]]){
continue;
}
var uri=base+_547[i]+".js";
if(uri in _546){
continue;
}
if(document.documentElement&&document.documentElement.namespaceURI==_544){
var s=document.createElementNS(_544,"script");
s.setAttribute("id","MochiKit_"+base+_547[i]);
s.setAttribute("src",uri);
s.setAttribute("type","application/x-javascript");
_545.parentNode.appendChild(s);
}else{
var tag="<"+"script src=\""+uri+"\" type=\"text/javascript\""+">"+"<"+"/script"+">";
document.write(tag);
}
}
})();
}


