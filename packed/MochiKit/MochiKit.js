/***

    MochiKit.MochiKit 1.4 : PACKED VERSION

    THIS FILE IS AUTOMATICALLY GENERATED.  If creating patches, please
    diff against the source tree, not this file.

    See <http://mochikit.com/> for documentation, downloads, license, etc.

    (c) 2005 Bob Ippolito.  All rights Reserved.

***/

if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Base");
}
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.Base)=="undefined"){
MochiKit.Base={};
}
MochiKit.Base.VERSION="1.4";
MochiKit.Base.NAME="MochiKit.Base";
MochiKit.Base.update=function(_1,_2){
if(_1===null){
_1={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
_1[k]=o[k];
}
}
}
return _1;
};
MochiKit.Base.update(MochiKit.Base,{__repr__:function(){
return "["+this.NAME+" "+this.VERSION+"]";
},toString:function(){
return this.__repr__();
},counter:function(n){
if(arguments.length===0){
n=1;
}
return function(){
return n++;
};
},clone:function(_7){
var me=arguments.callee;
if(arguments.length==1){
me.prototype=_7;
return new me();
}
},flattenArguments:function(_9){
var res=[];
var m=MochiKit.Base;
var _12=m.extend(null,arguments);
while(_12.length){
var o=_12.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
for(var i=o.length-1;i>=0;i--){
_12.unshift(o[i]);
}
}else{
res.push(o);
}
}
return res;
},extend:function(_13,obj,_15){
if(!_15){
_15=0;
}
if(obj){
var l=obj.length;
if(typeof (l)!="number"){
if(typeof (MochiKit.Iter)!="undefined"){
obj=MochiKit.Iter.list(obj);
l=obj.length;
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(!_13){
_13=[];
}
for(var i=_15;i<l;i++){
_13.push(obj[i]);
}
}
return _13;
},updatetree:function(_17,obj){
if(_17===null){
_17={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
var v=o[k];
if(typeof (_17[k])=="object"&&typeof (v)=="object"){
arguments.callee(_17[k],v);
}else{
_17[k]=v;
}
}
}
}
return _17;
},setdefault:function(_19,obj){
if(_19===null){
_19={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
for(var k in o){
if(!(k in _19)){
_19[k]=o[k];
}
}
}
return _19;
},keys:function(obj){
var _20=[];
for(var _21 in obj){
_20.push(_21);
}
return _20;
},items:function(obj){
var _22=[];
var e;
for(var _24 in obj){
var v;
try{
v=obj[_24];
}
catch(e){
continue;
}
_22.push([_24,v]);
}
return _22;
},_newNamedError:function(_25,_26,_27){
_27.prototype=new MochiKit.Base.NamedError(_25.NAME+"."+_26);
_25[_26]=_27;
},operator:{truth:function(a){
return !!a;
},lognot:function(a){
return !a;
},identity:function(a){
return a;
},not:function(a){
return ~a;
},neg:function(a){
return -a;
},add:function(a,b){
return a+b;
},sub:function(a,b){
return a-b;
},div:function(a,b){
return a/b;
},mod:function(a,b){
return a%b;
},mul:function(a,b){
return a*b;
},and:function(a,b){
return a&b;
},or:function(a,b){
return a|b;
},xor:function(a,b){
return a^b;
},lshift:function(a,b){
return a<<b;
},rshift:function(a,b){
return a>>b;
},zrshift:function(a,b){
return a>>>b;
},eq:function(a,b){
return a==b;
},ne:function(a,b){
return a!=b;
},gt:function(a,b){
return a>b;
},ge:function(a,b){
return a>=b;
},lt:function(a,b){
return a<b;
},le:function(a,b){
return a<=b;
},ceq:function(a,b){
return MochiKit.Base.compare(a,b)===0;
},cne:function(a,b){
return MochiKit.Base.compare(a,b)!==0;
},cgt:function(a,b){
return MochiKit.Base.compare(a,b)==1;
},cge:function(a,b){
return MochiKit.Base.compare(a,b)!=-1;
},clt:function(a,b){
return MochiKit.Base.compare(a,b)==-1;
},cle:function(a,b){
return MochiKit.Base.compare(a,b)!=1;
},logand:function(a,b){
return a&&b;
},logor:function(a,b){
return a||b;
},contains:function(a,b){
return b in a;
}},forwardCall:function(_30){
return function(){
return this[_30].apply(this,arguments);
};
},itemgetter:function(_31){
return function(arg){
return arg[_31];
};
},typeMatcher:function(){
var _33={};
for(var i=0;i<arguments.length;i++){
var typ=arguments[i];
_33[typ]=typ;
}
return function(){
for(var i=0;i<arguments.length;i++){
if(!(typeof (arguments[i]) in _33)){
return false;
}
}
return true;
};
},isNull:function(){
for(var i=0;i<arguments.length;i++){
if(arguments[i]!==null){
return false;
}
}
return true;
},isUndefinedOrNull:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(typeof (o)=="undefined"||o===null)){
return false;
}
}
return true;
},isEmpty:function(obj){
return !MochiKit.Base.isNotEmpty.apply(this,arguments);
},isNotEmpty:function(obj){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(o&&o.length)){
return false;
}
}
return true;
},isArrayLike:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
var typ=typeof (o);
if((typ!="object"&&!(typ=="function"&&typeof (o.item)=="function"))||o===null||typeof (o.length)!="number"){
return false;
}
}
return true;
},isDateLike:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="object"||o===null||typeof (o.getTime)!="function"){
return false;
}
}
return true;
},xmap:function(fn){
if(fn===null){
return MochiKit.Base.extend(null,arguments,1);
}
var _36=[];
for(var i=1;i<arguments.length;i++){
_36.push(fn(arguments[i]));
}
return _36;
},map:function(fn,lst){
var m=MochiKit.Base;
var itr=MochiKit.Iter;
var _39=m.isArrayLike;
if(arguments.length<=2){
if(!_39(lst)){
if(itr){
lst=itr.list(lst);
if(fn===null){
return lst;
}
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
return m.extend(null,lst);
}
var _40=[];
for(var i=0;i<lst.length;i++){
_40.push(fn(lst[i]));
}
return _40;
}else{
if(fn===null){
fn=Array;
}
var _41=null;
for(i=1;i<arguments.length;i++){
if(!_39(arguments[i])){
if(itr){
return itr.list(itr.imap.apply(null,arguments));
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
var l=arguments[i].length;
if(_41===null||_41>l){
_41=l;
}
}
_40=[];
for(i=0;i<_41;i++){
var _42=[];
for(var j=1;j<arguments.length;j++){
_42.push(arguments[j][i]);
}
_40.push(fn.apply(this,_42));
}
return _40;
}
},xfilter:function(fn){
var _44=[];
if(fn===null){
fn=MochiKit.Base.operator.truth;
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(fn(o)){
_44.push(o);
}
}
return _44;
},filter:function(fn,lst,_45){
var _46=[];
var m=MochiKit.Base;
if(!m.isArrayLike(lst)){
if(MochiKit.Iter){
lst=MochiKit.Iter.list(lst);
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
fn=m.operator.truth;
}
if(typeof (Array.prototype.filter)=="function"){
return Array.prototype.filter.call(lst,fn,_45);
}else{
if(typeof (_45)=="undefined"||_45===null){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(fn(o)){
_46.push(o);
}
}
}else{
for(i=0;i<lst.length;i++){
o=lst[i];
if(fn.call(_45,o)){
_46.push(o);
}
}
}
}
return _46;
},_wrapDumbFunction:function(_47){
return function(){
switch(arguments.length){
case 0:
return _47();
case 1:
return _47(arguments[0]);
case 2:
return _47(arguments[0],arguments[1]);
case 3:
return _47(arguments[0],arguments[1],arguments[2]);
}
var _48=[];
for(var i=0;i<arguments.length;i++){
_48.push("arguments["+i+"]");
}
return eval("(func("+_48.join(",")+"))");
};
},methodcaller:function(_49){
var _50=MochiKit.Base.extend(null,arguments,1);
if(typeof (_49)=="function"){
return function(obj){
return _49.apply(obj,_50);
};
}else{
return function(obj){
return obj[_49].apply(obj,_50);
};
}
},method:function(_51,_52){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([_52,_51],arguments,2));
},compose:function(f1,f2){
var _55=[];
var m=MochiKit.Base;
if(arguments.length===0){
throw new TypeError("compose() requires at least one argument");
}
for(var i=0;i<arguments.length;i++){
var fn=arguments[i];
if(typeof (fn)!="function"){
throw new TypeError(repr(fn)+" is not a function");
}
_55.push(fn);
}
return function(){
var _56=arguments;
for(var i=_55.length-1;i>=0;i--){
_56=[_55[i].apply(this,_56)];
}
return _56[0];
};
},bind:function(_57,_58){
if(typeof (_57)=="string"){
_57=_58[_57];
}
var _59=_57.im_func;
var _60=_57.im_preargs;
var _61=_57.im_self;
var m=MochiKit.Base;
if(typeof (_57)=="function"&&typeof (_57.apply)=="undefined"){
_57=m._wrapDumbFunction(_57);
}
if(typeof (_59)!="function"){
_59=_57;
}
if(typeof (_58)!="undefined"){
_61=_58;
}
if(typeof (_60)=="undefined"){
_60=[];
}else{
_60=_60.slice();
}
m.extend(_60,arguments,2);
var _62=function(){
var _63=arguments;
var me=arguments.callee;
if(me.im_preargs.length>0){
_63=m.concat(me.im_preargs,_63);
}
var _58=me.im_self;
if(!_58){
_58=this;
}
return me.im_func.apply(_58,_63);
};
_62.im_self=_61;
_62.im_func=_59;
_62.im_preargs=_60;
return _62;
},bindMethods:function(_64){
var _65=MochiKit.Base.bind;
for(var k in _64){
var _66=_64[k];
if(typeof (_66)=="function"){
_64[k]=_65(_66,_64);
}
}
},registerComparator:function(_67,_68,_69,_70){
MochiKit.Base.comparatorRegistry.register(_67,_68,_69,_70);
},_primitives:{"boolean":true,"string":true,"number":true},compare:function(a,b){
if(a==b){
return 0;
}
var _71=(typeof (a)=="undefined"||a===null);
var _72=(typeof (b)=="undefined"||b===null);
if(_71&&_72){
return 0;
}else{
if(_71){
return -1;
}else{
if(_72){
return 1;
}
}
}
var m=MochiKit.Base;
var _73=m._primitives;
if(!(typeof (a) in _73&&typeof (b) in _73)){
try{
return m.comparatorRegistry.match(a,b);
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
}
if(a<b){
return -1;
}else{
if(a>b){
return 1;
}
}
var _74=m.repr;
throw new TypeError(_74(a)+" and "+_74(b)+" can not be compared");
},compareDateLike:function(a,b){
return MochiKit.Base.compare(a.getTime(),b.getTime());
},compareArrayLike:function(a,b){
var _75=MochiKit.Base.compare;
var _76=a.length;
var _77=0;
if(_76>b.length){
_77=1;
_76=b.length;
}else{
if(_76<b.length){
_77=-1;
}
}
for(var i=0;i<_76;i++){
var cmp=_75(a[i],b[i]);
if(cmp){
return cmp;
}
}
return _77;
},registerRepr:function(_79,_80,_81,_82){
MochiKit.Base.reprRegistry.register(_79,_80,_81,_82);
},repr:function(o){
if(typeof (o)=="undefined"){
return "undefined";
}else{
if(o===null){
return "null";
}
}
try{
if(typeof (o.__repr__)=="function"){
return o.__repr__();
}else{
if(typeof (o.repr)=="function"&&o.repr!=arguments.callee){
return o.repr();
}
}
return MochiKit.Base.reprRegistry.match(o);
}
catch(e){
if(typeof (o.NAME)=="string"&&(o.toString==Function.prototype.toString||o.toString==Object.prototype.toString)){
return o.NAME;
}
}
try{
var _83=(o+"");
}
catch(e){
return "["+typeof (o)+"]";
}
if(typeof (o)=="function"){
o=_83.replace(/^\s+/,"");
var idx=o.indexOf("{");
if(idx!=-1){
o=o.substr(0,idx)+"{...}";
}
}
return _83;
},reprArrayLike:function(o){
var m=MochiKit.Base;
return "["+m.map(m.repr,o).join(", ")+"]";
},reprString:function(o){
return ("\""+o.replace(/(["\\])/g,"\\$1")+"\"").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\r]/g,"\\r");
},reprNumber:function(o){
return o+"";
},registerJSON:function(_85,_86,_87,_88){
MochiKit.Base.jsonRegistry.register(_85,_86,_87,_88);
},evalJSON:function(){
return eval("("+arguments[0]+")");
},serializeJSON:function(o){
var _89=typeof (o);
if(_89=="undefined"){
return "undefined";
}else{
if(_89=="number"||_89=="boolean"){
return o+"";
}else{
if(o===null){
return "null";
}
}
}
var m=MochiKit.Base;
var _90=m.reprString;
if(_89=="string"){
return _90(o);
}
var me=arguments.callee;
var _91;
if(typeof (o.__json__)=="function"){
_91=o.__json__();
if(o!==_91){
return me(_91);
}
}
if(typeof (o.json)=="function"){
_91=o.json();
if(o!==_91){
return me(_91);
}
}
if(_89!="function"&&typeof (o.length)=="number"){
var res=[];
for(var i=0;i<o.length;i++){
var val=me(o[i]);
if(typeof (val)!="string"){
val="undefined";
}
res.push(val);
}
return "["+res.join(", ")+"]";
}
try{
_91=m.jsonRegistry.match(o);
return me(_91);
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
if(_89=="function"){
return null;
}
res=[];
for(var k in o){
var _93;
if(typeof (k)=="number"){
_93="\""+k+"\"";
}else{
if(typeof (k)=="string"){
_93=_90(k);
}else{
continue;
}
}
val=me(o[k]);
if(typeof (val)!="string"){
continue;
}
res.push(_93+":"+val);
}
return "{"+res.join(", ")+"}";
},objEqual:function(a,b){
return (MochiKit.Base.compare(a,b)===0);
},arrayEqual:function(_94,arr){
if(_94.length!=arr.length){
return false;
}
return (MochiKit.Base.compare(_94,arr)===0);
},concat:function(){
var _96=[];
var _97=MochiKit.Base.extend;
for(var i=0;i<arguments.length;i++){
_97(_96,arguments[i]);
}
return _96;
},keyComparator:function(key){
var m=MochiKit.Base;
var _99=m.compare;
if(arguments.length==1){
return function(a,b){
return _99(a[key],b[key]);
};
}
var _100=m.extend(null,arguments);
return function(a,b){
var rval=0;
for(var i=0;(rval===0)&&(i<_100.length);i++){
var key=_100[i];
rval=_99(a[key],b[key]);
}
return rval;
};
},reverseKeyComparator:function(key){
var _102=MochiKit.Base.keyComparator.apply(this,arguments);
return function(a,b){
return _102(b,a);
};
},partial:function(func){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([func,undefined],arguments,1));
},listMinMax:function(_104,lst){
if(lst.length===0){
return null;
}
var cur=lst[0];
var _106=MochiKit.Base.compare;
for(var i=1;i<lst.length;i++){
var o=lst[i];
if(_106(o,cur)==_104){
cur=o;
}
}
return cur;
},objMax:function(){
return MochiKit.Base.listMinMax(1,arguments);
},objMin:function(){
return MochiKit.Base.listMinMax(-1,arguments);
},findIdentical:function(lst,_107,_108,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_108)=="undefined"||_108===null){
_108=0;
}
for(var i=_108;i<end;i++){
if(lst[i]===_107){
return i;
}
}
return -1;
},findValue:function(lst,_110,_111,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_111)=="undefined"||_111===null){
_111=0;
}
var cmp=MochiKit.Base.compare;
for(var i=_111;i<end;i++){
if(cmp(lst[i],_110)===0){
return i;
}
}
return -1;
},nodeWalk:function(node,_113){
var _114=[node];
var _115=MochiKit.Base.extend;
while(_114.length){
var res=_113(_114.shift());
if(res){
_115(_114,res);
}
}
},nameFunctions:function(_116){
var base=_116.NAME;
if(typeof (base)=="undefined"){
base="";
}else{
base=base+".";
}
for(var name in _116){
var o=_116[name];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+name;
}
catch(e){
}
}
}
},queryString:function(_119,_120){
if(typeof (MochiKit.DOM)!="undefined"&&arguments.length==1&&(typeof (_119)=="string"||(typeof (_119.nodeType)!="undefined"&&_119.nodeType>0))){
var kv=MochiKit.DOM.formContents(_119);
_119=kv[0];
_120=kv[1];
}else{
if(arguments.length==1){
var o=_119;
_119=[];
_120=[];
for(var k in o){
var v=o[k];
if(typeof (v)!="function"){
_119.push(k);
_120.push(v);
}
}
}
}
var rval=[];
var len=Math.min(_119.length,_120.length);
var _123=MochiKit.Base.urlEncode;
for(var i=0;i<len;i++){
v=_120[i];
if(typeof (v)!="undefined"&&v!==null){
rval.push(_123(_119[i])+"="+_123(v));
}
}
return rval.join("&");
},parseQueryString:function(_124,_125){
var _126=_124.replace(/\+/g,"%20").split("&");
var o={};
var _127;
if(typeof (decodeURIComponent)!="undefined"){
_127=decodeURIComponent;
}else{
_127=unescape;
}
if(_125){
for(var i=0;i<_126.length;i++){
var pair=_126[i].split("=");
var name=_127(pair[0]);
var arr=o[name];
if(!(arr instanceof Array)){
arr=[];
o[name]=arr;
}
arr.push(_127(pair[1]));
}
}else{
for(i=0;i<_126.length;i++){
pair=_126[i].split("=");
o[_127(pair[0])]=_127(pair[1]);
}
}
return o;
}});
MochiKit.Base.AdapterRegistry=function(){
this.pairs=[];
};
MochiKit.Base.AdapterRegistry.prototype={register:function(name,_129,wrap,_131){
if(_131){
this.pairs.unshift([name,_129,wrap]);
}else{
this.pairs.push([name,_129,wrap]);
}
},match:function(){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[1].apply(this,arguments)){
return pair[2].apply(this,arguments);
}
}
throw MochiKit.Base.NotFound;
},unregister:function(name){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[0]==name){
this.pairs.splice(i,1);
return true;
}
}
return false;
}};
MochiKit.Base.EXPORT=["noop","counter","clone","extend","update","updatetree","setdefault","keys","items","NamedError","operator","forwardCall","itemgetter","typeMatcher","isCallable","isUndefined","isUndefinedOrNull","isNull","isEmpty","isNotEmpty","isArrayLike","isDateLike","xmap","map","xfilter","filter","methodcaller","compose","bind","bindMethods","NotFound","AdapterRegistry","registerComparator","compare","registerRepr","repr","objEqual","arrayEqual","concat","keyComparator","reverseKeyComparator","partial","merge","listMinMax","listMax","listMin","objMax","objMin","nodeWalk","zip","urlEncode","queryString","serializeJSON","registerJSON","evalJSON","parseQueryString","findValue","findIdentical","flattenArguments","method"];
MochiKit.Base.EXPORT_OK=["nameFunctions","comparatorRegistry","reprRegistry","jsonRegistry","compareDateLike","compareArrayLike","reprArrayLike","reprString","reprNumber"];
MochiKit.Base._exportSymbols=function(_132,_133){
if(typeof (MochiKit.__export__)=="undefined"){
MochiKit.__export__=(MochiKit.__compat__||(typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined"));
}
if(!MochiKit.__export__){
return;
}
var all=_133.EXPORT_TAGS[":all"];
for(var i=0;i<all.length;i++){
_132[all[i]]=_133[all[i]];
}
};
MochiKit.Base.__new__=function(){
var m=this;
m.noop=m.operator.identity;
m.forward=m.forwardCall;
m.find=m.findValue;
if(typeof (encodeURIComponent)!="undefined"){
m.urlEncode=function(_135){
return encodeURIComponent(_135).replace(/\'/g,"%27");
};
}else{
m.urlEncode=function(_136){
return escape(_136).replace(/\+/g,"%2B").replace(/\"/g,"%22").rval.replace(/\'/g,"%27");
};
}
m.NamedError=function(name){
this.message=name;
this.name=name;
};
m.NamedError.prototype=new Error();
m.update(m.NamedError.prototype,{repr:function(){
if(this.message&&this.message!=this.name){
return this.name+"("+m.repr(this.message)+")";
}else{
return this.name+"()";
}
},toString:m.forwardCall("repr")});
m.NotFound=new m.NamedError("MochiKit.Base.NotFound");
m.listMax=m.partial(m.listMinMax,1);
m.listMin=m.partial(m.listMinMax,-1);
m.isCallable=m.typeMatcher("function");
m.isUndefined=m.typeMatcher("undefined");
m.merge=m.partial(m.update,null);
m.zip=m.partial(m.map,null);
m.comparatorRegistry=new m.AdapterRegistry();
m.registerComparator("dateLike",m.isDateLike,m.compareDateLike);
m.registerComparator("arrayLike",m.isArrayLike,m.compareArrayLike);
m.reprRegistry=new m.AdapterRegistry();
m.registerRepr("arrayLike",m.isArrayLike,m.reprArrayLike);
m.registerRepr("string",m.typeMatcher("string"),m.reprString);
m.registerRepr("numbers",m.typeMatcher("number","boolean"),m.reprNumber);
m.jsonRegistry=new m.AdapterRegistry();
var all=m.concat(m.EXPORT,m.EXPORT_OK);
m.EXPORT_TAGS={":common":m.concat(m.EXPORT_OK),":all":all};
m.nameFunctions(this);
};
MochiKit.Base.__new__();
if(!MochiKit.__compat__){
compare=MochiKit.Base.compare;
}
MochiKit.Base._exportSymbols(this,MochiKit.Base);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Iter");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Iter depends on MochiKit.Base!";
}
if(typeof (MochiKit.Iter)=="undefined"){
MochiKit.Iter={};
}
MochiKit.Iter.NAME="MochiKit.Iter";
MochiKit.Iter.VERSION="1.4";
MochiKit.Base.update(MochiKit.Iter,{__repr__:function(){
return "["+this.NAME+" "+this.VERSION+"]";
},toString:function(){
return this.__repr__();
},registerIteratorFactory:function(name,_137,_138,_139){
MochiKit.Iter.iteratorRegistry.register(name,_137,_138,_139);
},iter:function(_140,_141){
var self=MochiKit.Iter;
if(arguments.length==2){
return self.takewhile(function(a){
return a!=_141;
},_140);
}
if(typeof (_140.next)=="function"){
return _140;
}else{
if(typeof (_140.iter)=="function"){
return _140.iter();
}else{
if(typeof (_140.__iterator__)=="function"){
return _140.__iterator__();
}
}
}
try{
return self.iteratorRegistry.match(_140);
}
catch(e){
var m=MochiKit.Base;
if(e==m.NotFound){
e=new TypeError(typeof (_140)+": "+m.repr(_140)+" is not iterable");
}
throw e;
}
},count:function(n){
if(!n){
n=0;
}
var m=MochiKit.Base;
return {repr:function(){
return "count("+n+")";
},toString:m.forwardCall("repr"),next:m.counter(n)};
},cycle:function(p){
var self=MochiKit.Iter;
var m=MochiKit.Base;
var lst=[];
var _144=self.iter(p);
return {repr:function(){
return "cycle(...)";
},toString:m.forwardCall("repr"),next:function(){
try{
var rval=_144.next();
lst.push(rval);
return rval;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
if(lst.length===0){
this.next=function(){
throw self.StopIteration;
};
}else{
var i=-1;
this.next=function(){
i=(i+1)%lst.length;
return lst[i];
};
}
return this.next();
}
}};
},repeat:function(elem,n){
var m=MochiKit.Base;
if(typeof (n)=="undefined"){
return {repr:function(){
return "repeat("+m.repr(elem)+")";
},toString:m.forwardCall("repr"),next:function(){
return elem;
}};
}
return {repr:function(){
return "repeat("+m.repr(elem)+", "+n+")";
},toString:m.forwardCall("repr"),next:function(){
if(n<=0){
throw MochiKit.Iter.StopIteration;
}
n-=1;
return elem;
}};
},next:function(_146){
return _146.next();
},izip:function(p,q){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var next=self.next;
var _149=m.map(self.iter,arguments);
return {repr:function(){
return "izip(...)";
},toString:m.forwardCall("repr"),next:function(){
return m.map(next,_149);
}};
},ifilter:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilter(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(pred(rval)){
return rval;
}
}
return undefined;
}};
},ifilterfalse:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilterfalse(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
return rval;
}
}
return undefined;
}};
},islice:function(seq){
var self=MochiKit.Iter;
var m=MochiKit.Base;
seq=self.iter(seq);
var _152=0;
var stop=0;
var step=1;
var i=-1;
if(arguments.length==2){
stop=arguments[1];
}else{
if(arguments.length==3){
_152=arguments[1];
stop=arguments[2];
}else{
_152=arguments[1];
stop=arguments[2];
step=arguments[3];
}
}
return {repr:function(){
return "islice("+["...",_152,stop,step].join(", ")+")";
},toString:m.forwardCall("repr"),next:function(){
var rval;
while(i<_152){
rval=seq.next();
i++;
}
if(_152>=stop){
throw self.StopIteration;
}
_152+=step;
return rval;
}};
},imap:function(fun,p,q){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var _156=m.map(self.iter,m.extend(null,arguments,1));
var map=m.map;
var next=self.next;
return {repr:function(){
return "imap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(this,map(next,_156));
}};
},applymap:function(fun,seq,self){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
return {repr:function(){
return "applymap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(self,seq.next());
}};
},chain:function(p,q){
var self=MochiKit.Iter;
var m=MochiKit.Base;
if(arguments.length==1){
return self.iter(arguments[0]);
}
var _158=m.map(self.iter,arguments);
return {repr:function(){
return "chain(...)";
},toString:m.forwardCall("repr"),next:function(){
while(_158.length>1){
try{
return _158[0].next();
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
_158.shift();
}
}
if(_158.length==1){
var arg=_158.shift();
this.next=m.bind("next",arg);
return this.next();
}
throw self.StopIteration;
}};
},takewhile:function(pred,seq){
var self=MochiKit.Iter;
seq=self.iter(seq);
return {repr:function(){
return "takewhile(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=seq.next();
if(!pred(rval)){
this.next=function(){
throw self.StopIteration;
};
this.next();
}
return rval;
}};
},dropwhile:function(pred,seq){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
var bind=m.bind;
return {"repr":function(){
return "dropwhile(...)";
},"toString":m.forwardCall("repr"),"next":function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
break;
}
}
this.next=bind("next",seq);
return rval;
}};
},_tee:function(_160,sync,_162){
sync.pos[_160]=-1;
var m=MochiKit.Base;
var _163=m.listMin;
return {repr:function(){
return "tee("+_160+", ...)";
},toString:m.forwardCall("repr"),next:function(){
var rval;
var i=sync.pos[_160];
if(i==sync.max){
rval=_162.next();
sync.deque.push(rval);
sync.max+=1;
sync.pos[_160]+=1;
}else{
rval=sync.deque[i-sync.min];
sync.pos[_160]+=1;
if(i==sync.min&&_163(sync.pos)!=sync.min){
sync.min+=1;
sync.deque.shift();
}
}
return rval;
}};
},tee:function(_164,n){
var rval=[];
var sync={"pos":[],"deque":[],"max":-1,"min":-1};
if(arguments.length==1||typeof (n)=="undefined"||n===null){
n=2;
}
var self=MochiKit.Iter;
_164=self.iter(_164);
var _tee=self._tee;
for(var i=0;i<n;i++){
rval.push(_tee(i,sync,_164));
}
return rval;
},list:function(_166){
var m=MochiKit.Base;
if(typeof (_166.slice)=="function"){
return _166.slice();
}else{
if(m.isArrayLike(_166)){
return m.concat(_166);
}
}
var self=MochiKit.Iter;
_166=self.iter(_166);
var rval=[];
try{
while(true){
rval.push(_166.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return rval;
}
return undefined;
},reduce:function(fn,_167,_168){
var i=0;
var x=_168;
var self=MochiKit.Iter;
_167=self.iter(_167);
if(arguments.length<3){
try{
x=_167.next();
}
catch(e){
if(e==self.StopIteration){
e=new TypeError("reduce() of empty sequence with no initial value");
}
throw e;
}
i++;
}
try{
while(true){
x=fn(x,_167.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},range:function(){
var _170=0;
var stop=0;
var step=1;
if(arguments.length==1){
stop=arguments[0];
}else{
if(arguments.length==2){
_170=arguments[0];
stop=arguments[1];
}else{
if(arguments.length==3){
_170=arguments[0];
stop=arguments[1];
step=arguments[2];
}else{
throw new TypeError("range() takes 1, 2, or 3 arguments!");
}
}
}
if(step===0){
throw new TypeError("range() step must not be 0");
}
return {next:function(){
if((step>0&&_170>=stop)||(step<0&&_170<=stop)){
throw MochiKit.Iter.StopIteration;
}
var rval=_170;
_170+=step;
return rval;
},repr:function(){
return "range("+[_170,stop,step].join(", ")+")";
},toString:MochiKit.Base.forwardCall("repr")};
},sum:function(_171,_172){
if(typeof (_172)=="undefined"||_172===null){
_172=0;
}
var x=_172;
var self=MochiKit.Iter;
_171=self.iter(_171);
try{
while(true){
x+=_171.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},exhaust:function(_173){
var self=MochiKit.Iter;
_173=self.iter(_173);
try{
while(true){
_173.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
},forEach:function(_174,func,self){
var m=MochiKit.Base;
if(arguments.length>2){
func=m.bind(func,self);
}
if(m.isArrayLike(_174)){
try{
for(var i=0;i<_174.length;i++){
func(_174[i]);
}
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
}
}else{
self=MochiKit.Iter;
self.exhaust(self.imap(func,_174));
}
},every:function(_175,func){
var self=MochiKit.Iter;
try{
self.ifilterfalse(func,_175).next();
return false;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return true;
}
},sorted:function(_176,cmp){
var rval=MochiKit.Iter.list(_176);
if(arguments.length==1){
cmp=MochiKit.Base.compare;
}
rval.sort(cmp);
return rval;
},reversed:function(_177){
var rval=MochiKit.Iter.list(_177);
rval.reverse();
return rval;
},some:function(_178,func){
var self=MochiKit.Iter;
try{
self.ifilter(func,_178).next();
return true;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return false;
}
},iextend:function(lst,_179){
if(MochiKit.Base.isArrayLike(_179)){
for(var i=0;i<_179.length;i++){
lst.push(_179[i]);
}
}else{
var self=MochiKit.Iter;
_179=self.iter(_179);
try{
while(true){
lst.push(_179.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
}
return lst;
},groupby:function(_180,_181){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_181=m.operator.identity;
}
_180=self.iter(_180);
var pk=undefined;
var k=undefined;
var v;
function fetch(){
v=_180.next();
k=_181(v);
}
function eat(){
var ret=v;
v=undefined;
return ret;
}
var _184=true;
return {repr:function(){
return "groupby(...)";
},next:function(){
while(k==pk){
fetch();
if(_184){
_184=false;
break;
}
}
pk=k;
return [k,{next:function(){
if(v==undefined){
fetch();
}
if(k!=pk){
throw self.StopIteration;
}
return eat();
}}];
}};
},groupby_as_array:function(_185,_186){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_186=m.operator.identity;
}
_185=self.iter(_185);
var _187=[];
var _188=true;
var _189;
while(true){
try{
var _190=_185.next();
var key=_186(_190);
}
catch(e){
if(e==self.StopIteration){
break;
}
throw e;
}
if(_188||key!=_189){
var _191=[];
_187.push([key,_191]);
}
_191.push(_190);
_188=false;
_189=key;
}
return _187;
},arrayLikeIter:function(_192){
var i=0;
return {repr:function(){
return "arrayLikeIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(i>=_192.length){
throw MochiKit.Iter.StopIteration;
}
return _192[i++];
}};
},hasIterateNext:function(_193){
return (_193&&typeof (_193.iterateNext)=="function");
},iterateNextIter:function(_194){
return {repr:function(){
return "iterateNextIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=_194.iterateNext();
if(rval===null||rval===undefined){
throw MochiKit.Iter.StopIteration;
}
return rval;
}};
}});
MochiKit.Iter.EXPORT_OK=["iteratorRegistry","arrayLikeIter","hasIterateNext","iterateNextIter",];
MochiKit.Iter.EXPORT=["StopIteration","registerIteratorFactory","iter","count","cycle","repeat","next","izip","ifilter","ifilterfalse","islice","imap","applymap","chain","takewhile","dropwhile","tee","list","reduce","range","sum","exhaust","forEach","every","sorted","reversed","some","iextend","groupby","groupby_as_array"];
MochiKit.Iter.__new__=function(){
var m=MochiKit.Base;
if(typeof (StopIteration)!="undefined"){
this.StopIteration=StopIteration;
}else{
this.StopIteration=new m.NamedError("StopIteration");
}
this.iteratorRegistry=new m.AdapterRegistry();
this.registerIteratorFactory("arrayLike",m.isArrayLike,this.arrayLikeIter);
this.registerIteratorFactory("iterateNext",this.hasIterateNext,this.iterateNextIter);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Iter.__new__();
if(!MochiKit.__compat__){
reduce=MochiKit.Iter.reduce;
}
MochiKit.Base._exportSymbols(this,MochiKit.Iter);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Logging");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Logging depends on MochiKit.Base!";
}
if(typeof (MochiKit.Logging)=="undefined"){
MochiKit.Logging={};
}
MochiKit.Logging.NAME="MochiKit.Logging";
MochiKit.Logging.VERSION="1.4";
MochiKit.Logging.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Logging.toString=function(){
return this.__repr__();
};
MochiKit.Logging.EXPORT=["LogLevel","LogMessage","Logger","alertListener","logger","log","logError","logDebug","logFatal","logWarning"];
MochiKit.Logging.EXPORT_OK=["logLevelAtLeast","isLogMessage","compareLogMessage"];
MochiKit.Logging.LogMessage=function(num,_196,info){
this.num=num;
this.level=_196;
this.info=info;
this.timestamp=new Date();
};
MochiKit.Logging.LogMessage.prototype={repr:function(){
var m=MochiKit.Base;
return "LogMessage("+m.map(m.repr,[this.num,this.level,this.info]).join(", ")+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Base.update(MochiKit.Logging,{logLevelAtLeast:function(_198){
var self=MochiKit.Logging;
if(typeof (_198)=="string"){
_198=self.LogLevel[_198];
}
return function(msg){
var _200=msg.level;
if(typeof (_200)=="string"){
_200=self.LogLevel[_200];
}
return _200>=_198;
};
},isLogMessage:function(){
var _201=MochiKit.Logging.LogMessage;
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof _201)){
return false;
}
}
return true;
},compareLogMessage:function(a,b){
return MochiKit.Base.compare([a.level,a.info],[b.level,b.info]);
},alertListener:function(msg){
alert("num: "+msg.num+"\nlevel: "+msg.level+"\ninfo: "+msg.info.join(" "));
}});
MochiKit.Logging.Logger=function(_202){
this.counter=0;
if(typeof (_202)=="undefined"||_202===null){
_202=-1;
}
this.maxSize=_202;
this._messages=[];
this.listeners={};
this.useNativeConsole=false;
};
MochiKit.Logging.Logger.prototype={clear:function(){
this._messages.splice(0,this._messages.length);
},logToConsole:function(msg){
if(typeof (window)!="undefined"&&window.console&&window.console.log){
window.console.log(msg.replace(/%/g,"\uff05"));
}else{
if(typeof (opera)!="undefined"&&opera.postError){
opera.postError(msg);
}else{
if(typeof (printfire)=="function"){
printfire(msg);
}else{
if(typeof (Debug)!="undefined"&&Debug.writeln){
Debug.writeln(msg);
}else{
if(typeof (debug)!="undefined"&&debug.trace){
debug.trace(msg);
}
}
}
}
}
},dispatchListeners:function(msg){
for(var k in this.listeners){
var pair=this.listeners[k];
if(pair.ident!=k||(pair[0]&&!pair[0](msg))){
continue;
}
pair[1](msg);
}
},addListener:function(_203,_204,_205){
if(typeof (_204)=="string"){
_204=MochiKit.Logging.logLevelAtLeast(_204);
}
var _206=[_204,_205];
_206.ident=_203;
this.listeners[_203]=_206;
},removeListener:function(_207){
delete this.listeners[_207];
},baseLog:function(_208,_209){
var msg=new MochiKit.Logging.LogMessage(this.counter,_208,MochiKit.Base.extend(null,arguments,1));
this._messages.push(msg);
this.dispatchListeners(msg);
if(this.useNativeConsole){
this.logToConsole(msg.level+": "+msg.info.join(" "));
}
this.counter+=1;
while(this.maxSize>=0&&this._messages.length>this.maxSize){
this._messages.shift();
}
},getMessages:function(_210){
var _211=0;
if(!(typeof (_210)=="undefined"||_210===null)){
_211=Math.max(0,this._messages.length-_210);
}
return this._messages.slice(_211);
},getMessageText:function(_212){
if(typeof (_212)=="undefined"||_212===null){
_212=30;
}
var _213=this.getMessages(_212);
if(_213.length){
var lst=map(function(m){
return "\n  ["+m.num+"] "+m.level+": "+m.info.join(" ");
},_213);
lst.unshift("LAST "+_213.length+" MESSAGES:");
return lst.join("");
}
return "";
},debuggingBookmarklet:function(_214){
if(typeof (MochiKit.LoggingPane)=="undefined"){
alert(this.getMessageText());
}else{
MochiKit.LoggingPane.createLoggingPane(_214||false);
}
}};
MochiKit.Logging.__new__=function(){
this.LogLevel={ERROR:40,FATAL:50,WARNING:30,INFO:20,DEBUG:10};
var m=MochiKit.Base;
m.registerComparator("LogMessage",this.isLogMessage,this.compareLogMessage);
var _215=m.partial;
var _216=this.Logger;
var _217=_216.prototype.baseLog;
m.update(this.Logger.prototype,{debug:_215(_217,"DEBUG"),log:_215(_217,"INFO"),error:_215(_217,"ERROR"),fatal:_215(_217,"FATAL"),warning:_215(_217,"WARNING")});
var self=this;
var _218=function(name){
return function(){
self.logger[name].apply(self.logger,arguments);
};
};
this.log=_218("log");
this.logError=_218("error");
this.logDebug=_218("debug");
this.logFatal=_218("fatal");
this.logWarning=_218("warning");
this.logger=new _216();
this.logger.useNativeConsole=true;
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
if(typeof (printfire)=="undefined"&&typeof (document)!="undefined"&&document.createEvent&&typeof (dispatchEvent)!="undefined"){
printfire=function(){
printfire.args=arguments;
var ev=document.createEvent("Events");
ev.initEvent("printfire",false,true);
dispatchEvent(ev);
};
}
MochiKit.Logging.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Logging);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.DateTime");
}
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.DateTime)=="undefined"){
MochiKit.DateTime={};
}
MochiKit.DateTime.NAME="MochiKit.DateTime";
MochiKit.DateTime.VERSION="1.4";
MochiKit.DateTime.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.DateTime.toString=function(){
return this.__repr__();
};
MochiKit.DateTime.isoDate=function(str){
str=str+"";
if(typeof (str)!="string"||str.length===0){
return null;
}
var iso=str.split("-");
if(iso.length===0){
return null;
}
return new Date(iso[0],iso[1]-1,iso[2]);
};
MochiKit.DateTime._isoRegexp=/(\d{4,})(?:-(\d{1,2})(?:-(\d{1,2})(?:[T ](\d{1,2}):(\d{1,2})(?::(\d{1,2})(?:\.(\d+))?)?(?:(Z)|([+-])(\d{1,2})(?::(\d{1,2}))?)?)?)?)?/;
MochiKit.DateTime.isoTimestamp=function(str){
str=str+"";
if(typeof (str)!="string"||str.length===0){
return null;
}
var res=str.match(MochiKit.DateTime._isoRegexp);
if(typeof (res)=="undefined"||res===null){
return null;
}
var year,month,day,hour,min,sec,msec;
year=parseInt(res[1],10);
if(typeof (res[2])=="undefined"||res[2]===""){
return new Date(year);
}
month=parseInt(res[2],10)-1;
day=parseInt(res[3],10);
if(typeof (res[4])=="undefined"||res[4]===""){
return new Date(year,month,day);
}
hour=parseInt(res[4],10);
min=parseInt(res[5],10);
sec=(typeof (res[6])!="undefined"&&res[6]!=="")?parseInt(res[6],10):0;
if(typeof (res[7])!="undefined"&&res[7]!==""){
msec=Math.round(1000*parseFloat("0."+res[7]));
}else{
msec=0;
}
if((typeof (res[8])=="undefined"||res[8]==="")&&(typeof (res[9])=="undefined"||res[9]==="")){
return new Date(year,month,day,hour,min,sec,msec);
}
var ofs;
if(typeof (res[9])!="undefined"&&res[9]!==""){
ofs=parseInt(res[10],10)*3600000;
if(typeof (res[11])!="undefined"&&res[11]!==""){
ofs+=parseInt(res[11],10)*60000;
}
if(res[9]=="-"){
ofs=-ofs;
}
}else{
ofs=0;
}
return new Date(Date.UTC(year,month,day,hour,min,sec,msec)-ofs);
};
MochiKit.DateTime.toISOTime=function(date,_225){
if(typeof (date)=="undefined"||date===null){
return null;
}
var hh=date.getHours();
var mm=date.getMinutes();
var ss=date.getSeconds();
var lst=[((_225&&(hh<10))?"0"+hh:hh),((mm<10)?"0"+mm:mm),((ss<10)?"0"+ss:ss)];
return lst.join(":");
};
MochiKit.DateTime.toISOTimestamp=function(date,_229){
if(typeof (date)=="undefined"||date===null){
return null;
}
var sep=_229?"T":" ";
var foot=_229?"Z":"";
if(_229){
date=new Date(date.getTime()+(date.getTimezoneOffset()*60000));
}
return MochiKit.DateTime.toISODate(date)+sep+MochiKit.DateTime.toISOTime(date,_229)+foot;
};
MochiKit.DateTime.toISODate=function(date){
if(typeof (date)=="undefined"||date===null){
return null;
}
var _232=MochiKit.DateTime._padTwo;
return [date.getFullYear(),_232(date.getMonth()+1),_232(date.getDate())].join("-");
};
MochiKit.DateTime.americanDate=function(d){
d=d+"";
if(typeof (d)!="string"||d.length===0){
return null;
}
var a=d.split("/");
return new Date(a[2],a[0]-1,a[1]);
};
MochiKit.DateTime._padTwo=function(n){
return (n>9)?n:"0"+n;
};
MochiKit.DateTime.toPaddedAmericanDate=function(d){
if(typeof (d)=="undefined"||d===null){
return null;
}
var _234=MochiKit.DateTime._padTwo;
return [_234(d.getMonth()+1),_234(d.getDate()),d.getFullYear()].join("/");
};
MochiKit.DateTime.toAmericanDate=function(d){
if(typeof (d)=="undefined"||d===null){
return null;
}
return [d.getMonth()+1,d.getDate(),d.getFullYear()].join("/");
};
MochiKit.DateTime.EXPORT=["isoDate","isoTimestamp","toISOTime","toISOTimestamp","toISODate","americanDate","toPaddedAmericanDate","toAmericanDate"];
MochiKit.DateTime.EXPORT_OK=[];
MochiKit.DateTime.EXPORT_TAGS={":common":MochiKit.DateTime.EXPORT,":all":MochiKit.DateTime.EXPORT};
MochiKit.DateTime.__new__=function(){
var base=this.NAME+".";
for(var k in this){
var o=this[k];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+k;
}
catch(e){
}
}
}
};
MochiKit.DateTime.__new__();
if(typeof (MochiKit.Base)!="undefined"){
MochiKit.Base._exportSymbols(this,MochiKit.DateTime);
}else{
(function(_235,_236){
if((typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined")||(typeof (MochiKit.__compat__)=="boolean"&&MochiKit.__compat__)){
var all=_236.EXPORT_TAGS[":all"];
for(var i=0;i<all.length;i++){
_235[all[i]]=_236[all[i]];
}
}
})(this,MochiKit.DateTime);
}
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Format");
}
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.Format)=="undefined"){
MochiKit.Format={};
}
MochiKit.Format.NAME="MochiKit.Format";
MochiKit.Format.VERSION="1.4";
MochiKit.Format.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Format.toString=function(){
return this.__repr__();
};
MochiKit.Format._numberFormatter=function(_237,_238,_239,_240,_241,_242,_243,_244,_245){
return function(num){
num=parseFloat(num);
if(typeof (num)=="undefined"||num===null||isNaN(num)){
return _237;
}
var _246=_238;
var _247=_239;
if(num<0){
num=-num;
}else{
_246=_246.replace(/-/,"");
}
var me=arguments.callee;
var fmt=MochiKit.Format.formatLocale(_240);
if(_241){
num=num*100;
_247=fmt.percent+_247;
}
num=MochiKit.Format.roundToFixed(num,_242);
var _249=num.split(/\./);
var _250=_249[0];
var frac=(_249.length==1)?"":_249[1];
var res="";
while(_250.length<_243){
_250="0"+_250;
}
if(_244){
while(_250.length>_244){
var i=_250.length-_244;
res=fmt.separator+_250.substring(i,_250.length)+res;
_250=_250.substring(0,i);
}
}
res=_250+res;
if(_242>0){
while(frac.length<_245){
frac=frac+"0";
}
res=res+fmt.decimal+frac;
}
return _246+res+_247;
};
};
MochiKit.Format.numberFormatter=function(_252,_253,_254){
if(typeof (_253)=="undefined"){
_253="";
}
var _255=_252.match(/((?:[0#]+,)?[0#]+)(?:\.([0#]+))?(%)?/);
if(!_255){
throw TypeError("Invalid pattern");
}
var _256=_252.substr(0,_255.index);
var _257=_252.substr(_255.index+_255[0].length);
if(_256.search(/-/)==-1){
_256=_256+"-";
}
var _258=_255[1];
var frac=(typeof (_255[2])=="string"&&_255[2]!="")?_255[2]:"";
var _259=(typeof (_255[3])=="string"&&_255[3]!="");
var tmp=_258.split(/,/);
var _261;
if(typeof (_254)=="undefined"){
_254="default";
}
if(tmp.length==1){
_261=null;
}else{
_261=tmp[1].length;
}
var _262=_258.length-_258.replace(/0/g,"").length;
var _263=frac.length-frac.replace(/0/g,"").length;
var _264=frac.length;
var rval=MochiKit.Format._numberFormatter(_253,_256,_257,_254,_259,_264,_262,_261,_263);
var m=MochiKit.Base;
if(m){
var fn=arguments.callee;
var args=m.concat(arguments);
rval.repr=function(){
return [self.NAME,"(",map(m.repr,args).join(", "),")"].join("");
};
}
return rval;
};
MochiKit.Format.formatLocale=function(_266){
if(typeof (_266)=="undefined"||_266===null){
_266="default";
}
if(typeof (_266)=="string"){
var rval=MochiKit.Format.LOCALE[_266];
if(typeof (rval)=="string"){
rval=arguments.callee(rval);
MochiKit.Format.LOCALE[_266]=rval;
}
return rval;
}else{
return _266;
}
};
MochiKit.Format.twoDigitAverage=function(_267,_268){
if(_268){
var res=_267/_268;
if(!isNaN(res)){
return MochiKit.Format.twoDigitFloat(_267/_268);
}
}
return "0";
};
MochiKit.Format.twoDigitFloat=function(_269){
var sign=(_269<0?"-":"");
var s=Math.floor(Math.abs(_269)*100).toString();
if(s=="0"){
return s;
}
if(s.length<3){
while(s.charAt(s.length-1)=="0"){
s=s.substring(0,s.length-1);
}
return sign+"0."+s;
}
var head=sign+s.substring(0,s.length-2);
var tail=s.substring(s.length-2,s.length);
if(tail=="00"){
return head;
}else{
if(tail.charAt(1)=="0"){
return head+"."+tail.charAt(0);
}else{
return head+"."+tail;
}
}
};
MochiKit.Format.lstrip=function(str,_274){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_274){
return str.replace(/^\s+/,"");
}else{
return str.replace(new RegExp("^["+_274+"]+"),"");
}
};
MochiKit.Format.rstrip=function(str,_275){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_275){
return str.replace(/\s+$/,"");
}else{
return str.replace(new RegExp("["+_275+"]+$"),"");
}
};
MochiKit.Format.strip=function(str,_276){
var self=MochiKit.Format;
return self.rstrip(self.lstrip(str,_276),_276);
};
MochiKit.Format.truncToFixed=function(_277,_278){
_277=Math.floor(_277*Math.pow(10,_278));
var res=(_277*Math.pow(10,-_278)).toFixed(_278);
if(res.charAt(0)=="."){
res="0"+res;
}
return res;
};
MochiKit.Format.roundToFixed=function(_279,_280){
return MochiKit.Format.truncToFixed(_279+0.5*Math.pow(10,-_280),_280);
};
MochiKit.Format.percentFormat=function(_281){
return MochiKit.Format.twoDigitFloat(100*_281)+"%";
};
MochiKit.Format.EXPORT=["truncToFixed","roundToFixed","numberFormatter","formatLocale","twoDigitAverage","twoDigitFloat","percentFormat","lstrip","rstrip","strip"];
MochiKit.Format.LOCALE={en_US:{separator:",",decimal:".",percent:"%"},de_DE:{separator:".",decimal:",",percent:"%"},fr_FR:{separator:" ",decimal:",",percent:"%"},"default":"en_US"};
MochiKit.Format.EXPORT_OK=[];
MochiKit.Format.EXPORT_TAGS={":all":MochiKit.Format.EXPORT,":common":MochiKit.Format.EXPORT};
MochiKit.Format.__new__=function(){
var base=this.NAME+".";
var k,v,o;
for(k in this.LOCALE){
o=this.LOCALE[k];
if(typeof (o)=="object"){
o.repr=function(){
return this.NAME;
};
o.NAME=base+"LOCALE."+k;
}
}
for(k in this){
o=this[k];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+k;
}
catch(e){
}
}
}
};
MochiKit.Format.__new__();
if(typeof (MochiKit.Base)!="undefined"){
MochiKit.Base._exportSymbols(this,MochiKit.Format);
}else{
(function(_282,_283){
if((typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined")||(typeof (MochiKit.__compat__)=="boolean"&&MochiKit.__compat__)){
var all=_283.EXPORT_TAGS[":all"];
for(var i=0;i<all.length;i++){
_282[all[i]]=_283[all[i]];
}
}
})(this,MochiKit.Format);
}
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Async");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Async depends on MochiKit.Base!";
}
if(typeof (MochiKit.Async)=="undefined"){
MochiKit.Async={};
}
MochiKit.Async.NAME="MochiKit.Async";
MochiKit.Async.VERSION="1.4";
MochiKit.Async.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Async.toString=function(){
return this.__repr__();
};
MochiKit.Async.Deferred=function(_284){
this.chain=[];
this.id=this._nextId();
this.fired=-1;
this.paused=0;
this.results=[null,null];
this.canceller=_284;
this.silentlyCancelled=false;
this.chained=false;
};
MochiKit.Async.Deferred.prototype={repr:function(){
var _285;
if(this.fired==-1){
_285="unfired";
}else{
if(this.fired===0){
_285="success";
}else{
_285="error";
}
}
return "Deferred("+this.id+", "+_285+")";
},toString:MochiKit.Base.forwardCall("repr"),_nextId:MochiKit.Base.counter(),cancel:function(){
var self=MochiKit.Async;
if(this.fired==-1){
if(this.canceller){
this.canceller(this);
}else{
this.silentlyCancelled=true;
}
if(this.fired==-1){
this.errback(new self.CancelledError(this));
}
}else{
if((this.fired===0)&&(this.results[0] instanceof self.Deferred)){
this.results[0].cancel();
}
}
},_pause:function(){
this.paused++;
},_unpause:function(){
this.paused--;
if((this.paused===0)&&(this.fired>=0)){
this._fire();
}
},_continue:function(res){
this._resback(res);
this._unpause();
},_resback:function(res){
this.fired=((res instanceof Error)?1:0);
this.results[this.fired]=res;
this._fire();
},_check:function(){
if(this.fired!=-1){
if(!this.silentlyCancelled){
throw new MochiKit.Async.AlreadyCalledError(this);
}
this.silentlyCancelled=false;
return;
}
},callback:function(res){
this._check();
if(res instanceof MochiKit.Async.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
this._resback(res);
},errback:function(res){
this._check();
var self=MochiKit.Async;
if(res instanceof self.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
if(!(res instanceof Error)){
res=new self.GenericError(res);
}
this._resback(res);
},addBoth:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,fn);
},addCallback:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,null);
},addErrback:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(null,fn);
},addCallbacks:function(cb,eb){
if(this.chained){
throw new Error("Chained Deferreds can not be re-used");
}
this.chain.push([cb,eb]);
if(this.fired>=0){
this._fire();
}
return this;
},_fire:function(){
var _288=this.chain;
var _289=this.fired;
var res=this.results[_289];
var self=this;
var cb=null;
while(_288.length>0&&this.paused===0){
var pair=_288.shift();
var f=pair[_289];
if(f===null){
continue;
}
try{
res=f(res);
_289=((res instanceof Error)?1:0);
if(res instanceof MochiKit.Async.Deferred){
cb=function(res){
self._continue(res);
};
this._pause();
}
}
catch(err){
_289=1;
if(!(err instanceof Error)){
err=new MochiKit.Async.GenericError(err);
}
res=err;
}
}
this.fired=_289;
this.results[_289]=res;
if(cb&&this.paused){
res.addBoth(cb);
res.chained=true;
}
}};
MochiKit.Base.update(MochiKit.Async,{evalJSONRequest:function(){
return eval("("+arguments[0].responseText+")");
},succeed:function(_291){
var d=new MochiKit.Async.Deferred();
d.callback.apply(d,arguments);
return d;
},fail:function(_292){
var d=new MochiKit.Async.Deferred();
d.errback.apply(d,arguments);
return d;
},getXMLHttpRequest:function(){
var self=arguments.callee;
if(!self.XMLHttpRequest){
var _293=[function(){
return new XMLHttpRequest();
},function(){
return new ActiveXObject("Msxml2.XMLHTTP");
},function(){
return new ActiveXObject("Microsoft.XMLHTTP");
},function(){
return new ActiveXObject("Msxml2.XMLHTTP.4.0");
},function(){
throw new MochiKit.Async.BrowserComplianceError("Browser does not support XMLHttpRequest");
}];
for(var i=0;i<_293.length;i++){
var func=_293[i];
try{
self.XMLHttpRequest=func;
return func();
}
catch(e){
}
}
}
return self.XMLHttpRequest();
},_xhr_onreadystatechange:function(d){
var m=MochiKit.Base;
if(this.readyState==4){
try{
this.onreadystatechange=null;
}
catch(e){
try{
this.onreadystatechange=m.noop;
}
catch(e){
}
}
var _294=null;
try{
_294=this.status;
if(!_294&&m.isNotEmpty(this.responseText)){
_294=304;
}
}
catch(e){
}
if(_294==200||_294==304){
d.callback(this);
}else{
var err=new MochiKit.Async.XMLHttpRequestError(this,"Request failed");
if(err.number){
d.errback(err);
}else{
d.errback(err);
}
}
}
},_xhr_canceller:function(req){
try{
req.onreadystatechange=null;
}
catch(e){
try{
req.onreadystatechange=MochiKit.Base.noop;
}
catch(e){
}
}
req.abort();
},sendXMLHttpRequest:function(req,_297){
if(typeof (_297)=="undefined"||_297===null){
_297="";
}
var m=MochiKit.Base;
var self=MochiKit.Async;
var d=new self.Deferred(m.partial(self._xhr_canceller,req));
try{
req.onreadystatechange=m.bind(self._xhr_onreadystatechange,req,d);
req.send(_297);
}
catch(e){
try{
req.onreadystatechange=null;
}
catch(ignore){
}
d.errback(e);
}
return d;
},doSimpleXMLHttpRequest:function(url){
var self=MochiKit.Async;
var req=self.getXMLHttpRequest();
if(arguments.length>1){
var m=MochiKit.Base;
var qs=m.queryString.apply(null,m.extend(null,arguments,1));
if(qs){
url+="?"+qs;
}
}
req.open("GET",url,true);
return self.sendXMLHttpRequest(req);
},loadJSONDoc:function(url){
var self=MochiKit.Async;
var d=self.doSimpleXMLHttpRequest.apply(self,arguments);
d=d.addCallback(self.evalJSONRequest);
return d;
},wait:function(_300,_301){
var d=new MochiKit.Async.Deferred();
var m=MochiKit.Base;
if(typeof (_301)!="undefined"){
d.addCallback(function(){
return _301;
});
}
var _302=setTimeout(m.bind("callback",d),Math.floor(_300*1000));
d.canceller=function(){
try{
clearTimeout(_302);
}
catch(e){
}
};
return d;
},callLater:function(_303,func){
var m=MochiKit.Base;
var _304=m.partial.apply(m,m.extend(null,arguments,1));
return MochiKit.Async.wait(_303).addCallback(function(res){
return _304();
});
}});
MochiKit.Async.DeferredLock=function(){
this.waiting=[];
this.locked=false;
this.id=this._nextId();
};
MochiKit.Async.DeferredLock.prototype={__class__:MochiKit.Async.DeferredLock,acquire:function(){
d=new MochiKit.Async.Deferred();
if(this.locked){
this.waiting.push(d);
}else{
this.locked=true;
d.callback(this);
}
return d;
},release:function(){
if(!this.locked){
throw TypeError("Tried to release an unlocked DeferredLock");
}
this.locked=false;
if(this.waiting.length>0){
this.locked=true;
this.waiting.shift().callback(this);
}
},_nextId:MochiKit.Base.counter(),repr:function(){
var _305;
if(this.locked){
_305="locked, "+this.waiting.length+" waiting";
}else{
_305="unlocked";
}
return "DeferredLock("+this.id+", "+_305+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Async.DeferredList=function(list,_307,_308,_309,_310){
MochiKit.Async.Deferred.apply(this,[_310]);
this.list=list;
var _311=[];
this.resultList=_311;
this.finishedCount=0;
this.fireOnOneCallback=_307;
this.fireOnOneErrback=_308;
this.consumeErrors=_309;
var cb=MochiKit.Base.bind(this._cbDeferred,this);
for(var i=0;i<list.length;i++){
var d=list[i];
_311.push(undefined);
d.addCallback(cb,i,true);
d.addErrback(cb,i,false);
}
if(list.length===0&&!_307){
this.callback(this.resultList);
}
};
MochiKit.Async.DeferredList.prototype=new MochiKit.Async.Deferred();
MochiKit.Async.DeferredList.prototype._cbDeferred=function(_312,_313,_314){
this.resultList[_312]=[_313,_314];
this.finishedCount+=1;
if(this.fired!==0){
if(_313&&this.fireOnOneCallback){
this.callback([_312,_314]);
}else{
if(!_313&&this.fireOnOneErrback){
this.errback(_314);
}else{
if(this.finishedCount==this.list.length){
this.callback(this.resultList);
}
}
}
}
if(!_313&&this.consumeErrors){
_314=null;
}
return _314;
};
MochiKit.Async.gatherResults=function(_315){
var d=new MochiKit.Async.DeferredList(_315,false,true,false);
d.addCallback(function(_316){
var ret=[];
for(var i=0;i<_316.length;i++){
ret.push(_316[i][1]);
}
return ret;
});
return d;
};
MochiKit.Async.maybeDeferred=function(func){
var self=MochiKit.Async;
var _317;
try{
var r=func.apply(null,MochiKit.Base.extend([],arguments,1));
if(r instanceof self.Deferred){
_317=r;
}else{
if(r instanceof Error){
_317=self.fail(r);
}else{
_317=self.succeed(r);
}
}
}
catch(e){
_317=self.fail(e);
}
return _317;
};
MochiKit.Async.EXPORT=["AlreadyCalledError","CancelledError","BrowserComplianceError","GenericError","XMLHttpRequestError","Deferred","succeed","fail","getXMLHttpRequest","doSimpleXMLHttpRequest","loadJSONDoc","wait","callLater","sendXMLHttpRequest","DeferredLock","DeferredList","gatherResults","maybeDeferred"];
MochiKit.Async.EXPORT_OK=["evalJSONRequest"];
MochiKit.Async.__new__=function(){
var m=MochiKit.Base;
var ne=m.partial(m._newNamedError,this);
ne("AlreadyCalledError",function(_320){
this.deferred=_320;
});
ne("CancelledError",function(_321){
this.deferred=_321;
});
ne("BrowserComplianceError",function(msg){
this.message=msg;
});
ne("GenericError",function(msg){
this.message=msg;
});
ne("XMLHttpRequestError",function(req,msg){
this.req=req;
this.message=msg;
try{
this.number=req.status;
}
catch(e){
}
});
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Async.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Async);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.DOM");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.DOM depends on MochiKit.Base!";
}
if(typeof (MochiKit.DOM)=="undefined"){
MochiKit.DOM={};
}
MochiKit.DOM.NAME="MochiKit.DOM";
MochiKit.DOM.VERSION="1.4";
MochiKit.DOM.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.DOM.toString=function(){
return this.__repr__();
};
MochiKit.DOM.EXPORT=["formContents","currentWindow","currentDocument","withWindow","withDocument","registerDOMConverter","coerceToDOM","createDOM","createDOMFunc","getNodeAttribute","setNodeAttribute","updateNodeAttributes","appendChildNodes","replaceChildNodes","removeElement","swapDOM","BUTTON","TT","PRE","H1","H2","H3","BR","CANVAS","HR","LABEL","TEXTAREA","FORM","STRONG","SELECT","OPTION","OPTGROUP","LEGEND","FIELDSET","P","UL","OL","LI","TD","TR","THEAD","TBODY","TFOOT","TABLE","TH","INPUT","SPAN","A","DIV","IMG","getElement","$","getElementsByTagAndClassName","addToCallStack","addLoadEvent","focusOnLoad","setElementClass","toggleElementClass","addElementClass","removeElementClass","swapElementClass","hasElementClass","escapeHTML","toHTML","emitHTML","scrapeText"];
MochiKit.DOM.EXPORT_OK=["domConverters"];
MochiKit.Base.update(MochiKit.DOM,{currentWindow:function(){
return MochiKit.DOM._window;
},currentDocument:function(){
return MochiKit.DOM._document;
},withWindow:function(win,func){
var self=MochiKit.DOM;
var _323=self._document;
var _324=self._win;
var rval;
try{
self._window=win;
self._document=win.document;
rval=func();
}
catch(e){
self._window=_324;
self._document=_323;
throw e;
}
self._window=_324;
self._document=_323;
return rval;
},formContents:function(elem){
var _325=[];
var _326=[];
var m=MochiKit.Base;
var self=MochiKit.DOM;
if(typeof (elem)=="undefined"||elem===null){
elem=self._document;
}else{
elem=self.getElement(elem);
}
m.nodeWalk(elem,function(elem){
var name=elem.name;
if(m.isNotEmpty(name)){
var _327=elem.nodeName;
if(_327=="INPUT"&&(elem.type=="radio"||elem.type=="checkbox")&&!elem.checked){
return null;
}
if(_327=="SELECT"){
if(elem.type=="select-one"){
if(elem.selectedIndex>=0){
var opt=elem.options[elem.selectedIndex];
_325.push(name);
_326.push((opt.value)?opt.value:opt.text);
return null;
}
_325.push(name);
_326.push("");
return null;
}else{
var opts=elem.options;
if(!opts.length){
_325.push(name);
_326.push("");
return null;
}
for(var i=0;i<opts.length;i++){
var opt=opts[i];
if(!opt.selected){
continue;
}
_325.push(name);
_326.push((opt.value)?opt.value:opt.text);
}
return null;
}
}
if(_327=="FORM"||_327=="P"||_327=="SPAN"||_327=="DIV"){
return elem.childNodes;
}
_325.push(name);
_326.push(elem.value||"");
return null;
}
return elem.childNodes;
});
return [_325,_326];
},withDocument:function(doc,func){
var self=MochiKit.DOM;
var _331=self._document;
var rval;
try{
self._document=doc;
rval=func();
}
catch(e){
self._document=_331;
throw e;
}
self._document=_331;
return rval;
},registerDOMConverter:function(name,_332,wrap,_333){
MochiKit.DOM.domConverters.register(name,_332,wrap,_333);
},coerceToDOM:function(node,ctx){
var m=MochiKit.Base;
var im=MochiKit.Iter;
var self=MochiKit.DOM;
if(im){
var iter=im.iter;
var _337=im.repeat;
var map=m.map;
}
var _338=self.domConverters;
var _339=arguments.callee;
var _340=m.NotFound;
while(true){
if(typeof (node)=="undefined"||node===null){
return null;
}
if(typeof (node.nodeType)!="undefined"&&node.nodeType>0){
return node;
}
if(typeof (node)=="number"||typeof (node)=="boolean"){
node=node.toString();
}
if(typeof (node)=="string"){
return self._document.createTextNode(node);
}
if(typeof (node.__dom__)=="function"){
node=node.__dom__(ctx);
continue;
}
if(typeof (node.dom)=="function"){
node=node.dom(ctx);
continue;
}
if(typeof (node)=="function"){
node=node.apply(ctx,[ctx]);
continue;
}
if(im){
var _341=null;
try{
_341=iter(node);
}
catch(e){
}
if(_341){
return map(_339,_341,_337(ctx));
}
}
try{
node=_338.match(node,ctx);
continue;
}
catch(e){
if(e!=_340){
throw e;
}
}
return self._document.createTextNode(node.toString());
}
return undefined;
},setNodeAttribute:function(node,attr,_343){
var o={};
o[attr]=_343;
try{
return MochiKit.DOM.updateNodeAttributes(node,o);
}
catch(e){
}
return null;
},getNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _344=self.attributeArray.renames[attr];
node=self.getElement(node);
try{
if(_344){
return node[_344];
}
return node.getAttribute(attr);
}
catch(e){
}
return null;
},updateNodeAttributes:function(node,_345){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
if(_345){
var _346=MochiKit.Base.updatetree;
if(self.attributeArray.compliant){
for(var k in _345){
var v=_345[k];
if(typeof (v)=="object"&&typeof (elem[k])=="object"){
_346(elem[k],v);
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}else{
var _347=self.attributeArray.renames;
for(k in _345){
v=_345[k];
var _348=_347[k];
if(k=="style"&&typeof (v)=="string"){
elem.style.cssText=v;
}else{
if(typeof (_348)=="string"){
elem[_348]=v;
}else{
if(typeof (elem[k])=="object"&&typeof (v)=="object"){
_346(elem[k],v);
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}
}
}
}
return elem;
},appendChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _349=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _350=MochiKit.Base.concat;
while(_349.length){
var n=_349.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
elem.appendChild(n);
}else{
_349=_350(n,_349);
}
}
}
return elem;
},replaceChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
arguments[0]=elem;
}
var _351;
while((_351=elem.firstChild)){
elem.removeChild(_351);
}
if(arguments.length<2){
return elem;
}else{
return self.appendChildNodes.apply(this,arguments);
}
},createDOM:function(name,_352){
var elem;
var self=MochiKit.DOM;
var m=MochiKit.Base;
if(typeof (_352)=="string"||typeof (_352)=="number"){
var args=m.extend([name,null],arguments,1);
return arguments.callee.apply(this,args);
}
if(typeof (name)=="string"){
if(_352&&!self.attributeArray.compliant){
var _353="";
if("name" in _352){
_353+=" name=\""+self.escapeHTML(_352.name)+"\"";
}
if(name=="input"&&"type" in _352){
_353+=" type=\""+self.escapeHTML(_352.type)+"\"";
}
if(_353){
name="<"+name+_353+">";
}
}
elem=self._document.createElement(name);
}else{
elem=name;
}
if(_352){
self.updateNodeAttributes(elem,_352);
}
if(arguments.length<=2){
return elem;
}else{
var args=m.extend([elem],arguments,2);
return self.appendChildNodes.apply(this,args);
}
},createDOMFunc:function(){
var m=MochiKit.Base;
return m.partial.apply(this,m.extend([MochiKit.DOM.createDOM],arguments));
},swapDOM:function(dest,src){
var self=MochiKit.DOM;
dest=self.getElement(dest);
var _356=dest.parentNode;
if(src){
src=self.getElement(src);
_356.replaceChild(src,dest);
}else{
_356.removeChild(dest);
}
return src;
},getElement:function(id){
var self=MochiKit.DOM;
if(arguments.length==1){
return ((typeof (id)=="string")?self._document.getElementById(id):id);
}else{
return MochiKit.Base.map(self.getElement,arguments);
}
},getElementsByTagAndClassName:function(_358,_359,_360){
var self=MochiKit.DOM;
if(typeof (_358)=="undefined"||_358===null){
_358="*";
}
if(typeof (_360)=="undefined"||_360===null){
_360=self._document;
}
_360=self.getElement(_360);
var _361=(_360.getElementsByTagName(_358)||self._document.all);
if(typeof (_359)=="undefined"||_359===null){
return MochiKit.Base.extend(null,_361);
}
var _362=[];
for(var i=0;i<_361.length;i++){
var _363=_361[i];
var _364=_363.className.split(" ");
for(var j=0;j<_364.length;j++){
if(_364[j]==_359){
_362.push(_363);
break;
}
}
}
return _362;
},_newCallStack:function(path,once){
var rval=function(){
var _367=arguments.callee.callStack;
for(var i=0;i<_367.length;i++){
if(_367[i].apply(this,arguments)===false){
break;
}
}
if(once){
try{
this[path]=null;
}
catch(e){
}
}
};
rval.callStack=[];
return rval;
},addToCallStack:function(_368,path,func,once){
var self=MochiKit.DOM;
var _369=_368[path];
var _370=_369;
if(!(typeof (_369)=="function"&&typeof (_369.callStack)=="object"&&_369.callStack!==null)){
_370=self._newCallStack(path,once);
if(typeof (_369)=="function"){
_370.callStack.push(_369);
}
_368[path]=_370;
}
_370.callStack.push(func);
},addLoadEvent:function(func){
var self=MochiKit.DOM;
self.addToCallStack(self._window,"onload",func,true);
},focusOnLoad:function(_371){
var self=MochiKit.DOM;
self.addLoadEvent(function(){
_371=self.getElement(_371);
if(_371){
_371.focus();
}
});
},setElementClass:function(_372,_373){
var self=MochiKit.DOM;
var obj=self.getElement(_372);
if(self.attributeArray.compliant){
obj.setAttribute("class",_373);
}else{
obj.setAttribute("className",_373);
}
},toggleElementClass:function(_374){
var self=MochiKit.DOM;
for(var i=1;i<arguments.length;i++){
var obj=self.getElement(arguments[i]);
if(!self.addElementClass(obj,_374)){
self.removeElementClass(obj,_374);
}
}
},addElementClass:function(_375,_376){
var self=MochiKit.DOM;
var obj=self.getElement(_375);
var cls=obj.className;
if(cls.length===0){
self.setElementClass(obj,_376);
return true;
}
if(cls==_376){
return false;
}
var _378=obj.className.split(" ");
for(var i=0;i<_378.length;i++){
if(_378[i]==_376){
return false;
}
}
self.setElementClass(obj,cls+" "+_376);
return true;
},removeElementClass:function(_379,_380){
var self=MochiKit.DOM;
var obj=self.getElement(_379);
var cls=obj.className;
if(cls.length===0){
return false;
}
if(cls==_380){
self.setElementClass(obj,"");
return true;
}
var _381=obj.className.split(" ");
for(var i=0;i<_381.length;i++){
if(_381[i]==_380){
_381.splice(i,1);
self.setElementClass(obj,_381.join(" "));
return true;
}
}
return false;
},swapElementClass:function(_382,_383,_384){
var obj=MochiKit.DOM.getElement(_382);
var res=MochiKit.DOM.removeElementClass(obj,_383);
if(res){
MochiKit.DOM.addElementClass(obj,_384);
}
return res;
},hasElementClass:function(_385,_386){
var obj=MochiKit.DOM.getElement(_385);
var _387=obj.className.split(" ");
for(var i=1;i<arguments.length;i++){
var good=false;
for(var j=0;j<_387.length;j++){
if(_387[j]==arguments[i]){
good=true;
break;
}
}
if(!good){
return false;
}
}
return true;
},escapeHTML:function(s){
return s.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/</g,"&lt;").replace(/>/g,"&gt;");
},toHTML:function(dom){
return MochiKit.DOM.emitHTML(dom).join("");
},emitHTML:function(dom,lst){
if(typeof (lst)=="undefined"||lst===null){
lst=[];
}
var _390=[dom];
var self=MochiKit.DOM;
var _391=self.escapeHTML;
var _392=self.attributeArray;
while(_390.length){
dom=_390.pop();
if(typeof (dom)=="string"){
lst.push(dom);
}else{
if(dom.nodeType==1){
lst.push("<"+dom.nodeName.toLowerCase());
var _393=[];
var _394=_392(dom);
for(var i=0;i<_394.length;i++){
var a=_394[i];
_393.push([" ",a.name,"=\"",_391(a.value),"\""]);
}
_393.sort();
for(i=0;i<_393.length;i++){
var _395=_393[i];
for(var j=0;j<_395.length;j++){
lst.push(_395[j]);
}
}
if(dom.hasChildNodes()){
lst.push(">");
_390.push("</"+dom.nodeName.toLowerCase()+">");
var _396=dom.childNodes;
for(i=_396.length-1;i>=0;i--){
_390.push(_396[i]);
}
}else{
lst.push("/>");
}
}else{
if(dom.nodeType==3){
lst.push(_391(dom.nodeValue));
}
}
}
}
return lst;
},scrapeText:function(node,_397){
var rval=[];
(function(node){
var cn=node.childNodes;
if(cn){
for(var i=0;i<cn.length;i++){
arguments.callee.call(this,cn[i]);
}
}
var _399=node.nodeValue;
if(typeof (_399)=="string"){
rval.push(_399);
}
})(MochiKit.DOM.getElement(node));
if(_397){
return rval;
}else{
return rval.join("");
}
},__new__:function(win){
var m=MochiKit.Base;
if(typeof (document)!="undefined"){
this._document=document;
}else{
if(MochiKit.MockDOM){
this._document=MochiKit.MockDOM.document;
}
}
this._window=win;
this.domConverters=new m.AdapterRegistry();
var _400=this._document.createElement("span");
var _401;
if(_400&&_400.attributes&&_400.attributes.length>0){
var _402=m.filter;
_401=function(node){
return _402(_401.ignoreAttrFilter,node.attributes);
};
_401.ignoreAttr={};
var _403=_400.attributes;
var _404=_401.ignoreAttr;
for(var i=0;i<_403.length;i++){
var a=_403[i];
_404[a.name]=a.value;
}
_401.ignoreAttrFilter=function(a){
return (_401.ignoreAttr[a.name]!=a.value);
};
_401.compliant=false;
_401.renames={"class":"className","checked":"defaultChecked","usemap":"useMap","for":"htmlFor"};
}else{
_401=function(node){
return node.attributes;
};
_401.compliant=true;
_401.renames={};
}
this.attributeArray=_401;
var _405=this.createDOMFunc;
this.UL=_405("ul");
this.OL=_405("ol");
this.LI=_405("li");
this.TD=_405("td");
this.TR=_405("tr");
this.TBODY=_405("tbody");
this.THEAD=_405("thead");
this.TFOOT=_405("tfoot");
this.TABLE=_405("table");
this.TH=_405("th");
this.INPUT=_405("input");
this.SPAN=_405("span");
this.A=_405("a");
this.DIV=_405("div");
this.IMG=_405("img");
this.BUTTON=_405("button");
this.TT=_405("tt");
this.PRE=_405("pre");
this.H1=_405("h1");
this.H2=_405("h2");
this.H3=_405("h3");
this.BR=_405("br");
this.HR=_405("hr");
this.LABEL=_405("label");
this.TEXTAREA=_405("textarea");
this.FORM=_405("form");
this.P=_405("p");
this.SELECT=_405("select");
this.OPTION=_405("option");
this.OPTGROUP=_405("optgroup");
this.LEGEND=_405("legend");
this.FIELDSET=_405("fieldset");
this.STRONG=_405("strong");
this.CANVAS=_405("canvas");
this.removeElement=this.swapDOM;
this.$=this.getElement;
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
}});
MochiKit.DOM.__new__(((typeof (window)=="undefined")?this:window));
if(!MochiKit.__compat__){
withWindow=MochiKit.DOM.withWindow;
withDocument=MochiKit.DOM.withDocument;
}
MochiKit.Base._exportSymbols(this,MochiKit.DOM);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Style");
dojo.require("MochiKit.Base");
dojo.require("MochiKit.DOM");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Style depends on MochiKit.Base!";
}
try{
if(typeof (MochiKit.DOM)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Style depends on MochiKit.DOM!";
}
if(typeof (MochiKit.Style)=="undefined"){
MochiKit.Style={};
}
MochiKit.Style.NAME="MochiKit.Style";
MochiKit.Style.VERSION="1.4";
MochiKit.Style.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Style.toString=function(){
return this.__repr__();
};
MochiKit.Style.EXPORT_OK=[];
MochiKit.Style.EXPORT=["setOpacity","computedStyle","getElementDimensions","elementDimensions","setElementDimensions","getElementPosition","elementPosition","setElementPosition","setDisplayForElement","hideElement","showElement","getViewportDimensions"];
MochiKit.Style.Dimensions=function(w,h){
this.w=w;
this.h=h;
};
MochiKit.Style.Dimensions.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{w: "+repr(this.w)+", h: "+repr(this.h)+"}";
};
MochiKit.Style.Dimensions.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Style.Coordinates=function(x,y){
this.x=x;
this.y=y;
};
MochiKit.Style.Coordinates.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{x: "+repr(this.x)+", y: "+repr(this.y)+"}";
};
MochiKit.Style.Coordinates.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Base.update(MochiKit.Style,{computedStyle:function(_410,_411,_412){
if(arguments.length==2){
_412=_411;
}
var dom=MochiKit.DOM;
var el=dom.getElement(_410);
var _414=dom._document;
if(!el||el==_414){
return undefined;
}
if(el.currentStyle){
return el.currentStyle[_411];
}
if(typeof (_414.defaultView)=="undefined"){
return undefined;
}
if(_414.defaultView===null){
return undefined;
}
var _415=_414.defaultView.getComputedStyle(el,null);
if(typeof (_415)=="undefined"||_415===null){
return undefined;
}
return _415.getPropertyValue(_412);
},setOpacity:function(elem,o){
elem=MochiKit.DOM.getElement(elem);
MochiKit.DOM.updateNodeAttributes(elem,{"style":{"opacity":o,"-moz-opacity":o,"-khtml-opacity":o,"filter":" alpha(opacity="+(o*100)+")"}});
},getElementPosition:function(elem,_416){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
elem=dom.getElement(elem);
if(!elem){
return undefined;
}
var c=new self.Coordinates(0,0);
if(elem.x&&elem.y){
c.x+=elem.x||0;
c.y+=elem.y||0;
return c;
}else{
if(elem.parentNode===null||self.computedStyle(elem,"display")=="none"){
return undefined;
}
}
var box=null;
var _419=null;
var d=MochiKit.DOM._document;
var de=d.documentElement;
var b=d.body;
if(elem.getBoundingClientRect){
box=elem.getBoundingClientRect();
c.x+=box.left+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||b.clientLeft);
c.y+=box.top+(de.scrollTop||b.scrollTop)-(de.clientTop||b.clientTop);
}else{
if(d.getBoxObjectFor){
box=d.getBoxObjectFor(elem);
c.x+=box.x;
c.y+=box.y;
}else{
if(elem.offsetParent){
c.x+=elem.offsetLeft;
c.y+=elem.offsetTop;
_419=elem.offsetParent;
if(_419!=elem){
while(_419){
c.x+=_419.offsetLeft;
c.y+=_419.offsetTop;
_419=_419.offsetParent;
}
}
var ua=navigator.userAgent.toLowerCase();
if((typeof (opera)!="undefined"&&parseFloat(opera.version())<9)||(ua.indexOf("safari")!=-1&&self.computedStyle(elem,"position")=="absolute")){
c.x-=b.offsetLeft;
c.y-=b.offsetTop;
}
}
}
}
if(typeof (_416)!="undefined"){
_416=arguments.callee(_416);
if(_416){
c.x-=(_416.x||0);
c.y-=(_416.y||0);
}
}
if(elem.parentNode){
_419=elem.parentNode;
}else{
_419=null;
}
while(_419&&_419.tagName!="BODY"&&_419.tagName!="HTML"){
c.x-=_419.scrollLeft;
c.y-=_419.scrollTop;
if(_419.parentNode){
_419=_419.parentNode;
}else{
_419=null;
}
}
return c;
},setElementPosition:function(elem,_422,_423){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_423)=="undefined"){
_423="px";
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":{"left":_422.x+_423,"top":_422.y+_423}});
},getElementDimensions:function(elem){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
if(typeof (elem.w)=="number"||typeof (elem.h)=="number"){
return new self.Dimensions(elem.w||0,elem.h||0);
}
elem=dom.getElement(elem);
if(!elem){
return undefined;
}
if(self.computedStyle(elem,"display")!="none"){
return new self.Dimensions(elem.offsetWidth||0,elem.offsetHeight||0);
}
var s=elem.style;
var _424=s.visibility;
var _425=s.position;
s.visibility="hidden";
s.position="absolute";
s.display="";
var _426=elem.offsetWidth;
var _427=elem.offsetHeight;
s.display="none";
s.position=_425;
s.visibility=_424;
return new self.Dimensions(_426,_427);
},setElementDimensions:function(elem,_428,_429){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_429)=="undefined"){
_429="px";
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":{"width":_428.w+_429,"height":_428.h+_429}});
},setDisplayForElement:function(_430,_431){
var _432=MochiKit.Base.extend(null,arguments,1);
var _433=MochiKit.DOM.getElement;
for(var i=0;i<_432.length;i++){
var _431=_433(_432[i]);
if(_431){
_431.style.display=_430;
}
}
},getViewportDimensions:function(){
var d=new MochiKit.Style.Dimensions();
var w=MochiKit.DOM._window;
var b=MochiKit.DOM._document.body;
if(w.innerWidth){
d.w=w.innerWidth;
d.h=w.innerHeight;
}else{
if(b.parentElement.clientWidth){
d.w=b.parentElement.clientWidth;
d.h=b.parentElement.clientHeight;
}else{
if(b&&b.clientWidth){
d.w=b.clientWidth;
d.h=b.clientHeight;
}
}
}
return d;
},__new__:function(){
var m=MochiKit.Base;
this.elementPosition=this.getElementPosition;
this.elementDimensions=this.getElementDimensions;
this.hideElement=m.partial(this.setDisplayForElement,"none");
this.showElement=m.partial(this.setDisplayForElement,"block");
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
}});
MochiKit.Style.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Style);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.LoggingPane");
dojo.require("MochiKit.Logging");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Logging",[]);
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"||typeof (MochiKit.Logging)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.LoggingPane depends on MochiKit.Base and MochiKit.Logging!";
}
if(typeof (MochiKit.LoggingPane)=="undefined"){
MochiKit.LoggingPane={};
}
MochiKit.LoggingPane.NAME="MochiKit.LoggingPane";
MochiKit.LoggingPane.VERSION="1.4";
MochiKit.LoggingPane.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.LoggingPane.toString=function(){
return this.__repr__();
};
MochiKit.LoggingPane.createLoggingPane=function(_434){
var m=MochiKit.LoggingPane;
_434=!(!_434);
if(m._loggingPane&&m._loggingPane.inline!=_434){
m._loggingPane.closePane();
m._loggingPane=null;
}
if(!m._loggingPane||m._loggingPane.closed){
m._loggingPane=new m.LoggingPane(_434,MochiKit.Logging.logger);
}
return m._loggingPane;
};
MochiKit.LoggingPane.LoggingPane=function(_435,_436){
if(typeof (_436)=="undefined"||_436===null){
_436=MochiKit.Logging.logger;
}
this.logger=_436;
var _437=MochiKit.Base.update;
var _438=MochiKit.Base.updatetree;
var bind=MochiKit.Base.bind;
var _439=MochiKit.Base.clone;
var win=window;
var uid="_MochiKit_LoggingPane";
if(typeof (MochiKit.DOM)!="undefined"){
win=MochiKit.DOM.currentWindow();
}
if(!_435){
var url=win.location.href.split("?")[0].replace(/[:\/.><&-]/g,"_");
var name=uid+"_"+url;
var nwin=win.open("",name,"dependent,resizable,height=200");
if(!nwin){
alert("Not able to open debugging window due to pop-up blocking.");
return undefined;
}
nwin.document.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" "+"\"http://www.w3.org/TR/html4/loose.dtd\">"+"<html><head><title>[MochiKit.LoggingPane]</title></head>"+"<body></body></html>");
nwin.document.close();
nwin.document.title+=" "+win.document.title;
win=nwin;
}
var doc=win.document;
this.doc=doc;
var _442=doc.getElementById(uid);
var _443=!!_442;
if(_442&&typeof (_442.loggingPane)!="undefined"){
_442.loggingPane.logger=this.logger;
_442.loggingPane.buildAndApplyFilter();
return _442.loggingPane;
}
if(_443){
var _444;
while((_444=_442.firstChild)){
_442.removeChild(_444);
}
}else{
_442=doc.createElement("div");
_442.id=uid;
}
_442.loggingPane=this;
var _445=doc.createElement("input");
var _446=doc.createElement("input");
var _447=doc.createElement("button");
var _448=doc.createElement("button");
var _449=doc.createElement("button");
var _450=doc.createElement("button");
var _451=doc.createElement("div");
var _452=doc.createElement("div");
var _453=uid+"_Listener";
this.colorTable=_439(this.colorTable);
var _454=[];
var _455=null;
var _456=function(msg){
var _457=msg.level;
if(typeof (_457)=="number"){
_457=MochiKit.Logging.LogLevel[_457];
}
return _457;
};
var _458=function(msg){
return msg.info.join(" ");
};
var _459=bind(function(msg){
var _460=_456(msg);
var text=_458(msg);
var c=this.colorTable[_460];
var p=doc.createElement("span");
p.className="MochiKit-LogMessage MochiKit-LogLevel-"+_460;
p.style.cssText="margin: 0px; white-space: -moz-pre-wrap; white-space: -o-pre-wrap; white-space: pre-wrap; white-space: pre-line; word-wrap: break-word; wrap-option: emergency; color: "+c;
p.appendChild(doc.createTextNode(_460+": "+text));
_452.appendChild(p);
_452.appendChild(doc.createElement("br"));
if(_451.offsetHeight>_451.scrollHeight){
_451.scrollTop=0;
}else{
_451.scrollTop=_451.scrollHeight;
}
},this);
var _462=function(msg){
_454[_454.length]=msg;
_459(msg);
};
var _463=function(){
var _464,infore;
try{
_464=new RegExp(_445.value);
infore=new RegExp(_446.value);
}
catch(e){
logDebug("Error in filter regex: "+e.message);
return null;
}
return function(msg){
return (_464.test(_456(msg))&&infore.test(_458(msg)));
};
};
var _465=function(){
while(_452.firstChild){
_452.removeChild(_452.firstChild);
}
};
var _466=function(){
_454=[];
_465();
};
var _467=bind(function(){
if(this.closed){
return;
}
this.closed=true;
if(MochiKit.LoggingPane._loggingPane==this){
MochiKit.LoggingPane._loggingPane=null;
}
this.logger.removeListener(_453);
_442.loggingPane=null;
if(_435){
_442.parentNode.removeChild(_442);
}else{
this.win.close();
}
},this);
var _468=function(){
_465();
for(var i=0;i<_454.length;i++){
var msg=_454[i];
if(_455===null||_455(msg)){
_459(msg);
}
}
};
this.buildAndApplyFilter=function(){
_455=_463();
_468();
this.logger.removeListener(_453);
this.logger.addListener(_453,_455,_462);
};
var _469=bind(function(){
_454=this.logger.getMessages();
_468();
},this);
var _470=bind(function(_471){
_471=_471||window.event;
key=_471.which||_471.keyCode;
if(key==13){
this.buildAndApplyFilter();
}
},this);
var _472="display: block; z-index: 1000; left: 0px; bottom: 0px; position: fixed; width: 100%; background-color: white; font: "+this.logFont;
if(_435){
_472+="; height: 10em; border-top: 2px solid black";
}else{
_472+="; height: 100%;";
}
_442.style.cssText=_472;
if(!_443){
doc.body.appendChild(_442);
}
_472={"cssText":"width: 33%; display: inline; font: "+this.logFont};
_438(_445,{"value":"FATAL|ERROR|WARNING|INFO|DEBUG","onkeypress":_470,"style":_472});
_442.appendChild(_445);
_438(_446,{"value":".*","onkeypress":_470,"style":_472});
_442.appendChild(_446);
_472="width: 8%; display:inline; font: "+this.logFont;
_447.appendChild(doc.createTextNode("Filter"));
_447.onclick=bind("buildAndApplyFilter",this);
_447.style.cssText=_472;
_442.appendChild(_447);
_448.appendChild(doc.createTextNode("Load"));
_448.onclick=_469;
_448.style.cssText=_472;
_442.appendChild(_448);
_449.appendChild(doc.createTextNode("Clear"));
_449.onclick=_466;
_449.style.cssText=_472;
_442.appendChild(_449);
_450.appendChild(doc.createTextNode("Close"));
_450.onclick=_467;
_450.style.cssText=_472;
_442.appendChild(_450);
_451.style.cssText="overflow: auto; width: 100%";
_452.style.cssText="width: 100%; height: "+(_435?"8em":"100%");
_451.appendChild(_452);
_442.appendChild(_451);
this.buildAndApplyFilter();
_469();
if(_435){
this.win=undefined;
}else{
this.win=win;
}
this.inline=_435;
this.closePane=_467;
this.closed=false;
return this;
};
MochiKit.LoggingPane.LoggingPane.prototype={"logFont":"8pt Verdana,sans-serif","colorTable":{"ERROR":"red","FATAL":"darkred","WARNING":"blue","INFO":"black","DEBUG":"green"}};
MochiKit.LoggingPane.EXPORT_OK=["LoggingPane"];
MochiKit.LoggingPane.EXPORT=["createLoggingPane"];
MochiKit.LoggingPane.__new__=function(){
this.EXPORT_TAGS={":common":this.EXPORT,":all":MochiKit.Base.concat(this.EXPORT,this.EXPORT_OK)};
MochiKit.Base.nameFunctions(this);
MochiKit.LoggingPane._loggingPane=null;
};
MochiKit.LoggingPane.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.LoggingPane);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Color");
dojo.require("MochiKit.Base");
dojo.require("MochiKit.DOM");
dojo.require("MochiKit.Style");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
JSAN.use("MochiKit.DOM",[]);
JSAN.use("MochiKit.Style",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Color depends on MochiKit.Base";
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Color depends on MochiKit.DOM";
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Color depends on MochiKit.Style";
}
if(typeof (MochiKit.Color)=="undefined"){
MochiKit.Color={};
}
MochiKit.Color.NAME="MochiKit.Color";
MochiKit.Color.VERSION="1.4";
MochiKit.Color.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Color.toString=function(){
return this.__repr__();
};
MochiKit.Color.Color=function(red,_474,blue,_476){
if(typeof (_476)=="undefined"||_476===null){
_476=1;
}
this.rgb={r:red,g:_474,b:blue,a:_476};
};
MochiKit.Color.Color.prototype={__class__:MochiKit.Color.Color,colorWithAlpha:function(_477){
var rgb=this.rgb;
var m=MochiKit.Color;
return m.Color.fromRGB(rgb.r,rgb.g,rgb.b,_477);
},colorWithHue:function(hue){
var hsl=this.asHSL();
hsl.h=hue;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithSaturation:function(_481){
var hsl=this.asHSL();
hsl.s=_481;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithLightness:function(_482){
var hsl=this.asHSL();
hsl.l=_482;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},darkerColorWithLevel:function(_483){
var hsl=this.asHSL();
hsl.l=Math.max(hsl.l-_483,0);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},lighterColorWithLevel:function(_484){
var hsl=this.asHSL();
hsl.l=Math.min(hsl.l+_484,1);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},blendedColor:function(_485,_486){
if(typeof (_486)=="undefined"||_486===null){
_486=0.5;
}
var sf=1-_486;
var s=this.rgb;
var d=_485.rgb;
var df=_486;
return MochiKit.Color.Color.fromRGB((s.r*sf)+(d.r*df),(s.g*sf)+(d.g*df),(s.b*sf)+(d.b*df),(s.a*sf)+(d.a*df));
},compareRGB:function(_489){
var a=this.asRGB();
var b=_489.asRGB();
return MochiKit.Base.compare([a.r,a.g,a.b,a.a],[b.r,b.g,b.b,b.a]);
},isLight:function(){
return this.asHSL().b>0.5;
},isDark:function(){
return (!this.isLight());
},toHSLString:function(){
var c=this.asHSL();
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hslString;
if(!rval){
var mid=(ccc(c.h,360).toFixed(0)+","+ccc(c.s,100).toPrecision(4)+"%"+","+ccc(c.l,100).toPrecision(4)+"%");
var a=c.a;
if(a>=1){
a=1;
rval="hsl("+mid+")";
}else{
if(a<=0){
a=0;
}
rval="hsla("+mid+","+a+")";
}
this._hslString=rval;
}
return rval;
},toRGBString:function(){
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._rgbString;
if(!rval){
var mid=(ccc(c.r,255).toFixed(0)+","+ccc(c.g,255).toFixed(0)+","+ccc(c.b,255).toFixed(0));
if(c.a!=1){
rval="rgba("+mid+","+c.a+")";
}else{
rval="rgb("+mid+")";
}
this._rgbString=rval;
}
return rval;
},asRGB:function(){
return MochiKit.Base.clone(this.rgb);
},toHexString:function(){
var m=MochiKit.Color;
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hexString;
if(!rval){
rval=("#"+m.toColorPart(ccc(c.r,255))+m.toColorPart(ccc(c.g,255))+m.toColorPart(ccc(c.b,255)));
this._hexString=rval;
}
return rval;
},asHSV:function(){
var hsv=this.hsv;
var c=this.rgb;
if(typeof (hsv)=="undefined"||hsv===null){
hsv=MochiKit.Color.rgbToHSV(this.rgb);
this.hsv=hsv;
}
return MochiKit.Base.clone(hsv);
},asHSL:function(){
var hsl=this.hsl;
var c=this.rgb;
if(typeof (hsl)=="undefined"||hsl===null){
hsl=MochiKit.Color.rgbToHSL(this.rgb);
this.hsl=hsl;
}
return MochiKit.Base.clone(hsl);
},toString:function(){
return this.toRGBString();
},repr:function(){
var c=this.rgb;
var col=[c.r,c.g,c.b,c.a];
return this.__class__.NAME+"("+col.join(", ")+")";
}};
MochiKit.Base.update(MochiKit.Color.Color,{fromRGB:function(red,_494,blue,_495){
var _496=MochiKit.Color.Color;
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_494=rgb.g;
blue=rgb.b;
if(typeof (rgb.a)=="undefined"){
_495=undefined;
}else{
_495=rgb.a;
}
}
return new _496(red,_494,blue,_495);
},fromHSL:function(hue,_497,_498,_499){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hslToRGB.apply(m,arguments));
},fromHSV:function(hue,_500,_501,_502){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hsvToRGB.apply(m,arguments));
},fromName:function(name){
var _503=MochiKit.Color.Color;
if(name.charAt(0)=="\""){
name=name.substr(1,name.length-2);
}
var _504=_503._namedColors[name.toLowerCase()];
if(typeof (_504)=="string"){
return _503.fromHexString(_504);
}else{
if(name=="transparent"){
return _503.transparentColor();
}
}
return null;
},fromString:function(_505){
var self=MochiKit.Color.Color;
var _506=_505.substr(0,3);
if(_506=="rgb"){
return self.fromRGBString(_505);
}else{
if(_506=="hsl"){
return self.fromHSLString(_505);
}else{
if(_505.charAt(0)=="#"){
return self.fromHexString(_505);
}
}
}
return self.fromName(_505);
},fromHexString:function(_507){
if(_507.charAt(0)=="#"){
_507=_507.substring(1);
}
var _508=[];
var i,hex;
if(_507.length==3){
for(i=0;i<3;i++){
hex=_507.substr(i,1);
_508.push(parseInt(hex+hex,16)/255);
}
}else{
for(i=0;i<6;i+=2){
hex=_507.substr(i,2);
_508.push(parseInt(hex,16)/255);
}
}
var _509=MochiKit.Color.Color;
return _509.fromRGB.apply(_509,_508);
},_fromColorString:function(pre,_511,_512,_513){
if(_513.indexOf(pre)===0){
_513=_513.substring(_513.indexOf("(",3)+1,_513.length-1);
}
var _514=_513.split(/\s*,\s*/);
var _515=[];
for(var i=0;i<_514.length;i++){
var c=_514[i];
var val;
var _516=c.substring(c.length-3);
if(c.charAt(c.length-1)=="%"){
val=0.01*parseFloat(c.substring(0,c.length-1));
}else{
if(_516=="deg"){
val=parseFloat(c)/360;
}else{
if(_516=="rad"){
val=parseFloat(c)/(Math.PI*2);
}else{
val=_512[i]*parseFloat(c);
}
}
}
_515.push(val);
}
return this[_511].apply(this,_515);
},fromComputedStyle:function(elem,_517,_518){
var d=MochiKit.DOM;
var cls=MochiKit.Color.Color;
for(elem=d.getElement(elem);elem;elem=elem.parentNode){
var _519=MochiKit.Style.computedStyle.apply(d,arguments);
if(!_519){
continue;
}
var _520=cls.fromString(_519);
if(!_520){
break;
}
if(_520.asRGB().a>0){
return _520;
}
}
return null;
},fromBackground:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"backgroundColor","background-color")||cls.whiteColor();
},fromText:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"color","color")||cls.blackColor();
},namedColors:function(){
return MochiKit.Base.clone(MochiKit.Color.Color._namedColors);
}});
MochiKit.Base.update(MochiKit.Color,{clampColorComponent:function(v,_521){
v*=_521;
if(v<0){
return 0;
}else{
if(v>_521){
return _521;
}else{
return v;
}
}
},_hslValue:function(n1,n2,hue){
if(hue>6){
hue-=6;
}else{
if(hue<0){
hue+=6;
}
}
var val;
if(hue<1){
val=n1+(n2-n1)*hue;
}else{
if(hue<3){
val=n2;
}else{
if(hue<4){
val=n1+(n2-n1)*(4-hue);
}else{
val=n1;
}
}
}
return val;
},hsvToRGB:function(hue,_524,_525,_526){
if(arguments.length==1){
var hsv=hue;
hue=hsv.h;
_524=hsv.s;
_525=hsv.v;
_526=hsv.a;
}
var red;
var _527;
var blue;
if(_524===0){
red=0;
_527=0;
blue=0;
}else{
var i=Math.floor(hue*6);
var f=(hue*6)-i;
var p=_525*(1-_524);
var q=_525*(1-(_524*f));
var t=_525*(1-(_524*(1-f)));
switch(i){
case 1:
red=q;
_527=_525;
blue=p;
break;
case 2:
red=p;
_527=_525;
blue=t;
break;
case 3:
red=p;
_527=q;
blue=_525;
break;
case 4:
red=t;
_527=p;
blue=_525;
break;
case 5:
red=_525;
_527=p;
blue=q;
break;
case 6:
case 0:
red=_525;
_527=t;
blue=p;
break;
}
}
return {r:red,g:_527,b:blue,a:_526};
},hslToRGB:function(hue,_529,_530,_531){
if(arguments.length==1){
var hsl=hue;
hue=hsl.h;
_529=hsl.s;
_530=hsl.l;
_531=hsl.a;
}
var red;
var _532;
var blue;
if(_529===0){
red=_530;
_532=_530;
blue=_530;
}else{
var m2;
if(_530<=0.5){
m2=_530*(1+_529);
}else{
m2=_530+_529-(_530*_529);
}
var m1=(2*_530)-m2;
var f=MochiKit.Color._hslValue;
var h6=hue*6;
red=f(m1,m2,h6+2);
_532=f(m1,m2,h6);
blue=f(m1,m2,h6-2);
}
return {r:red,g:_532,b:blue,a:_531};
},rgbToHSV:function(red,_536,blue,_537){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_536=rgb.g;
blue=rgb.b;
_537=rgb.a;
}
var max=Math.max(Math.max(red,_536),blue);
var min=Math.min(Math.min(red,_536),blue);
var hue;
var _540;
var _541=max;
if(min==max){
hue=0;
_540=0;
}else{
var _542=(max-min);
_540=_542/max;
if(red==max){
hue=(_536-blue)/_542;
}else{
if(_536==max){
hue=2+((blue-red)/_542);
}else{
hue=4+((red-_536)/_542);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_540,v:_541,a:_537};
},rgbToHSL:function(red,_543,blue,_544){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_543=rgb.g;
blue=rgb.b;
_544=rgb.a;
}
var max=Math.max(red,Math.max(_543,blue));
var min=Math.min(red,Math.min(_543,blue));
var hue;
var _545;
var _546=(max+min)/2;
var _547=max-min;
if(_547===0){
hue=0;
_545=0;
}else{
if(_546<=0.5){
_545=_547/(max+min);
}else{
_545=_547/(2-max-min);
}
if(red==max){
hue=(_543-blue)/_547;
}else{
if(_543==max){
hue=2+((blue-red)/_547);
}else{
hue=4+((red-_543)/_547);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_545,l:_546,a:_544};
},toColorPart:function(num){
num=Math.round(num);
var _548=num.toString(16);
if(num<16){
return "0"+_548;
}
return _548;
},__new__:function(){
var m=MochiKit.Base;
this.Color.fromRGBString=m.bind(this.Color._fromColorString,this.Color,"rgb","fromRGB",[1/255,1/255,1/255,1]);
this.Color.fromHSLString=m.bind(this.Color._fromColorString,this.Color,"hsl","fromHSL",[1/360,0.01,0.01,1]);
var _549=1/3;
var _550={black:[0,0,0],blue:[0,0,1],brown:[0.6,0.4,0.2],cyan:[0,1,1],darkGray:[_549,_549,_549],gray:[0.5,0.5,0.5],green:[0,1,0],lightGray:[2*_549,2*_549,2*_549],magenta:[1,0,1],orange:[1,0.5,0],purple:[0.5,0,0.5],red:[1,0,0],transparent:[0,0,0,0],white:[1,1,1],yellow:[1,1,0]};
var _551=function(name,r,g,b,a){
var rval=this.fromRGB(r,g,b,a);
this[name]=function(){
return rval;
};
return rval;
};
for(var k in _550){
var name=k+"Color";
var _553=m.concat([_551,this.Color,name],_550[k]);
this.Color[name]=m.bind.apply(null,_553);
}
var _554=function(){
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof Color)){
return false;
}
}
return true;
};
var _555=function(a,b){
return a.compareRGB(b);
};
m.nameFunctions(this);
m.registerComparator(this.Color.NAME,_554,_555);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
}});
MochiKit.Color.EXPORT=["Color"];
MochiKit.Color.EXPORT_OK=["clampColorComponent","rgbToHSL","hslToRGB","rgbToHSV","hsvToRGB","toColorPart"];
MochiKit.Color.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Color);
MochiKit.Color.Color._namedColors={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"};
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Signal");
dojo.require("MochiKit.Base");
dojo.require("MochiKit.DOM");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
JSAN.use("MochiKit.DOM",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Signal depends on MochiKit.Base!";
}
try{
if(typeof (MochiKit.DOM)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Signal depends on MochiKit.DOM!";
}
if(typeof (MochiKit.Signal)=="undefined"){
MochiKit.Signal={};
}
MochiKit.Signal.NAME="MochiKit.Signal";
MochiKit.Signal.VERSION="1.4";
MochiKit.Signal._observers=[];
MochiKit.Signal.Event=function(src,e){
this._event=e||window.event;
this._src=src;
};
MochiKit.Base.update(MochiKit.Signal.Event.prototype,{__repr__:function(){
var repr=MochiKit.Base.repr;
var str="{event(): "+repr(this.event())+", src(): "+repr(this.src())+", type(): "+repr(this.type())+", target(): "+repr(this.target())+", modifier(): "+"{alt: "+repr(this.modifier().alt)+", ctrl: "+repr(this.modifier().ctrl)+", meta: "+repr(this.modifier().meta)+", shift: "+repr(this.modifier().shift)+", any: "+repr(this.modifier().any)+"}";
if(this.type()&&this.type().indexOf("key")===0){
str+=", key(): {code: "+repr(this.key().code)+", string: "+repr(this.key().string)+"}";
}
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
str+=", mouse(): {page: "+repr(this.mouse().page)+", client: "+repr(this.mouse().client);
if(this.type()!="mousemove"){
str+=", button: {left: "+repr(this.mouse().button.left)+", middle: "+repr(this.mouse().button.middle)+", right: "+repr(this.mouse().button.right)+"}}";
}else{
str+="}";
}
}
if(this.type()=="mouseover"||this.type()=="mouseout"){
str+=", relatedTarget(): "+repr(this.relatedTarget());
}
str+="}";
return str;
},toString:function(){
return this.__repr__();
},src:function(){
return this._src;
},event:function(){
return this._event;
},type:function(){
return this._event.type||undefined;
},target:function(){
return this._event.target||this._event.srcElement;
},relatedTarget:function(){
if(this.type()=="mouseover"){
return (this._event.relatedTarget||this._event.fromElement);
}else{
if(this.type()=="mouseout"){
return (this._event.relatedTarget||this._event.toElement);
}
}
return undefined;
},modifier:function(){
var m={};
m.alt=this._event.altKey;
m.ctrl=this._event.ctrlKey;
m.meta=this._event.metaKey||false;
m.shift=this._event.shiftKey;
m.any=m.alt||m.ctrl||m.shift||m.meta;
return m;
},key:function(){
var k={};
if(this.type()&&this.type().indexOf("key")===0){
if(this.type()=="keydown"||this.type()=="keyup"){
k.code=this._event.keyCode;
k.string=(MochiKit.Signal._specialKeys[k.code]||"KEY_UNKNOWN");
return k;
}else{
if(this.type()=="keypress"){
k.code=0;
k.string="";
if(typeof (this._event.charCode)!="undefined"&&this._event.charCode!==0&&!MochiKit.Signal._specialMacKeys[this._event.charCode]){
k.code=this._event.charCode;
k.string=String.fromCharCode(k.code);
}else{
if(this._event.keyCode&&typeof (this._event.charCode)=="undefined"){
k.code=this._event.keyCode;
k.string=String.fromCharCode(k.code);
}
}
return k;
}
}
}
return undefined;
},mouse:function(){
var m={};
var e=this._event;
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
m.client=new MochiKit.Style.Coordinates(0,0);
if(e.clientX||e.clientY){
m.client.x=(!e.clientX||e.clientX<0)?0:e.clientX;
m.client.y=(!e.clientY||e.clientY<0)?0:e.clientY;
}
m.page=new MochiKit.Style.Coordinates(0,0);
if(e.pageX||e.pageY){
m.page.x=(!e.pageX||e.pageX<0)?0:e.pageX;
m.page.y=(!e.pageY||e.pageY<0)?0:e.pageY;
}else{
var de=MochiKit.DOM._document.documentElement;
var b=MochiKit.DOM._document.body;
m.page.x=e.clientX+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||b.clientLeft);
m.page.y=e.clientY+(de.scrollTop||b.scrollTop)-(de.clientTop||b.clientTop);
}
if(this.type()!="mousemove"){
m.button={};
m.button.left=false;
m.button.right=false;
m.button.middle=false;
if(e.which){
m.button.left=(e.which==1);
m.button.middle=(e.which==2);
m.button.right=(e.which==3);
}else{
m.button.left=!!(e.button&1);
m.button.right=!!(e.button&2);
m.button.middle=!!(e.button&4);
}
}
return m;
}
return undefined;
},stop:function(){
this.stopPropagation();
this.preventDefault();
},stopPropagation:function(){
if(this._event.stopPropagation){
this._event.stopPropagation();
}else{
this._event.cancelBubble=true;
}
},preventDefault:function(){
if(this._event.preventDefault){
this._event.preventDefault();
}else{
this._event.returnValue=false;
}
}});
MochiKit.Signal._specialMacKeys={3:"KEY_ENTER",63289:"KEY_NUM_PAD_CLEAR",63276:"KEY_PAGE_UP",63277:"KEY_PAGE_DOWN",63275:"KEY_END",63273:"KEY_HOME",63234:"KEY_ARROW_LEFT",63232:"KEY_ARROW_UP",63235:"KEY_ARROW_RIGHT",63233:"KEY_ARROW_DOWN",63302:"KEY_INSERT",63272:"KEY_DELETE"};
for(i=63236;i<=63242;i++){
MochiKit.Signal._specialMacKeys[i]="KEY_F"+(i-63236+1);
}
MochiKit.Signal._specialKeys={8:"KEY_BACKSPACE",9:"KEY_TAB",12:"KEY_NUM_PAD_CLEAR",13:"KEY_ENTER",16:"KEY_SHIFT",17:"KEY_CTRL",18:"KEY_ALT",19:"KEY_PAUSE",20:"KEY_CAPS_LOCK",27:"KEY_ESCAPE",32:"KEY_SPACEBAR",33:"KEY_PAGE_UP",34:"KEY_PAGE_DOWN",35:"KEY_END",36:"KEY_HOME",37:"KEY_ARROW_LEFT",38:"KEY_ARROW_UP",39:"KEY_ARROW_RIGHT",40:"KEY_ARROW_DOWN",44:"KEY_PRINT_SCREEN",45:"KEY_INSERT",46:"KEY_DELETE",59:"KEY_SEMICOLON",91:"KEY_WINDOWS_LEFT",92:"KEY_WINDOWS_RIGHT",93:"KEY_SELECT",106:"KEY_NUM_PAD_ASTERISK",107:"KEY_NUM_PAD_PLUS_SIGN",109:"KEY_NUM_PAD_HYPHEN-MINUS",110:"KEY_NUM_PAD_FULL_STOP",111:"KEY_NUM_PAD_SOLIDUS",144:"KEY_NUM_LOCK",145:"KEY_SCROLL_LOCK",186:"KEY_SEMICOLON",187:"KEY_EQUALS_SIGN",188:"KEY_COMMA",189:"KEY_HYPHEN-MINUS",190:"KEY_FULL_STOP",191:"KEY_SOLIDUS",192:"KEY_GRAVE_ACCENT",219:"KEY_LEFT_SQUARE_BRACKET",220:"KEY_REVERSE_SOLIDUS",221:"KEY_RIGHT_SQUARE_BRACKET",222:"KEY_APOSTROPHE"};
for(var i=48;i<=57;i++){
MochiKit.Signal._specialKeys[i]="KEY_"+(i-48);
}
for(i=65;i<=90;i++){
MochiKit.Signal._specialKeys[i]="KEY_"+String.fromCharCode(i);
}
for(i=96;i<=105;i++){
MochiKit.Signal._specialKeys[i]="KEY_NUM_PAD_"+(i-96);
}
for(i=112;i<=123;i++){
MochiKit.Signal._specialKeys[i]="KEY_F"+(i-112+1);
}
MochiKit.Base.update(MochiKit.Signal,{__repr__:function(){
return "["+this.NAME+" "+this.VERSION+"]";
},toString:function(){
return this.__repr__();
},_unloadCache:function(){
var self=MochiKit.Signal;
var _556=self._observers;
for(var i=0;i<_556.length;i++){
self._disconnect(_556[i]);
}
delete self._observers;
try{
window.onload=undefined;
}
catch(e){
}
try{
window.onunload=undefined;
}
catch(e){
}
},_listener:function(src,func,obj,_557){
var E=MochiKit.Signal.Event;
if(!_557){
return MochiKit.Base.bind(func,obj);
}
obj=obj||src;
if(typeof (func)=="string"){
return function(_559){
obj[func].apply(obj,[new E(src,_559)]);
};
}else{
return function(_560){
func.apply(obj,[new E(src,_560)]);
};
}
},connect:function(src,sig,_562,_563){
src=MochiKit.DOM.getElement(src);
var self=MochiKit.Signal;
if(typeof (sig)!="string"){
throw new Error("'sig' must be a string");
}
var obj=null;
var func=null;
if(typeof (_563)!="undefined"){
obj=_562;
func=_563;
if(typeof (_563)=="string"){
if(typeof (_562[_563])!="function"){
throw new Error("'funcOrStr' must be a function on 'objOrFunc'");
}
}else{
if(typeof (_563)!="function"){
throw new Error("'funcOrStr' must be a function or string");
}
}
}else{
if(typeof (_562)!="function"){
throw new Error("'objOrFunc' must be a function if 'funcOrStr' is not given");
}else{
func=_562;
}
}
if(typeof (obj)=="undefined"||obj===null){
obj=src;
}
var _564=!!(src.addEventListener||src.attachEvent);
var _565=self._listener(src,func,obj,_564);
if(src.addEventListener){
src.addEventListener(sig.substr(2),_565,false);
}else{
if(src.attachEvent){
src.attachEvent(sig,_565);
}
}
var _566=[src,sig,_565,_564,_562,_563];
self._observers.push(_566);
return _566;
},_disconnect:function(_567){
if(!_567[3]){
return;
}
var src=_567[0];
var sig=_567[1];
var _568=_567[2];
if(src.removeEventListener){
src.removeEventListener(sig.substr(2),_568,false);
}else{
if(src.detachEvent){
src.detachEvent(sig,_568);
}else{
throw new Error("'src' must be a DOM element");
}
}
},disconnect:function(_569){
var self=MochiKit.Signal;
var _570=self._observers;
var m=MochiKit.Base;
if(arguments.length>1){
var src=MochiKit.DOM.getElement(arguments[0]);
var sig=arguments[1];
var obj=arguments[2];
var func=arguments[3];
for(var i=_570.length-1;i>=0;i--){
var o=_570[i];
if(o[0]===src&&o[1]===sig&&o[4]===obj&&o[5]===func){
self._disconnect(o);
_570.splice(i,1);
return true;
}
}
}else{
var idx=m.findIdentical(_570,_569);
if(idx>=0){
self._disconnect(_569);
_570.splice(idx,1);
return true;
}
}
return false;
},disconnectAll:function(src,sig){
src=MochiKit.DOM.getElement(src);
var m=MochiKit.Base;
var _571=m.flattenArguments(m.extend(null,arguments,1));
var self=MochiKit.Signal;
var _572=self._disconnect;
var _573=self._observers;
if(_571.length===0){
for(var i=_573.length-1;i>=0;i--){
var _574=_573[i];
if(_574[0]===src){
_572(_574);
_573.splice(i,1);
}
}
}else{
var sigs={};
for(var i=0;i<_571.length;i++){
sigs[_571[i]]=true;
}
for(var i=_573.length-1;i>=0;i--){
var _574=_573[i];
if(_574[0]===src&&_574[1] in sigs){
_572(_574);
_573.splice(i,1);
}
}
}
},signal:function(src,sig){
var _576=MochiKit.Signal._observers;
src=MochiKit.DOM.getElement(src);
var args=MochiKit.Base.extend(null,arguments,2);
var _577=[];
for(var i=0;i<_576.length;i++){
var _578=_576[i];
if(_578[0]===src&&_578[1]===sig){
try{
_578[2].apply(src,args);
}
catch(e){
_577.push(e);
}
}
}
if(_577.length==1){
throw _577[0];
}else{
if(_577.length>1){
var e=new Error("Multiple errors thrown in handling 'sig', see errors property");
e.errors=_577;
throw e;
}
}
}});
MochiKit.Signal.EXPORT_OK=[];
MochiKit.Signal.EXPORT=["connect","disconnect","signal","disconnectAll"];
MochiKit.Signal.__new__=function(win){
var m=MochiKit.Base;
this._document=document;
this._window=win;
try{
this.connect(window,"onunload",this._unloadCache);
}
catch(e){
}
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Signal.__new__(this);
if(!MochiKit.__compat__){
connect=MochiKit.Signal.connect;
disconnect=MochiKit.Signal.disconnect;
disconnectAll=MochiKit.Signal.disconnectAll;
signal=MochiKit.Signal.signal;
}
MochiKit.Base._exportSymbols(this,MochiKit.Signal);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Visual");
dojo.require("MochiKit.Base");
dojo.require("MochiKit.DOM");
dojo.require("MochiKit.Color");
dojo.require("MochiKit.Iter");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
JSAN.use("MochiKit.DOM",[]);
JSAN.use("MochiKit.Color",[]);
JSAN.use("MochiKit.Iter",[]);
}
try{
if(typeof (MochiKit.Base)==="undefined"||typeof (MochiKit.DOM)==="undefined"||typeof (MochiKit.Color)==="undefined"||typeof (MochiKit.Iter)==="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Visual depends on MochiKit.Base, MochiKit.DOM, MochiKit.Color and MochiKit.Iter!";
}
if(typeof (MochiKit.Visual)=="undefined"){
MochiKit.Visual={};
}
MochiKit.Visual.NAME="MochiKit.Visual";
MochiKit.Visual.VERSION="1.4";
MochiKit.Visual.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Visual.toString=function(){
return this.__repr__();
};
MochiKit.Visual._RoundCorners=function(e,_579){
e=MochiKit.DOM.getElement(e);
this._setOptions(_579);
if(this.options.__unstable__wrapElement){
e=this._doWrap(e);
}
var _580=this.options.color;
var C=MochiKit.Color.Color;
if(this.options.color==="fromElement"){
_580=C.fromBackground(e);
}else{
if(!(_580 instanceof C)){
_580=C.fromString(_580);
}
}
this.isTransparent=(_580.asRGB().a<=0);
var _582=this.options.bgColor;
if(this.options.bgColor==="fromParent"){
_582=C.fromBackground(e.offsetParent);
}else{
if(!(_582 instanceof C)){
_582=C.fromString(_582);
}
}
this._roundCornersImpl(e,_580,_582);
};
MochiKit.Visual._RoundCorners.prototype={_doWrap:function(e){
var _583=e.parentNode;
var doc=MochiKit.DOM.currentDocument();
if(typeof (doc.defaultView)==="undefined"||doc.defaultView===null){
return e;
}
var _584=doc.defaultView.getComputedStyle(e,null);
if(typeof (_584)==="undefined"||_584===null){
return e;
}
var _585=MochiKit.DOM.DIV({"style":{display:"block",marginTop:_584.getPropertyValue("padding-top"),marginRight:_584.getPropertyValue("padding-right"),marginBottom:_584.getPropertyValue("padding-bottom"),marginLeft:_584.getPropertyValue("padding-left"),padding:"0px"}});
_585.innerHTML=e.innerHTML;
e.innerHTML="";
e.appendChild(_585);
return e;
},_roundCornersImpl:function(e,_586,_587){
if(this.options.border){
this._renderBorder(e,_587);
}
if(this._isTopRounded()){
this._roundTopCorners(e,_586,_587);
}
if(this._isBottomRounded()){
this._roundBottomCorners(e,_586,_587);
}
},_renderBorder:function(el,_588){
var _589="1px solid "+this._borderColor(_588);
var _590="border-left: "+_589;
var _591="border-right: "+_589;
var _592="style='"+_590+";"+_591+"'";
el.innerHTML="<div "+_592+">"+el.innerHTML+"</div>";
},_roundTopCorners:function(el,_593,_594){
var _595=this._createCorner(_594);
for(var i=0;i<this.options.numSlices;i++){
_595.appendChild(this._createCornerSlice(_593,_594,i,"top"));
}
el.style.paddingTop=0;
el.insertBefore(_595,el.firstChild);
},_roundBottomCorners:function(el,_596,_597){
var _598=this._createCorner(_597);
for(var i=(this.options.numSlices-1);i>=0;i--){
_598.appendChild(this._createCornerSlice(_596,_597,i,"bottom"));
}
el.style.paddingBottom=0;
el.appendChild(_598);
},_createCorner:function(_599){
var dom=MochiKit.DOM;
return dom.DIV({style:{backgroundColor:_599.toString()}});
},_createCornerSlice:function(_600,_601,n,_602){
var _603=MochiKit.DOM.SPAN();
var _604=_603.style;
_604.backgroundColor=_600.toString();
_604.display="block";
_604.height="1px";
_604.overflow="hidden";
_604.fontSize="1px";
var _605=this._borderColor(_600,_601);
if(this.options.border&&n===0){
_604.borderTopStyle="solid";
_604.borderTopWidth="1px";
_604.borderLeftWidth="0px";
_604.borderRightWidth="0px";
_604.borderBottomWidth="0px";
_604.height="0px";
_604.borderColor=_605.toString();
}else{
if(_605){
_604.borderColor=_605.toString();
_604.borderStyle="solid";
_604.borderWidth="0px 1px";
}
}
if(!this.options.compact&&(n==(this.options.numSlices-1))){
_604.height="2px";
}
this._setMargin(_603,n,_602);
this._setBorder(_603,n,_602);
return _603;
},_setOptions:function(_606){
this.options={corners:"all",color:"fromElement",bgColor:"fromParent",blend:true,border:false,compact:false,__unstable__wrapElement:false};
MochiKit.Base.update(this.options,_606);
this.options.numSlices=(this.options.compact?2:4);
},_whichSideTop:function(){
var _607=this.options.corners;
if(this._hasString(_607,"all","top")){
return "";
}
var _608=(_607.indexOf("tl")!=-1);
var _609=(_607.indexOf("tr")!=-1);
if(_608&&_609){
return "";
}
if(_608){
return "left";
}
if(_609){
return "right";
}
return "";
},_whichSideBottom:function(){
var _610=this.options.corners;
if(this._hasString(_610,"all","bottom")){
return "";
}
var _611=(_610.indexOf("bl")!=-1);
var _612=(_610.indexOf("br")!=-1);
if(_611&&_612){
return "";
}
if(_611){
return "left";
}
if(_612){
return "right";
}
return "";
},_borderColor:function(_613,_614){
if(_613=="transparent"){
return _614;
}else{
if(this.options.border){
return this.options.border;
}else{
if(this.options.blend){
return _614.blendedColor(_613);
}
}
}
return "";
},_setMargin:function(el,n,_615){
var _616=this._marginSize(n)+"px";
var _617=(_615=="top"?this._whichSideTop():this._whichSideBottom());
var _618=el.style;
if(_617=="left"){
_618.marginLeft=_616;
_618.marginRight="0px";
}else{
if(_617=="right"){
_618.marginRight=_616;
_618.marginLeft="0px";
}else{
_618.marginLeft=_616;
_618.marginRight=_616;
}
}
},_setBorder:function(el,n,_619){
var _620=this._borderSize(n)+"px";
var _621=(_619=="top"?this._whichSideTop():this._whichSideBottom());
var _622=el.style;
if(_621=="left"){
_622.borderLeftWidth=_620;
_622.borderRightWidth="0px";
}else{
if(_621=="right"){
_622.borderRightWidth=_620;
_622.borderLeftWidth="0px";
}else{
_622.borderLeftWidth=_620;
_622.borderRightWidth=_620;
}
}
},_marginSize:function(n){
if(this.isTransparent){
return 0;
}
var o=this.options;
if(o.compact&&o.blend){
var _623=[1,0];
return _623[n];
}else{
if(o.compact){
var _624=[2,1];
return _624[n];
}else{
if(o.blend){
var _625=[3,2,1,0];
return _625[n];
}else{
var _626=[5,3,2,1];
return _626[n];
}
}
}
},_borderSize:function(n){
var o=this.options;
var _627;
if(o.compact&&(o.blend||this.isTransparent)){
return 1;
}else{
if(o.compact){
_627=[1,0];
}else{
if(o.blend){
_627=[2,1,1,1];
}else{
if(o.border){
_627=[0,2,0,0];
}else{
if(this.isTransparent){
_627=[5,3,2,1];
}else{
return 0;
}
}
}
}
}
return _627[n];
},_hasString:function(str){
for(var i=1;i<arguments.length;i++){
if(str.indexOf(arguments[i])!=-1){
return true;
}
}
return false;
},_isTopRounded:function(){
return this._hasString(this.options.corners,"all","top","tl","tr");
},_isBottomRounded:function(){
return this._hasString(this.options.corners,"all","bottom","bl","br");
},_hasSingleTextChild:function(el){
return (el.childNodes.length==1&&el.childNodes[0].nodeType==3);
}};
MochiKit.Visual.roundElement=function(e,_628){
new MochiKit.Visual._RoundCorners(e,_628);
};
MochiKit.Visual.roundClass=function(_629,_630,_631){
var _632=MochiKit.DOM.getElementsByTagAndClassName(_629,_630);
for(var i=0;i<_632.length;i++){
MochiKit.Visual.roundElement(_632[i],_631);
}
};
MochiKit.Visual.tagifyText=function(_633,_634){
var _634=_634||"position:relative";
if(MochiKit.Base.isIE()){
_634+=";zoom:1";
}
_633=MochiKit.DOM.getElement(_633);
var fe=MochiKit.Iter.forEach;
fe(_633.childNodes,function(_636){
if(_636.nodeType==3){
fe(_636.nodeValue.split(""),function(_637){
_633.insertBefore(MochiKit.DOM.SPAN({style:_634},_637==" "?String.fromCharCode(160):_637),_636);
});
MochiKit.DOM.removeElement(_636);
}
});
};
MochiKit.Visual.forceRerendering=function(_638){
try{
_638=MochiKit.DOM.getElement(_638);
var n=document.createTextNode(" ");
_638.appendChild(n);
_638.removeChild(n);
}
catch(e){
}
};
MochiKit.Visual.multiple=function(_639,_640,_641){
_641=MochiKit.Base.update({speed:0.1,delay:0},_641||{});
var _642=_641.delay;
var _643=0;
MochiKit.Iter.forEach(_639,function(_644){
_641.delay=_643*_641.speed+_642;
new _640(_644,_641);
_643+=1;
});
};
MochiKit.Visual.PAIRS={"slide":["slideDown","slideUp"],"blind":["blindDown","blindUp"],"appear":["appear","fade"],"size":["grow","shrink"]};
MochiKit.Visual.toggle=function(_645,_646,_647){
_645=MochiKit.DOM.getElement(_645);
_646=(_646||"appear").toLowerCase();
_647=MochiKit.Base.update({queue:{position:"end",scope:(_645.id||"global"),limit:1}},_647||{});
var v=MochiKit.Visual;
v[MochiKit.DOM.isVisible(_645)?v.PAIRS[_646][1]:v.PAIRS[_646][0]](_645,_647);
};
MochiKit.Visual.Transitions={};
MochiKit.Visual.Transitions.linear=function(pos){
return pos;
};
MochiKit.Visual.Transitions.sinoidal=function(pos){
return (-Math.cos(pos*Math.PI)/2)+0.5;
};
MochiKit.Visual.Transitions.reverse=function(pos){
return 1-pos;
};
MochiKit.Visual.Transitions.flicker=function(pos){
return ((-Math.cos(pos*Math.PI)/4)+0.75)+Math.random()/4;
};
MochiKit.Visual.Transitions.wobble=function(pos){
return (-Math.cos(pos*Math.PI*(9*pos))/2)+0.5;
};
MochiKit.Visual.Transitions.pulse=function(pos){
return (Math.floor(pos*10)%2==0?(pos*10-Math.floor(pos*10)):1-(pos*10-Math.floor(pos*10)));
};
MochiKit.Visual.Transitions.none=function(pos){
return 0;
};
MochiKit.Visual.Transitions.full=function(pos){
return 1;
};
MochiKit.Visual.ScopedQueue=function(){
this.__init__();
};
MochiKit.Base.update(MochiKit.Visual.ScopedQueue.prototype,{__init__:function(){
this.effects=[];
this.interval=null;
},add:function(_649){
var _650=new Date().getTime();
var _651=(typeof (_649.options.queue)=="string")?_649.options.queue:_649.options.queue.position;
var fe=MochiKit.Iter.forEach;
switch(_651){
case "front":
fe(this.effects,function(e){
if(e.state=="idle"){
e.startOn+=_649.finishOn;
e.finishOn+=_649.finishOn;
}
});
break;
case "end":
var _652;
fe(this.effects,function(e){
var i=e.finishOn;
if(i>=(_652||i)){
_652=i;
}
});
_650=_652||_650;
break;
}
_649.startOn+=_650;
_649.finishOn+=_650;
if(!_649.options.queue.limit||this.effects.length<_649.options.queue.limit){
this.effects.push(_649);
}
if(!this.interval){
this.interval=setInterval(MochiKit.Base.bind(this.loop,this),40);
}
},remove:function(_653){
this.effects=MochiKit.Base.filter(function(e){
return e!=_653;
},this.effects);
if(this.effects.length==0){
clearInterval(this.interval);
this.interval=null;
}
},loop:function(){
var _654=new Date().getTime();
MochiKit.Iter.forEach(this.effects,function(_655){
_655.loop(_654);
});
}});
MochiKit.Visual.Queues={instances:{},get:function(_656){
if(typeof (_656)!="string"){
return _656;
}
if(!this.instances[_656]){
this.instances[_656]=new MochiKit.Visual.ScopedQueue();
}
return this.instances[_656];
}};
MochiKit.Visual.Queue=MochiKit.Visual.Queues.get("global");
MochiKit.Visual.DefaultOptions={transition:MochiKit.Visual.Transitions.sinoidal,duration:1,fps:25,sync:false,from:0,to:1,delay:0,queue:"parallel"};
MochiKit.Visual.Base=function(){
};
MochiKit.Visual.Base.prototype={__class__:MochiKit.Visual.Base,position:null,start:function(_657){
var v=MochiKit.Visual;
this.options=MochiKit.Base.setdefault(_657||{},v.DefaultOptions);
this.currentFrame=0;
this.state="idle";
this.startOn=this.options.delay*1000;
this.finishOn=this.startOn+(this.options.duration*1000);
this.event("beforeStart");
if(!this.options.sync){
v.Queues.get(typeof (this.options.queue)=="string"?"global":this.options.queue.scope).add(this);
}
},loop:function(_658){
if(_658>=this.startOn){
if(_658>=this.finishOn){
this.render(1);
this.cancel();
this.event("beforeFinish");
this.finish();
this.event("afterFinish");
return;
}
var pos=(_658-this.startOn)/(this.finishOn-this.startOn);
var _659=Math.round(pos*this.options.fps*this.options.duration);
if(_659>this.currentFrame){
this.render(pos);
this.currentFrame=_659;
}
}
},render:function(pos){
if(this.state=="idle"){
this.state="running";
this.event("beforeSetup");
this.setup();
this.event("afterSetup");
}
if(this.state=="running"){
if(this.options.transition){
pos=this.options.transition(pos);
}
pos*=(this.options.to-this.options.from);
pos+=this.options.from;
this.position=pos;
this.event("beforeUpdate");
this.update(pos);
this.event("afterUpdate");
}
},cancel:function(){
if(!this.options.sync){
MochiKit.Visual.Queues.get(typeof (this.options.queue)=="string"?"global":this.options.queue.scope).remove(this);
}
this.state="finished";
},setup:function(){
},finish:function(){
},update:function(_660){
},event:function(_661){
if(this.options[_661+"Internal"]){
this.options[_661+"Internal"](this);
}
if(this.options[_661]){
this.options[_661](this);
}
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.Visual.Parallel=function(_662,_663){
this.__init__(_662,_663);
};
MochiKit.Visual.Parallel.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Parallel.prototype,{__init__:function(_664,_665){
this.effects=_664||[];
this.start(_665);
},update:function(_666){
MochiKit.Iter.forEach(this.effects,function(_667){
_667.render(_666);
});
},finish:function(){
MochiKit.Iter.forEach(this.effects,function(_668){
_668.render(1);
_668.cancel();
_668.event("beforeFinish");
_668.finish();
_668.event("afterFinish");
});
}});
MochiKit.Visual.Opacity=function(_669,_670){
this.__init__(_669,_670);
};
MochiKit.Visual.Opacity.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Opacity.prototype,{__init__:function(_671,_672){
var b=MochiKit.Base;
var d=MochiKit.DOM;
this.element=d.getElement(_671);
if(b.isIE()&&(!this.element.hasLayout)){
d.setStyle(this.element,{zoom:1});
}
_672=b.update({from:d.getOpacity(this.element)||0,to:1},_672||{});
this.start(_672);
},update:function(_673){
MochiKit.DOM.setOpacity(this.element,_673);
}});
MochiKit.Visual.Move=function(_674,_675){
this.__init__(_674,_675);
};
MochiKit.Visual.Move.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Move.prototype,{__init__:function(_676,_677){
this.element=MochiKit.DOM.getElement(_676);
_677=MochiKit.Base.update({x:0,y:0,mode:"relative"},_677||{});
this.start(_677);
},setup:function(){
var d=MochiKit.DOM;
d.makePositioned(this.element);
var s=this.element.style;
var _678=s.visibility;
var _679=s.display;
if(_679=="none"){
s.visibility="hidden";
s.display="";
}
this.originalLeft=parseFloat(d.getStyle(this.element,"left")||"0");
this.originalTop=parseFloat(d.getStyle(this.element,"top")||"0");
if(this.options.mode=="absolute"){
this.options.x-=this.originalLeft;
this.options.y-=this.originalTop;
}
if(_679=="none"){
s.visibility=_678;
s.display=_679;
}
},update:function(_680){
MochiKit.DOM.setStyle(this.element,{left:this.options.x*_680+this.originalLeft+"px",top:this.options.y*_680+this.originalTop+"px"});
}});
MochiKit.Visual.Scale=function(_681,_682,_683){
this.__init__(_681,_682,_683);
};
MochiKit.Visual.Scale.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Scale.prototype,{__init__:function(_684,_685,_686){
this.element=MochiKit.DOM.getElement(_684);
_686=MochiKit.Base.update({scaleX:true,scaleY:true,scaleContent:true,scaleFromCenter:false,scaleMode:"box",scaleFrom:100,scaleTo:_685},_686||{});
this.start(_686);
},setup:function(){
this.restoreAfterFinish=this.options.restoreAfterFinish||false;
this.elementPositioning=MochiKit.DOM.getStyle(this.element,"position");
var fe=MochiKit.Iter.forEach;
var b=MochiKit.Base.bind;
this.originalStyle={};
fe(["top","left","width","height","fontSize"],b(function(k){
this.originalStyle[k]=this.element.style[k];
},this));
this.originalTop=this.element.offsetTop;
this.originalLeft=this.element.offsetLeft;
var _687=MochiKit.DOM.getStyle(this.element,"font-size")||"100%";
fe(["em","px","%"],b(function(_688){
if(_687.indexOf(_688)>0){
this.fontSize=parseFloat(_687);
this.fontSizeType=_688;
}
},this));
this.factor=(this.options.scaleTo-this.options.scaleFrom)/100;
if(/^content/.test(this.options.scaleMode)){
this.dims=[this.element.scrollHeight,this.element.scrollWidth];
}else{
if(this.options.scaleMode=="box"){
this.dims=[this.element.offsetHeight,this.element.offsetWidth];
}else{
this.dims=[this.options.scaleMode.originalHeight,this.options.scaleMode.originalWidth];
}
}
},update:function(_689){
var _690=(this.options.scaleFrom/100)+(this.factor*_689);
if(this.options.scaleContent&&this.fontSize){
MochiKit.DOM.setStyle(this.element,{fontSize:this.fontSize*_690+this.fontSizeType});
}
this.setDimensions(this.dims[0]*_690,this.dims[1]*_690);
},finish:function(){
if(this.restoreAfterFinish){
MochiKit.DOM.setStyle(this.element,this.originalStyle);
}
},setDimensions:function(_691,_692){
var d={};
if(this.options.scaleX){
d.width=_692+"px";
}
if(this.options.scaleY){
d.height=_691+"px";
}
if(this.options.scaleFromCenter){
var topd=(_691-this.dims[0])/2;
var _694=(_692-this.dims[1])/2;
if(this.elementPositioning=="absolute"){
if(this.options.scaleY){
d.top=this.originalTop-topd+"px";
}
if(this.options.scaleX){
d.left=this.originalLeft-_694+"px";
}
}else{
if(this.options.scaleY){
d.top=-topd+"px";
}
if(this.options.scaleX){
d.left=-_694+"px";
}
}
}
MochiKit.DOM.setStyle(this.element,d);
}});
MochiKit.Visual.Highlight=function(_695,_696){
this.__init__(_695,_696);
};
MochiKit.Visual.Highlight.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Highlight.prototype,{__init__:function(_697,_698){
this.element=MochiKit.DOM.getElement(_697);
_698=MochiKit.Base.update({startcolor:"#ffff99"},_698||{});
this.start(_698);
},setup:function(){
var d=MochiKit.DOM;
var b=MochiKit.Base;
if(d.getStyle(this.element,"display")=="none"){
this.cancel();
return;
}
this.oldStyle={backgroundImage:d.getStyle(this.element,"background-image")};
d.setStyle(this.element,{backgroundImage:"none"});
if(!this.options.endcolor){
this.options.endcolor=MochiKit.Color.Color.fromBackground(this.element).toHexString();
}
if(!this.options.restorecolor){
this.options.restorecolor=d.getStyle(this.element,"background-color");
}
this._base=b.map(b.bind(function(i){
return parseInt(this.options.startcolor.slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
this._delta=b.map(b.bind(function(i){
return parseInt(this.options.endcolor.slice(i*2+1,i*2+3),16)-this._base[i];
},this),[0,1,2]);
},update:function(_699){
var m="#";
MochiKit.Iter.forEach([0,1,2],MochiKit.Base.bind(function(i){
m+=MochiKit.Color.toColorPart(Math.round(this._base[i]+this._delta[i]*_699));
},this));
MochiKit.DOM.setStyle(this.element,{backgroundColor:m});
},finish:function(){
MochiKit.DOM.setStyle(this.element,MochiKit.Base.update(this.oldStyle,{backgroundColor:this.options.endcolor}));
}});
MochiKit.Visual.ScrollTo=function(_700,_701){
this.__init__(_700,_701);
};
MochiKit.Visual.ScrollTo.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.ScrollTo.prototype,{__init__:function(_702,_703){
this.element=MochiKit.DOM.getElement(_702);
this.start(_703||{});
},setup:function(){
var p=MochiKit.Position;
p.prepare();
var _704=p.cumulativeOffset(this.element);
if(this.options.offset){
_704.y+=this.options.offset;
}
var max;
if(window.innerHeight){
max=window.innerHeight-window.height;
}else{
if(document.documentElement&&document.documentElement.clientHeight){
max=document.documentElement.clientHeight-document.body.scrollHeight;
}else{
if(document.body){
max=document.body.clientHeight-document.body.scrollHeight;
}
}
}
this.scrollStart=p.windowOffset.y;
this.delta=(_704.y>max?max:_704.y)-this.scrollStart;
},update:function(_705){
var p=MochiKit.Position;
p.prepare();
window.scrollTo(p.windowOffset.x,this.scrollStart+(_705*this.delta));
}});
MochiKit.Visual.fade=function(_706,_707){
var d=MochiKit.DOM;
var _708=d.getInlineOpacity(_706);
_707=MochiKit.Base.update({from:d.getOpacity(_706)||1,to:0,afterFinishInternal:function(_709){
if(_709.options.to!==0){
return;
}
MochiKit.Style.hideElement(_709.element);
d.setStyle(_709.element,{opacity:_708});
}},_707||{});
return new MochiKit.Visual.Opacity(_706,_707);
};
MochiKit.Visual.appear=function(_710,_711){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
_711=MochiKit.Base.update({from:(d.getStyle(_710,"display")=="none"?0:d.getOpacity(_710)||0),to:1,afterFinishInternal:function(_712){
v.forceRerendering(_712.element);
},beforeSetup:function(_713){
d.setOpacity(_713.element,_713.options.from);
MochiKit.Style.showElement(_713.element);
}},_711||{});
return new v.Opacity(_710,_711);
};
MochiKit.Visual.puff=function(_714,_715){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
_714=d.getElement(_714);
var _716={opacity:d.getInlineOpacity(_714),position:d.getStyle(_714,"position")};
_715=MochiKit.Base.update({beforeSetupInternal:function(_717){
d.setStyle(_717.effects[0].element,{position:"absolute"});
},afterFinishInternal:function(_718){
MochiKit.Style.hideElement(_718.effects[0].element);
d.setStyle(_718.effects[0].element,_716);
}},_715||{});
return new v.Parallel([new v.Scale(_714,200,{sync:true,scaleFromCenter:true,scaleContent:true,restoreAfterFinish:true}),new v.Opacity(_714,{sync:true,to:0})],_715);
};
MochiKit.Visual.blindUp=function(_719,_720){
var d=MochiKit.DOM;
_719=d.getElement(_719);
d.makeClipping(_719);
_720=MochiKit.Base.update({scaleContent:false,scaleX:false,restoreAfterFinish:true,afterFinishInternal:function(_721){
MochiKit.Style.hideElement(_721.element);
d.undoClipping(_721.element);
}},_720||{});
return new MochiKit.Visual.Scale(_719,0,_720);
};
MochiKit.Visual.blindDown=function(_722,_723){
var d=MochiKit.DOM;
_722=d.getElement(_722);
var _724=MochiKit.Style.getElementDimensions(_722);
_723=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleFrom:0,scaleMode:{originalHeight:_724.h,originalWidth:_724.w},restoreAfterFinish:true,afterSetup:function(_725){
d.makeClipping(_725.element);
d.setStyle(_725.element,{height:"0px"});
MochiKit.Style.showElement(_725.element);
},afterFinishInternal:function(_726){
d.undoClipping(_726.element);
}},_723||{});
return new MochiKit.Visual.Scale(_722,100,_723);
};
MochiKit.Visual.switchOff=function(_727){
var d=MochiKit.DOM;
_727=d.getElement(_727);
var _728=d.getInlineOpacity(_727);
var _729={duration:0.3,scaleFromCenter:true,scaleX:false,scaleContent:false,restoreAfterFinish:true,beforeSetup:function(_730){
d.makePositioned(_730.element);
d.makeClipping(_730.element);
},afterFinishInternal:function(_731){
MochiKit.Style.hideElement(_731.element);
d.undoClipping(_731.element);
d.undoPositioned(_731.element);
d.setStyle(_731.element,{opacity:_728});
}};
var v=MochiKit.Visual;
return new v.appear(_727,{duration:0.4,from:0,transition:v.Transitions.flicker,afterFinishInternal:function(_732){
new v.Scale(_732.element,1,_729);
}});
};
MochiKit.Visual.dropOut=function(_733,_734){
var d=MochiKit.DOM;
_733=d.getElement(_733);
var _735={top:d.getStyle(_733,"top"),left:d.getStyle(_733,"left"),opacity:d.getInlineOpacity(_733)};
_734=MochiKit.Base.update({duration:0.5,beforeSetup:function(_736){
d.makePositioned(_736.effects[0].element);
},afterFinishInternal:function(_737){
MochiKit.Style.hideElement(_737.effects[0].element);
d.undoPositioned(_737.effects[0].element);
d.setStyle(_737.effects[0].element,_735);
}},_734||{});
var v=MochiKit.Visual;
return new v.Parallel([new v.Move(_733,{x:0,y:100,sync:true}),new v.Opacity(_733,{sync:true,to:0})],_734);
};
MochiKit.Visual.shake=function(_738){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
_738=d.getElement(_738);
var _739={top:d.getStyle(_738,"top"),left:d.getStyle(_738,"left")};
return new v.Move(_738,{x:20,y:0,duration:0.05,afterFinishInternal:function(_740){
new v.Move(_740.element,{x:-40,y:0,duration:0.1,afterFinishInternal:function(_740){
new v.Move(_740.element,{x:40,y:0,duration:0.1,afterFinishInternal:function(_740){
new v.Move(_740.element,{x:-40,y:0,duration:0.1,afterFinishInternal:function(_740){
new v.Move(_740.element,{x:40,y:0,duration:0.1,afterFinishInternal:function(_740){
new v.Move(_740.element,{x:-20,y:0,duration:0.05,afterFinishInternal:function(_740){
d.undoPositioned(_740.element);
d.setStyle(_740.element,_739);
}});
}});
}});
}});
}});
}});
};
MochiKit.Visual.slideDown=function(_741,_742){
var d=MochiKit.DOM;
var b=MochiKit.Base;
_741=d.getElement(_741);
d.cleanWhitespace(_741);
var _743=d.getStyle(_741.firstChild,"bottom")||0;
var _744=MochiKit.Style.getElementDimensions(_741);
_742=b.update({scaleContent:false,scaleX:false,scaleFrom:0,scaleMode:{originalHeight:_744.h,originalWidth:_744.w},restoreAfterFinish:true,afterSetup:function(_745){
d.makePositioned(_745.element);
d.makePositioned(_745.element.firstChild);
if(b.isOpera()){
d.setStyle(_745.element,{top:""});
}
d.makeClipping(_745.element);
d.setStyle(_745.element,{height:"0px"});
MochiKit.Style.showElement(_741);
},afterUpdateInternal:function(_746){
d.setStyle(_746.element.firstChild,{bottom:(_746.dims[0]-_746.element.clientHeight)+"px"});
},afterFinishInternal:function(_747){
d.undoClipping(_747.element);
if(b.isIE()){
d.undoPositioned(_747.element);
d.undoPositioned(_747.element.firstChild);
}else{
d.undoPositioned(_747.element.firstChild);
d.undoPositioned(_747.element);
}
d.setStyle(_747.element.firstChild,{bottom:_743});
}},_742||{});
return new MochiKit.Visual.Scale(_741,100,_742);
};
MochiKit.Visual.slideUp=function(_748,_749){
var d=MochiKit.DOM;
var b=MochiKit.Base;
_748=d.getElement(_748);
d.cleanWhitespace(_748);
var _750=d.getStyle(_748.firstChild,"bottom");
_749=b.update({scaleContent:false,scaleX:false,scaleMode:"box",scaleFrom:100,restoreAfterFinish:true,beforeStartInternal:function(_751){
d.makePositioned(_751.element);
d.makePositioned(_751.element.firstChild);
if(b.isOpera()){
d.setStyle(_751.element,{top:""});
}
d.makeClipping(_751.element);
MochiKit.Style.showElement(_748);
},afterUpdateInternal:function(_752){
d.setStyle(_752.element.firstChild,{bottom:(_752.dims[0]-_752.element.clientHeight)+"px"});
},afterFinishInternal:function(_753){
MochiKit.Style.hideElement(_753.element);
d.undoClipping(_753.element);
d.undoPositioned(_753.element.firstChild);
d.undoPositioned(_753.element);
d.setStyle(_753.element.firstChild,{bottom:_750});
}},_749||{});
return new MochiKit.Visual.Scale(_748,0,_749);
};
MochiKit.Visual.squish=function(_754,_755){
var d=MochiKit.DOM;
var b=MochiKit.Base;
_755=b.update({restoreAfterFinish:true,beforeSetup:function(_756){
d.makeClipping(_756.element);
},afterFinishInternal:function(_757){
MochiKit.Style.hideElement(_757.element);
d.undoClipping(_757.element);
}},_755||{});
return new MochiKit.Visual.Scale(_754,b.isOpera()?1:0,_755);
};
MochiKit.Visual.grow=function(_758,_759){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
_758=d.getElement(_758);
_759=MochiKit.Base.update({direction:"center",moveTransition:v.Transitions.sinoidal,scaleTransition:v.Transitions.sinoidal,opacityTransition:v.Transitions.full},_759||{});
var _760={top:_758.style.top,left:_758.style.left,height:_758.style.height,width:_758.style.width,opacity:d.getInlineOpacity(_758)};
var dims=MochiKit.Style.getElementDimensions(_758);
var _762,initialMoveY;
var _763,moveY;
switch(_759.direction){
case "top-left":
_762=initialMoveY=_763=moveY=0;
break;
case "top-right":
_762=dims.w;
initialMoveY=moveY=0;
_763=-dims.w;
break;
case "bottom-left":
_762=_763=0;
initialMoveY=dims.h;
moveY=-dims.h;
break;
case "bottom-right":
_762=dims.w;
initialMoveY=dims.h;
_763=-dims.w;
moveY=-dims.h;
break;
case "center":
_762=dims.w/2;
initialMoveY=dims.h/2;
_763=-dims.w/2;
moveY=-dims.h/2;
break;
}
var _764=MochiKit.Base.update({beforeSetup:function(_765){
d.setStyle(_765.effects[0].element,{height:"0px"});
MochiKit.Style.showElement(_765.effects[0].element);
},afterFinishInternal:function(_766){
d.undoClipping(_766.effects[0].element);
d.undoPositioned(_766.effects[0].element);
d.setStyle(_766.effects[0].element,_760);
}},_759||{});
return new v.Move(_758,{x:_762,y:initialMoveY,duration:0.01,beforeSetup:function(_767){
MochiKit.Style.hideElement(_767.element);
d.makeClipping(_767.element);
d.makePositioned(_767.element);
},afterFinishInternal:function(_768){
new v.Parallel([new v.Opacity(_768.element,{sync:true,to:1,from:0,transition:_759.opacityTransition}),new v.Move(_768.element,{x:_763,y:moveY,sync:true,transition:_759.moveTransition}),new v.Scale(_768.element,100,{scaleMode:{originalHeight:dims.h,originalWidth:dims.w},sync:true,scaleFrom:MochiKit.Base.isOpera()?1:0,transition:_759.scaleTransition,restoreAfterFinish:true})],_764);
}});
};
MochiKit.Visual.shrink=function(_769,_770){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
_769=d.getElement(_769);
_770=MochiKit.Base.update({direction:"center",moveTransition:v.Transitions.sinoidal,scaleTransition:v.Transitions.sinoidal,opacityTransition:v.Transitions.none},_770||{});
var _771={top:_769.style.top,left:_769.style.left,height:_769.style.height,width:_769.style.width,opacity:d.getInlineOpacity(_769)};
var dims=MochiKit.Style.getElementDimensions(_769);
var _772,moveY;
switch(_770.direction){
case "top-left":
_772=moveY=0;
break;
case "top-right":
_772=dims.w;
moveY=0;
break;
case "bottom-left":
_772=0;
moveY=dims.h;
break;
case "bottom-right":
_772=dims.w;
moveY=dims.h;
break;
case "center":
_772=dims.w/2;
moveY=dims.h/2;
break;
}
var _773=MochiKit.Base.update({beforeStartInternal:function(_774){
d.makePositioned(_774.effects[0].element);
d.makeClipping(_774.effects[0].element);
},afterFinishInternal:function(_775){
MochiKit.Style.hideElement(_775.effects[0].element);
d.undoClipping(_775.effects[0].element);
d.undoPositioned(_775.effects[0].element);
d.setStyle(_775.effects[0].element,_771);
}},_770||{});
return new v.Parallel([new v.Opacity(_769,{sync:true,to:0,from:1,transition:_770.opacityTransition}),new v.Scale(_769,MochiKit.Base.isOpera()?1:0,{sync:true,transition:_770.scaleTransition,restoreAfterFinish:true}),new v.Move(_769,{x:_772,y:moveY,sync:true,transition:_770.moveTransition})],_773);
};
MochiKit.Visual.pulsate=function(_776,_777){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var b=MochiKit.Base;
_776=d.getElement(_776);
_777=b.update({duration:3,from:0,afterFinishInternal:function(_778){
d.setStyle(_778.element,{opacity:oldOpacity});
}},_777||{});
var _779=d.getInlineOpacity(_776);
var _780=_777.transition||v.Transitions.sinoidal;
var _781=b.bind(function(pos){
return _780(1-v.Transitions.pulse(pos));
},_780);
b.bind(_781,_780);
return new v.Opacity(_776,b.update({transition:_781},_777));
};
MochiKit.Visual.fold=function(_782,_783){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
_782=d.getElement(_782);
var _784={top:_782.style.top,left:_782.style.left,width:_782.style.width,height:_782.style.height};
d.makeClipping(_782);
_783=MochiKit.Base.update({scaleContent:false,scaleX:false,afterFinishInternal:function(_785){
new v.Scale(_782,1,{scaleContent:false,scaleY:false,afterFinishInternal:function(_785){
MochiKit.Style.hideElement(_785.element);
d.undoClipping(_785.element);
d.setStyle(_785.element,_784);
}});
}},_783||{});
return new v.Scale(_782,5,_783);
};
MochiKit.Visual.Color=MochiKit.Color.Color;
MochiKit.Visual.getElementsComputedStyle=MochiKit.DOM.computedStyle;
MochiKit.Visual.__new__=function(){
var m=MochiKit.Base;
m.nameFunctions(this);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
};
MochiKit.Visual.EXPORT=["roundElement","roundClass","tagifyText","multiple","toggle","Base","Parallel","Opacity","Move","Scale","Highlight","ScrollTo","fade","appear","puff","blindUp","blindDown","switchOff","dropOut","shake","slideDown","slideUp","squish","grow","shrink","pulsate","fold"];
MochiKit.Visual.EXPORT_OK=["PAIRS"];
MochiKit.Visual.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Visual);
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.MochiKit)=="undefined"){
MochiKit.MochiKit={};
}
MochiKit.MochiKit.NAME="MochiKit.MochiKit";
MochiKit.MochiKit.VERSION="1.4";
MochiKit.MochiKit.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.MochiKit.toString=function(){
return this.__repr__();
};
MochiKit.MochiKit.SUBMODULES=["Base","Iter","Logging","DateTime","Format","Async","DOM","Style","LoggingPane","Color","Signal","Visual"];
if(typeof (JSAN)!="undefined"||typeof (dojo)!="undefined"){
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.MochiKit");
dojo.require("MochiKit.*");
}
if(typeof (JSAN)!="undefined"){
(function(lst){
for(var i=0;i<lst.length;i++){
JSAN.use("MochiKit."+lst[i],[]);
}
})(MochiKit.MochiKit.SUBMODULES);
}
(function(){
var _786=MochiKit.Base.extend;
var self=MochiKit.MochiKit;
var _787=self.SUBMODULES;
var _788=[];
var _789=[];
var _790={};
var i,k,m,all;
for(i=0;i<_787.length;i++){
m=MochiKit[_787[i]];
_786(_788,m.EXPORT);
_786(_789,m.EXPORT_OK);
for(k in m.EXPORT_TAGS){
_790[k]=_786(_790[k],m.EXPORT_TAGS[k]);
}
all=m.EXPORT_TAGS[":all"];
if(!all){
all=_786(null,m.EXPORT,m.EXPORT_OK);
}
var j;
for(j=0;j<all.length;j++){
k=all[j];
self[k]=m[k];
}
}
self.EXPORT=_788;
self.EXPORT_OK=_789;
self.EXPORT_TAGS=_790;
}());
}else{
if(typeof (MochiKit.__compat__)=="undefined"){
MochiKit.__compat__=true;
}
(function(){
if(typeof (document)=="undefined"){
return;
}
var _791=document.getElementsByTagName("script");
var _792="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
var base=null;
var _793=null;
var _794={};
var i;
for(i=0;i<_791.length;i++){
var src=_791[i].getAttribute("src");
if(!src){
continue;
}
_794[src]=true;
if(src.match(/MochiKit.js$/)){
base=src.substring(0,src.lastIndexOf("MochiKit.js"));
_793=_791[i];
}
}
if(base===null){
return;
}
var _795=MochiKit.MochiKit.SUBMODULES;
for(var i=0;i<_795.length;i++){
if(MochiKit[_795[i]]){
continue;
}
var uri=base+_795[i]+".js";
if(uri in _794){
continue;
}
if(document.documentElement&&document.documentElement.namespaceURI==_792){
var s=document.createElementNS(_792,"script");
s.setAttribute("id","MochiKit_"+base+_795[i]);
s.setAttribute("src",uri);
s.setAttribute("type","application/x-javascript");
_793.parentNode.appendChild(s);
}else{
document.write("<script src=\""+uri+"\" type=\"text/javascript\"></script>");
}
}
})();
}


