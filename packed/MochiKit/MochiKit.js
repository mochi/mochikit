/***

    MochiKit.MochiKit 1.4 : PACKED VERSION

    THIS FILE IS AUTOMATICALLY GENERATED.  If creating patches, please
    diff against the source tree, not this file.

    See <http://mochikit.com/> for documentation, downloads, license, etc.

    (c) 2005 Bob Ippolito.  All rights Reserved.

***/

if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Base");
}
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.Base)=="undefined"){
MochiKit.Base={};
}
if(typeof (MochiKit.__export__)=="undefined"){
MochiKit.__export__=(MochiKit.__compat__||(typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined"));
}
MochiKit.Base.VERSION="1.4";
MochiKit.Base.NAME="MochiKit.Base";
MochiKit.Base.update=function(_1,_2){
if(_1===null||_1===undefined){
_1={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
_1[k]=o[k];
}
}
}
return _1;
};
MochiKit.Base.update(MochiKit.Base,{__repr__:function(){
return "["+this.NAME+" "+this.VERSION+"]";
},toString:function(){
return this.__repr__();
},camelize:function(_6){
var _7=_6.split("-");
var cc=_7[0];
for(var i=1;i<_7.length;i++){
cc+=_7[i].charAt(0).toUpperCase()+_7[i].substring(1);
}
return cc;
},counter:function(n){
if(arguments.length===0){
n=1;
}
return function(){
return n++;
};
},clone:function(_b){
var me=arguments.callee;
if(arguments.length==1){
me.prototype=_b;
return new me();
}
},_deps:function(_d,_e){
if(!(_d in MochiKit)){
MochiKit[_d]={};
}
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit."+_d);
}
for(var i=0;i<_e.length;i++){
if(typeof (dojo)!="undefined"){
dojo.require("MochiKit."+_e[i]);
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit."+_e[i],[]);
}
if(!(_e[i] in MochiKit)){
throw "MochiKit."+_d+" depends on MochiKit."+_e[i]+"!";
}
}
},_flattenArray:function(res,lst){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(o instanceof Array){
arguments.callee(res,o);
}else{
res.push(o);
}
}
return res;
},flattenArray:function(lst){
return MochiKit.Base._flattenArray([],lst);
},flattenArguments:function(lst){
var res=[];
var m=MochiKit.Base;
var _18=m.extend(null,arguments);
while(_18.length){
var o=_18.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
for(var i=o.length-1;i>=0;i--){
_18.unshift(o[i]);
}
}else{
res.push(o);
}
}
return res;
},extend:function(_1b,obj,_1d){
if(!_1d){
_1d=0;
}
if(obj){
var l=obj.length;
if(typeof (l)!="number"){
if(typeof (MochiKit.Iter)!="undefined"){
obj=MochiKit.Iter.list(obj);
l=obj.length;
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(!_1b){
_1b=[];
}
for(var i=_1d;i<l;i++){
_1b.push(obj[i]);
}
}
return _1b;
},updatetree:function(_20,obj){
if(_20===null||_20===undefined){
_20={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
var v=o[k];
if(typeof (_20[k])=="object"&&typeof (v)=="object"){
arguments.callee(_20[k],v);
}else{
_20[k]=v;
}
}
}
}
return _20;
},setdefault:function(_26,obj){
if(_26===null||_26===undefined){
_26={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
for(var k in o){
if(!(k in _26)){
_26[k]=o[k];
}
}
}
return _26;
},keys:function(obj){
var _2c=[];
for(var _2d in obj){
_2c.push(_2d);
}
return _2c;
},values:function(obj){
var _2f=[];
for(var _30 in obj){
_2f.push(obj[_30]);
}
return _2f;
},items:function(obj){
var _32=[];
var e;
for(var _34 in obj){
var v;
try{
v=obj[_34];
}
catch(e){
continue;
}
_32.push([_34,v]);
}
return _32;
},_newNamedError:function(_36,_37,_38){
_38.prototype=new MochiKit.Base.NamedError(_36.NAME+"."+_37);
_36[_37]=_38;
},operator:{truth:function(a){
return !!a;
},lognot:function(a){
return !a;
},identity:function(a){
return a;
},not:function(a){
return ~a;
},neg:function(a){
return -a;
},add:function(a,b){
return a+b;
},sub:function(a,b){
return a-b;
},div:function(a,b){
return a/b;
},mod:function(a,b){
return a%b;
},mul:function(a,b){
return a*b;
},and:function(a,b){
return a&b;
},or:function(a,b){
return a|b;
},xor:function(a,b){
return a^b;
},lshift:function(a,b){
return a<<b;
},rshift:function(a,b){
return a>>b;
},zrshift:function(a,b){
return a>>>b;
},eq:function(a,b){
return a==b;
},ne:function(a,b){
return a!=b;
},gt:function(a,b){
return a>b;
},ge:function(a,b){
return a>=b;
},lt:function(a,b){
return a<b;
},le:function(a,b){
return a<=b;
},seq:function(a,b){
return a===b;
},sne:function(a,b){
return a!==b;
},ceq:function(a,b){
return MochiKit.Base.compare(a,b)===0;
},cne:function(a,b){
return MochiKit.Base.compare(a,b)!==0;
},cgt:function(a,b){
return MochiKit.Base.compare(a,b)==1;
},cge:function(a,b){
return MochiKit.Base.compare(a,b)!=-1;
},clt:function(a,b){
return MochiKit.Base.compare(a,b)==-1;
},cle:function(a,b){
return MochiKit.Base.compare(a,b)!=1;
},logand:function(a,b){
return a&&b;
},logor:function(a,b){
return a||b;
},contains:function(a,b){
return b in a;
}},forwardCall:function(_76){
return function(){
return this[_76].apply(this,arguments);
};
},itemgetter:function(_77){
return function(arg){
return arg[_77];
};
},typeMatcher:function(){
var _79={};
for(var i=0;i<arguments.length;i++){
var typ=arguments[i];
_79[typ]=typ;
}
return function(){
for(var i=0;i<arguments.length;i++){
if(!(typeof (arguments[i]) in _79)){
return false;
}
}
return true;
};
},isNull:function(){
for(var i=0;i<arguments.length;i++){
if(arguments[i]!==null){
return false;
}
}
return true;
},isUndefinedOrNull:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(typeof (o)=="undefined"||o===null)){
return false;
}
}
return true;
},isEmpty:function(obj){
return !MochiKit.Base.isNotEmpty.apply(this,arguments);
},isNotEmpty:function(obj){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(o&&o.length)){
return false;
}
}
return true;
},isArrayLike:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
var typ=typeof (o);
if((typ!="object"&&!(typ=="function"&&typeof (o.item)=="function"))||o===null||typeof (o.length)!="number"||o.nodeType===3||o.nodeType===4){
return false;
}
}
return true;
},isDateLike:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="object"||o===null||typeof (o.getTime)!="function"){
return false;
}
}
return true;
},xmap:function(fn){
if(fn===null){
return MochiKit.Base.extend(null,arguments,1);
}
var _8a=[];
for(var i=1;i<arguments.length;i++){
_8a.push(fn(arguments[i]));
}
return _8a;
},map:function(fn,lst){
var m=MochiKit.Base;
var itr=MochiKit.Iter;
var _90=m.isArrayLike;
if(arguments.length<=2){
if(!_90(lst)){
if(itr){
lst=itr.list(lst);
if(fn===null){
return lst;
}
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
return m.extend(null,lst);
}
var _91=[];
for(var i=0;i<lst.length;i++){
_91.push(fn(lst[i]));
}
return _91;
}else{
if(fn===null){
fn=Array;
}
var _93=null;
for(i=1;i<arguments.length;i++){
if(!_90(arguments[i])){
if(itr){
return itr.list(itr.imap.apply(null,arguments));
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
var l=arguments[i].length;
if(_93===null||_93>l){
_93=l;
}
}
_91=[];
for(i=0;i<_93;i++){
var _95=[];
for(var j=1;j<arguments.length;j++){
_95.push(arguments[j][i]);
}
_91.push(fn.apply(this,_95));
}
return _91;
}
},xfilter:function(fn){
var _98=[];
if(fn===null){
fn=MochiKit.Base.operator.truth;
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(fn(o)){
_98.push(o);
}
}
return _98;
},filter:function(fn,lst,_9d){
var _9e=[];
var m=MochiKit.Base;
if(!m.isArrayLike(lst)){
if(MochiKit.Iter){
lst=MochiKit.Iter.list(lst);
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
fn=m.operator.truth;
}
if(typeof (Array.prototype.filter)=="function"){
return Array.prototype.filter.call(lst,fn,_9d);
}else{
if(typeof (_9d)=="undefined"||_9d===null){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(fn(o)){
_9e.push(o);
}
}
}else{
for(i=0;i<lst.length;i++){
o=lst[i];
if(fn.call(_9d,o)){
_9e.push(o);
}
}
}
}
return _9e;
},_wrapDumbFunction:function(_a2){
return function(){
switch(arguments.length){
case 0:
return _a2();
case 1:
return _a2(arguments[0]);
case 2:
return _a2(arguments[0],arguments[1]);
case 3:
return _a2(arguments[0],arguments[1],arguments[2]);
}
var _a3=[];
for(var i=0;i<arguments.length;i++){
_a3.push("arguments["+i+"]");
}
return eval("(func("+_a3.join(",")+"))");
};
},methodcaller:function(_a5){
var _a6=MochiKit.Base.extend(null,arguments,1);
if(typeof (_a5)=="function"){
return function(obj){
return _a5.apply(obj,_a6);
};
}else{
return function(obj){
return obj[_a5].apply(obj,_a6);
};
}
},method:function(_a9,_aa){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([_aa,_a9],arguments,2));
},compose:function(f1,f2){
var _ae=[];
var m=MochiKit.Base;
if(arguments.length===0){
throw new TypeError("compose() requires at least one argument");
}
for(var i=0;i<arguments.length;i++){
var fn=arguments[i];
if(typeof (fn)!="function"){
throw new TypeError(m.repr(fn)+" is not a function");
}
_ae.push(fn);
}
return function(){
var _b2=arguments;
for(var i=_ae.length-1;i>=0;i--){
_b2=[_ae[i].apply(this,_b2)];
}
return _b2[0];
};
},bind:function(_b4,_b5){
if(typeof (_b4)=="string"){
_b4=_b5[_b4];
}
var _b6=_b4.im_func;
var _b7=_b4.im_preargs;
var _b8=_b4.im_self;
var m=MochiKit.Base;
if(typeof (_b4)=="function"&&typeof (_b4.apply)=="undefined"){
_b4=m._wrapDumbFunction(_b4);
}
if(typeof (_b6)!="function"){
_b6=_b4;
}
if(typeof (_b5)!="undefined"){
_b8=_b5;
}
if(typeof (_b7)=="undefined"){
_b7=[];
}else{
_b7=_b7.slice();
}
m.extend(_b7,arguments,2);
var _ba=function(){
var _bb=arguments;
var me=arguments.callee;
if(me.im_preargs.length>0){
_bb=m.concat(me.im_preargs,_bb);
}
var _bd=me.im_self;
if(!_bd){
_bd=this;
}
return me.im_func.apply(_bd,_bb);
};
_ba.im_self=_b8;
_ba.im_func=_b6;
_ba.im_preargs=_b7;
return _ba;
},bindMethods:function(_be){
var _bf=MochiKit.Base.bind;
for(var k in _be){
var _c1=_be[k];
if(typeof (_c1)=="function"){
_be[k]=_bf(_c1,_be);
}
}
},registerComparator:function(_c2,_c3,_c4,_c5){
MochiKit.Base.comparatorRegistry.register(_c2,_c3,_c4,_c5);
},_primitives:{"boolean":true,"string":true,"number":true},compare:function(a,b){
if(a==b){
return 0;
}
var _c8=(typeof (a)=="undefined"||a===null);
var _c9=(typeof (b)=="undefined"||b===null);
if(_c8&&_c9){
return 0;
}else{
if(_c8){
return -1;
}else{
if(_c9){
return 1;
}
}
}
var m=MochiKit.Base;
var _cb=m._primitives;
if(!(typeof (a) in _cb&&typeof (b) in _cb)){
try{
return m.comparatorRegistry.match(a,b);
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
}
if(a<b){
return -1;
}else{
if(a>b){
return 1;
}
}
var _cc=m.repr;
throw new TypeError(_cc(a)+" and "+_cc(b)+" can not be compared");
},compareDateLike:function(a,b){
return MochiKit.Base.compare(a.getTime(),b.getTime());
},compareArrayLike:function(a,b){
var _d1=MochiKit.Base.compare;
var _d2=a.length;
var _d3=0;
if(_d2>b.length){
_d3=1;
_d2=b.length;
}else{
if(_d2<b.length){
_d3=-1;
}
}
for(var i=0;i<_d2;i++){
var cmp=_d1(a[i],b[i]);
if(cmp){
return cmp;
}
}
return _d3;
},registerRepr:function(_d6,_d7,_d8,_d9){
MochiKit.Base.reprRegistry.register(_d6,_d7,_d8,_d9);
},repr:function(o){
if(typeof (o)=="undefined"){
return "undefined";
}else{
if(o===null){
return "null";
}
}
try{
if(typeof (o.__repr__)=="function"){
return o.__repr__();
}else{
if(typeof (o.repr)=="function"&&o.repr!=arguments.callee){
return o.repr();
}
}
return MochiKit.Base.reprRegistry.match(o);
}
catch(e){
if(typeof (o.NAME)=="string"&&(o.toString==Function.prototype.toString||o.toString==Object.prototype.toString)){
return o.NAME;
}
}
try{
var _db=(o+"");
}
catch(e){
return "["+typeof (o)+"]";
}
if(typeof (o)=="function"){
_db=_db.replace(/^\s+/,"").replace(/\s+/g," ");
var idx=_db.indexOf("{");
if(idx!=-1){
_db=_db.substr(0,idx)+"{...}";
}
}
return _db;
},reprArrayLike:function(o){
var m=MochiKit.Base;
return "["+m.map(m.repr,o).join(", ")+"]";
},reprString:function(o){
return ("\""+o.replace(/(["\\])/g,"\\$1")+"\"").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\r]/g,"\\r");
},reprNumber:function(o){
return o+"";
},registerJSON:function(_e1,_e2,_e3,_e4){
MochiKit.Base.jsonRegistry.register(_e1,_e2,_e3,_e4);
},evalJSON:function(){
return eval("("+MochiKit.Base._filterJSON(arguments[0])+")");
},_filterJSON:function(s){
var m=s.match(/^\s*\/\*(.*)\*\/\s*$/);
if(m){
return m[1];
}
return s;
},serializeJSON:function(o){
var _e8=typeof (o);
if(_e8=="number"||_e8=="boolean"){
return o+"";
}else{
if(o===null){
return "null";
}
}
var m=MochiKit.Base;
var _ea=m.reprString;
if(_e8=="string"){
return _ea(o);
}
var me=arguments.callee;
var _ec;
if(typeof (o.__json__)=="function"){
_ec=o.__json__();
if(o!==_ec){
return me(_ec);
}
}
if(typeof (o.json)=="function"){
_ec=o.json();
if(o!==_ec){
return me(_ec);
}
}
if(_e8!="function"&&typeof (o.length)=="number"){
var res=[];
for(var i=0;i<o.length;i++){
var val=me(o[i]);
if(typeof (val)!="string"){
val="undefined";
}
res.push(val);
}
return "["+res.join(", ")+"]";
}
try{
_ec=m.jsonRegistry.match(o);
if(o!==_ec){
return me(_ec);
}
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
if(_e8=="undefined"){
throw new TypeError("undefined can not be serialized as JSON");
}
if(_e8=="function"){
return null;
}
res=[];
for(var k in o){
var _f1;
if(typeof (k)=="number"){
_f1="\""+k+"\"";
}else{
if(typeof (k)=="string"){
_f1=_ea(k);
}else{
continue;
}
}
val=me(o[k]);
if(typeof (val)!="string"){
continue;
}
res.push(_f1+":"+val);
}
return "{"+res.join(", ")+"}";
},objEqual:function(a,b){
return (MochiKit.Base.compare(a,b)===0);
},arrayEqual:function(_f4,arr){
if(_f4.length!=arr.length){
return false;
}
return (MochiKit.Base.compare(_f4,arr)===0);
},concat:function(){
var _f6=[];
var _f7=MochiKit.Base.extend;
for(var i=0;i<arguments.length;i++){
_f7(_f6,arguments[i]);
}
return _f6;
},keyComparator:function(key){
var m=MochiKit.Base;
var _fb=m.compare;
if(arguments.length==1){
return function(a,b){
return _fb(a[key],b[key]);
};
}
var _fe=m.extend(null,arguments);
return function(a,b){
var rval=0;
for(var i=0;(rval===0)&&(i<_fe.length);i++){
var key=_fe[i];
rval=_fb(a[key],b[key]);
}
return rval;
};
},reverseKeyComparator:function(key){
var _105=MochiKit.Base.keyComparator.apply(this,arguments);
return function(a,b){
return _105(b,a);
};
},partial:function(func){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([func,undefined],arguments,1));
},listMinMax:function(_10a,lst){
if(lst.length===0){
return null;
}
var cur=lst[0];
var _10d=MochiKit.Base.compare;
for(var i=1;i<lst.length;i++){
var o=lst[i];
if(_10d(o,cur)==_10a){
cur=o;
}
}
return cur;
},objMax:function(){
return MochiKit.Base.listMinMax(1,arguments);
},objMin:function(){
return MochiKit.Base.listMinMax(-1,arguments);
},findIdentical:function(lst,_111,_112,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_112)=="undefined"||_112===null){
_112=0;
}
for(var i=_112;i<end;i++){
if(lst[i]===_111){
return i;
}
}
return -1;
},mean:function(){
var sum=0;
var m=MochiKit.Base;
var args=m.extend(null,arguments);
var _118=args.length;
while(args.length){
var o=args.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
_118+=o.length-1;
for(var i=o.length-1;i>=0;i--){
sum+=o[i];
}
}else{
sum+=o;
}
}
if(_118<=0){
throw new TypeError("mean() requires at least one argument");
}
return sum/_118;
},median:function(){
var data=MochiKit.Base.flattenArguments(arguments);
if(data.length===0){
throw new TypeError("median() requires at least one argument");
}
data.sort(compare);
if(data.length%2==0){
var _11c=data.length/2;
return (data[_11c]+data[_11c-1])/2;
}else{
return data[(data.length-1)/2];
}
},findValue:function(lst,_11e,_11f,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_11f)=="undefined"||_11f===null){
_11f=0;
}
var cmp=MochiKit.Base.compare;
for(var i=_11f;i<end;i++){
if(cmp(lst[i],_11e)===0){
return i;
}
}
return -1;
},nodeWalk:function(node,_124){
var _125=[node];
var _126=MochiKit.Base.extend;
while(_125.length){
var res=_124(_125.shift());
if(res){
_126(_125,res);
}
}
},nameFunctions:function(_128){
var base=_128.NAME;
if(typeof (base)=="undefined"){
base="";
}else{
base=base+".";
}
for(var name in _128){
var o=_128[name];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+name;
}
catch(e){
}
}
}
},queryString:function(_12c,_12d){
if(typeof (MochiKit.DOM)!="undefined"&&arguments.length==1&&(typeof (_12c)=="string"||(typeof (_12c.nodeType)!="undefined"&&_12c.nodeType>0))){
var kv=MochiKit.DOM.formContents(_12c);
_12c=kv[0];
_12d=kv[1];
}else{
if(arguments.length==1){
if(typeof (_12c.length)=="number"&&_12c.length==2){
return arguments.callee(_12c[0],_12c[1]);
}
var o=_12c;
_12c=[];
_12d=[];
for(var k in o){
var v=o[k];
if(typeof (v)=="function"){
continue;
}else{
if(MochiKit.Base.isArrayLike(v)){
for(var i=0;i<v.length;i++){
_12c.push(k);
_12d.push(v[i]);
}
}else{
_12c.push(k);
_12d.push(v);
}
}
}
}
}
var rval=[];
var len=Math.min(_12c.length,_12d.length);
var _135=MochiKit.Base.urlEncode;
for(var i=0;i<len;i++){
v=_12d[i];
if(typeof (v)!="undefined"&&v!==null){
rval.push(_135(_12c[i])+"="+_135(v));
}
}
return rval.join("&");
},parseQueryString:function(_136,_137){
var qstr=(_136.charAt(0)=="?")?_136.substring(1):_136;
var _139=qstr.replace(/\+/g,"%20").split(/\&amp\;|\&\#38\;|\&#x26;|\&/);
var o={};
var _13b;
if(typeof (decodeURIComponent)!="undefined"){
_13b=decodeURIComponent;
}else{
_13b=unescape;
}
if(_137){
for(var i=0;i<_139.length;i++){
var pair=_139[i].split("=");
var name=_13b(pair.shift());
if(!name){
continue;
}
var arr=o[name];
if(!(arr instanceof Array)){
arr=[];
o[name]=arr;
}
arr.push(_13b(pair.join("=")));
}
}else{
for(i=0;i<_139.length;i++){
pair=_139[i].split("=");
var name=pair.shift();
if(!name){
continue;
}
o[_13b(name)]=_13b(pair.join("="));
}
}
return o;
}});
MochiKit.Base.AdapterRegistry=function(){
this.pairs=[];
};
MochiKit.Base.AdapterRegistry.prototype={register:function(name,_141,wrap,_143){
if(_143){
this.pairs.unshift([name,_141,wrap]);
}else{
this.pairs.push([name,_141,wrap]);
}
},match:function(){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[1].apply(this,arguments)){
return pair[2].apply(this,arguments);
}
}
throw MochiKit.Base.NotFound;
},unregister:function(name){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[0]==name){
this.pairs.splice(i,1);
return true;
}
}
return false;
}};
MochiKit.Base.EXPORT=["flattenArray","noop","camelize","counter","clone","extend","update","updatetree","setdefault","keys","values","items","NamedError","operator","forwardCall","itemgetter","typeMatcher","isCallable","isUndefined","isUndefinedOrNull","isNull","isEmpty","isNotEmpty","isArrayLike","isDateLike","xmap","map","xfilter","filter","methodcaller","compose","bind","bindMethods","NotFound","AdapterRegistry","registerComparator","compare","registerRepr","repr","objEqual","arrayEqual","concat","keyComparator","reverseKeyComparator","partial","merge","listMinMax","listMax","listMin","objMax","objMin","nodeWalk","zip","urlEncode","queryString","serializeJSON","registerJSON","evalJSON","parseQueryString","findValue","findIdentical","flattenArguments","method","average","mean","median"];
MochiKit.Base.EXPORT_OK=["nameFunctions","comparatorRegistry","reprRegistry","jsonRegistry","compareDateLike","compareArrayLike","reprArrayLike","reprString","reprNumber"];
MochiKit.Base._exportSymbols=function(_149,_14a){
if(!MochiKit.__export__){
return;
}
var all=_14a.EXPORT_TAGS[":all"];
for(var i=0;i<all.length;i++){
_149[all[i]]=_14a[all[i]];
}
};
MochiKit.Base.__new__=function(){
var m=this;
m.noop=m.operator.identity;
m.forward=m.forwardCall;
m.find=m.findValue;
if(typeof (encodeURIComponent)!="undefined"){
m.urlEncode=function(_14e){
return encodeURIComponent(_14e).replace(/\'/g,"%27");
};
}else{
m.urlEncode=function(_14f){
return escape(_14f).replace(/\+/g,"%2B").replace(/\"/g,"%22").rval.replace(/\'/g,"%27");
};
}
m.NamedError=function(name){
this.message=name;
this.name=name;
};
m.NamedError.prototype=new Error();
m.update(m.NamedError.prototype,{repr:function(){
if(this.message&&this.message!=this.name){
return this.name+"("+m.repr(this.message)+")";
}else{
return this.name+"()";
}
},toString:m.forwardCall("repr")});
m.NotFound=new m.NamedError("MochiKit.Base.NotFound");
m.listMax=m.partial(m.listMinMax,1);
m.listMin=m.partial(m.listMinMax,-1);
m.isCallable=m.typeMatcher("function");
m.isUndefined=m.typeMatcher("undefined");
m.merge=m.partial(m.update,null);
m.zip=m.partial(m.map,null);
m.average=m.mean;
m.comparatorRegistry=new m.AdapterRegistry();
m.registerComparator("dateLike",m.isDateLike,m.compareDateLike);
m.registerComparator("arrayLike",m.isArrayLike,m.compareArrayLike);
m.reprRegistry=new m.AdapterRegistry();
m.registerRepr("arrayLike",m.isArrayLike,m.reprArrayLike);
m.registerRepr("string",m.typeMatcher("string"),m.reprString);
m.registerRepr("numbers",m.typeMatcher("number","boolean"),m.reprNumber);
m.jsonRegistry=new m.AdapterRegistry();
var all=m.concat(m.EXPORT,m.EXPORT_OK);
m.EXPORT_TAGS={":common":m.concat(m.EXPORT_OK),":all":all};
m.nameFunctions(this);
};
MochiKit.Base.__new__();
if(MochiKit.__export__){
compare=MochiKit.Base.compare;
compose=MochiKit.Base.compose;
serializeJSON=MochiKit.Base.serializeJSON;
mean=MochiKit.Base.mean;
median=MochiKit.Base.median;
}
MochiKit.Base._exportSymbols(this,MochiKit.Base);
MochiKit.Base._deps("Iter",["Base"]);
MochiKit.Iter.NAME="MochiKit.Iter";
MochiKit.Iter.VERSION="1.4";
MochiKit.Base.update(MochiKit.Iter,{__repr__:function(){
return "["+this.NAME+" "+this.VERSION+"]";
},toString:function(){
return this.__repr__();
},registerIteratorFactory:function(name,_153,_154,_155){
MochiKit.Iter.iteratorRegistry.register(name,_153,_154,_155);
},iter:function(_156,_157){
var self=MochiKit.Iter;
if(arguments.length==2){
return self.takewhile(function(a){
return a!=_157;
},_156);
}
if(typeof (_156.next)=="function"){
return _156;
}else{
if(typeof (_156.iter)=="function"){
return _156.iter();
}
}
try{
return self.iteratorRegistry.match(_156);
}
catch(e){
var m=MochiKit.Base;
if(e==m.NotFound){
e=new TypeError(typeof (_156)+": "+m.repr(_156)+" is not iterable");
}
throw e;
}
},count:function(n){
if(!n){
n=0;
}
var m=MochiKit.Base;
return {repr:function(){
return "count("+n+")";
},toString:m.forwardCall("repr"),next:m.counter(n)};
},cycle:function(p){
var self=MochiKit.Iter;
var m=MochiKit.Base;
var lst=[];
var _161=self.iter(p);
return {repr:function(){
return "cycle(...)";
},toString:m.forwardCall("repr"),next:function(){
try{
var rval=_161.next();
lst.push(rval);
return rval;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
if(lst.length===0){
this.next=function(){
throw self.StopIteration;
};
}else{
var i=-1;
this.next=function(){
i=(i+1)%lst.length;
return lst[i];
};
}
return this.next();
}
}};
},repeat:function(elem,n){
var m=MochiKit.Base;
if(typeof (n)=="undefined"){
return {repr:function(){
return "repeat("+m.repr(elem)+")";
},toString:m.forwardCall("repr"),next:function(){
return elem;
}};
}
return {repr:function(){
return "repeat("+m.repr(elem)+", "+n+")";
},toString:m.forwardCall("repr"),next:function(){
if(n<=0){
throw MochiKit.Iter.StopIteration;
}
n-=1;
return elem;
}};
},next:function(_167){
return _167.next();
},izip:function(p,q){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var next=self.next;
var _16d=m.map(self.iter,arguments);
return {repr:function(){
return "izip(...)";
},toString:m.forwardCall("repr"),next:function(){
return m.map(next,_16d);
}};
},ifilter:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilter(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(pred(rval)){
return rval;
}
}
return undefined;
}};
},ifilterfalse:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilterfalse(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
return rval;
}
}
return undefined;
}};
},islice:function(seq){
var self=MochiKit.Iter;
var m=MochiKit.Base;
seq=self.iter(seq);
var _179=0;
var stop=0;
var step=1;
var i=-1;
if(arguments.length==2){
stop=arguments[1];
}else{
if(arguments.length==3){
_179=arguments[1];
stop=arguments[2];
}else{
_179=arguments[1];
stop=arguments[2];
step=arguments[3];
}
}
return {repr:function(){
return "islice("+["...",_179,stop,step].join(", ")+")";
},toString:m.forwardCall("repr"),next:function(){
var rval;
while(i<_179){
rval=seq.next();
i++;
}
if(_179>=stop){
throw self.StopIteration;
}
_179+=step;
return rval;
}};
},imap:function(fun,p,q){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var _183=m.map(self.iter,m.extend(null,arguments,1));
var map=m.map;
var next=self.next;
return {repr:function(){
return "imap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(this,map(next,_183));
}};
},applymap:function(fun,seq,self){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
return {repr:function(){
return "applymap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(self,seq.next());
}};
},chain:function(p,q){
var self=MochiKit.Iter;
var m=MochiKit.Base;
if(arguments.length==1){
return self.iter(arguments[0]);
}
var _18e=m.map(self.iter,arguments);
return {repr:function(){
return "chain(...)";
},toString:m.forwardCall("repr"),next:function(){
while(_18e.length>1){
try{
var _18f=_18e[0].next();
return _18f;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
_18e.shift();
var _18f=_18e[0].next();
return _18f;
}
}
if(_18e.length==1){
var arg=_18e.shift();
this.next=m.bind("next",arg);
return this.next();
}
throw self.StopIteration;
}};
},takewhile:function(pred,seq){
var self=MochiKit.Iter;
seq=self.iter(seq);
return {repr:function(){
return "takewhile(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=seq.next();
if(!pred(rval)){
this.next=function(){
throw self.StopIteration;
};
this.next();
}
return rval;
}};
},dropwhile:function(pred,seq){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
var bind=m.bind;
return {"repr":function(){
return "dropwhile(...)";
},"toString":m.forwardCall("repr"),"next":function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
break;
}
}
this.next=bind("next",seq);
return rval;
}};
},_tee:function(_19a,sync,_19c){
sync.pos[_19a]=-1;
var m=MochiKit.Base;
var _19e=m.listMin;
return {repr:function(){
return "tee("+_19a+", ...)";
},toString:m.forwardCall("repr"),next:function(){
var rval;
var i=sync.pos[_19a];
if(i==sync.max){
rval=_19c.next();
sync.deque.push(rval);
sync.max+=1;
sync.pos[_19a]+=1;
}else{
rval=sync.deque[i-sync.min];
sync.pos[_19a]+=1;
if(i==sync.min&&_19e(sync.pos)!=sync.min){
sync.min+=1;
sync.deque.shift();
}
}
return rval;
}};
},tee:function(_1a1,n){
var rval=[];
var sync={"pos":[],"deque":[],"max":-1,"min":-1};
if(arguments.length==1||typeof (n)=="undefined"||n===null){
n=2;
}
var self=MochiKit.Iter;
_1a1=self.iter(_1a1);
var _tee=self._tee;
for(var i=0;i<n;i++){
rval.push(_tee(i,sync,_1a1));
}
return rval;
},list:function(_1a8){
var rval;
if(_1a8 instanceof Array){
return _1a8.slice();
}
if(typeof (_1a8)=="function"&&!(_1a8 instanceof Function)&&typeof (_1a8.length)=="number"){
rval=[];
for(var i=0;i<_1a8.length;i++){
rval.push(_1a8[i]);
}
return rval;
}
var self=MochiKit.Iter;
_1a8=self.iter(_1a8);
var rval=[];
var _1ac;
try{
while(true){
_1ac=_1a8.next();
rval.push(_1ac);
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return rval;
}
return undefined;
},reduce:function(fn,_1ae,_1af){
var i=0;
var x=_1af;
var self=MochiKit.Iter;
_1ae=self.iter(_1ae);
if(arguments.length<3){
try{
x=_1ae.next();
}
catch(e){
if(e==self.StopIteration){
e=new TypeError("reduce() of empty sequence with no initial value");
}
throw e;
}
i++;
}
try{
while(true){
x=fn(x,_1ae.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},range:function(){
var _1b3=0;
var stop=0;
var step=1;
if(arguments.length==1){
stop=arguments[0];
}else{
if(arguments.length==2){
_1b3=arguments[0];
stop=arguments[1];
}else{
if(arguments.length==3){
_1b3=arguments[0];
stop=arguments[1];
step=arguments[2];
}else{
throw new TypeError("range() takes 1, 2, or 3 arguments!");
}
}
}
if(step===0){
throw new TypeError("range() step must not be 0");
}
return {next:function(){
if((step>0&&_1b3>=stop)||(step<0&&_1b3<=stop)){
throw MochiKit.Iter.StopIteration;
}
var rval=_1b3;
_1b3+=step;
return rval;
},repr:function(){
return "range("+[_1b3,stop,step].join(", ")+")";
},toString:MochiKit.Base.forwardCall("repr")};
},sum:function(_1b7,_1b8){
if(typeof (_1b8)=="undefined"||_1b8===null){
_1b8=0;
}
var x=_1b8;
var self=MochiKit.Iter;
_1b7=self.iter(_1b7);
try{
while(true){
x+=_1b7.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},exhaust:function(_1bb){
var self=MochiKit.Iter;
_1bb=self.iter(_1bb);
try{
while(true){
_1bb.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
},forEach:function(_1bd,func,self){
var m=MochiKit.Base;
if(arguments.length>2){
func=m.bind(func,self);
}
if(m.isArrayLike(_1bd)){
try{
for(var i=0;i<_1bd.length;i++){
func(_1bd[i]);
}
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
}
}else{
self=MochiKit.Iter;
self.exhaust(self.imap(func,_1bd));
}
},every:function(_1c2,func){
var self=MochiKit.Iter;
try{
self.ifilterfalse(func,_1c2).next();
return false;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return true;
}
},sorted:function(_1c5,cmp){
var rval=MochiKit.Iter.list(_1c5);
if(arguments.length==1){
cmp=MochiKit.Base.compare;
}
rval.sort(cmp);
return rval;
},reversed:function(_1c8){
var rval=MochiKit.Iter.list(_1c8);
rval.reverse();
return rval;
},some:function(_1ca,func){
var self=MochiKit.Iter;
try{
self.ifilter(func,_1ca).next();
return true;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return false;
}
},iextend:function(lst,_1ce){
if(MochiKit.Base.isArrayLike(_1ce)){
for(var i=0;i<_1ce.length;i++){
lst.push(_1ce[i]);
}
}else{
var self=MochiKit.Iter;
_1ce=self.iter(_1ce);
try{
while(true){
lst.push(_1ce.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
}
return lst;
},groupby:function(_1d1,_1d2){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_1d2=m.operator.identity;
}
_1d1=self.iter(_1d1);
var pk=undefined;
var k=undefined;
var v;
function fetch(){
v=_1d1.next();
k=_1d2(v);
}
function eat(){
var ret=v;
v=undefined;
return ret;
}
var _1d9=true;
var _1da=m.compare;
return {repr:function(){
return "groupby(...)";
},next:function(){
while(_1da(k,pk)===0){
fetch();
if(_1d9){
_1d9=false;
break;
}
}
pk=k;
return [k,{next:function(){
if(v==undefined){
fetch();
}
if(_1da(k,pk)!==0){
throw self.StopIteration;
}
return eat();
}}];
}};
},groupby_as_array:function(_1db,_1dc){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_1dc=m.operator.identity;
}
_1db=self.iter(_1db);
var _1df=[];
var _1e0=true;
var _1e1;
var _1e2=m.compare;
while(true){
try{
var _1e3=_1db.next();
var key=_1dc(_1e3);
}
catch(e){
if(e==self.StopIteration){
break;
}
throw e;
}
if(_1e0||_1e2(key,_1e1)!==0){
var _1e5=[];
_1df.push([key,_1e5]);
}
_1e5.push(_1e3);
_1e0=false;
_1e1=key;
}
return _1df;
},arrayLikeIter:function(_1e6){
var i=0;
return {repr:function(){
return "arrayLikeIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(i>=_1e6.length){
throw MochiKit.Iter.StopIteration;
}
return _1e6[i++];
}};
},hasIterateNext:function(_1e8){
return (_1e8&&typeof (_1e8.iterateNext)=="function");
},iterateNextIter:function(_1e9){
return {repr:function(){
return "iterateNextIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=_1e9.iterateNext();
if(rval===null||rval===undefined){
throw MochiKit.Iter.StopIteration;
}
return rval;
}};
}});
MochiKit.Iter.EXPORT_OK=["iteratorRegistry","arrayLikeIter","hasIterateNext","iterateNextIter"];
MochiKit.Iter.EXPORT=["StopIteration","registerIteratorFactory","iter","count","cycle","repeat","next","izip","ifilter","ifilterfalse","islice","imap","applymap","chain","takewhile","dropwhile","tee","list","reduce","range","sum","exhaust","forEach","every","sorted","reversed","some","iextend","groupby","groupby_as_array"];
MochiKit.Iter.__new__=function(){
var m=MochiKit.Base;
if(typeof (StopIteration)!="undefined"){
this.StopIteration=StopIteration;
}else{
this.StopIteration=new m.NamedError("StopIteration");
}
this.iteratorRegistry=new m.AdapterRegistry();
this.registerIteratorFactory("arrayLike",m.isArrayLike,this.arrayLikeIter);
this.registerIteratorFactory("iterateNext",this.hasIterateNext,this.iterateNextIter);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Iter.__new__();
if(MochiKit.__export__){
reduce=MochiKit.Iter.reduce;
}
MochiKit.Base._exportSymbols(this,MochiKit.Iter);
MochiKit.Base._deps("Logging",["Base"]);
MochiKit.Logging.NAME="MochiKit.Logging";
MochiKit.Logging.VERSION="1.4";
MochiKit.Logging.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Logging.toString=function(){
return this.__repr__();
};
MochiKit.Logging.EXPORT=["LogLevel","LogMessage","Logger","alertListener","logger","log","logError","logDebug","logFatal","logWarning"];
MochiKit.Logging.EXPORT_OK=["logLevelAtLeast","isLogMessage","compareLogMessage"];
MochiKit.Logging.LogMessage=function(num,_1ed,info){
this.num=num;
this.level=_1ed;
this.info=info;
this.timestamp=new Date();
};
MochiKit.Logging.LogMessage.prototype={repr:function(){
var m=MochiKit.Base;
return "LogMessage("+m.map(m.repr,[this.num,this.level,this.info]).join(", ")+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Base.update(MochiKit.Logging,{logLevelAtLeast:function(_1f0){
var self=MochiKit.Logging;
if(typeof (_1f0)=="string"){
_1f0=self.LogLevel[_1f0];
}
return function(msg){
var _1f3=msg.level;
if(typeof (_1f3)=="string"){
_1f3=self.LogLevel[_1f3];
}
return _1f3>=_1f0;
};
},isLogMessage:function(){
var _1f4=MochiKit.Logging.LogMessage;
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof _1f4)){
return false;
}
}
return true;
},compareLogMessage:function(a,b){
return MochiKit.Base.compare([a.level,a.info],[b.level,b.info]);
},alertListener:function(msg){
alert("num: "+msg.num+"\nlevel: "+msg.level+"\ninfo: "+msg.info.join(" "));
}});
MochiKit.Logging.Logger=function(_1f9){
this.counter=0;
if(typeof (_1f9)=="undefined"||_1f9===null){
_1f9=-1;
}
this.maxSize=_1f9;
this._messages=[];
this.listeners={};
this.useNativeConsole=false;
};
MochiKit.Logging.Logger.prototype={clear:function(){
this._messages.splice(0,this._messages.length);
},logToConsole:function(msg){
if(typeof (window)!="undefined"&&window.console&&window.console.log){
window.console.log(msg.replace(/%/g,"\uff05"));
}else{
if(typeof (opera)!="undefined"&&opera.postError){
opera.postError(msg);
}else{
if(typeof (printfire)=="function"){
printfire(msg);
}else{
if(typeof (Debug)!="undefined"&&Debug.writeln){
Debug.writeln(msg);
}else{
if(typeof (debug)!="undefined"&&debug.trace){
debug.trace(msg);
}
}
}
}
}
},dispatchListeners:function(msg){
for(var k in this.listeners){
var pair=this.listeners[k];
if(pair.ident!=k||(pair[0]&&!pair[0](msg))){
continue;
}
pair[1](msg);
}
},addListener:function(_1fe,_1ff,_200){
if(typeof (_1ff)=="string"){
_1ff=MochiKit.Logging.logLevelAtLeast(_1ff);
}
var _201=[_1ff,_200];
_201.ident=_1fe;
this.listeners[_1fe]=_201;
},removeListener:function(_202){
delete this.listeners[_202];
},baseLog:function(_203,_204){
var msg=new MochiKit.Logging.LogMessage(this.counter,_203,MochiKit.Base.extend(null,arguments,1));
this._messages.push(msg);
this.dispatchListeners(msg);
if(this.useNativeConsole){
this.logToConsole(msg.level+": "+msg.info.join(" "));
}
this.counter+=1;
while(this.maxSize>=0&&this._messages.length>this.maxSize){
this._messages.shift();
}
},getMessages:function(_206){
var _207=0;
if(!(typeof (_206)=="undefined"||_206===null)){
_207=Math.max(0,this._messages.length-_206);
}
return this._messages.slice(_207);
},getMessageText:function(_208){
if(typeof (_208)=="undefined"||_208===null){
_208=30;
}
var _209=this.getMessages(_208);
if(_209.length){
var lst=map(function(m){
return "\n  ["+m.num+"] "+m.level+": "+m.info.join(" ");
},_209);
lst.unshift("LAST "+_209.length+" MESSAGES:");
return lst.join("");
}
return "";
},debuggingBookmarklet:function(_20c){
if(typeof (MochiKit.LoggingPane)=="undefined"){
alert(this.getMessageText());
}else{
MochiKit.LoggingPane.createLoggingPane(_20c||false);
}
}};
MochiKit.Logging.__new__=function(){
this.LogLevel={ERROR:40,FATAL:50,WARNING:30,INFO:20,DEBUG:10};
var m=MochiKit.Base;
m.registerComparator("LogMessage",this.isLogMessage,this.compareLogMessage);
var _20e=m.partial;
var _20f=this.Logger;
var _210=_20f.prototype.baseLog;
m.update(this.Logger.prototype,{debug:_20e(_210,"DEBUG"),log:_20e(_210,"INFO"),error:_20e(_210,"ERROR"),fatal:_20e(_210,"FATAL"),warning:_20e(_210,"WARNING")});
var self=this;
var _212=function(name){
return function(){
self.logger[name].apply(self.logger,arguments);
};
};
this.log=_212("log");
this.logError=_212("error");
this.logDebug=_212("debug");
this.logFatal=_212("fatal");
this.logWarning=_212("warning");
this.logger=new _20f();
this.logger.useNativeConsole=true;
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
if(typeof (printfire)=="undefined"&&typeof (document)!="undefined"&&document.createEvent&&typeof (dispatchEvent)!="undefined"){
printfire=function(){
printfire.args=arguments;
var ev=document.createEvent("Events");
ev.initEvent("printfire",false,true);
dispatchEvent(ev);
};
}
MochiKit.Logging.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Logging);
MochiKit.Base._deps("DateTime",["Base"]);
MochiKit.DateTime.NAME="MochiKit.DateTime";
MochiKit.DateTime.VERSION="1.4";
MochiKit.DateTime.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.DateTime.toString=function(){
return this.__repr__();
};
MochiKit.DateTime.isoDate=function(str){
str=str+"";
if(typeof (str)!="string"||str.length===0){
return null;
}
var iso=str.split("-");
if(iso.length===0){
return null;
}
return new Date(iso[0],iso[1]-1,iso[2]);
};
MochiKit.DateTime._isoRegexp=/(\d{4,})(?:-(\d{1,2})(?:-(\d{1,2})(?:[T ](\d{1,2}):(\d{1,2})(?::(\d{1,2})(?:\.(\d+))?)?(?:(Z)|([+-])(\d{1,2})(?::(\d{1,2}))?)?)?)?)?/;
MochiKit.DateTime.isoTimestamp=function(str){
str=str+"";
if(typeof (str)!="string"||str.length===0){
return null;
}
var res=str.match(MochiKit.DateTime._isoRegexp);
if(typeof (res)=="undefined"||res===null){
return null;
}
var year,_21a,day,hour,min,sec,msec;
year=parseInt(res[1],10);
if(typeof (res[2])=="undefined"||res[2]===""){
return new Date(year);
}
_21a=parseInt(res[2],10)-1;
day=parseInt(res[3],10);
if(typeof (res[4])=="undefined"||res[4]===""){
return new Date(year,_21a,day);
}
hour=parseInt(res[4],10);
min=parseInt(res[5],10);
sec=(typeof (res[6])!="undefined"&&res[6]!=="")?parseInt(res[6],10):0;
if(typeof (res[7])!="undefined"&&res[7]!==""){
msec=Math.round(1000*parseFloat("0."+res[7]));
}else{
msec=0;
}
if((typeof (res[8])=="undefined"||res[8]==="")&&(typeof (res[9])=="undefined"||res[9]==="")){
return new Date(year,_21a,day,hour,min,sec,msec);
}
var ofs;
if(typeof (res[9])!="undefined"&&res[9]!==""){
ofs=parseInt(res[10],10)*3600000;
if(typeof (res[11])!="undefined"&&res[11]!==""){
ofs+=parseInt(res[11],10)*60000;
}
if(res[9]=="-"){
ofs=-ofs;
}
}else{
ofs=0;
}
return new Date(Date.UTC(year,_21a,day,hour,min,sec,msec)-ofs);
};
MochiKit.DateTime.toISOTime=function(date,_222){
if(typeof (date)=="undefined"||date===null){
return null;
}
var hh=date.getHours();
var mm=date.getMinutes();
var ss=date.getSeconds();
var lst=[((_222&&(hh<10))?"0"+hh:hh),((mm<10)?"0"+mm:mm),((ss<10)?"0"+ss:ss)];
return lst.join(":");
};
MochiKit.DateTime.toISOTimestamp=function(date,_228){
if(typeof (date)=="undefined"||date===null){
return null;
}
var sep=_228?"T":" ";
var foot=_228?"Z":"";
if(_228){
date=new Date(date.getTime()+(date.getTimezoneOffset()*60000));
}
return MochiKit.DateTime.toISODate(date)+sep+MochiKit.DateTime.toISOTime(date,_228)+foot;
};
MochiKit.DateTime.toISODate=function(date){
if(typeof (date)=="undefined"||date===null){
return null;
}
var _22c=MochiKit.DateTime._padTwo;
return [date.getFullYear(),_22c(date.getMonth()+1),_22c(date.getDate())].join("-");
};
MochiKit.DateTime.americanDate=function(d){
d=d+"";
if(typeof (d)!="string"||d.length===0){
return null;
}
var a=d.split("/");
return new Date(a[2],a[0]-1,a[1]);
};
MochiKit.DateTime._padTwo=function(n){
return (n>9)?n:"0"+n;
};
MochiKit.DateTime.toPaddedAmericanDate=function(d){
if(typeof (d)=="undefined"||d===null){
return null;
}
var _231=MochiKit.DateTime._padTwo;
return [_231(d.getMonth()+1),_231(d.getDate()),d.getFullYear()].join("/");
};
MochiKit.DateTime.toAmericanDate=function(d){
if(typeof (d)=="undefined"||d===null){
return null;
}
return [d.getMonth()+1,d.getDate(),d.getFullYear()].join("/");
};
MochiKit.DateTime.EXPORT=["isoDate","isoTimestamp","toISOTime","toISOTimestamp","toISODate","americanDate","toPaddedAmericanDate","toAmericanDate"];
MochiKit.DateTime.EXPORT_OK=[];
MochiKit.DateTime.EXPORT_TAGS={":common":MochiKit.DateTime.EXPORT,":all":MochiKit.DateTime.EXPORT};
MochiKit.DateTime.__new__=function(){
var base=this.NAME+".";
for(var k in this){
var o=this[k];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+k;
}
catch(e){
}
}
}
};
MochiKit.DateTime.__new__();
if(typeof (MochiKit.Base)!="undefined"){
MochiKit.Base._exportSymbols(this,MochiKit.DateTime);
}else{
(function(_236,_237){
if((typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined")||(MochiKit.__export__===false)){
var all=_237.EXPORT_TAGS[":all"];
for(var i=0;i<all.length;i++){
_236[all[i]]=_237[all[i]];
}
}
})(this,MochiKit.DateTime);
}
MochiKit.Base._deps("Format",["Base"]);
MochiKit.Format.NAME="MochiKit.Format";
MochiKit.Format.VERSION="1.4";
MochiKit.Format.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Format.toString=function(){
return this.__repr__();
};
MochiKit.Format._numberFormatter=function(_23a,_23b,_23c,_23d,_23e,_23f,_240,_241,_242){
return function(num){
num=parseFloat(num);
if(typeof (num)=="undefined"||num===null||isNaN(num)){
return _23a;
}
var _244=_23b;
var _245=_23c;
if(num<0){
num=-num;
}else{
_244=_244.replace(/-/,"");
}
var me=arguments.callee;
var fmt=MochiKit.Format.formatLocale(_23d);
if(_23e){
num=num*100;
_245=fmt.percent+_245;
}
num=MochiKit.Format.roundToFixed(num,_23f);
var _248=num.split(/\./);
var _249=_248[0];
var frac=(_248.length==1)?"":_248[1];
var res="";
while(_249.length<_240){
_249="0"+_249;
}
if(_241){
while(_249.length>_241){
var i=_249.length-_241;
res=fmt.separator+_249.substring(i,_249.length)+res;
_249=_249.substring(0,i);
}
}
res=_249+res;
if(_23f>0){
while(frac.length<_242){
frac=frac+"0";
}
res=res+fmt.decimal+frac;
}
return _244+res+_245;
};
};
MochiKit.Format.numberFormatter=function(_24d,_24e,_24f){
if(typeof (_24e)=="undefined"){
_24e="";
}
var _250=_24d.match(/((?:[0#]+,)?[0#]+)(?:\.([0#]+))?(%)?/);
if(!_250){
throw TypeError("Invalid pattern");
}
var _251=_24d.substr(0,_250.index);
var _252=_24d.substr(_250.index+_250[0].length);
if(_251.search(/-/)==-1){
_251=_251+"-";
}
var _253=_250[1];
var frac=(typeof (_250[2])=="string"&&_250[2]!="")?_250[2]:"";
var _255=(typeof (_250[3])=="string"&&_250[3]!="");
var tmp=_253.split(/,/);
var _257;
if(typeof (_24f)=="undefined"){
_24f="default";
}
if(tmp.length==1){
_257=null;
}else{
_257=tmp[1].length;
}
var _258=_253.length-_253.replace(/0/g,"").length;
var _259=frac.length-frac.replace(/0/g,"").length;
var _25a=frac.length;
var rval=MochiKit.Format._numberFormatter(_24e,_251,_252,_24f,_255,_25a,_258,_257,_259);
var m=MochiKit.Base;
if(m){
var fn=arguments.callee;
var args=m.concat(arguments);
rval.repr=function(){
return [self.NAME,"(",map(m.repr,args).join(", "),")"].join("");
};
}
return rval;
};
MochiKit.Format.formatLocale=function(_25f){
if(typeof (_25f)=="undefined"||_25f===null){
_25f="default";
}
if(typeof (_25f)=="string"){
var rval=MochiKit.Format.LOCALE[_25f];
if(typeof (rval)=="string"){
rval=arguments.callee(rval);
MochiKit.Format.LOCALE[_25f]=rval;
}
return rval;
}else{
return _25f;
}
};
MochiKit.Format.twoDigitAverage=function(_261,_262){
if(_262){
var res=_261/_262;
if(!isNaN(res)){
return MochiKit.Format.twoDigitFloat(_261/_262);
}
}
return "0";
};
MochiKit.Format.twoDigitFloat=function(_264){
var sign=(_264<0?"-":"");
var s=Math.floor(Math.abs(_264)*100).toString();
if(s=="0"){
return s;
}
if(s.length<3){
if(s.length==1){
s="0"+s;
}
while(s.charAt(s.length-1)=="0"){
s=s.substring(0,s.length-1);
}
return sign+"0."+s;
}
var head=sign+s.substring(0,s.length-2);
var tail=s.substring(s.length-2,s.length);
if(tail=="00"){
return head;
}else{
if(tail.charAt(1)=="0"){
return head+"."+tail.charAt(0);
}else{
return head+"."+tail;
}
}
};
MochiKit.Format.lstrip=function(str,_26a){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_26a){
return str.replace(/^\s+/,"");
}else{
return str.replace(new RegExp("^["+_26a+"]+"),"");
}
};
MochiKit.Format.rstrip=function(str,_26c){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_26c){
return str.replace(/\s+$/,"");
}else{
return str.replace(new RegExp("["+_26c+"]+$"),"");
}
};
MochiKit.Format.strip=function(str,_26e){
var self=MochiKit.Format;
return self.rstrip(self.lstrip(str,_26e),_26e);
};
MochiKit.Format.truncToFixed=function(_270,_271){
_270=Math.floor(_270*Math.pow(10,_271));
var res=(_270*Math.pow(10,-_271)).toFixed(_271);
if(res.charAt(0)=="."){
res="0"+res;
}
return res;
};
MochiKit.Format.roundToFixed=function(_273,_274){
return MochiKit.Format.truncToFixed(_273+0.5*Math.pow(10,-_274),_274);
};
MochiKit.Format.percentFormat=function(_275){
return MochiKit.Format.twoDigitFloat(100*_275)+"%";
};
MochiKit.Format.EXPORT=["truncToFixed","roundToFixed","numberFormatter","formatLocale","twoDigitAverage","twoDigitFloat","percentFormat","lstrip","rstrip","strip"];
MochiKit.Format.LOCALE={en_US:{separator:",",decimal:".",percent:"%"},de_DE:{separator:".",decimal:",",percent:"%"},pt_BR:{separator:".",decimal:",",percent:"%"},fr_FR:{separator:" ",decimal:",",percent:"%"},"default":"en_US"};
MochiKit.Format.EXPORT_OK=[];
MochiKit.Format.EXPORT_TAGS={":all":MochiKit.Format.EXPORT,":common":MochiKit.Format.EXPORT};
MochiKit.Format.__new__=function(){
var base=this.NAME+".";
var k,v,o;
for(k in this.LOCALE){
o=this.LOCALE[k];
if(typeof (o)=="object"){
o.repr=function(){
return this.NAME;
};
o.NAME=base+"LOCALE."+k;
}
}
for(k in this){
o=this[k];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+k;
}
catch(e){
}
}
}
};
MochiKit.Format.__new__();
if(typeof (MochiKit.Base)!="undefined"){
MochiKit.Base._exportSymbols(this,MochiKit.Format);
}else{
(function(_27a,_27b){
if((typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined")||(MochiKit.__export__===false)){
var all=_27b.EXPORT_TAGS[":all"];
for(var i=0;i<all.length;i++){
_27a[all[i]]=_27b[all[i]];
}
}
})(this,MochiKit.Format);
}
MochiKit.Base._deps("Async",["Base"]);
MochiKit.Async.NAME="MochiKit.Async";
MochiKit.Async.VERSION="1.4";
MochiKit.Async.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Async.toString=function(){
return this.__repr__();
};
MochiKit.Async.Deferred=function(_27e){
this.chain=[];
this.id=this._nextId();
this.fired=-1;
this.paused=0;
this.results=[null,null];
this.canceller=_27e;
this.silentlyCancelled=false;
this.chained=false;
};
MochiKit.Async.Deferred.prototype={repr:function(){
var _27f;
if(this.fired==-1){
_27f="unfired";
}else{
if(this.fired===0){
_27f="success";
}else{
_27f="error";
}
}
return "Deferred("+this.id+", "+_27f+")";
},toString:MochiKit.Base.forwardCall("repr"),_nextId:MochiKit.Base.counter(),cancel:function(){
var self=MochiKit.Async;
if(this.fired==-1){
if(this.canceller){
this.canceller(this);
}else{
this.silentlyCancelled=true;
}
if(this.fired==-1){
this.errback(new self.CancelledError(this));
}
}else{
if((this.fired===0)&&(this.results[0] instanceof self.Deferred)){
this.results[0].cancel();
}
}
},_resback:function(res){
this.fired=((res instanceof Error)?1:0);
this.results[this.fired]=res;
this._fire();
},_check:function(){
if(this.fired!=-1){
if(!this.silentlyCancelled){
throw new MochiKit.Async.AlreadyCalledError(this);
}
this.silentlyCancelled=false;
return;
}
},callback:function(res){
this._check();
if(res instanceof MochiKit.Async.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
this._resback(res);
},errback:function(res){
this._check();
var self=MochiKit.Async;
if(res instanceof self.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
if(!(res instanceof Error)){
res=new self.GenericError(res);
}
this._resback(res);
},addBoth:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,fn);
},addCallback:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,null);
},addErrback:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(null,fn);
},addCallbacks:function(cb,eb){
if(this.chained){
throw new Error("Chained Deferreds can not be re-used");
}
this.chain.push([cb,eb]);
if(this.fired>=0){
this._fire();
}
return this;
},_fire:function(){
var _28a=this.chain;
var _28b=this.fired;
var res=this.results[_28b];
var self=this;
var cb=null;
while(_28a.length>0&&this.paused===0){
var pair=_28a.shift();
var f=pair[_28b];
if(f===null){
continue;
}
try{
res=f(res);
_28b=((res instanceof Error)?1:0);
if(res instanceof MochiKit.Async.Deferred){
cb=function(res){
self._resback(res);
self.paused--;
if((self.paused===0)&&(self.fired>=0)){
self._fire();
}
};
this.paused++;
}
}
catch(err){
_28b=1;
if(!(err instanceof Error)){
err=new MochiKit.Async.GenericError(err);
}
res=err;
}
}
this.fired=_28b;
this.results[_28b]=res;
if(cb&&this.paused){
res.addBoth(cb);
res.chained=true;
}
}};
MochiKit.Base.update(MochiKit.Async,{evalJSONRequest:function(req){
return MochiKit.Base.evalJSON(req.responseText);
},succeed:function(_293){
var d=new MochiKit.Async.Deferred();
d.callback.apply(d,arguments);
return d;
},fail:function(_295){
var d=new MochiKit.Async.Deferred();
d.errback.apply(d,arguments);
return d;
},getXMLHttpRequest:function(){
var self=arguments.callee;
if(!self.XMLHttpRequest){
var _298=[function(){
return new XMLHttpRequest();
},function(){
return new ActiveXObject("Msxml2.XMLHTTP");
},function(){
return new ActiveXObject("Microsoft.XMLHTTP");
},function(){
return new ActiveXObject("Msxml2.XMLHTTP.4.0");
},function(){
throw new MochiKit.Async.BrowserComplianceError("Browser does not support XMLHttpRequest");
}];
for(var i=0;i<_298.length;i++){
var func=_298[i];
try{
self.XMLHttpRequest=func;
return func();
}
catch(e){
}
}
}
return self.XMLHttpRequest();
},_xhr_onreadystatechange:function(d){
var m=MochiKit.Base;
if(this.readyState==4){
try{
this.onreadystatechange=null;
}
catch(e){
try{
this.onreadystatechange=m.noop;
}
catch(e){
}
}
var _29d=null;
try{
_29d=this.status;
if(!_29d&&m.isNotEmpty(this.responseText)){
_29d=304;
}
}
catch(e){
}
if(_29d==200||_29d==201||_29d==204||_29d==304||_29d==1223){
d.callback(this);
}else{
var err=new MochiKit.Async.XMLHttpRequestError(this,"Request failed");
if(err.number){
d.errback(err);
}else{
d.errback(err);
}
}
}
},_xhr_canceller:function(req){
try{
req.onreadystatechange=null;
}
catch(e){
try{
req.onreadystatechange=MochiKit.Base.noop;
}
catch(e){
}
}
req.abort();
},sendXMLHttpRequest:function(req,_2a1){
if(typeof (_2a1)=="undefined"||_2a1===null){
_2a1="";
}
var m=MochiKit.Base;
var self=MochiKit.Async;
var d=new self.Deferred(m.partial(self._xhr_canceller,req));
try{
req.onreadystatechange=m.bind(self._xhr_onreadystatechange,req,d);
req.send(_2a1);
}
catch(e){
try{
req.onreadystatechange=null;
}
catch(ignore){
}
d.errback(e);
}
return d;
},doXHR:function(url,opts){
var self=MochiKit.Async;
return self.callLater(0,self._doXHR,url,opts);
},_doXHR:function(url,opts){
var m=MochiKit.Base;
opts=m.update({method:"GET",sendContent:""},opts);
var self=MochiKit.Async;
var req=self.getXMLHttpRequest();
if(opts.queryString){
var qs=m.queryString(opts.queryString);
if(qs){
url+="?"+qs;
}
}
if("username" in opts){
req.open(opts.method,url,true,opts.username,opts.password);
}else{
req.open(opts.method,url,true);
}
if(req.overrideMimeType&&opts.mimeType){
req.overrideMimeType(opts.mimeType);
}
req.setRequestHeader("X-Requested-With","XMLHttpRequest");
if(opts.headers){
var _2ae=opts.headers;
if(!m.isArrayLike(_2ae)){
_2ae=m.items(_2ae);
}
for(var i=0;i<_2ae.length;i++){
var _2b0=_2ae[i];
var name=_2b0[0];
var _2b2=_2b0[1];
req.setRequestHeader(name,_2b2);
}
}
return self.sendXMLHttpRequest(req,opts.sendContent);
},_buildURL:function(url){
if(arguments.length>1){
var m=MochiKit.Base;
var qs=m.queryString.apply(null,m.extend(null,arguments,1));
if(qs){
return url+"?"+qs;
}
}
return url;
},doSimpleXMLHttpRequest:function(url){
var self=MochiKit.Async;
url=self._buildURL.apply(self,arguments);
return self.doXHR(url);
},loadJSONDoc:function(url){
var self=MochiKit.Async;
url=self._buildURL.apply(self,arguments);
var d=self.doXHR(url,{"mimeType":"text/plain","headers":[["Accept","application/json"]]});
d=d.addCallback(self.evalJSONRequest);
return d;
},wait:function(_2bb,_2bc){
var d=new MochiKit.Async.Deferred();
var m=MochiKit.Base;
if(typeof (_2bc)!="undefined"){
d.addCallback(function(){
return _2bc;
});
}
var _2bf=setTimeout(m.bind("callback",d),Math.floor(_2bb*1000));
d.canceller=function(){
try{
clearTimeout(_2bf);
}
catch(e){
}
};
return d;
},callLater:function(_2c0,func){
var m=MochiKit.Base;
var _2c3=m.partial.apply(m,m.extend(null,arguments,1));
return MochiKit.Async.wait(_2c0).addCallback(function(res){
return _2c3();
});
}});
MochiKit.Async.DeferredLock=function(){
this.waiting=[];
this.locked=false;
this.id=this._nextId();
};
MochiKit.Async.DeferredLock.prototype={__class__:MochiKit.Async.DeferredLock,acquire:function(){
var d=new MochiKit.Async.Deferred();
if(this.locked){
this.waiting.push(d);
}else{
this.locked=true;
d.callback(this);
}
return d;
},release:function(){
if(!this.locked){
throw TypeError("Tried to release an unlocked DeferredLock");
}
this.locked=false;
if(this.waiting.length>0){
this.locked=true;
this.waiting.shift().callback(this);
}
},_nextId:MochiKit.Base.counter(),repr:function(){
var _2c6;
if(this.locked){
_2c6="locked, "+this.waiting.length+" waiting";
}else{
_2c6="unlocked";
}
return "DeferredLock("+this.id+", "+_2c6+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Async.DeferredList=function(list,_2c8,_2c9,_2ca,_2cb){
MochiKit.Async.Deferred.apply(this,[_2cb]);
this.list=list;
var _2cc=[];
this.resultList=_2cc;
this.finishedCount=0;
this.fireOnOneCallback=_2c8;
this.fireOnOneErrback=_2c9;
this.consumeErrors=_2ca;
var cb=MochiKit.Base.bind(this._cbDeferred,this);
for(var i=0;i<list.length;i++){
var d=list[i];
_2cc.push(undefined);
d.addCallback(cb,i,true);
d.addErrback(cb,i,false);
}
if(list.length===0&&!_2c8){
this.callback(this.resultList);
}
};
MochiKit.Async.DeferredList.prototype=new MochiKit.Async.Deferred();
MochiKit.Async.DeferredList.prototype._cbDeferred=function(_2d0,_2d1,_2d2){
this.resultList[_2d0]=[_2d1,_2d2];
this.finishedCount+=1;
if(this.fired==-1){
if(_2d1&&this.fireOnOneCallback){
this.callback([_2d0,_2d2]);
}else{
if(!_2d1&&this.fireOnOneErrback){
this.errback(_2d2);
}else{
if(this.finishedCount==this.list.length){
this.callback(this.resultList);
}
}
}
}
if(!_2d1&&this.consumeErrors){
_2d2=null;
}
return _2d2;
};
MochiKit.Async.gatherResults=function(_2d3){
var d=new MochiKit.Async.DeferredList(_2d3,false,true,false);
d.addCallback(function(_2d5){
var ret=[];
for(var i=0;i<_2d5.length;i++){
ret.push(_2d5[i][1]);
}
return ret;
});
return d;
};
MochiKit.Async.maybeDeferred=function(func){
var self=MochiKit.Async;
var _2da;
try{
var r=func.apply(null,MochiKit.Base.extend([],arguments,1));
if(r instanceof self.Deferred){
_2da=r;
}else{
if(r instanceof Error){
_2da=self.fail(r);
}else{
_2da=self.succeed(r);
}
}
}
catch(e){
_2da=self.fail(e);
}
return _2da;
};
MochiKit.Async.EXPORT=["AlreadyCalledError","CancelledError","BrowserComplianceError","GenericError","XMLHttpRequestError","Deferred","succeed","fail","getXMLHttpRequest","doSimpleXMLHttpRequest","loadJSONDoc","wait","callLater","sendXMLHttpRequest","DeferredLock","DeferredList","gatherResults","maybeDeferred","doXHR"];
MochiKit.Async.EXPORT_OK=["evalJSONRequest"];
MochiKit.Async.__new__=function(){
var m=MochiKit.Base;
var ne=m.partial(m._newNamedError,this);
ne("AlreadyCalledError",function(_2de){
this.deferred=_2de;
});
ne("CancelledError",function(_2df){
this.deferred=_2df;
});
ne("BrowserComplianceError",function(msg){
this.message=msg;
});
ne("GenericError",function(msg){
this.message=msg;
});
ne("XMLHttpRequestError",function(req,msg){
this.req=req;
this.message=msg;
try{
this.number=req.status;
}
catch(e){
}
});
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Async.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Async);
MochiKit.Base._deps("DOM",["Base"]);
MochiKit.DOM.NAME="MochiKit.DOM";
MochiKit.DOM.VERSION="1.4";
MochiKit.DOM.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.DOM.toString=function(){
return this.__repr__();
};
MochiKit.DOM.EXPORT=["removeEmptyTextNodes","formContents","currentWindow","currentDocument","withWindow","withDocument","registerDOMConverter","coerceToDOM","createDOM","createDOMFunc","isChildNode","getNodeAttribute","removeNodeAttribute","setNodeAttribute","updateNodeAttributes","appendChildNodes","insertSiblingNodesAfter","insertSiblingNodesBefore","replaceChildNodes","removeElement","swapDOM","BUTTON","TT","PRE","H1","H2","H3","BR","CANVAS","HR","LABEL","TEXTAREA","FORM","STRONG","SELECT","OPTION","OPTGROUP","LEGEND","FIELDSET","P","UL","OL","LI","DL","DT","DD","TD","TR","THEAD","TBODY","TFOOT","TABLE","TH","INPUT","SPAN","A","DIV","IMG","getElement","$","getElementsByTagAndClassName","addToCallStack","addLoadEvent","focusOnLoad","setElementClass","toggleElementClass","addElementClass","removeElementClass","swapElementClass","hasElementClass","escapeHTML","toHTML","emitHTML","scrapeText","isParent","getFirstParentByTagAndClassName","makeClipping","undoClipping","makePositioned","undoPositioned","getFirstElementByTagAndClassName"];
MochiKit.DOM.EXPORT_OK=["domConverters"];
MochiKit.DOM.DEPRECATED=[["computedStyle","MochiKit.Style.getStyle","1.4"],["elementDimensions","MochiKit.Style.getElementDimensions","1.4"],["elementPosition","MochiKit.Style.getElementPosition","1.4"],["hideElement","MochiKit.Style.hideElement","1.4"],["setElementDimensions","MochiKit.Style.setElementDimensions","1.4"],["setElementPosition","MochiKit.Style.setElementPosition","1.4"],["setDisplayForElement","MochiKit.Style.setDisplayForElement","1.4"],["setOpacity","MochiKit.Style.setOpacity","1.4"],["showElement","MochiKit.Style.showElement","1.4"],["Coordinates","MochiKit.Style.Coordinates","1.4"],["Dimensions","MochiKit.Style.Dimensions","1.4"]];
MochiKit.DOM.getViewportDimensions=new Function(""+"if (!MochiKit[\"Style\"]) {"+"    throw new Error(\"This function has been deprecated and depends on MochiKit.Style.\");"+"}"+"return MochiKit.Style.getViewportDimensions.apply(this, arguments);");
MochiKit.Base.update(MochiKit.DOM,{currentWindow:function(){
return MochiKit.DOM._window;
},currentDocument:function(){
return MochiKit.DOM._document;
},withWindow:function(win,func){
var self=MochiKit.DOM;
var _2e7=self._document;
var _2e8=self._window;
var rval;
try{
self._window=win;
self._document=win.document;
rval=func();
}
catch(e){
self._window=_2e8;
self._document=_2e7;
throw e;
}
self._window=_2e8;
self._document=_2e7;
return rval;
},formContents:function(elem){
var _2eb=[];
var _2ec=[];
var m=MochiKit.Base;
var self=MochiKit.DOM;
if(typeof (elem)=="undefined"||elem===null){
elem=self._document.body;
}else{
elem=self.getElement(elem);
}
m.nodeWalk(elem,function(elem){
var name=elem.name;
if(m.isNotEmpty(name)){
var _2f1=elem.tagName.toUpperCase();
if(_2f1==="INPUT"&&(elem.type=="radio"||elem.type=="checkbox")&&!elem.checked){
return null;
}
if(_2f1==="SELECT"){
if(elem.type=="select-one"){
if(elem.selectedIndex>=0){
var opt=elem.options[elem.selectedIndex];
var v=opt.value;
if(!v){
var h=opt.outerHTML;
if(h&&!h.match(/^[^>]+\svalue\s*=/i)){
v=opt.text;
}
}
_2eb.push(name);
_2ec.push(v);
return null;
}
_2eb.push(name);
_2ec.push("");
return null;
}else{
var opts=elem.options;
if(!opts.length){
_2eb.push(name);
_2ec.push("");
return null;
}
for(var i=0;i<opts.length;i++){
var opt=opts[i];
if(!opt.selected){
continue;
}
var v=opt.value;
if(!v){
var h=opt.outerHTML;
if(h&&!h.match(/^[^>]+\svalue\s*=/i)){
v=opt.text;
}
}
_2eb.push(name);
_2ec.push(v);
}
return null;
}
}
if(_2f1==="FORM"||_2f1==="P"||_2f1==="SPAN"||_2f1==="DIV"){
return elem.childNodes;
}
_2eb.push(name);
_2ec.push(elem.value||"");
return null;
}
return elem.childNodes;
});
return [_2eb,_2ec];
},withDocument:function(doc,func){
var self=MochiKit.DOM;
var _2fa=self._document;
var rval;
try{
self._document=doc;
rval=func();
}
catch(e){
self._document=_2fa;
throw e;
}
self._document=_2fa;
return rval;
},registerDOMConverter:function(name,_2fd,wrap,_2ff){
MochiKit.DOM.domConverters.register(name,_2fd,wrap,_2ff);
},coerceToDOM:function(node,ctx){
var m=MochiKit.Base;
var im=MochiKit.Iter;
var self=MochiKit.DOM;
if(im){
var iter=im.iter;
var _306=im.repeat;
var map=m.map;
}
var _308=self.domConverters;
var _309=arguments.callee;
var _30a=m.NotFound;
while(true){
if(typeof (node)=="undefined"||node===null){
return null;
}
if(typeof (node)=="function"&&typeof (node.length)=="number"&&!(node instanceof Function)){
node=im.list(node);
}
if(typeof (node.nodeType)!="undefined"&&node.nodeType>0){
return node;
}
if(typeof (node)=="number"||typeof (node)=="boolean"){
node=node.toString();
}
if(typeof (node)=="string"){
return self._document.createTextNode(node);
}
if(typeof (node.__dom__)=="function"){
node=node.__dom__(ctx);
continue;
}
if(typeof (node.dom)=="function"){
node=node.dom(ctx);
continue;
}
if(typeof (node)=="function"){
node=node.apply(ctx,[ctx]);
continue;
}
if(im){
var _30b=null;
try{
_30b=iter(node);
}
catch(e){
}
if(_30b){
return map(_309,_30b,_306(ctx));
}
}
try{
node=_308.match(node,ctx);
continue;
}
catch(e){
if(e!=_30a){
throw e;
}
}
return self._document.createTextNode(node.toString());
}
return undefined;
},isChildNode:function(node,_30d){
var self=MochiKit.DOM;
if(typeof (node)=="string"){
node=self.getElement(node);
}
if(typeof (_30d)=="string"){
_30d=self.getElement(_30d);
}
if(typeof (node)=="undefined"||node===null){
return false;
}
while(node!==self._document){
if(node===_30d){
return true;
}
node=node.parentNode;
}
return false;
},setNodeAttribute:function(node,attr,_311){
var o={};
o[attr]=_311;
try{
return MochiKit.DOM.updateNodeAttributes(node,o);
}
catch(e){
}
return null;
},getNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _316=self.attributeArray.renames[attr];
node=self.getElement(node);
try{
if(_316){
return node[_316];
}
return node.getAttribute(attr);
}
catch(e){
}
return null;
},removeNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _31a=self.attributeArray.renames[attr];
node=self.getElement(node);
try{
if(_31a){
return node[_31a];
}
return node.removeAttribute(attr);
}
catch(e){
}
return null;
},updateNodeAttributes:function(node,_31c){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
if(_31c){
var _31f=MochiKit.Base.updatetree;
if(self.attributeArray.compliant){
for(var k in _31c){
var v=_31c[k];
if(typeof (v)=="object"&&typeof (elem[k])=="object"){
if(k=="style"&&MochiKit.Style){
MochiKit.Style.setStyle(elem,v);
}else{
_31f(elem[k],v);
}
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}else{
var _322=self.attributeArray.renames;
for(var k in _31c){
v=_31c[k];
var _323=_322[k];
if(k=="style"&&typeof (v)=="string"){
elem.style.cssText=v;
}else{
if(typeof (_323)=="string"){
elem[_323]=v;
}else{
if(typeof (elem[k])=="object"&&typeof (v)=="object"){
if(k=="style"&&MochiKit.Style){
MochiKit.Style.setStyle(elem,v);
}else{
_31f(elem[k],v);
}
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}
}
}
}
return elem;
},appendChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _327=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _328=MochiKit.Base.concat;
while(_327.length){
var n=_327.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
elem.appendChild(n);
}else{
_327=_328(n,_327);
}
}
}
return elem;
},insertSiblingNodesBefore:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _32d=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _32e=elem.parentNode;
var _32f=MochiKit.Base.concat;
while(_32d.length){
var n=_32d.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
_32e.insertBefore(n,elem);
}else{
_32d=_32f(n,_32d);
}
}
}
return _32e;
},insertSiblingNodesAfter:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _334=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
if(elem.nextSibling){
return self.insertSiblingNodesBefore(elem.nextSibling,_334);
}else{
return self.appendChildNodes(elem.parentNode,_334);
}
},replaceChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
arguments[0]=elem;
}
var _338;
while((_338=elem.firstChild)){
elem.removeChild(_338);
}
if(arguments.length<2){
return elem;
}else{
return self.appendChildNodes.apply(this,arguments);
}
},createDOM:function(name,_33a){
var elem;
var self=MochiKit.DOM;
var m=MochiKit.Base;
if(typeof (_33a)=="string"||typeof (_33a)=="number"){
var args=m.extend([name,null],arguments,1);
return arguments.callee.apply(this,args);
}
if(typeof (name)=="string"){
var _33f=self._xhtml;
if(_33a&&!self.attributeArray.compliant){
var _340="";
if("name" in _33a){
_340+=" name=\""+self.escapeHTML(_33a.name)+"\"";
}
if(name=="input"&&"type" in _33a){
_340+=" type=\""+self.escapeHTML(_33a.type)+"\"";
}
if(_340){
name="<"+name+_340+">";
_33f=false;
}
}
var d=self._document;
if(_33f&&d===document){
elem=d.createElementNS("http://www.w3.org/1999/xhtml",name);
}else{
elem=d.createElement(name);
}
}else{
elem=name;
}
if(_33a){
self.updateNodeAttributes(elem,_33a);
}
if(arguments.length<=2){
return elem;
}else{
var args=m.extend([elem],arguments,2);
return self.appendChildNodes.apply(this,args);
}
},createDOMFunc:function(){
var m=MochiKit.Base;
return m.partial.apply(this,m.extend([MochiKit.DOM.createDOM],arguments));
},removeElement:function(elem){
var e=MochiKit.DOM.getElement(elem);
e.parentNode.removeChild(e);
return e;
},swapDOM:function(dest,src){
var self=MochiKit.DOM;
dest=self.getElement(dest);
var _348=dest.parentNode;
if(src){
src=self.getElement(src);
_348.replaceChild(src,dest);
}else{
_348.removeChild(dest);
}
return src;
},getElement:function(id){
var self=MochiKit.DOM;
if(arguments.length==1){
return ((typeof (id)=="string")?self._document.getElementById(id):id);
}else{
return MochiKit.Base.map(self.getElement,arguments);
}
},getElementsByTagAndClassName:function(_34b,_34c,_34d){
var self=MochiKit.DOM;
if(typeof (_34b)=="undefined"||_34b===null){
_34b="*";
}
if(typeof (_34d)=="undefined"||_34d===null){
_34d=self._document;
}
_34d=self.getElement(_34d);
var _34f=(_34d.getElementsByTagName(_34b)||self._document.all);
if(typeof (_34c)=="undefined"||_34c===null){
return MochiKit.Base.extend(null,_34f);
}
var _350=[];
for(var i=0;i<_34f.length;i++){
var _352=_34f[i];
var cls=_352.className;
if(!cls){
continue;
}
var _354=cls.split(" ");
for(var j=0;j<_354.length;j++){
if(_354[j]==_34c){
_350.push(_352);
break;
}
}
}
return _350;
},_newCallStack:function(path,once){
var rval=function(){
var _359=arguments.callee.callStack;
for(var i=0;i<_359.length;i++){
if(_359[i].apply(this,arguments)===false){
break;
}
}
if(once){
try{
this[path]=null;
}
catch(e){
}
}
};
rval.callStack=[];
return rval;
},addToCallStack:function(_35b,path,func,once){
var self=MochiKit.DOM;
var _360=_35b[path];
var _361=_360;
if(!(typeof (_360)=="function"&&typeof (_360.callStack)=="object"&&_360.callStack!==null)){
_361=self._newCallStack(path,once);
if(typeof (_360)=="function"){
_361.callStack.push(_360);
}
_35b[path]=_361;
}
_361.callStack.push(func);
},addLoadEvent:function(func){
var self=MochiKit.DOM;
self.addToCallStack(self._window,"onload",func,true);
},focusOnLoad:function(_364){
var self=MochiKit.DOM;
self.addLoadEvent(function(){
_364=self.getElement(_364);
if(_364){
_364.focus();
}
});
},setElementClass:function(_366,_367){
var self=MochiKit.DOM;
var obj=self.getElement(_366);
if(self.attributeArray.compliant){
obj.setAttribute("class",_367);
}else{
obj.setAttribute("className",_367);
}
},toggleElementClass:function(_36a){
var self=MochiKit.DOM;
for(var i=1;i<arguments.length;i++){
var obj=self.getElement(arguments[i]);
if(!self.addElementClass(obj,_36a)){
self.removeElementClass(obj,_36a);
}
}
},addElementClass:function(_36e,_36f){
var self=MochiKit.DOM;
var obj=self.getElement(_36e);
var cls=obj.className;
if(cls==undefined||cls.length===0){
self.setElementClass(obj,_36f);
return true;
}
if(cls==_36f){
return false;
}
var _373=cls.split(" ");
for(var i=0;i<_373.length;i++){
if(_373[i]==_36f){
return false;
}
}
self.setElementClass(obj,cls+" "+_36f);
return true;
},removeElementClass:function(_375,_376){
var self=MochiKit.DOM;
var obj=self.getElement(_375);
var cls=obj.className;
if(cls==undefined||cls.length===0){
return false;
}
if(cls==_376){
self.setElementClass(obj,"");
return true;
}
var _37a=cls.split(" ");
for(var i=0;i<_37a.length;i++){
if(_37a[i]==_376){
_37a.splice(i,1);
self.setElementClass(obj,_37a.join(" "));
return true;
}
}
return false;
},swapElementClass:function(_37c,_37d,_37e){
var obj=MochiKit.DOM.getElement(_37c);
var res=MochiKit.DOM.removeElementClass(obj,_37d);
if(res){
MochiKit.DOM.addElementClass(obj,_37e);
}
return res;
},hasElementClass:function(_381,_382){
var obj=MochiKit.DOM.getElement(_381);
var cls=obj.className;
if(!cls){
return false;
}
var _385=cls.split(" ");
for(var i=1;i<arguments.length;i++){
var good=false;
for(var j=0;j<_385.length;j++){
if(_385[j]==arguments[i]){
good=true;
break;
}
}
if(!good){
return false;
}
}
return true;
},escapeHTML:function(s){
return s.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/</g,"&lt;").replace(/>/g,"&gt;");
},toHTML:function(dom){
return MochiKit.DOM.emitHTML(dom).join("");
},emitHTML:function(dom,lst){
if(typeof (lst)=="undefined"||lst===null){
lst=[];
}
var _38d=[dom];
var self=MochiKit.DOM;
var _38f=self.escapeHTML;
var _390=self.attributeArray;
while(_38d.length){
dom=_38d.pop();
if(typeof (dom)=="string"){
lst.push(dom);
}else{
if(dom.nodeType==1){
lst.push("<"+dom.tagName.toLowerCase());
var _391=[];
var _392=_390(dom);
for(var i=0;i<_392.length;i++){
var a=_392[i];
_391.push([" ",a.name,"=\"",_38f(a.value),"\""]);
}
_391.sort();
for(i=0;i<_391.length;i++){
var _395=_391[i];
for(var j=0;j<_395.length;j++){
lst.push(_395[j]);
}
}
if(dom.hasChildNodes()){
lst.push(">");
_38d.push("</"+dom.tagName.toLowerCase()+">");
var _397=dom.childNodes;
for(i=_397.length-1;i>=0;i--){
_38d.push(_397[i]);
}
}else{
lst.push("/>");
}
}else{
if(dom.nodeType==3){
lst.push(_38f(dom.nodeValue));
}
}
}
}
return lst;
},scrapeText:function(node,_399){
var rval=[];
(function(node){
var cn=node.childNodes;
if(cn){
for(var i=0;i<cn.length;i++){
arguments.callee.call(this,cn[i]);
}
}
var _39e=node.nodeValue;
if(typeof (_39e)=="string"){
rval.push(_39e);
}
})(MochiKit.DOM.getElement(node));
if(_399){
return rval;
}else{
return rval.join("");
}
},removeEmptyTextNodes:function(_39f){
_39f=MochiKit.DOM.getElement(_39f);
for(var i=0;i<_39f.childNodes.length;i++){
var node=_39f.childNodes[i];
if(node.nodeType==3&&!/\S/.test(node.nodeValue)){
node.parentNode.removeChild(node);
}
}
},makeClipping:function(_3a2){
_3a2=MochiKit.DOM.getElement(_3a2);
var _3a3=_3a2.style.overflow;
if((MochiKit.Style.getStyle(_3a2,"overflow")||"visible")!="hidden"){
_3a2.style.overflow="hidden";
}
return _3a3;
},undoClipping:function(_3a4,_3a5){
_3a4=MochiKit.DOM.getElement(_3a4);
if(!_3a5){
return;
}
_3a4.style.overflow=_3a5;
},makePositioned:function(_3a6){
_3a6=MochiKit.DOM.getElement(_3a6);
var pos=MochiKit.Style.getStyle(_3a6,"position");
if(pos=="static"||!pos){
_3a6.style.position="relative";
if(/Opera/.test(navigator.userAgent)){
_3a6.style.top=0;
_3a6.style.left=0;
}
}
},undoPositioned:function(_3a8){
_3a8=MochiKit.DOM.getElement(_3a8);
if(_3a8.style.position=="relative"){
_3a8.style.position=_3a8.style.top=_3a8.style.left=_3a8.style.bottom=_3a8.style.right="";
}
},getFirstElementByTagAndClassName:function(_3a9,_3aa,_3ab){
var self=MochiKit.DOM;
if(typeof (_3a9)=="undefined"||_3a9===null){
_3a9="*";
}
if(typeof (_3ab)=="undefined"||_3ab===null){
_3ab=self._document;
}
_3ab=self.getElement(_3ab);
var _3ad=(_3ab.getElementsByTagName(_3a9)||self._document.all);
if(typeof (_3aa)=="undefined"||_3aa===null){
return _3ad[0];
}
for(var i=0;i<_3ad.length;i++){
var _3af=_3ad[i];
var _3b0=_3af.className.split(" ");
for(var j=0;j<_3b0.length;j++){
if(_3b0[j]==_3aa){
return _3af;
}
}
}
},getFirstParentByTagAndClassName:function(elem,_3b3,_3b4){
var self=MochiKit.DOM;
elem=self.getElement(elem);
if(typeof (_3b3)=="undefined"||_3b3===null){
_3b3="*";
}else{
_3b3=_3b3.toUpperCase();
}
if(typeof (_3b4)=="undefined"||_3b4===null){
_3b4=null;
}
var _3b6="";
var _3b7="";
while(elem&&elem.tagName){
elem=elem.parentNode;
if(_3b3=="*"&&_3b4===null){
return elem;
}
_3b6=elem.className.split(" ");
_3b7=elem.tagName.toUpperCase();
if(_3b4===null&&_3b3==_3b7){
return elem;
}else{
if(_3b4!==null){
for(var i=0;i<_3b6.length;i++){
if(_3b3=="*"&&_3b6[i]==_3b4){
return elem;
}else{
if(_3b3==_3b7&&_3b6[i]==_3b4){
return elem;
}
}
}
}
}
}
return elem;
},isParent:function(_3b9,_3ba){
if(!_3b9.parentNode||_3b9==_3ba){
return false;
}
if(_3b9.parentNode==_3ba){
return true;
}
return MochiKit.DOM.isParent(_3b9.parentNode,_3ba);
},__new__:function(win){
var m=MochiKit.Base;
if(typeof (document)!="undefined"){
this._document=document;
var _3bd="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
this._xhtml=(document.documentElement&&document.createElementNS&&document.documentElement.namespaceURI===_3bd);
}else{
if(MochiKit.MockDOM){
this._document=MochiKit.MockDOM.document;
}
}
this._window=win;
this.domConverters=new m.AdapterRegistry();
var _3be=this._document.createElement("span");
var _3bf;
if(_3be&&_3be.attributes&&_3be.attributes.length>0){
var _3c0=m.filter;
_3bf=function(node){
return _3c0(_3bf.ignoreAttrFilter,node.attributes);
};
_3bf.ignoreAttr={};
var _3c2=_3be.attributes;
var _3c3=_3bf.ignoreAttr;
for(var i=0;i<_3c2.length;i++){
var a=_3c2[i];
_3c3[a.name]=a.value;
}
_3bf.ignoreAttrFilter=function(a){
return (_3bf.ignoreAttr[a.name]!=a.value);
};
_3bf.compliant=false;
_3bf.renames={"class":"className","checked":"defaultChecked","usemap":"useMap","for":"htmlFor","readonly":"readOnly","colspan":"colSpan","bgcolor":"bgColor","cellspacing":"cellSpacing","cellpadding":"cellPadding"};
}else{
_3bf=function(node){
return node.attributes;
};
_3bf.compliant=true;
_3bf.renames={};
}
this.attributeArray=_3bf;
var _3c8=function(_3c9,arr){
var _3cb=arr[1].split(".");
var str="";
var obj={};
str+="if (!MochiKit."+_3cb[1]+") { throw new Error(\"";
str+="This function has been deprecated and depends on MochiKit.";
str+=_3cb[1]+".\");}";
str+="return MochiKit."+_3cb[1]+"."+arr[0];
str+=".apply(this, arguments);";
obj[_3cb[2]]=new Function(str);
MochiKit.Base.update(MochiKit[_3c9],obj);
};
for(var i;i<MochiKit.DOM.DEPRECATED.length;i++){
_3c8("DOM",MochiKit.DOM.DEPRECATED[i]);
}
var _3ce=this.createDOMFunc;
this.UL=_3ce("ul");
this.OL=_3ce("ol");
this.LI=_3ce("li");
this.DL=_3ce("dl");
this.DT=_3ce("dt");
this.DD=_3ce("dd");
this.TD=_3ce("td");
this.TR=_3ce("tr");
this.TBODY=_3ce("tbody");
this.THEAD=_3ce("thead");
this.TFOOT=_3ce("tfoot");
this.TABLE=_3ce("table");
this.TH=_3ce("th");
this.INPUT=_3ce("input");
this.SPAN=_3ce("span");
this.A=_3ce("a");
this.DIV=_3ce("div");
this.IMG=_3ce("img");
this.BUTTON=_3ce("button");
this.TT=_3ce("tt");
this.PRE=_3ce("pre");
this.H1=_3ce("h1");
this.H2=_3ce("h2");
this.H3=_3ce("h3");
this.BR=_3ce("br");
this.HR=_3ce("hr");
this.LABEL=_3ce("label");
this.TEXTAREA=_3ce("textarea");
this.FORM=_3ce("form");
this.P=_3ce("p");
this.SELECT=_3ce("select");
this.OPTION=_3ce("option");
this.OPTGROUP=_3ce("optgroup");
this.LEGEND=_3ce("legend");
this.FIELDSET=_3ce("fieldset");
this.STRONG=_3ce("strong");
this.CANVAS=_3ce("canvas");
this.$=this.getElement;
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
}});
MochiKit.DOM.__new__(((typeof (window)=="undefined")?this:window));
if(MochiKit.__export__){
withWindow=MochiKit.DOM.withWindow;
withDocument=MochiKit.DOM.withDocument;
}
MochiKit.Base._exportSymbols(this,MochiKit.DOM);
MochiKit.Base._deps("Selector",["Base","DOM","Iter"]);
MochiKit.Selector.NAME="MochiKit.Selector";
MochiKit.Selector.VERSION="1.4";
MochiKit.Selector.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Selector.toString=function(){
return this.__repr__();
};
MochiKit.Selector.EXPORT=["Selector","findChildElements","findDocElements","$$"];
MochiKit.Selector.EXPORT_OK=[];
MochiKit.Selector.Selector=function(_3cf){
this.params={classNames:[],pseudoClassNames:[]};
this.expression=_3cf.toString().replace(/(^\s+|\s+$)/g,"");
this.parseExpression();
this.compileMatcher();
};
MochiKit.Selector.Selector.prototype={__class__:MochiKit.Selector.Selector,parseExpression:function(){
function abort(_3d0){
throw "Parse error in selector: "+_3d0;
}
if(this.expression==""){
abort("empty expression");
}
var repr=MochiKit.Base.repr;
var _3d2=this.params;
var expr=this.expression;
var _3d4,_3d5,_3d6,rest;
while(_3d4=expr.match(/^(.*)\[([a-z0-9_:-]+?)(?:([~\|!^$*]?=)(?:"([^"]*)"|([^\]\s]*)))?\]$/i)){
_3d2.attributes=_3d2.attributes||[];
_3d2.attributes.push({name:_3d4[2],operator:_3d4[3],value:_3d4[4]||_3d4[5]||""});
expr=_3d4[1];
}
if(expr=="*"){
return this.params.wildcard=true;
}
while(_3d4=expr.match(/^([^a-z0-9_-])?([a-z0-9_-]+(?:\([^)]*\))?)(.*)/i)){
_3d5=_3d4[1];
_3d6=_3d4[2];
rest=_3d4[3];
switch(_3d5){
case "#":
_3d2.id=_3d6;
break;
case ".":
_3d2.classNames.push(_3d6);
break;
case ":":
_3d2.pseudoClassNames.push(_3d6);
break;
case "":
case undefined:
_3d2.tagName=_3d6.toUpperCase();
break;
default:
abort(repr(expr));
}
expr=rest;
}
if(expr.length>0){
abort(repr(expr));
}
},buildMatchExpression:function(){
var repr=MochiKit.Base.repr;
var _3d9=this.params;
var _3da=[];
var _3db,i;
function childElements(_3dd){
return "MochiKit.Base.filter(function (node) { return node.nodeType == 1; }, "+_3dd+".childNodes)";
}
if(_3d9.wildcard){
_3da.push("true");
}
if(_3db=_3d9.id){
_3da.push("element.id == "+repr(_3db));
}
if(_3db=_3d9.tagName){
_3da.push("element.tagName.toUpperCase() == "+repr(_3db));
}
if((_3db=_3d9.classNames).length>0){
for(i=0;i<_3db.length;i++){
_3da.push("MochiKit.DOM.hasElementClass(element, "+repr(_3db[i])+")");
}
}
if((_3db=_3d9.pseudoClassNames).length>0){
for(i=0;i<_3db.length;i++){
var _3de=_3db[i].match(/^([^(]+)(?:\((.*)\))?$/);
var _3df=_3de[1];
var _3e0=_3de[2];
switch(_3df){
case "root":
_3da.push("element.nodeType == 9 || element === element.ownerDocument.documentElement");
break;
case "nth-child":
case "nth-last-child":
case "nth-of-type":
case "nth-last-of-type":
_3de=_3e0.match(/^((?:(\d+)n\+)?(\d+)|odd|even)$/);
if(!_3de){
throw "Invalid argument to pseudo element nth-child: "+_3e0;
}
var a,b;
if(_3de[0]=="odd"){
a=2;
b=1;
}else{
if(_3de[0]=="even"){
a=2;
b=0;
}else{
a=_3de[2]&&parseInt(_3de)||null;
b=parseInt(_3de[3]);
}
}
_3da.push("this.nthChild(element,"+a+","+b+","+!!_3df.match("^nth-last")+","+!!_3df.match("of-type$")+")");
break;
case "first-child":
_3da.push("this.nthChild(element, null, 1)");
break;
case "last-child":
_3da.push("this.nthChild(element, null, 1, true)");
break;
case "first-of-type":
_3da.push("this.nthChild(element, null, 1, false, true)");
break;
case "last-of-type":
_3da.push("this.nthChild(element, null, 1, true, true)");
break;
case "only-child":
_3da.push(childElements("element.parentNode")+".length == 1");
break;
case "only-of-type":
_3da.push("MochiKit.Base.filter(function (node) { return node.tagName == element.tagName; }, "+childElements("element.parentNode")+").length == 1");
break;
case "empty":
_3da.push("element.childNodes.length == 0");
break;
case "enabled":
_3da.push("(this.isUIElement(element) && element.disabled === false)");
break;
case "disabled":
_3da.push("(this.isUIElement(element) && element.disabled === true)");
break;
case "checked":
_3da.push("(this.isUIElement(element) && element.checked === true)");
break;
case "not":
var _3e3=new MochiKit.Selector.Selector(_3e0);
_3da.push("!( "+_3e3.buildMatchExpression()+")");
break;
}
}
}
if(_3db=_3d9.attributes){
MochiKit.Base.map(function(_3e4){
var _3e5="MochiKit.DOM.getNodeAttribute(element, "+repr(_3e4.name)+")";
var _3e6=function(_3e7){
return _3e5+".split("+repr(_3e7)+")";
};
switch(_3e4.operator){
case "=":
_3da.push(_3e5+" == "+repr(_3e4.value));
break;
case "~=":
_3da.push(_3e5+" && MochiKit.Base.findValue("+_3e6(" ")+", "+repr(_3e4.value)+") > -1");
break;
case "^=":
_3da.push(_3e5+".substring(0, "+_3e4.value.length+") == "+repr(_3e4.value));
break;
case "$=":
_3da.push(_3e5+".substring("+_3e5+".length - "+_3e4.value.length+") == "+repr(_3e4.value));
break;
case "*=":
_3da.push(_3e5+".match("+repr(_3e4.value)+")");
break;
case "|=":
_3da.push(_3e5+" && "+_3e6("-")+"[0].toUpperCase() == "+repr(_3e4.value.toUpperCase()));
break;
case "!=":
_3da.push(_3e5+" != "+repr(_3e4.value));
break;
case "":
case undefined:
_3da.push(_3e5+" != null");
break;
default:
throw "Unknown operator "+_3e4.operator+" in selector";
}
},_3db);
}
return _3da.join(" && ");
},compileMatcher:function(){
this.match=new Function("element","if (!element.tagName) return false;                 return "+this.buildMatchExpression());
},nthChild:function(_3e8,a,b,_3eb,_3ec){
var _3ed=MochiKit.Base.filter(function(node){
return node.nodeType==1;
},_3e8.parentNode.childNodes);
if(_3ec){
_3ed=MochiKit.Base.filter(function(node){
return node.tagName==_3e8.tagName;
},_3ed);
}
if(_3eb){
_3ed=MochiKit.Iter.reversed(_3ed);
}
if(a){
var _3f0=MochiKit.Base.findIdentical(_3ed,_3e8);
return ((_3f0+1-b)/a)%1==0;
}else{
return b==MochiKit.Base.findIdentical(_3ed,_3e8)+1;
}
},isUIElement:function(_3f1){
return MochiKit.Base.findValue(["input","button","select","option","textarea","object"],_3f1.tagName.toLowerCase())>-1;
},findElements:function(_3f2,axis){
var _3f4;
if(axis==undefined){
axis="";
}
function inScope(_3f5,_3f6){
if(axis==""){
return MochiKit.DOM.isChildNode(_3f5,_3f6);
}else{
if(axis==">"){
return _3f5.parentNode==_3f6;
}else{
if(axis=="+"){
return _3f5==nextSiblingElement(_3f6);
}else{
if(axis=="~"){
var _3f7=_3f6;
while(_3f7=nextSiblingElement(_3f7)){
if(_3f5==_3f7){
return true;
}
}
return false;
}else{
throw "Invalid axis: "+axis;
}
}
}
}
}
if(_3f4=MochiKit.DOM.getElement(this.params.id)){
if(this.match(_3f4)){
if(!_3f2||inScope(_3f4,_3f2)){
return [_3f4];
}
}
}
function nextSiblingElement(node){
node=node.nextSibling;
while(node&&node.nodeType!=1){
node=node.nextSibling;
}
return node;
}
if(axis==""){
_3f2=(_3f2||MochiKit.DOM.currentDocument()).getElementsByTagName(this.params.tagName||"*");
}else{
if(axis==">"){
if(!_3f2){
throw "> combinator not allowed without preceeding expression";
}
_3f2=MochiKit.Base.filter(function(node){
return node.nodeType==1;
},_3f2.childNodes);
}else{
if(axis=="+"){
if(!_3f2){
throw "+ combinator not allowed without preceeding expression";
}
_3f2=nextSiblingElement(_3f2)&&[nextSiblingElement(_3f2)];
}else{
if(axis=="~"){
if(!_3f2){
throw "~ combinator not allowed without preceeding expression";
}
var _3fa=[];
while(nextSiblingElement(_3f2)){
_3f2=nextSiblingElement(_3f2);
_3fa.push(_3f2);
}
_3f2=_3fa;
}
}
}
}
if(!_3f2){
return [];
}
var _3fb=MochiKit.Base.filter(MochiKit.Base.bind(function(_3fc){
return this.match(_3fc);
},this),_3f2);
return _3fb;
},repr:function(){
return "Selector("+this.expression+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Base.update(MochiKit.Selector,{findChildElements:function(_3fd,_3fe){
return MochiKit.Base.flattenArray(MochiKit.Base.map(function(_3ff){
var _400="";
return MochiKit.Iter.reduce(function(_401,expr){
if(match=expr.match(/^[>+~]$/)){
_400=match[0];
return _401;
}else{
var _403=new MochiKit.Selector.Selector(expr);
var _404=MochiKit.Iter.reduce(function(_405,_406){
return MochiKit.Base.extend(_405,_403.findElements(_406||_3fd,_400));
},_401,[]);
_400="";
return _404;
}
},_3ff.replace(/(^\s+|\s+$)/g,"").split(/\s+/),[null]);
},_3fe));
},findDocElements:function(){
return MochiKit.Selector.findChildElements(MochiKit.DOM.currentDocument(),arguments);
},__new__:function(){
var m=MochiKit.Base;
this.$$=this.findDocElements;
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
}});
MochiKit.Selector.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Selector);
MochiKit.Base._deps("Style",["Base","DOM"]);
MochiKit.Style.NAME="MochiKit.Style";
MochiKit.Style.VERSION="1.4";
MochiKit.Style.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Style.toString=function(){
return this.__repr__();
};
MochiKit.Style.EXPORT_OK=[];
MochiKit.Style.EXPORT=["setStyle","setOpacity","getStyle","getElementDimensions","elementDimensions","setElementDimensions","getElementPosition","elementPosition","setElementPosition","setDisplayForElement","hideElement","showElement","getViewportDimensions","getViewportPosition","Dimensions","Coordinates"];
MochiKit.Style.Dimensions=function(w,h){
this.w=w;
this.h=h;
};
MochiKit.Style.Dimensions.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{w: "+repr(this.w)+", h: "+repr(this.h)+"}";
};
MochiKit.Style.Dimensions.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Style.Coordinates=function(x,y){
this.x=x;
this.y=y;
};
MochiKit.Style.Coordinates.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{x: "+repr(this.x)+", y: "+repr(this.y)+"}";
};
MochiKit.Style.Coordinates.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Base.update(MochiKit.Style,{getStyle:function(elem,_40f){
var dom=MochiKit.DOM;
var d=dom._document;
elem=dom.getElement(elem);
_40f=MochiKit.Base.camelize(_40f);
if(!elem||elem==d){
return undefined;
}
if(_40f=="opacity"&&elem.filters){
var _412=(MochiKit.Style.getStyle(elem,"filter")||"").match(/alpha\(opacity=(.*)\)/);
if(_412&&_412[1]){
return parseFloat(_412[1])/100;
}
return 1;
}
var _413=elem.style?elem.style[_40f]:null;
if(!_413){
if(d.defaultView&&d.defaultView.getComputedStyle){
var css=d.defaultView.getComputedStyle(elem,null);
_40f=_40f.replace(/([A-Z])/g,"-$1").toLowerCase();
_413=css?css.getPropertyValue(_40f):null;
}else{
if(elem.currentStyle){
_413=elem.currentStyle[_40f];
}
}
}
if(_40f=="opacity"){
_413=parseFloat(_413);
}
if(/Opera/.test(navigator.userAgent)&&(MochiKit.Base.find(["left","top","right","bottom"],_40f)!=-1)){
if(MochiKit.Style.getStyle(elem,"position")=="static"){
_413="auto";
}
}
return _413=="auto"?null:_413;
},setStyle:function(elem,_416){
elem=MochiKit.DOM.getElement(elem);
for(var name in _416){
if(name=="opacity"){
MochiKit.Style.setOpacity(elem,_416[name]);
}else{
elem.style[MochiKit.Base.camelize(name)]=_416[name];
}
}
},setOpacity:function(elem,o){
elem=MochiKit.DOM.getElement(elem);
var self=MochiKit.Style;
if(o==1){
var _41b=/Gecko/.test(navigator.userAgent)&&!(/Konqueror|AppleWebKit|KHTML/.test(navigator.userAgent));
elem.style["opacity"]=_41b?0.999999:1;
if(/MSIE/.test(navigator.userAgent)){
elem.style["filter"]=self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"");
}
}else{
if(o<0.00001){
o=0;
}
elem.style["opacity"]=o;
if(/MSIE/.test(navigator.userAgent)){
elem.style["filter"]=self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"")+"alpha(opacity="+o*100+")";
}
}
},getElementPosition:function(elem,_41d){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
elem=dom.getElement(elem);
if(!elem||(!(elem.x&&elem.y)&&(!elem.parentNode===null||self.getStyle(elem,"display")=="none"))){
return undefined;
}
var c=new self.Coordinates(0,0);
var box=null;
var _422=null;
var d=MochiKit.DOM._document;
var de=d.documentElement;
var b=d.body;
if(!elem.parentNode&&elem.x&&elem.y){
c.x+=elem.x||0;
c.y+=elem.y||0;
}else{
if(elem.getBoundingClientRect){
box=elem.getBoundingClientRect();
c.x+=box.left+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
c.y+=box.top+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
return c;
}else{
if(elem.offsetParent){
c.x+=elem.offsetLeft;
c.y+=elem.offsetTop;
_422=elem.offsetParent;
if(_422!=elem){
while(_422){
c.x+=_422.offsetLeft;
c.y+=_422.offsetTop;
_422=_422.offsetParent;
}
}
var ua=navigator.userAgent.toLowerCase();
if((typeof (opera)!="undefined"&&parseFloat(opera.version())<9)||(ua.indexOf("AppleWebKit")!=-1&&self.getStyle(elem,"position")=="absolute")){
c.x-=b.offsetLeft;
c.y-=b.offsetTop;
}
}
}
}
if(typeof (_41d)!="undefined"){
_41d=arguments.callee(_41d);
if(_41d){
c.x-=(_41d.x||0);
c.y-=(_41d.y||0);
}
}
if(elem.parentNode){
_422=elem.parentNode;
}else{
_422=null;
}
while(_422){
var _427=_422.tagName.toUpperCase();
if(_427==="BODY"||_427==="HTML"){
break;
}
var disp=self.getStyle(_422,"display");
if(disp.search(/^inline|table-row.*$/i)){
c.x-=_422.scrollLeft;
c.y-=_422.scrollTop;
}
if(_422.parentNode){
_422=_422.parentNode;
}else{
_422=null;
}
}
return c;
},setElementPosition:function(elem,_42a,_42b){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_42b)=="undefined"){
_42b="px";
}
var _42c={};
var _42d=MochiKit.Base.isUndefinedOrNull;
if(!_42d(_42a.x)){
_42c["left"]=_42a.x+_42b;
}
if(!_42d(_42a.y)){
_42c["top"]=_42a.y+_42b;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_42c});
},getElementDimensions:function(elem){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
if(typeof (elem.w)=="number"||typeof (elem.h)=="number"){
return new self.Dimensions(elem.w||0,elem.h||0);
}
elem=dom.getElement(elem);
if(!elem){
return undefined;
}
var disp=self.getStyle(elem,"display");
if(disp!="none"&&disp!==""&&typeof (disp)!="undefined"){
return new self.Dimensions(elem.offsetWidth||0,elem.offsetHeight||0);
}
var s=elem.style;
var _433=s.visibility;
var _434=s.position;
s.visibility="hidden";
s.position="absolute";
s.display="";
var _435=elem.offsetWidth;
var _436=elem.offsetHeight;
s.display="none";
s.position=_434;
s.visibility=_433;
return new self.Dimensions(_435,_436);
},setElementDimensions:function(elem,_438,_439){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_439)=="undefined"){
_439="px";
}
var _43a={};
var _43b=MochiKit.Base.isUndefinedOrNull;
if(!_43b(_438.w)){
_43a["width"]=_438.w+_439;
}
if(!_43b(_438.h)){
_43a["height"]=_438.h+_439;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_43a});
},setDisplayForElement:function(_43c,_43d){
var _43e=MochiKit.Base.extend(null,arguments,1);
var _43f=MochiKit.DOM.getElement;
for(var i=0;i<_43e.length;i++){
_43d=_43f(_43e[i]);
if(_43d){
_43d.style.display=_43c;
}
}
},getViewportDimensions:function(){
var d=new MochiKit.Style.Dimensions();
var w=MochiKit.DOM._window;
var b=MochiKit.DOM._document.body;
if(w.innerWidth){
d.w=w.innerWidth;
d.h=w.innerHeight;
}else{
if(b.parentElement.clientWidth){
d.w=b.parentElement.clientWidth;
d.h=b.parentElement.clientHeight;
}else{
if(b&&b.clientWidth){
d.w=b.clientWidth;
d.h=b.clientHeight;
}
}
}
return d;
},getViewportPosition:function(){
var c=new MochiKit.Style.Coordinates(0,0);
var d=MochiKit.DOM._document;
var de=d.documentElement;
var db=d.body;
if(de&&(de.scrollTop||de.scrollLeft)){
c.x=de.scrollLeft;
c.y=de.scrollTop;
}else{
if(db){
c.x=db.scrollLeft;
c.y=db.scrollTop;
}
}
return c;
},__new__:function(){
var m=MochiKit.Base;
this.elementPosition=this.getElementPosition;
this.elementDimensions=this.getElementDimensions;
this.hideElement=m.partial(this.setDisplayForElement,"none");
this.showElement=m.partial(this.setDisplayForElement,"block");
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
}});
MochiKit.Style.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Style);
MochiKit.Base._deps("LoggingPane",["Base","Logging"]);
MochiKit.LoggingPane.NAME="MochiKit.LoggingPane";
MochiKit.LoggingPane.VERSION="1.4";
MochiKit.LoggingPane.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.LoggingPane.toString=function(){
return this.__repr__();
};
MochiKit.LoggingPane.createLoggingPane=function(_449){
var m=MochiKit.LoggingPane;
_449=!(!_449);
if(m._loggingPane&&m._loggingPane.inline!=_449){
m._loggingPane.closePane();
m._loggingPane=null;
}
if(!m._loggingPane||m._loggingPane.closed){
m._loggingPane=new m.LoggingPane(_449,MochiKit.Logging.logger);
}
return m._loggingPane;
};
MochiKit.LoggingPane.LoggingPane=function(_44b,_44c){
if(typeof (_44c)=="undefined"||_44c===null){
_44c=MochiKit.Logging.logger;
}
this.logger=_44c;
var _44d=MochiKit.Base.update;
var _44e=MochiKit.Base.updatetree;
var bind=MochiKit.Base.bind;
var _450=MochiKit.Base.clone;
var win=window;
var uid="_MochiKit_LoggingPane";
if(typeof (MochiKit.DOM)!="undefined"){
win=MochiKit.DOM.currentWindow();
}
if(!_44b){
var url=win.location.href.split("?")[0].replace(/[#:\/.><&-]/g,"_");
var name=uid+"_"+url;
var nwin=win.open("",name,"dependent,resizable,height=200");
if(!nwin){
alert("Not able to open debugging window due to pop-up blocking.");
return undefined;
}
nwin.document.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" "+"\"http://www.w3.org/TR/html4/loose.dtd\">"+"<html><head><title>[MochiKit.LoggingPane]</title></head>"+"<body></body></html>");
nwin.document.close();
nwin.document.title+=" "+win.document.title;
win=nwin;
}
var doc=win.document;
this.doc=doc;
var _457=doc.getElementById(uid);
var _458=!!_457;
if(_457&&typeof (_457.loggingPane)!="undefined"){
_457.loggingPane.logger=this.logger;
_457.loggingPane.buildAndApplyFilter();
return _457.loggingPane;
}
if(_458){
var _459;
while((_459=_457.firstChild)){
_457.removeChild(_459);
}
}else{
_457=doc.createElement("div");
_457.id=uid;
}
_457.loggingPane=this;
var _45a=doc.createElement("input");
var _45b=doc.createElement("input");
var _45c=doc.createElement("button");
var _45d=doc.createElement("button");
var _45e=doc.createElement("button");
var _45f=doc.createElement("button");
var _460=doc.createElement("div");
var _461=doc.createElement("div");
var _462=uid+"_Listener";
this.colorTable=_450(this.colorTable);
var _463=[];
var _464=null;
var _465=function(msg){
var _467=msg.level;
if(typeof (_467)=="number"){
_467=MochiKit.Logging.LogLevel[_467];
}
return _467;
};
var _468=function(msg){
return msg.info.join(" ");
};
var _46a=bind(function(msg){
var _46c=_465(msg);
var text=_468(msg);
var c=this.colorTable[_46c];
var p=doc.createElement("span");
p.className="MochiKit-LogMessage MochiKit-LogLevel-"+_46c;
p.style.cssText="margin: 0px; white-space: -moz-pre-wrap; white-space: -o-pre-wrap; white-space: pre-wrap; white-space: pre-line; word-wrap: break-word; wrap-option: emergency; color: "+c;
p.appendChild(doc.createTextNode(_46c+": "+text));
_461.appendChild(p);
_461.appendChild(doc.createElement("br"));
if(_460.offsetHeight>_460.scrollHeight){
_460.scrollTop=0;
}else{
_460.scrollTop=_460.scrollHeight;
}
},this);
var _470=function(msg){
_463[_463.length]=msg;
_46a(msg);
};
var _472=function(){
var _473,_474;
try{
_473=new RegExp(_45a.value);
_474=new RegExp(_45b.value);
}
catch(e){
logDebug("Error in filter regex: "+e.message);
return null;
}
return function(msg){
return (_473.test(_465(msg))&&_474.test(_468(msg)));
};
};
var _476=function(){
while(_461.firstChild){
_461.removeChild(_461.firstChild);
}
};
var _477=function(){
_463=[];
_476();
};
var _478=bind(function(){
if(this.closed){
return;
}
this.closed=true;
if(MochiKit.LoggingPane._loggingPane==this){
MochiKit.LoggingPane._loggingPane=null;
}
this.logger.removeListener(_462);
try{
try{
_457.loggingPane=null;
}
catch(e){
logFatal("Bookmarklet was closed incorrectly.");
}
if(_44b){
_457.parentNode.removeChild(_457);
}else{
this.win.close();
}
}
catch(e){
}
},this);
var _479=function(){
_476();
for(var i=0;i<_463.length;i++){
var msg=_463[i];
if(_464===null||_464(msg)){
_46a(msg);
}
}
};
this.buildAndApplyFilter=function(){
_464=_472();
_479();
this.logger.removeListener(_462);
this.logger.addListener(_462,_464,_470);
};
var _47c=bind(function(){
_463=this.logger.getMessages();
_479();
},this);
var _47d=bind(function(_47e){
_47e=_47e||window.event;
key=_47e.which||_47e.keyCode;
if(key==13){
this.buildAndApplyFilter();
}
},this);
var _47f="display: block; z-index: 1000; left: 0px; bottom: 0px; position: fixed; width: 100%; background-color: white; font: "+this.logFont;
if(_44b){
_47f+="; height: 10em; border-top: 2px solid black";
}else{
_47f+="; height: 100%;";
}
_457.style.cssText=_47f;
if(!_458){
doc.body.appendChild(_457);
}
_47f={"cssText":"width: 33%; display: inline; font: "+this.logFont};
_44e(_45a,{"value":"FATAL|ERROR|WARNING|INFO|DEBUG","onkeypress":_47d,"style":_47f});
_457.appendChild(_45a);
_44e(_45b,{"value":".*","onkeypress":_47d,"style":_47f});
_457.appendChild(_45b);
_47f="width: 8%; display:inline; font: "+this.logFont;
_45c.appendChild(doc.createTextNode("Filter"));
_45c.onclick=bind("buildAndApplyFilter",this);
_45c.style.cssText=_47f;
_457.appendChild(_45c);
_45d.appendChild(doc.createTextNode("Load"));
_45d.onclick=_47c;
_45d.style.cssText=_47f;
_457.appendChild(_45d);
_45e.appendChild(doc.createTextNode("Clear"));
_45e.onclick=_477;
_45e.style.cssText=_47f;
_457.appendChild(_45e);
_45f.appendChild(doc.createTextNode("Close"));
_45f.onclick=_478;
_45f.style.cssText=_47f;
_457.appendChild(_45f);
_460.style.cssText="overflow: auto; width: 100%";
_461.style.cssText="width: 100%; height: "+(_44b?"8em":"100%");
_460.appendChild(_461);
_457.appendChild(_460);
this.buildAndApplyFilter();
_47c();
if(_44b){
this.win=undefined;
}else{
this.win=win;
}
this.inline=_44b;
this.closePane=_478;
this.closed=false;
return this;
};
MochiKit.LoggingPane.LoggingPane.prototype={"logFont":"8pt Verdana,sans-serif","colorTable":{"ERROR":"red","FATAL":"darkred","WARNING":"blue","INFO":"black","DEBUG":"green"}};
MochiKit.LoggingPane.EXPORT_OK=["LoggingPane"];
MochiKit.LoggingPane.EXPORT=["createLoggingPane"];
MochiKit.LoggingPane.__new__=function(){
this.EXPORT_TAGS={":common":this.EXPORT,":all":MochiKit.Base.concat(this.EXPORT,this.EXPORT_OK)};
MochiKit.Base.nameFunctions(this);
MochiKit.LoggingPane._loggingPane=null;
};
MochiKit.LoggingPane.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.LoggingPane);
MochiKit.Base._deps("Color",["Base","DOM","Style"]);
MochiKit.Color.NAME="MochiKit.Color";
MochiKit.Color.VERSION="1.4";
MochiKit.Color.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Color.toString=function(){
return this.__repr__();
};
MochiKit.Color.Color=function(red,_481,blue,_483){
if(typeof (_483)=="undefined"||_483===null){
_483=1;
}
this.rgb={r:red,g:_481,b:blue,a:_483};
};
MochiKit.Color.Color.prototype={__class__:MochiKit.Color.Color,colorWithAlpha:function(_484){
var rgb=this.rgb;
var m=MochiKit.Color;
return m.Color.fromRGB(rgb.r,rgb.g,rgb.b,_484);
},colorWithHue:function(hue){
var hsl=this.asHSL();
hsl.h=hue;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithSaturation:function(_48a){
var hsl=this.asHSL();
hsl.s=_48a;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithLightness:function(_48d){
var hsl=this.asHSL();
hsl.l=_48d;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},darkerColorWithLevel:function(_490){
var hsl=this.asHSL();
hsl.l=Math.max(hsl.l-_490,0);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},lighterColorWithLevel:function(_493){
var hsl=this.asHSL();
hsl.l=Math.min(hsl.l+_493,1);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},blendedColor:function(_496,_497){
if(typeof (_497)=="undefined"||_497===null){
_497=0.5;
}
var sf=1-_497;
var s=this.rgb;
var d=_496.rgb;
var df=_497;
return MochiKit.Color.Color.fromRGB((s.r*sf)+(d.r*df),(s.g*sf)+(d.g*df),(s.b*sf)+(d.b*df),(s.a*sf)+(d.a*df));
},compareRGB:function(_49c){
var a=this.asRGB();
var b=_49c.asRGB();
return MochiKit.Base.compare([a.r,a.g,a.b,a.a],[b.r,b.g,b.b,b.a]);
},isLight:function(){
return this.asHSL().b>0.5;
},isDark:function(){
return (!this.isLight());
},toHSLString:function(){
var c=this.asHSL();
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hslString;
if(!rval){
var mid=(ccc(c.h,360).toFixed(0)+","+ccc(c.s,100).toPrecision(4)+"%"+","+ccc(c.l,100).toPrecision(4)+"%");
var a=c.a;
if(a>=1){
a=1;
rval="hsl("+mid+")";
}else{
if(a<=0){
a=0;
}
rval="hsla("+mid+","+a+")";
}
this._hslString=rval;
}
return rval;
},toRGBString:function(){
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._rgbString;
if(!rval){
var mid=(ccc(c.r,255).toFixed(0)+","+ccc(c.g,255).toFixed(0)+","+ccc(c.b,255).toFixed(0));
if(c.a!=1){
rval="rgba("+mid+","+c.a+")";
}else{
rval="rgb("+mid+")";
}
this._rgbString=rval;
}
return rval;
},asRGB:function(){
return MochiKit.Base.clone(this.rgb);
},toHexString:function(){
var m=MochiKit.Color;
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hexString;
if(!rval){
rval=("#"+m.toColorPart(ccc(c.r,255))+m.toColorPart(ccc(c.g,255))+m.toColorPart(ccc(c.b,255)));
this._hexString=rval;
}
return rval;
},asHSV:function(){
var hsv=this.hsv;
var c=this.rgb;
if(typeof (hsv)=="undefined"||hsv===null){
hsv=MochiKit.Color.rgbToHSV(this.rgb);
this.hsv=hsv;
}
return MochiKit.Base.clone(hsv);
},asHSL:function(){
var hsl=this.hsl;
var c=this.rgb;
if(typeof (hsl)=="undefined"||hsl===null){
hsl=MochiKit.Color.rgbToHSL(this.rgb);
this.hsl=hsl;
}
return MochiKit.Base.clone(hsl);
},toString:function(){
return this.toRGBString();
},repr:function(){
var c=this.rgb;
var col=[c.r,c.g,c.b,c.a];
return this.__class__.NAME+"("+col.join(", ")+")";
}};
MochiKit.Base.update(MochiKit.Color.Color,{fromRGB:function(red,_4b3,blue,_4b5){
var _4b6=MochiKit.Color.Color;
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_4b3=rgb.g;
blue=rgb.b;
if(typeof (rgb.a)=="undefined"){
_4b5=undefined;
}else{
_4b5=rgb.a;
}
}
return new _4b6(red,_4b3,blue,_4b5);
},fromHSL:function(hue,_4b9,_4ba,_4bb){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hslToRGB.apply(m,arguments));
},fromHSV:function(hue,_4be,_4bf,_4c0){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hsvToRGB.apply(m,arguments));
},fromName:function(name){
var _4c3=MochiKit.Color.Color;
if(name.charAt(0)=="\""){
name=name.substr(1,name.length-2);
}
var _4c4=_4c3._namedColors[name.toLowerCase()];
if(typeof (_4c4)=="string"){
return _4c3.fromHexString(_4c4);
}else{
if(name=="transparent"){
return _4c3.transparentColor();
}
}
return null;
},fromString:function(_4c5){
var self=MochiKit.Color.Color;
var _4c7=_4c5.substr(0,3);
if(_4c7=="rgb"){
return self.fromRGBString(_4c5);
}else{
if(_4c7=="hsl"){
return self.fromHSLString(_4c5);
}else{
if(_4c5.charAt(0)=="#"){
return self.fromHexString(_4c5);
}
}
}
return self.fromName(_4c5);
},fromHexString:function(_4c8){
if(_4c8.charAt(0)=="#"){
_4c8=_4c8.substring(1);
}
var _4c9=[];
var i,hex;
if(_4c8.length==3){
for(i=0;i<3;i++){
hex=_4c8.substr(i,1);
_4c9.push(parseInt(hex+hex,16)/255);
}
}else{
for(i=0;i<6;i+=2){
hex=_4c8.substr(i,2);
_4c9.push(parseInt(hex,16)/255);
}
}
var _4cc=MochiKit.Color.Color;
return _4cc.fromRGB.apply(_4cc,_4c9);
},_fromColorString:function(pre,_4ce,_4cf,_4d0){
if(_4d0.indexOf(pre)===0){
_4d0=_4d0.substring(_4d0.indexOf("(",3)+1,_4d0.length-1);
}
var _4d1=_4d0.split(/\s*,\s*/);
var _4d2=[];
for(var i=0;i<_4d1.length;i++){
var c=_4d1[i];
var val;
var _4d6=c.substring(c.length-3);
if(c.charAt(c.length-1)=="%"){
val=0.01*parseFloat(c.substring(0,c.length-1));
}else{
if(_4d6=="deg"){
val=parseFloat(c)/360;
}else{
if(_4d6=="rad"){
val=parseFloat(c)/(Math.PI*2);
}else{
val=_4cf[i]*parseFloat(c);
}
}
}
_4d2.push(val);
}
return this[_4ce].apply(this,_4d2);
},fromComputedStyle:function(elem,_4d8){
var d=MochiKit.DOM;
var cls=MochiKit.Color.Color;
for(elem=d.getElement(elem);elem;elem=elem.parentNode){
var _4db=MochiKit.Style.getStyle.apply(d,arguments);
if(!_4db){
continue;
}
var _4dc=cls.fromString(_4db);
if(!_4dc){
break;
}
if(_4dc.asRGB().a>0){
return _4dc;
}
}
return null;
},fromBackground:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"backgroundColor","background-color")||cls.whiteColor();
},fromText:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"color","color")||cls.blackColor();
},namedColors:function(){
return MochiKit.Base.clone(MochiKit.Color.Color._namedColors);
}});
MochiKit.Base.update(MochiKit.Color,{clampColorComponent:function(v,_4e2){
v*=_4e2;
if(v<0){
return 0;
}else{
if(v>_4e2){
return _4e2;
}else{
return v;
}
}
},_hslValue:function(n1,n2,hue){
if(hue>6){
hue-=6;
}else{
if(hue<0){
hue+=6;
}
}
var val;
if(hue<1){
val=n1+(n2-n1)*hue;
}else{
if(hue<3){
val=n2;
}else{
if(hue<4){
val=n1+(n2-n1)*(4-hue);
}else{
val=n1;
}
}
}
return val;
},hsvToRGB:function(hue,_4e8,_4e9,_4ea){
if(arguments.length==1){
var hsv=hue;
hue=hsv.h;
_4e8=hsv.s;
_4e9=hsv.v;
_4ea=hsv.a;
}
var red;
var _4ed;
var blue;
if(_4e8===0){
red=_4e9;
_4ed=_4e9;
blue=_4e9;
}else{
var i=Math.floor(hue*6);
var f=(hue*6)-i;
var p=_4e9*(1-_4e8);
var q=_4e9*(1-(_4e8*f));
var t=_4e9*(1-(_4e8*(1-f)));
switch(i){
case 1:
red=q;
_4ed=_4e9;
blue=p;
break;
case 2:
red=p;
_4ed=_4e9;
blue=t;
break;
case 3:
red=p;
_4ed=q;
blue=_4e9;
break;
case 4:
red=t;
_4ed=p;
blue=_4e9;
break;
case 5:
red=_4e9;
_4ed=p;
blue=q;
break;
case 6:
case 0:
red=_4e9;
_4ed=t;
blue=p;
break;
}
}
return {r:red,g:_4ed,b:blue,a:_4ea};
},hslToRGB:function(hue,_4f5,_4f6,_4f7){
if(arguments.length==1){
var hsl=hue;
hue=hsl.h;
_4f5=hsl.s;
_4f6=hsl.l;
_4f7=hsl.a;
}
var red;
var _4fa;
var blue;
if(_4f5===0){
red=_4f6;
_4fa=_4f6;
blue=_4f6;
}else{
var m2;
if(_4f6<=0.5){
m2=_4f6*(1+_4f5);
}else{
m2=_4f6+_4f5-(_4f6*_4f5);
}
var m1=(2*_4f6)-m2;
var f=MochiKit.Color._hslValue;
var h6=hue*6;
red=f(m1,m2,h6+2);
_4fa=f(m1,m2,h6);
blue=f(m1,m2,h6-2);
}
return {r:red,g:_4fa,b:blue,a:_4f7};
},rgbToHSV:function(red,_501,blue,_503){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_501=rgb.g;
blue=rgb.b;
_503=rgb.a;
}
var max=Math.max(Math.max(red,_501),blue);
var min=Math.min(Math.min(red,_501),blue);
var hue;
var _508;
var _509=max;
if(min==max){
hue=0;
_508=0;
}else{
var _50a=(max-min);
_508=_50a/max;
if(red==max){
hue=(_501-blue)/_50a;
}else{
if(_501==max){
hue=2+((blue-red)/_50a);
}else{
hue=4+((red-_501)/_50a);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_508,v:_509,a:_503};
},rgbToHSL:function(red,_50c,blue,_50e){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_50c=rgb.g;
blue=rgb.b;
_50e=rgb.a;
}
var max=Math.max(red,Math.max(_50c,blue));
var min=Math.min(red,Math.min(_50c,blue));
var hue;
var _513;
var _514=(max+min)/2;
var _515=max-min;
if(_515===0){
hue=0;
_513=0;
}else{
if(_514<=0.5){
_513=_515/(max+min);
}else{
_513=_515/(2-max-min);
}
if(red==max){
hue=(_50c-blue)/_515;
}else{
if(_50c==max){
hue=2+((blue-red)/_515);
}else{
hue=4+((red-_50c)/_515);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_513,l:_514,a:_50e};
},toColorPart:function(num){
num=Math.round(num);
var _517=num.toString(16);
if(num<16){
return "0"+_517;
}
return _517;
},__new__:function(){
var m=MochiKit.Base;
this.Color.fromRGBString=m.bind(this.Color._fromColorString,this.Color,"rgb","fromRGB",[1/255,1/255,1/255,1]);
this.Color.fromHSLString=m.bind(this.Color._fromColorString,this.Color,"hsl","fromHSL",[1/360,0.01,0.01,1]);
var _519=1/3;
var _51a={black:[0,0,0],blue:[0,0,1],brown:[0.6,0.4,0.2],cyan:[0,1,1],darkGray:[_519,_519,_519],gray:[0.5,0.5,0.5],green:[0,1,0],lightGray:[2*_519,2*_519,2*_519],magenta:[1,0,1],orange:[1,0.5,0],purple:[0.5,0,0.5],red:[1,0,0],transparent:[0,0,0,0],white:[1,1,1],yellow:[1,1,0]};
var _51b=function(name,r,g,b,a){
var rval=this.fromRGB(r,g,b,a);
this[name]=function(){
return rval;
};
return rval;
};
for(var k in _51a){
var name=k+"Color";
var _524=m.concat([_51b,this.Color,name],_51a[k]);
this.Color[name]=m.bind.apply(null,_524);
}
var _525=function(){
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof Color)){
return false;
}
}
return true;
};
var _527=function(a,b){
return a.compareRGB(b);
};
m.nameFunctions(this);
m.registerComparator(this.Color.NAME,_525,_527);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
}});
MochiKit.Color.EXPORT=["Color"];
MochiKit.Color.EXPORT_OK=["clampColorComponent","rgbToHSL","hslToRGB","rgbToHSV","hsvToRGB","toColorPart"];
MochiKit.Color.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Color);
MochiKit.Color.Color._namedColors={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"};
MochiKit.Base._deps("Signal",["Base","DOM","Style"]);
MochiKit.Signal.NAME="MochiKit.Signal";
MochiKit.Signal.VERSION="1.4";
MochiKit.Signal._observers=[];
MochiKit.Signal.Event=function(src,e){
this._event=e||window.event;
this._src=src;
};
MochiKit.Base.update(MochiKit.Signal.Event.prototype,{__repr__:function(){
var repr=MochiKit.Base.repr;
var str="{event(): "+repr(this.event())+", src(): "+repr(this.src())+", type(): "+repr(this.type())+", target(): "+repr(this.target());
if(this.type()&&this.type().indexOf("key")===0||this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu"){
str+=", modifier(): "+"{alt: "+repr(this.modifier().alt)+", ctrl: "+repr(this.modifier().ctrl)+", meta: "+repr(this.modifier().meta)+", shift: "+repr(this.modifier().shift)+", any: "+repr(this.modifier().any)+"}";
}
if(this.type()&&this.type().indexOf("key")===0){
str+=", key(): {code: "+repr(this.key().code)+", string: "+repr(this.key().string)+"}";
}
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
str+=", mouse(): {page: "+repr(this.mouse().page)+", client: "+repr(this.mouse().client);
if(this.type()!="mousemove"){
str+=", button: {left: "+repr(this.mouse().button.left)+", middle: "+repr(this.mouse().button.middle)+", right: "+repr(this.mouse().button.right)+"}}";
}else{
str+="}";
}
}
if(this.type()=="mouseover"||this.type()=="mouseout"||this.type()=="mouseenter"||this.type()=="mouseleave"){
str+=", relatedTarget(): "+repr(this.relatedTarget());
}
str+="}";
return str;
},toString:function(){
return this.__repr__();
},src:function(){
return this._src;
},event:function(){
return this._event;
},type:function(){
return this._event.type||undefined;
},target:function(){
return this._event.target||this._event.srcElement;
},_relatedTarget:null,relatedTarget:function(){
if(this._relatedTarget!==null){
return this._relatedTarget;
}
var elem=null;
if(this.type()=="mouseover"||this.type()=="mouseenter"){
elem=(this._event.relatedTarget||this._event.fromElement);
}else{
if(this.type()=="mouseout"||this.type()=="mouseleave"){
elem=(this._event.relatedTarget||this._event.toElement);
}
}
if(elem!==null){
this._relatedTarget=elem;
return elem;
}
return undefined;
},_modifier:null,modifier:function(){
if(this._modifier!==null){
return this._modifier;
}
var m={};
m.alt=this._event.altKey;
m.ctrl=this._event.ctrlKey;
m.meta=this._event.metaKey||false;
m.shift=this._event.shiftKey;
m.any=m.alt||m.ctrl||m.shift||m.meta;
this._modifier=m;
return m;
},_key:null,key:function(){
if(this._key!==null){
return this._key;
}
var k={};
if(this.type()&&this.type().indexOf("key")===0){
if(this.type()=="keydown"||this.type()=="keyup"){
k.code=this._event.keyCode;
k.string=(MochiKit.Signal._specialKeys[k.code]||"KEY_UNKNOWN");
this._key=k;
return k;
}else{
if(this.type()=="keypress"){
k.code=0;
k.string="";
if(typeof (this._event.charCode)!="undefined"&&this._event.charCode!==0&&!MochiKit.Signal._specialMacKeys[this._event.charCode]){
k.code=this._event.charCode;
k.string=String.fromCharCode(k.code);
}else{
if(this._event.keyCode&&typeof (this._event.charCode)=="undefined"){
k.code=this._event.keyCode;
k.string=String.fromCharCode(k.code);
}
}
this._key=k;
return k;
}
}
}
return undefined;
},_mouse:null,mouse:function(){
if(this._mouse!==null){
return this._mouse;
}
var m={};
var e=this._event;
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
m.client=new MochiKit.Style.Coordinates(0,0);
if(e.clientX||e.clientY){
m.client.x=(!e.clientX||e.clientX<0)?0:e.clientX;
m.client.y=(!e.clientY||e.clientY<0)?0:e.clientY;
}
m.page=new MochiKit.Style.Coordinates(0,0);
if(e.pageX||e.pageY){
m.page.x=(!e.pageX||e.pageX<0)?0:e.pageX;
m.page.y=(!e.pageY||e.pageY<0)?0:e.pageY;
}else{
var de=MochiKit.DOM._document.documentElement;
var b=MochiKit.DOM._document.body;
m.page.x=e.clientX+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
m.page.y=e.clientY+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
}
if(this.type()!="mousemove"){
m.button={};
m.button.left=false;
m.button.right=false;
m.button.middle=false;
if(e.which){
m.button.left=(e.which==1);
m.button.middle=(e.which==2);
m.button.right=(e.which==3);
}else{
m.button.left=!!(e.button&1);
m.button.right=!!(e.button&2);
m.button.middle=!!(e.button&4);
}
}
this._mouse=m;
return m;
}
return undefined;
},stop:function(){
this.stopPropagation();
this.preventDefault();
},stopPropagation:function(){
if(this._event.stopPropagation){
this._event.stopPropagation();
}else{
this._event.cancelBubble=true;
}
},preventDefault:function(){
if(this._event.preventDefault){
this._event.preventDefault();
}else{
if(this._confirmUnload===null){
this._event.returnValue=false;
}
}
},_confirmUnload:null,confirmUnload:function(msg){
if(this.type()=="beforeunload"){
this._confirmUnload=msg;
this._event.returnValue=msg;
}
}});
MochiKit.Signal._specialMacKeys={3:"KEY_ENTER",63289:"KEY_NUM_PAD_CLEAR",63276:"KEY_PAGE_UP",63277:"KEY_PAGE_DOWN",63275:"KEY_END",63273:"KEY_HOME",63234:"KEY_ARROW_LEFT",63232:"KEY_ARROW_UP",63235:"KEY_ARROW_RIGHT",63233:"KEY_ARROW_DOWN",63302:"KEY_INSERT",63272:"KEY_DELETE"};
(function(){
var _536=MochiKit.Signal._specialMacKeys;
for(i=63236;i<=63242;i++){
_536[i]="KEY_F"+(i-63236+1);
}
})();
MochiKit.Signal._specialKeys={8:"KEY_BACKSPACE",9:"KEY_TAB",12:"KEY_NUM_PAD_CLEAR",13:"KEY_ENTER",16:"KEY_SHIFT",17:"KEY_CTRL",18:"KEY_ALT",19:"KEY_PAUSE",20:"KEY_CAPS_LOCK",27:"KEY_ESCAPE",32:"KEY_SPACEBAR",33:"KEY_PAGE_UP",34:"KEY_PAGE_DOWN",35:"KEY_END",36:"KEY_HOME",37:"KEY_ARROW_LEFT",38:"KEY_ARROW_UP",39:"KEY_ARROW_RIGHT",40:"KEY_ARROW_DOWN",44:"KEY_PRINT_SCREEN",45:"KEY_INSERT",46:"KEY_DELETE",59:"KEY_SEMICOLON",91:"KEY_WINDOWS_LEFT",92:"KEY_WINDOWS_RIGHT",93:"KEY_SELECT",106:"KEY_NUM_PAD_ASTERISK",107:"KEY_NUM_PAD_PLUS_SIGN",109:"KEY_NUM_PAD_HYPHEN-MINUS",110:"KEY_NUM_PAD_FULL_STOP",111:"KEY_NUM_PAD_SOLIDUS",144:"KEY_NUM_LOCK",145:"KEY_SCROLL_LOCK",186:"KEY_SEMICOLON",187:"KEY_EQUALS_SIGN",188:"KEY_COMMA",189:"KEY_HYPHEN-MINUS",190:"KEY_FULL_STOP",191:"KEY_SOLIDUS",192:"KEY_GRAVE_ACCENT",219:"KEY_LEFT_SQUARE_BRACKET",220:"KEY_REVERSE_SOLIDUS",221:"KEY_RIGHT_SQUARE_BRACKET",222:"KEY_APOSTROPHE"};
(function(){
var _537=MochiKit.Signal._specialKeys;
for(var i=48;i<=57;i++){
_537[i]="KEY_"+(i-48);
}
for(i=65;i<=90;i++){
_537[i]="KEY_"+String.fromCharCode(i);
}
for(i=96;i<=105;i++){
_537[i]="KEY_NUM_PAD_"+(i-96);
}
for(i=112;i<=123;i++){
_537[i]="KEY_F"+(i-112+1);
}
})();
MochiKit.Signal.Ident=function(_539){
this.source=_539.source;
this.signal=_539.signal;
this.listener=_539.listener;
this.isDOM=_539.isDOM;
this.objOrFunc=_539.objOrFunc;
this.funcOrStr=_539.funcOrStr;
this.connected=_539.connected;
};
MochiKit.Signal.Ident.prototype={};
MochiKit.Base.update(MochiKit.Signal,{__repr__:function(){
return "["+this.NAME+" "+this.VERSION+"]";
},toString:function(){
return this.__repr__();
},_unloadCache:function(){
var self=MochiKit.Signal;
var _53b=self._observers;
for(var i=0;i<_53b.length;i++){
if(_53b[i].signal!=="onload"&&_53b[i].signal!=="onunload"){
self._disconnect(_53b[i]);
}
}
},_listener:function(src,sig,func,obj,_541){
var self=MochiKit.Signal;
var E=self.Event;
if(!_541){
if(typeof (func.im_self)=="undefined"){
return MochiKit.Base.bind(func,obj);
}else{
return func;
}
}
obj=obj||src;
if(typeof (func)=="string"){
if(sig==="onload"||sig==="onunload"){
return function(_544){
obj[func].apply(obj,[new E(src,_544)]);
var _545=new MochiKit.Signal.Ident({source:src,signal:sig,objOrFunc:obj,funcOrStr:func});
MochiKit.Signal._disconnect(_545);
};
}else{
return function(_546){
obj[func].apply(obj,[new E(src,_546)]);
};
}
}else{
if(sig==="onload"||sig==="onunload"){
return function(_547){
func.apply(obj,[new E(src,_547)]);
var _548=new MochiKit.Signal.Ident({source:src,signal:sig,objOrFunc:func});
MochiKit.Signal._disconnect(_548);
};
}else{
return function(_549){
func.apply(obj,[new E(src,_549)]);
};
}
}
},_browserAlreadyHasMouseEnterAndLeave:function(){
return /MSIE/.test(navigator.userAgent);
},_mouseEnterListener:function(src,sig,func,obj){
var E=MochiKit.Signal.Event;
return function(_54f){
var e=new E(src,_54f);
try{
e.relatedTarget().nodeName;
}
catch(err){
return;
}
e.stop();
if(MochiKit.DOM.isChildNode(e.relatedTarget(),src)){
return;
}
e.type=function(){
return sig;
};
if(typeof (func)=="string"){
return obj[func].apply(obj,[e]);
}else{
return func.apply(obj,[e]);
}
};
},_getDestPair:function(_551,_552){
var obj=null;
var func=null;
if(typeof (_552)!="undefined"){
obj=_551;
func=_552;
if(typeof (_552)=="string"){
if(typeof (_551[_552])!="function"){
throw new Error("'funcOrStr' must be a function on 'objOrFunc'");
}
}else{
if(typeof (_552)!="function"){
throw new Error("'funcOrStr' must be a function or string");
}
}
}else{
if(typeof (_551)!="function"){
throw new Error("'objOrFunc' must be a function if 'funcOrStr' is not given");
}else{
func=_551;
}
}
return [obj,func];
},connect:function(src,sig,_557,_558){
src=MochiKit.DOM.getElement(src);
var self=MochiKit.Signal;
if(typeof (sig)!="string"){
throw new Error("'sig' must be a string");
}
var _55a=self._getDestPair(_557,_558);
var obj=_55a[0];
var func=_55a[1];
if(typeof (obj)=="undefined"||obj===null){
obj=src;
}
var _55d=!!(src.addEventListener||src.attachEvent);
if(_55d&&(sig==="onmouseenter"||sig==="onmouseleave")&&!self._browserAlreadyHasMouseEnterAndLeave()){
var _55e=self._mouseEnterListener(src,sig.substr(2),func,obj);
if(sig==="onmouseenter"){
sig="onmouseover";
}else{
sig="onmouseout";
}
}else{
var _55e=self._listener(src,sig,func,obj,_55d);
}
if(src.addEventListener){
src.addEventListener(sig.substr(2),_55e,false);
}else{
if(src.attachEvent){
src.attachEvent(sig,_55e);
}
}
var _55f=new MochiKit.Signal.Ident({source:src,signal:sig,listener:_55e,isDOM:_55d,objOrFunc:_557,funcOrStr:_558,connected:true});
self._observers.push(_55f);
if(!_55d&&typeof (src.__connect__)=="function"){
var args=MochiKit.Base.extend([_55f],arguments,1);
src.__connect__.apply(src,args);
}
return _55f;
},_disconnect:function(_561){
if(!_561.connected){
return;
}
_561.connected=false;
if(!_561.isDOM){
return;
}
var src=_561.source;
var sig=_561.signal;
var _564=_561.listener;
if(src.removeEventListener){
src.removeEventListener(sig.substr(2),_564,false);
}else{
if(src.detachEvent){
src.detachEvent(sig,_564);
}else{
throw new Error("'src' must be a DOM element");
}
}
},disconnect:function(_565){
var self=MochiKit.Signal;
var _567=self._observers;
var m=MochiKit.Base;
if(arguments.length>1){
var src=MochiKit.DOM.getElement(arguments[0]);
var sig=arguments[1];
var obj=arguments[2];
var func=arguments[3];
for(var i=_567.length-1;i>=0;i--){
var o=_567[i];
if(o.source===src&&o.signal===sig&&o.objOrFunc===obj&&o.funcOrStr===func){
self._disconnect(o);
if(!self._lock){
_567.splice(i,1);
}else{
self._dirty=true;
}
return true;
}
}
}else{
var idx=m.findIdentical(_567,_565);
if(idx>=0){
self._disconnect(_565);
if(!self._lock){
_567.splice(idx,1);
}else{
self._dirty=true;
}
return true;
}
}
return false;
},disconnectAllTo:function(_570,_571){
var self=MochiKit.Signal;
var _573=self._observers;
var _574=self._disconnect;
var _575=self._lock;
var _576=self._dirty;
if(typeof (_571)==="undefined"){
_571=null;
}
for(var i=_573.length-1;i>=0;i--){
var _578=_573[i];
if(_578.objOrFunc===_570&&(_571===null||_578.funcOrStr===_571)){
_574(_578);
if(_575){
_576=true;
}else{
_573.splice(i,1);
}
}
}
self._dirty=_576;
},disconnectAll:function(src,sig){
src=MochiKit.DOM.getElement(src);
var m=MochiKit.Base;
var _57c=m.flattenArguments(m.extend(null,arguments,1));
var self=MochiKit.Signal;
var _57e=self._disconnect;
var _57f=self._observers;
var i,_581;
var _582=self._lock;
var _583=self._dirty;
if(_57c.length===0){
for(i=_57f.length-1;i>=0;i--){
_581=_57f[i];
if(_581.source===src){
_57e(_581);
if(!_582){
_57f.splice(i,1);
}else{
_583=true;
}
}
}
}else{
var sigs={};
for(i=0;i<_57c.length;i++){
sigs[_57c[i]]=true;
}
for(i=_57f.length-1;i>=0;i--){
_581=_57f[i];
if(_581.source===src&&_581.signal in sigs){
_57e(_581);
if(!_582){
_57f.splice(i,1);
}else{
_583=true;
}
}
}
}
self._dirty=_583;
},signal:function(src,sig){
var self=MochiKit.Signal;
var _588=self._observers;
src=MochiKit.DOM.getElement(src);
var args=MochiKit.Base.extend(null,arguments,2);
var _58a=[];
self._lock=true;
for(var i=0;i<_588.length;i++){
var _58c=_588[i];
if(_58c.source===src&&_58c.signal===sig&&_58c.connected){
try{
_58c.listener.apply(src,args);
}
catch(e){
_58a.push(e);
}
}
}
self._lock=false;
if(self._dirty){
self._dirty=false;
for(var i=_588.length-1;i>=0;i--){
if(!_588[i].connected){
_588.splice(i,1);
}
}
}
if(_58a.length==1){
throw _58a[0];
}else{
if(_58a.length>1){
var e=new Error("Multiple errors thrown in handling 'sig', see errors property");
e.errors=_58a;
throw e;
}
}
}});
MochiKit.Signal.EXPORT_OK=[];
MochiKit.Signal.EXPORT=["connect","disconnect","signal","disconnectAll","disconnectAllTo"];
MochiKit.Signal.__new__=function(win){
var m=MochiKit.Base;
this._document=document;
this._window=win;
this._lock=false;
this._dirty=false;
try{
this.connect(window,"onunload",this._unloadCache);
}
catch(e){
}
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Signal.__new__(this);
if(MochiKit.__export__){
connect=MochiKit.Signal.connect;
disconnect=MochiKit.Signal.disconnect;
disconnectAll=MochiKit.Signal.disconnectAll;
signal=MochiKit.Signal.signal;
}
MochiKit.Base._exportSymbols(this,MochiKit.Signal);
MochiKit.Base._deps("Position",["Base","DOM","Style"]);
MochiKit.Position.NAME="MochiKit.Position";
MochiKit.Position.VERSION="1.4";
MochiKit.Position.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Position.toString=function(){
return this.__repr__();
};
MochiKit.Position.EXPORT_OK=[];
MochiKit.Position.EXPORT=[];
MochiKit.Base.update(MochiKit.Position,{includeScrollOffsets:false,prepare:function(){
var _590=window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0;
var _591=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;
this.windowOffset=new MochiKit.Style.Coordinates(_590,_591);
},cumulativeOffset:function(_592){
var _593=0;
var _594=0;
do{
_593+=_592.offsetTop||0;
_594+=_592.offsetLeft||0;
_592=_592.offsetParent;
}while(_592);
return new MochiKit.Style.Coordinates(_594,_593);
},realOffset:function(_595){
var _596=0;
var _597=0;
do{
_596+=_595.scrollTop||0;
_597+=_595.scrollLeft||0;
_595=_595.parentNode;
}while(_595);
return new MochiKit.Style.Coordinates(_597,_596);
},within:function(_598,x,y){
if(this.includeScrollOffsets){
return this.withinIncludingScrolloffsets(_598,x,y);
}
this.xcomp=x;
this.ycomp=y;
this.offset=this.cumulativeOffset(_598);
if(_598.style.position=="fixed"){
this.offset.x+=this.windowOffset.x;
this.offset.y+=this.windowOffset.y;
}
return (y>=this.offset.y&&y<this.offset.y+_598.offsetHeight&&x>=this.offset.x&&x<this.offset.x+_598.offsetWidth);
},withinIncludingScrolloffsets:function(_59b,x,y){
var _59e=this.realOffset(_59b);
this.xcomp=x+_59e.x-this.windowOffset.x;
this.ycomp=y+_59e.y-this.windowOffset.y;
this.offset=this.cumulativeOffset(_59b);
return (this.ycomp>=this.offset.y&&this.ycomp<this.offset.y+_59b.offsetHeight&&this.xcomp>=this.offset.x&&this.xcomp<this.offset.x+_59b.offsetWidth);
},overlap:function(mode,_5a0){
if(!mode){
return 0;
}
if(mode=="vertical"){
return ((this.offset.y+_5a0.offsetHeight)-this.ycomp)/_5a0.offsetHeight;
}
if(mode=="horizontal"){
return ((this.offset.x+_5a0.offsetWidth)-this.xcomp)/_5a0.offsetWidth;
}
},absolutize:function(_5a1){
_5a1=MochiKit.DOM.getElement(_5a1);
if(_5a1.style.position=="absolute"){
return;
}
MochiKit.Position.prepare();
var _5a2=MochiKit.Position.positionedOffset(_5a1);
var _5a3=_5a1.clientWidth;
var _5a4=_5a1.clientHeight;
var _5a5={"position":_5a1.style.position,"left":_5a2.x-parseFloat(_5a1.style.left||0),"top":_5a2.y-parseFloat(_5a1.style.top||0),"width":_5a1.style.width,"height":_5a1.style.height};
_5a1.style.position="absolute";
_5a1.style.top=_5a2.y+"px";
_5a1.style.left=_5a2.x+"px";
_5a1.style.width=_5a3+"px";
_5a1.style.height=_5a4+"px";
return _5a5;
},positionedOffset:function(_5a6){
var _5a7=0,_5a8=0;
do{
_5a7+=_5a6.offsetTop||0;
_5a8+=_5a6.offsetLeft||0;
_5a6=_5a6.offsetParent;
if(_5a6){
p=MochiKit.Style.getStyle(_5a6,"position");
if(p=="relative"||p=="absolute"){
break;
}
}
}while(_5a6);
return new MochiKit.Style.Coordinates(_5a8,_5a7);
},relativize:function(_5a9,_5aa){
_5a9=MochiKit.DOM.getElement(_5a9);
if(_5a9.style.position=="relative"){
return;
}
MochiKit.Position.prepare();
var top=parseFloat(_5a9.style.top||0)-(_5aa["top"]||0);
var left=parseFloat(_5a9.style.left||0)-(_5aa["left"]||0);
_5a9.style.position=_5aa["position"];
_5a9.style.top=top+"px";
_5a9.style.left=left+"px";
_5a9.style.width=_5aa["width"];
_5a9.style.height=_5aa["height"];
},clone:function(_5ad,_5ae){
_5ad=MochiKit.DOM.getElement(_5ad);
_5ae=MochiKit.DOM.getElement(_5ae);
_5ae.style.position="absolute";
var _5af=this.cumulativeOffset(_5ad);
_5ae.style.top=_5af.y+"px";
_5ae.style.left=_5af.x+"px";
_5ae.style.width=_5ad.offsetWidth+"px";
_5ae.style.height=_5ad.offsetHeight+"px";
},page:function(_5b0){
var _5b1=0;
var _5b2=0;
var _5b3=_5b0;
do{
_5b1+=_5b3.offsetTop||0;
_5b2+=_5b3.offsetLeft||0;
if(_5b3.offsetParent==document.body&&MochiKit.Style.getStyle(_5b3,"position")=="absolute"){
break;
}
}while(_5b3=_5b3.offsetParent);
_5b3=_5b0;
do{
_5b1-=_5b3.scrollTop||0;
_5b2-=_5b3.scrollLeft||0;
}while(_5b3=_5b3.parentNode);
return new MochiKit.Style.Coordinates(_5b2,_5b1);
}});
MochiKit.Position.__new__=function(win){
var m=MochiKit.Base;
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Position.__new__(this);
MochiKit.Base._deps("Visual",["Base","DOM","Style","Color","Position"]);
MochiKit.Visual.NAME="MochiKit.Visual";
MochiKit.Visual.VERSION="1.4";
MochiKit.Visual.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Visual.toString=function(){
return this.__repr__();
};
MochiKit.Visual._RoundCorners=function(e,_5b7){
e=MochiKit.DOM.getElement(e);
this._setOptions(_5b7);
if(this.options.__unstable__wrapElement){
e=this._doWrap(e);
}
var _5b8=this.options.color;
var C=MochiKit.Color.Color;
if(this.options.color==="fromElement"){
_5b8=C.fromBackground(e);
}else{
if(!(_5b8 instanceof C)){
_5b8=C.fromString(_5b8);
}
}
this.isTransparent=(_5b8.asRGB().a<=0);
var _5ba=this.options.bgColor;
if(this.options.bgColor==="fromParent"){
_5ba=C.fromBackground(e.offsetParent);
}else{
if(!(_5ba instanceof C)){
_5ba=C.fromString(_5ba);
}
}
this._roundCornersImpl(e,_5b8,_5ba);
};
MochiKit.Visual._RoundCorners.prototype={_doWrap:function(e){
var _5bc=e.parentNode;
var doc=MochiKit.DOM.currentDocument();
if(typeof (doc.defaultView)==="undefined"||doc.defaultView===null){
return e;
}
var _5be=doc.defaultView.getComputedStyle(e,null);
if(typeof (_5be)==="undefined"||_5be===null){
return e;
}
var _5bf=MochiKit.DOM.DIV({"style":{display:"block",marginTop:_5be.getPropertyValue("padding-top"),marginRight:_5be.getPropertyValue("padding-right"),marginBottom:_5be.getPropertyValue("padding-bottom"),marginLeft:_5be.getPropertyValue("padding-left"),padding:"0px"}});
_5bf.innerHTML=e.innerHTML;
e.innerHTML="";
e.appendChild(_5bf);
return e;
},_roundCornersImpl:function(e,_5c1,_5c2){
if(this.options.border){
this._renderBorder(e,_5c2);
}
if(this._isTopRounded()){
this._roundTopCorners(e,_5c1,_5c2);
}
if(this._isBottomRounded()){
this._roundBottomCorners(e,_5c1,_5c2);
}
},_renderBorder:function(el,_5c4){
var _5c5="1px solid "+this._borderColor(_5c4);
var _5c6="border-left: "+_5c5;
var _5c7="border-right: "+_5c5;
var _5c8="style='"+_5c6+";"+_5c7+"'";
el.innerHTML="<div "+_5c8+">"+el.innerHTML+"</div>";
},_roundTopCorners:function(el,_5ca,_5cb){
var _5cc=this._createCorner(_5cb);
for(var i=0;i<this.options.numSlices;i++){
_5cc.appendChild(this._createCornerSlice(_5ca,_5cb,i,"top"));
}
el.style.paddingTop=0;
el.insertBefore(_5cc,el.firstChild);
},_roundBottomCorners:function(el,_5cf,_5d0){
var _5d1=this._createCorner(_5d0);
for(var i=(this.options.numSlices-1);i>=0;i--){
_5d1.appendChild(this._createCornerSlice(_5cf,_5d0,i,"bottom"));
}
el.style.paddingBottom=0;
el.appendChild(_5d1);
},_createCorner:function(_5d3){
var dom=MochiKit.DOM;
return dom.DIV({style:{backgroundColor:_5d3.toString()}});
},_createCornerSlice:function(_5d5,_5d6,n,_5d8){
var _5d9=MochiKit.DOM.SPAN();
var _5da=_5d9.style;
_5da.backgroundColor=_5d5.toString();
_5da.display="block";
_5da.height="1px";
_5da.overflow="hidden";
_5da.fontSize="1px";
var _5db=this._borderColor(_5d5,_5d6);
if(this.options.border&&n===0){
_5da.borderTopStyle="solid";
_5da.borderTopWidth="1px";
_5da.borderLeftWidth="0px";
_5da.borderRightWidth="0px";
_5da.borderBottomWidth="0px";
_5da.height="0px";
_5da.borderColor=_5db.toString();
}else{
if(_5db){
_5da.borderColor=_5db.toString();
_5da.borderStyle="solid";
_5da.borderWidth="0px 1px";
}
}
if(!this.options.compact&&(n==(this.options.numSlices-1))){
_5da.height="2px";
}
this._setMargin(_5d9,n,_5d8);
this._setBorder(_5d9,n,_5d8);
return _5d9;
},_setOptions:function(_5dc){
this.options={corners:"all",color:"fromElement",bgColor:"fromParent",blend:true,border:false,compact:false,__unstable__wrapElement:false};
MochiKit.Base.update(this.options,_5dc);
this.options.numSlices=(this.options.compact?2:4);
},_whichSideTop:function(){
var _5dd=this.options.corners;
if(this._hasString(_5dd,"all","top")){
return "";
}
var _5de=(_5dd.indexOf("tl")!=-1);
var _5df=(_5dd.indexOf("tr")!=-1);
if(_5de&&_5df){
return "";
}
if(_5de){
return "left";
}
if(_5df){
return "right";
}
return "";
},_whichSideBottom:function(){
var _5e0=this.options.corners;
if(this._hasString(_5e0,"all","bottom")){
return "";
}
var _5e1=(_5e0.indexOf("bl")!=-1);
var _5e2=(_5e0.indexOf("br")!=-1);
if(_5e1&&_5e2){
return "";
}
if(_5e1){
return "left";
}
if(_5e2){
return "right";
}
return "";
},_borderColor:function(_5e3,_5e4){
if(_5e3=="transparent"){
return _5e4;
}else{
if(this.options.border){
return this.options.border;
}else{
if(this.options.blend){
return _5e4.blendedColor(_5e3);
}
}
}
return "";
},_setMargin:function(el,n,_5e7){
var _5e8=this._marginSize(n)+"px";
var _5e9=(_5e7=="top"?this._whichSideTop():this._whichSideBottom());
var _5ea=el.style;
if(_5e9=="left"){
_5ea.marginLeft=_5e8;
_5ea.marginRight="0px";
}else{
if(_5e9=="right"){
_5ea.marginRight=_5e8;
_5ea.marginLeft="0px";
}else{
_5ea.marginLeft=_5e8;
_5ea.marginRight=_5e8;
}
}
},_setBorder:function(el,n,_5ed){
var _5ee=this._borderSize(n)+"px";
var _5ef=(_5ed=="top"?this._whichSideTop():this._whichSideBottom());
var _5f0=el.style;
if(_5ef=="left"){
_5f0.borderLeftWidth=_5ee;
_5f0.borderRightWidth="0px";
}else{
if(_5ef=="right"){
_5f0.borderRightWidth=_5ee;
_5f0.borderLeftWidth="0px";
}else{
_5f0.borderLeftWidth=_5ee;
_5f0.borderRightWidth=_5ee;
}
}
},_marginSize:function(n){
if(this.isTransparent){
return 0;
}
var o=this.options;
if(o.compact&&o.blend){
var _5f3=[1,0];
return _5f3[n];
}else{
if(o.compact){
var _5f4=[2,1];
return _5f4[n];
}else{
if(o.blend){
var _5f5=[3,2,1,0];
return _5f5[n];
}else{
var _5f6=[5,3,2,1];
return _5f6[n];
}
}
}
},_borderSize:function(n){
var o=this.options;
var _5f9;
if(o.compact&&(o.blend||this.isTransparent)){
return 1;
}else{
if(o.compact){
_5f9=[1,0];
}else{
if(o.blend){
_5f9=[2,1,1,1];
}else{
if(o.border){
_5f9=[0,2,0,0];
}else{
if(this.isTransparent){
_5f9=[5,3,2,1];
}else{
return 0;
}
}
}
}
}
return _5f9[n];
},_hasString:function(str){
for(var i=1;i<arguments.length;i++){
if(str.indexOf(arguments[i])!=-1){
return true;
}
}
return false;
},_isTopRounded:function(){
return this._hasString(this.options.corners,"all","top","tl","tr");
},_isBottomRounded:function(){
return this._hasString(this.options.corners,"all","bottom","bl","br");
},_hasSingleTextChild:function(el){
return (el.childNodes.length==1&&el.childNodes[0].nodeType==3);
}};
MochiKit.Visual.roundElement=function(e,_5fe){
new MochiKit.Visual._RoundCorners(e,_5fe);
};
MochiKit.Visual.roundClass=function(_5ff,_600,_601){
var _602=MochiKit.DOM.getElementsByTagAndClassName(_5ff,_600);
for(var i=0;i<_602.length;i++){
MochiKit.Visual.roundElement(_602[i],_601);
}
};
MochiKit.Visual.tagifyText=function(_604,_605){
_605=_605||"position:relative";
if(/MSIE/.test(navigator.userAgent)){
_605+=";zoom:1";
}
_604=MochiKit.DOM.getElement(_604);
var ma=MochiKit.Base.map;
ma(function(_607){
if(_607.nodeType==3){
ma(function(_608){
_604.insertBefore(MochiKit.DOM.SPAN({style:_605},_608==" "?String.fromCharCode(160):_608),_607);
},_607.nodeValue.split(""));
MochiKit.DOM.removeElement(_607);
}
},_604.childNodes);
};
MochiKit.Visual.forceRerendering=function(_609){
try{
_609=MochiKit.DOM.getElement(_609);
var n=document.createTextNode(" ");
_609.appendChild(n);
_609.removeChild(n);
}
catch(e){
}
};
MochiKit.Visual.multiple=function(_60b,_60c,_60d){
_60d=MochiKit.Base.update({speed:0.1,delay:0},_60d);
var _60e=_60d.delay;
var _60f=0;
MochiKit.Base.map(function(_610){
_60d.delay=_60f*_60d.speed+_60e;
new _60c(_610,_60d);
_60f+=1;
},_60b);
};
MochiKit.Visual.PAIRS={"slide":["slideDown","slideUp"],"blind":["blindDown","blindUp"],"appear":["appear","fade"],"size":["grow","shrink"]};
MochiKit.Visual.toggle=function(_611,_612,_613){
_611=MochiKit.DOM.getElement(_611);
_612=(_612||"appear").toLowerCase();
_613=MochiKit.Base.update({queue:{position:"end",scope:(_611.id||"global"),limit:1}},_613);
var v=MochiKit.Visual;
v[MochiKit.Style.getStyle(_611,"display")!="none"?v.PAIRS[_612][1]:v.PAIRS[_612][0]](_611,_613);
};
MochiKit.Visual.Transitions={};
MochiKit.Visual.Transitions.linear=function(pos){
return pos;
};
MochiKit.Visual.Transitions.sinoidal=function(pos){
return (-Math.cos(pos*Math.PI)/2)+0.5;
};
MochiKit.Visual.Transitions.reverse=function(pos){
return 1-pos;
};
MochiKit.Visual.Transitions.flicker=function(pos){
return ((-Math.cos(pos*Math.PI)/4)+0.75)+Math.random()/4;
};
MochiKit.Visual.Transitions.wobble=function(pos){
return (-Math.cos(pos*Math.PI*(9*pos))/2)+0.5;
};
MochiKit.Visual.Transitions.pulse=function(pos,_61b){
if(!_61b){
return (Math.floor(pos*10)%2===0?(pos*10-Math.floor(pos*10)):1-(pos*10-Math.floor(pos*10)));
}
return (Math.round((pos%(1/_61b))*_61b)==0?((pos*_61b*2)-Math.floor(pos*_61b*2)):1-((pos*_61b*2)-Math.floor(pos*_61b*2)));
};
MochiKit.Visual.Transitions.none=function(pos){
return 0;
};
MochiKit.Visual.Transitions.full=function(pos){
return 1;
};
MochiKit.Visual.ScopedQueue=function(){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls();
}
this.__init__();
};
MochiKit.Base.update(MochiKit.Visual.ScopedQueue.prototype,{__init__:function(){
this.effects=[];
this.interval=null;
},add:function(_61f){
var _620=new Date().getTime();
var _621=(typeof (_61f.options.queue)=="string")?_61f.options.queue:_61f.options.queue.position;
var ma=MochiKit.Base.map;
switch(_621){
case "front":
ma(function(e){
if(e.state=="idle"){
e.startOn+=_61f.finishOn;
e.finishOn+=_61f.finishOn;
}
},this.effects);
break;
case "end":
var _624;
ma(function(e){
var i=e.finishOn;
if(i>=(_624||i)){
_624=i;
}
},this.effects);
_620=_624||_620;
break;
case "break":
ma(function(e){
e.finalize();
},this.effects);
break;
}
_61f.startOn+=_620;
_61f.finishOn+=_620;
if(!_61f.options.queue.limit||this.effects.length<_61f.options.queue.limit){
this.effects.push(_61f);
}
if(!this.interval){
this.interval=this.startLoop(MochiKit.Base.bind(this.loop,this),40);
}
},startLoop:function(func,_629){
return setInterval(func,_629);
},remove:function(_62a){
this.effects=MochiKit.Base.filter(function(e){
return e!=_62a;
},this.effects);
if(!this.effects.length){
this.stopLoop(this.interval);
this.interval=null;
}
},stopLoop:function(_62c){
clearInterval(_62c);
},loop:function(){
var _62d=new Date().getTime();
MochiKit.Base.map(function(_62e){
_62e.loop(_62d);
},this.effects);
}});
MochiKit.Visual.Queues={instances:{},get:function(_62f){
if(typeof (_62f)!="string"){
return _62f;
}
if(!this.instances[_62f]){
this.instances[_62f]=new MochiKit.Visual.ScopedQueue();
}
return this.instances[_62f];
}};
MochiKit.Visual.Queue=MochiKit.Visual.Queues.get("global");
MochiKit.Visual.DefaultOptions={transition:MochiKit.Visual.Transitions.sinoidal,duration:1,fps:25,sync:false,from:0,to:1,delay:0,queue:"parallel"};
MochiKit.Visual.Base=function(){
};
MochiKit.Visual.Base.prototype={__class__:MochiKit.Visual.Base,start:function(_630){
var v=MochiKit.Visual;
this.options=MochiKit.Base.setdefault(_630,v.DefaultOptions);
this.currentFrame=0;
this.state="idle";
this.startOn=this.options.delay*1000;
this.finishOn=this.startOn+(this.options.duration*1000);
this.event("beforeStart");
if(!this.options.sync){
v.Queues.get(typeof (this.options.queue)=="string"?"global":this.options.queue.scope).add(this);
}
},loop:function(_632){
if(_632>=this.startOn){
if(_632>=this.finishOn){
return this.finalize();
}
var pos=(_632-this.startOn)/(this.finishOn-this.startOn);
var _634=Math.round(pos*this.options.fps*this.options.duration);
if(_634>this.currentFrame){
this.render(pos);
this.currentFrame=_634;
}
}
},render:function(pos){
if(this.state=="idle"){
this.state="running";
this.event("beforeSetup");
this.setup();
this.event("afterSetup");
}
if(this.state=="running"){
if(this.options.transition){
pos=this.options.transition(pos);
}
pos*=(this.options.to-this.options.from);
pos+=this.options.from;
this.event("beforeUpdate");
this.update(pos);
this.event("afterUpdate");
}
},cancel:function(){
if(!this.options.sync){
MochiKit.Visual.Queues.get(typeof (this.options.queue)=="string"?"global":this.options.queue.scope).remove(this);
}
this.state="finished";
},finalize:function(){
this.render(1);
this.cancel();
this.event("beforeFinish");
this.finish();
this.event("afterFinish");
},setup:function(){
},finish:function(){
},update:function(_636){
},event:function(_637){
if(this.options[_637+"Internal"]){
this.options[_637+"Internal"](this);
}
if(this.options[_637]){
this.options[_637](this);
}
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.Visual.Parallel=function(_638,_639){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_638,_639);
}
this.__init__(_638,_639);
};
MochiKit.Visual.Parallel.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Parallel.prototype,{__class__:MochiKit.Visual.Parallel,__init__:function(_63b,_63c){
this.effects=_63b||[];
this.start(_63c);
},update:function(_63d){
MochiKit.Base.map(function(_63e){
_63e.render(_63d);
},this.effects);
},finish:function(){
MochiKit.Base.map(function(_63f){
_63f.finalize();
},this.effects);
}});
MochiKit.Visual.Opacity=function(_640,_641){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_640,_641);
}
this.__init__(_640,_641);
};
MochiKit.Visual.Opacity.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Opacity.prototype,{__class__:MochiKit.Visual.Opacity,__init__:function(_643,_644){
var b=MochiKit.Base;
var s=MochiKit.Style;
this.element=MochiKit.DOM.getElement(_643);
if(this.element.currentStyle&&(!this.element.currentStyle.hasLayout)){
s.setStyle(this.element,{zoom:1});
}
_644=b.update({from:s.getStyle(this.element,"opacity")||0,to:1},_644);
this.start(_644);
},update:function(_647){
MochiKit.Style.setStyle(this.element,{"opacity":_647});
}});
MochiKit.Visual.Move=function(_648,_649){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_648,_649);
}
this.__init__(_648,_649);
};
MochiKit.Visual.Move.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Move.prototype,{__class__:MochiKit.Visual.Move,__init__:function(_64b,_64c){
this.element=MochiKit.DOM.getElement(_64b);
_64c=MochiKit.Base.update({x:0,y:0,mode:"relative"},_64c);
this.start(_64c);
},setup:function(){
MochiKit.DOM.makePositioned(this.element);
var s=this.element.style;
var _64e=s.visibility;
var _64f=s.display;
if(_64f=="none"){
s.visibility="hidden";
s.display="";
}
this.originalLeft=parseFloat(MochiKit.Style.getStyle(this.element,"left")||"0");
this.originalTop=parseFloat(MochiKit.Style.getStyle(this.element,"top")||"0");
if(this.options.mode=="absolute"){
this.options.x-=this.originalLeft;
this.options.y-=this.originalTop;
}
if(_64f=="none"){
s.visibility=_64e;
s.display=_64f;
}
},update:function(_650){
MochiKit.Style.setStyle(this.element,{left:Math.round(this.options.x*_650+this.originalLeft)+"px",top:Math.round(this.options.y*_650+this.originalTop)+"px"});
}});
MochiKit.Visual.Scale=function(_651,_652,_653){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_651,_652,_653);
}
this.__init__(_651,_652,_653);
};
MochiKit.Visual.Scale.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Scale.prototype,{__class__:MochiKit.Visual.Scale,__init__:function(_655,_656,_657){
this.element=MochiKit.DOM.getElement(_655);
_657=MochiKit.Base.update({scaleX:true,scaleY:true,scaleContent:true,scaleFromCenter:false,scaleMode:"box",scaleFrom:100,scaleTo:_656},_657);
this.start(_657);
},setup:function(){
this.restoreAfterFinish=this.options.restoreAfterFinish||false;
this.elementPositioning=MochiKit.Style.getStyle(this.element,"position");
var ma=MochiKit.Base.map;
var b=MochiKit.Base.bind;
this.originalStyle={};
ma(b(function(k){
this.originalStyle[k]=this.element.style[k];
},this),["top","left","width","height","fontSize"]);
this.originalTop=this.element.offsetTop;
this.originalLeft=this.element.offsetLeft;
var _65b=MochiKit.Style.getStyle(this.element,"font-size")||"100%";
ma(b(function(_65c){
if(_65b.indexOf(_65c)>0){
this.fontSize=parseFloat(_65b);
this.fontSizeType=_65c;
}
},this),["em","px","%"]);
this.factor=(this.options.scaleTo-this.options.scaleFrom)/100;
if(/^content/.test(this.options.scaleMode)){
this.dims=[this.element.scrollHeight,this.element.scrollWidth];
}else{
if(this.options.scaleMode=="box"){
this.dims=[this.element.offsetHeight,this.element.offsetWidth];
}else{
this.dims=[this.options.scaleMode.originalHeight,this.options.scaleMode.originalWidth];
}
}
},update:function(_65d){
var _65e=(this.options.scaleFrom/100)+(this.factor*_65d);
if(this.options.scaleContent&&this.fontSize){
MochiKit.Style.setStyle(this.element,{fontSize:this.fontSize*_65e+this.fontSizeType});
}
this.setDimensions(this.dims[0]*_65e,this.dims[1]*_65e);
},finish:function(){
if(this.restoreAfterFinish){
MochiKit.Style.setStyle(this.element,this.originalStyle);
}
},setDimensions:function(_65f,_660){
var d={};
var r=Math.round;
if(/MSIE/.test(navigator.userAgent)){
r=Math.ceil;
}
if(this.options.scaleX){
d.width=r(_660)+"px";
}
if(this.options.scaleY){
d.height=r(_65f)+"px";
}
if(this.options.scaleFromCenter){
var topd=(_65f-this.dims[0])/2;
var _664=(_660-this.dims[1])/2;
if(this.elementPositioning=="absolute"){
if(this.options.scaleY){
d.top=this.originalTop-topd+"px";
}
if(this.options.scaleX){
d.left=this.originalLeft-_664+"px";
}
}else{
if(this.options.scaleY){
d.top=-topd+"px";
}
if(this.options.scaleX){
d.left=-_664+"px";
}
}
}
MochiKit.Style.setStyle(this.element,d);
}});
MochiKit.Visual.Highlight=function(_665,_666){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_665,_666);
}
this.__init__(_665,_666);
};
MochiKit.Visual.Highlight.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Highlight.prototype,{__class__:MochiKit.Visual.Highlight,__init__:function(_668,_669){
this.element=MochiKit.DOM.getElement(_668);
_669=MochiKit.Base.update({startcolor:"#ffff99"},_669);
this.start(_669);
},setup:function(){
var b=MochiKit.Base;
var s=MochiKit.Style;
if(s.getStyle(this.element,"display")=="none"){
this.cancel();
return;
}
this.oldStyle={backgroundImage:s.getStyle(this.element,"background-image")};
s.setStyle(this.element,{backgroundImage:"none"});
if(!this.options.endcolor){
this.options.endcolor=MochiKit.Color.Color.fromBackground(this.element).toHexString();
}
if(b.isUndefinedOrNull(this.options.restorecolor)){
this.options.restorecolor=s.getStyle(this.element,"background-color");
}
this._base=b.map(b.bind(function(i){
return parseInt(this.options.startcolor.slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
this._delta=b.map(b.bind(function(i){
return parseInt(this.options.endcolor.slice(i*2+1,i*2+3),16)-this._base[i];
},this),[0,1,2]);
},update:function(_66e){
var m="#";
MochiKit.Base.map(MochiKit.Base.bind(function(i){
m+=MochiKit.Color.toColorPart(Math.round(this._base[i]+this._delta[i]*_66e));
},this),[0,1,2]);
MochiKit.Style.setStyle(this.element,{backgroundColor:m});
},finish:function(){
MochiKit.Style.setStyle(this.element,MochiKit.Base.update(this.oldStyle,{backgroundColor:this.options.restorecolor}));
}});
MochiKit.Visual.ScrollTo=function(_671,_672){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_671,_672);
}
this.__init__(_671,_672);
};
MochiKit.Visual.ScrollTo.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.ScrollTo.prototype,{__class__:MochiKit.Visual.ScrollTo,__init__:function(_674,_675){
this.element=MochiKit.DOM.getElement(_674);
this.start(_675);
},setup:function(){
var p=MochiKit.Position;
p.prepare();
var _677=p.cumulativeOffset(this.element);
if(this.options.offset){
_677.y+=this.options.offset;
}
var max;
if(window.innerHeight){
max=window.innerHeight-window.height;
}else{
if(document.documentElement&&document.documentElement.clientHeight){
max=document.documentElement.clientHeight-document.body.scrollHeight;
}else{
if(document.body){
max=document.body.clientHeight-document.body.scrollHeight;
}
}
}
this.scrollStart=p.windowOffset.y;
this.delta=(_677.y>max?max:_677.y)-this.scrollStart;
},update:function(_679){
var p=MochiKit.Position;
p.prepare();
window.scrollTo(p.windowOffset.x,this.scrollStart+(_679*this.delta));
}});
MochiKit.Visual.CSS_LENGTH=/^(([\+\-]?[0-9\.]+)(em|ex|px|in|cm|mm|pt|pc|\%))|0$/;
MochiKit.Visual.Morph=function(_67b,_67c){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_67b,_67c);
}
this.__init__(_67b,_67c);
};
MochiKit.Visual.Morph.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Morph.prototype,{__class__:MochiKit.Visual.Morph,__init__:function(_67e,_67f){
this.element=MochiKit.DOM.getElement(_67e);
this.start(_67f);
},setup:function(){
var b=MochiKit.Base;
var _681=this.options.style;
this.styleStart={};
this.styleEnd={};
this.units={};
var _682,unit;
for(var s in _681){
_682=_681[s];
s=b.camelize(s);
if(MochiKit.Visual.CSS_LENGTH.test(_682)){
var _685=_682.match(/^([\+\-]?[0-9\.]+)(.*)$/);
_682=parseFloat(_685[1]);
unit=(_685.length==3)?_685[2]:null;
this.styleEnd[s]=_682;
this.units[s]=unit;
_682=MochiKit.Style.getStyle(this.element,s);
_685=_682.match(/^([\+\-]?[0-9\.]+)(.*)$/);
_682=parseFloat(_685[1]);
this.styleStart[s]=_682;
}else{
var c=MochiKit.Color.Color;
_682=c.fromString(_682);
if(_682){
this.units[s]="color";
this.styleEnd[s]=_682.toHexString();
_682=MochiKit.Style.getStyle(this.element,s);
this.styleStart[s]=c.fromString(_682).toHexString();
this.styleStart[s]=b.map(b.bind(function(i){
return parseInt(this.styleStart[s].slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
this.styleEnd[s]=b.map(b.bind(function(i){
return parseInt(this.styleEnd[s].slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
}
}
}
},update:function(_689){
var _68a;
for(var s in this.styleStart){
if(this.units[s]=="color"){
var m="#";
var _68d=this.styleStart[s];
var end=this.styleEnd[s];
MochiKit.Base.map(MochiKit.Base.bind(function(i){
m+=MochiKit.Color.toColorPart(Math.round(_68d[i]+(end[i]-_68d[i])*_689));
},this),[0,1,2]);
this.element.style[s]=m;
}else{
_68a=this.styleStart[s]+Math.round((this.styleEnd[s]-this.styleStart[s])*_689*1000)/1000+this.units[s];
this.element.style[s]=_68a;
}
}
}});
MochiKit.Visual.fade=function(_690,_691){
var s=MochiKit.Style;
var _693=s.getStyle(_690,"opacity");
_691=MochiKit.Base.update({from:s.getStyle(_690,"opacity")||1,to:0,afterFinishInternal:function(_694){
if(_694.options.to!==0){
return;
}
s.hideElement(_694.element);
s.setStyle(_694.element,{"opacity":_693});
}},_691);
return new MochiKit.Visual.Opacity(_690,_691);
};
MochiKit.Visual.appear=function(_695,_696){
var s=MochiKit.Style;
var v=MochiKit.Visual;
_696=MochiKit.Base.update({from:(s.getStyle(_695,"display")=="none"?0:s.getStyle(_695,"opacity")||0),to:1,afterFinishInternal:function(_699){
v.forceRerendering(_699.element);
},beforeSetupInternal:function(_69a){
s.setStyle(_69a.element,{"opacity":_69a.options.from});
s.showElement(_69a.element);
}},_696);
return new v.Opacity(_695,_696);
};
MochiKit.Visual.puff=function(_69b,_69c){
var s=MochiKit.Style;
var v=MochiKit.Visual;
_69b=MochiKit.DOM.getElement(_69b);
var _69f={position:s.getStyle(_69b,"position"),top:_69b.style.top,left:_69b.style.left,width:_69b.style.width,height:_69b.style.height,opacity:s.getStyle(_69b,"opacity")};
_69c=MochiKit.Base.update({beforeSetupInternal:function(_6a0){
MochiKit.Position.absolutize(_6a0.effects[0].element);
},afterFinishInternal:function(_6a1){
s.hideElement(_6a1.effects[0].element);
s.setStyle(_6a1.effects[0].element,_69f);
},scaleContent:true,scaleFromCenter:true},_69c);
return new v.Parallel([new v.Scale(_69b,200,{sync:true,scaleFromCenter:_69c.scaleFromCenter,scaleContent:_69c.scaleContent,restoreAfterFinish:true}),new v.Opacity(_69b,{sync:true,to:0})],_69c);
};
MochiKit.Visual.blindUp=function(_6a2,_6a3){
var d=MochiKit.DOM;
_6a2=d.getElement(_6a2);
var _6a5=d.makeClipping(_6a2);
_6a3=MochiKit.Base.update({scaleContent:false,scaleX:false,restoreAfterFinish:true,afterFinishInternal:function(_6a6){
MochiKit.Style.hideElement(_6a6.element);
d.undoClipping(_6a6.element,_6a5);
}},_6a3);
return new MochiKit.Visual.Scale(_6a2,0,_6a3);
};
MochiKit.Visual.blindDown=function(_6a7,_6a8){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_6a7=d.getElement(_6a7);
var _6ab=s.getElementDimensions(_6a7);
var _6ac;
_6a8=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleFrom:0,scaleMode:{originalHeight:_6ab.h,originalWidth:_6ab.w},restoreAfterFinish:true,afterSetupInternal:function(_6ad){
_6ac=d.makeClipping(_6ad.element);
s.setStyle(_6ad.element,{height:"0px"});
s.showElement(_6ad.element);
},afterFinishInternal:function(_6ae){
d.undoClipping(_6ae.element,_6ac);
}},_6a8);
return new MochiKit.Visual.Scale(_6a7,100,_6a8);
};
MochiKit.Visual.switchOff=function(_6af,_6b0){
var d=MochiKit.DOM;
_6af=d.getElement(_6af);
var _6b2=MochiKit.Style.getStyle(_6af,"opacity");
var _6b3;
_6b0=MochiKit.Base.update({duration:0.3,scaleFromCenter:true,scaleX:false,scaleContent:false,restoreAfterFinish:true,beforeSetupInternal:function(_6b4){
d.makePositioned(_6b4.element);
_6b3=d.makeClipping(_6b4.element);
},afterFinishInternal:function(_6b5){
MochiKit.Style.hideElement(_6b5.element);
d.undoClipping(_6b5.element,_6b3);
d.undoPositioned(_6b5.element);
MochiKit.Style.setStyle(_6b5.element,{"opacity":_6b2});
}},_6b0);
var v=MochiKit.Visual;
return new v.appear(_6af,{duration:0.4,from:0,transition:v.Transitions.flicker,afterFinishInternal:function(_6b7){
new v.Scale(_6b7.element,1,_6b0);
}});
};
MochiKit.Visual.dropOut=function(_6b8,_6b9){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_6b8=d.getElement(_6b8);
var _6bc={top:s.getStyle(_6b8,"top"),left:s.getStyle(_6b8,"left"),opacity:s.getStyle(_6b8,"opacity")};
_6b9=MochiKit.Base.update({duration:0.5,distance:100,beforeSetupInternal:function(_6bd){
d.makePositioned(_6bd.effects[0].element);
},afterFinishInternal:function(_6be){
s.hideElement(_6be.effects[0].element);
d.undoPositioned(_6be.effects[0].element);
s.setStyle(_6be.effects[0].element,_6bc);
}},_6b9);
var v=MochiKit.Visual;
return new v.Parallel([new v.Move(_6b8,{x:0,y:_6b9.distance,sync:true}),new v.Opacity(_6b8,{sync:true,to:0})],_6b9);
};
MochiKit.Visual.shake=function(_6c0,_6c1){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_6c0=d.getElement(_6c0);
_6c1=MochiKit.Base.update({x:-20,y:0,duration:0.05,afterFinishInternal:function(_6c5){
d.undoPositioned(_6c5.element);
s.setStyle(_6c5.element,_6c6);
}},_6c1);
var _6c6={top:s.getStyle(_6c0,"top"),left:s.getStyle(_6c0,"left")};
return new v.Move(_6c0,{x:20,y:0,duration:0.05,afterFinishInternal:function(_6c7){
new v.Move(_6c7.element,{x:-40,y:0,duration:0.1,afterFinishInternal:function(_6c8){
new v.Move(_6c8.element,{x:40,y:0,duration:0.1,afterFinishInternal:function(_6c9){
new v.Move(_6c9.element,{x:-40,y:0,duration:0.1,afterFinishInternal:function(_6ca){
new v.Move(_6ca.element,{x:40,y:0,duration:0.1,afterFinishInternal:function(_6cb){
new v.Move(_6cb.element,_6c1);
}});
}});
}});
}});
}});
};
MochiKit.Visual.slideDown=function(_6cc,_6cd){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
_6cc=d.getElement(_6cc);
if(!_6cc.firstChild){
throw "MochiKit.Visual.slideDown must be used on a element with a child";
}
d.removeEmptyTextNodes(_6cc);
var _6d1=s.getStyle(_6cc.firstChild,"bottom")||0;
var _6d2=s.getElementDimensions(_6cc);
var _6d3;
_6cd=b.update({scaleContent:false,scaleX:false,scaleFrom:0,scaleMode:{originalHeight:_6d2.h,originalWidth:_6d2.w},restoreAfterFinish:true,afterSetupInternal:function(_6d4){
d.makePositioned(_6d4.element);
d.makePositioned(_6d4.element.firstChild);
if(/Opera/.test(navigator.userAgent)){
s.setStyle(_6d4.element,{top:""});
}
_6d3=d.makeClipping(_6d4.element);
s.setStyle(_6d4.element,{height:"0px"});
s.showElement(_6d4.element);
},afterUpdateInternal:function(_6d5){
s.setStyle(_6d5.element.firstChild,{bottom:(_6d5.dims[0]-_6d5.element.clientHeight)+"px"});
},afterFinishInternal:function(_6d6){
d.undoClipping(_6d6.element,_6d3);
if(/MSIE/.test(navigator.userAgent)){
d.undoPositioned(_6d6.element);
d.undoPositioned(_6d6.element.firstChild);
}else{
d.undoPositioned(_6d6.element.firstChild);
d.undoPositioned(_6d6.element);
}
s.setStyle(_6d6.element.firstChild,{bottom:_6d1});
}},_6cd);
return new MochiKit.Visual.Scale(_6cc,100,_6cd);
};
MochiKit.Visual.slideUp=function(_6d7,_6d8){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
_6d7=d.getElement(_6d7);
if(!_6d7.firstChild){
throw "MochiKit.Visual.slideUp must be used on a element with a child";
}
d.removeEmptyTextNodes(_6d7);
var _6dc=s.getStyle(_6d7.firstChild,"bottom");
var _6dd;
_6d8=b.update({scaleContent:false,scaleX:false,scaleMode:"box",scaleFrom:100,restoreAfterFinish:true,beforeStartInternal:function(_6de){
d.makePositioned(_6de.element);
d.makePositioned(_6de.element.firstChild);
if(/Opera/.test(navigator.userAgent)){
s.setStyle(_6de.element,{top:""});
}
_6dd=d.makeClipping(_6de.element);
s.showElement(_6de.element);
},afterUpdateInternal:function(_6df){
s.setStyle(_6df.element.firstChild,{bottom:(_6df.dims[0]-_6df.element.clientHeight)+"px"});
},afterFinishInternal:function(_6e0){
s.hideElement(_6e0.element);
d.undoClipping(_6e0.element,_6dd);
d.undoPositioned(_6e0.element.firstChild);
d.undoPositioned(_6e0.element);
s.setStyle(_6e0.element.firstChild,{bottom:_6dc});
}},_6d8);
return new MochiKit.Visual.Scale(_6d7,0,_6d8);
};
MochiKit.Visual.squish=function(_6e1,_6e2){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var _6e5;
_6e2=b.update({restoreAfterFinish:true,beforeSetupInternal:function(_6e6){
_6e5=d.makeClipping(_6e6.element);
},afterFinishInternal:function(_6e7){
MochiKit.Style.hideElement(_6e7.element);
d.undoClipping(_6e7.element,_6e5);
}},_6e2);
return new MochiKit.Visual.Scale(_6e1,/Opera/.test(navigator.userAgent)?1:0,_6e2);
};
MochiKit.Visual.grow=function(_6e8,_6e9){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_6e8=d.getElement(_6e8);
_6e9=MochiKit.Base.update({direction:"center",moveTransition:v.Transitions.sinoidal,scaleTransition:v.Transitions.sinoidal,opacityTransition:v.Transitions.full,scaleContent:true,scaleFromCenter:false},_6e9);
var _6ed={top:_6e8.style.top,left:_6e8.style.left,height:_6e8.style.height,width:_6e8.style.width,opacity:s.getStyle(_6e8,"opacity")};
var dims=s.getElementDimensions(_6e8);
var _6ef,_6f0;
var _6f1,_6f2;
switch(_6e9.direction){
case "top-left":
_6ef=_6f0=_6f1=_6f2=0;
break;
case "top-right":
_6ef=dims.w;
_6f0=_6f2=0;
_6f1=-dims.w;
break;
case "bottom-left":
_6ef=_6f1=0;
_6f0=dims.h;
_6f2=-dims.h;
break;
case "bottom-right":
_6ef=dims.w;
_6f0=dims.h;
_6f1=-dims.w;
_6f2=-dims.h;
break;
case "center":
_6ef=dims.w/2;
_6f0=dims.h/2;
_6f1=-dims.w/2;
_6f2=-dims.h/2;
break;
}
var _6f3=MochiKit.Base.update({beforeSetupInternal:function(_6f4){
s.setStyle(_6f4.effects[0].element,{height:"0px"});
s.showElement(_6f4.effects[0].element);
},afterFinishInternal:function(_6f5){
d.undoClipping(_6f5.effects[0].element);
d.undoPositioned(_6f5.effects[0].element);
s.setStyle(_6f5.effects[0].element,_6ed);
}},_6e9);
return new v.Move(_6e8,{x:_6ef,y:_6f0,duration:0.01,beforeSetupInternal:function(_6f6){
s.hideElement(_6f6.element);
d.makeClipping(_6f6.element);
d.makePositioned(_6f6.element);
},afterFinishInternal:function(_6f7){
new v.Parallel([new v.Opacity(_6f7.element,{sync:true,to:1,from:0,transition:_6e9.opacityTransition}),new v.Move(_6f7.element,{x:_6f1,y:_6f2,sync:true,transition:_6e9.moveTransition}),new v.Scale(_6f7.element,100,{scaleMode:{originalHeight:dims.h,originalWidth:dims.w},sync:true,scaleFrom:/Opera/.test(navigator.userAgent)?1:0,transition:_6e9.scaleTransition,scaleContent:_6e9.scaleContent,scaleFromCenter:_6e9.scaleFromCenter,restoreAfterFinish:true})],_6f3);
}});
};
MochiKit.Visual.shrink=function(_6f8,_6f9){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_6f8=d.getElement(_6f8);
_6f9=MochiKit.Base.update({direction:"center",moveTransition:v.Transitions.sinoidal,scaleTransition:v.Transitions.sinoidal,opacityTransition:v.Transitions.none,scaleContent:true,scaleFromCenter:false},_6f9);
var _6fd={top:_6f8.style.top,left:_6f8.style.left,height:_6f8.style.height,width:_6f8.style.width,opacity:s.getStyle(_6f8,"opacity")};
var dims=s.getElementDimensions(_6f8);
var _6ff,_700;
switch(_6f9.direction){
case "top-left":
_6ff=_700=0;
break;
case "top-right":
_6ff=dims.w;
_700=0;
break;
case "bottom-left":
_6ff=0;
_700=dims.h;
break;
case "bottom-right":
_6ff=dims.w;
_700=dims.h;
break;
case "center":
_6ff=dims.w/2;
_700=dims.h/2;
break;
}
var _701;
var _702=MochiKit.Base.update({beforeStartInternal:function(_703){
_701=d.makePositioned(_703.effects[0].element);
d.makeClipping(_703.effects[0].element);
},afterFinishInternal:function(_704){
s.hideElement(_704.effects[0].element);
d.undoClipping(_704.effects[0].element,_701);
d.undoPositioned(_704.effects[0].element);
s.setStyle(_704.effects[0].element,_6fd);
}},_6f9);
return new v.Parallel([new v.Opacity(_6f8,{sync:true,to:0,from:1,transition:_6f9.opacityTransition}),new v.Scale(_6f8,/Opera/.test(navigator.userAgent)?1:0,{sync:true,transition:_6f9.scaleTransition,scaleContent:_6f9.scaleContent,scaleFromCenter:_6f9.scaleFromCenter,restoreAfterFinish:true}),new v.Move(_6f8,{x:_6ff,y:_700,sync:true,transition:_6f9.moveTransition})],_702);
};
MochiKit.Visual.pulsate=function(_705,_706){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var b=MochiKit.Base;
var _70a=MochiKit.Style.getStyle(_705,"opacity");
_706=b.update({duration:3,from:0,afterFinishInternal:function(_70b){
MochiKit.Style.setStyle(_70b.element,{"opacity":_70a});
}},_706);
var _70c=_706.transition||v.Transitions.sinoidal;
var _70d=b.bind(function(pos){
return _70c(1-v.Transitions.pulse(pos,_706.pulses));
},_70c);
b.bind(_70d,_70c);
return new v.Opacity(_705,b.update({transition:_70d},_706));
};
MochiKit.Visual.fold=function(_70f,_710){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_70f=d.getElement(_70f);
var _714={top:_70f.style.top,left:_70f.style.left,width:_70f.style.width,height:_70f.style.height};
var _715=d.makeClipping(_70f);
_710=MochiKit.Base.update({scaleContent:false,scaleX:false,afterFinishInternal:function(_716){
new v.Scale(_70f,1,{scaleContent:false,scaleY:false,afterFinishInternal:function(_717){
s.hideElement(_717.element);
d.undoClipping(_717.element,_715);
s.setStyle(_717.element,_714);
}});
}},_710);
return new v.Scale(_70f,5,_710);
};
MochiKit.Visual.Color=MochiKit.Color.Color;
MochiKit.Visual.getElementsComputedStyle=MochiKit.DOM.computedStyle;
MochiKit.Visual.__new__=function(){
var m=MochiKit.Base;
m.nameFunctions(this);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
};
MochiKit.Visual.EXPORT=["roundElement","roundClass","tagifyText","multiple","toggle","Parallel","Opacity","Move","Scale","Highlight","ScrollTo","Morph","fade","appear","puff","blindUp","blindDown","switchOff","dropOut","shake","slideDown","slideUp","squish","grow","shrink","pulsate","fold"];
MochiKit.Visual.EXPORT_OK=["Base","PAIRS"];
MochiKit.Visual.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Visual);
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.MochiKit)=="undefined"){
MochiKit.MochiKit={};
}
MochiKit.MochiKit.NAME="MochiKit.MochiKit";
MochiKit.MochiKit.VERSION="1.4";
MochiKit.MochiKit.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.MochiKit.toString=function(){
return this.__repr__();
};
MochiKit.MochiKit.SUBMODULES=["Base","Iter","Logging","DateTime","Format","Async","DOM","Selector","Style","LoggingPane","Color","Signal","Position","Visual"];
if(typeof (JSAN)!="undefined"||typeof (dojo)!="undefined"){
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.MochiKit");
dojo.require("MochiKit.*");
}
if(typeof (JSAN)!="undefined"){
(function(lst){
for(var i=0;i<lst.length;i++){
JSAN.use("MochiKit."+lst[i],[]);
}
})(MochiKit.MochiKit.SUBMODULES);
}
(function(){
var _71b=MochiKit.Base.extend;
var self=MochiKit.MochiKit;
var _71d=self.SUBMODULES;
var _71e=[];
var _71f=[];
var _720={};
var i,k,m,all;
for(i=0;i<_71d.length;i++){
m=MochiKit[_71d[i]];
_71b(_71e,m.EXPORT);
_71b(_71f,m.EXPORT_OK);
for(k in m.EXPORT_TAGS){
_720[k]=_71b(_720[k],m.EXPORT_TAGS[k]);
}
all=m.EXPORT_TAGS[":all"];
if(!all){
all=_71b(null,m.EXPORT,m.EXPORT_OK);
}
var j;
for(j=0;j<all.length;j++){
k=all[j];
self[k]=m[k];
}
}
self.EXPORT=_71e;
self.EXPORT_OK=_71f;
self.EXPORT_TAGS=_720;
}());
}else{
if(typeof (MochiKit.__compat__)=="undefined"){
MochiKit.__compat__=true;
}
(function(){
if(typeof (document)=="undefined"){
return;
}
var _726=document.getElementsByTagName("script");
var _727="http://www.w3.org/1999/xhtml";
var _728="http://www.w3.org/2000/svg";
var _729="http://www.w3.org/1999/xlink";
var _72a="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
var base=null;
var _72c=null;
var _72d={};
var i;
for(i=0;i<_726.length;i++){
var src;
switch(_726[i].namespaceURI){
case "":
case _727:
case _72a:
src=_726[i].getAttribute("src");
break;
case _728:
src=_726[i].getAttributeNS(_729,"href");
break;
default:
throw new Error("Unsupported namespace");
}
if(!src){
continue;
}
_72d[src]=true;
if(src.match(/MochiKit.js$/)){
base=src.substring(0,src.lastIndexOf("MochiKit.js"));
_72c=_726[i];
}
}
if(base===null){
return;
}
var _730=MochiKit.MochiKit.SUBMODULES;
for(var i=0;i<_730.length;i++){
if(MochiKit[_730[i]]){
continue;
}
var uri=base+_730[i]+".js";
if(uri in _72d){
continue;
}
if(_72c.namespaceURI==_728||_72c.namespaceURI==_72a){
var s=document.createElementNS(_72c.namespaceURI,"script");
s.setAttribute("id","MochiKit_"+base+_730[i]);
if(_72c.namespaceURI==_728){
s.setAttributeNS(_729,"href",uri);
}else{
s.setAttribute("src",uri);
}
s.setAttribute("type","application/x-javascript");
_72c.parentNode.appendChild(s);
}else{
document.write("<"+_72c.nodeName+" src=\""+uri+"\" type=\"text/javascript\"></script>");
}
}
})();
}


