/***

    MochiKit.MochiKit 1.0 : PACKED VERSION

    THIS FILE IS AUTOMATICALLY GENERATED.  If creating patches, please
    diff against the source tree, not this file.

    See <http://mochikit.com/> for documentation, downloads, license, etc.

    (c) 2005 Bob Ippolito.  All rights Reserved.

***/

if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Base");
}
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.Base)=="undefined"){
MochiKit.Base={};
}
MochiKit.Base.VERSION="1.0";
MochiKit.Base.NAME="MochiKit.Base";
MochiKit.Base.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Base.toString=function(){
return this.__repr__();
};
MochiKit.Base.counter=function(n){
if(arguments.length==0){
n=1;
}
return function(){
return n++;
};
};
MochiKit.Base.clone=function(_2){
var me=arguments.callee;
if(arguments.length==1){
me.prototype=_2;
return new me();
}
};
MochiKit.Base.extend=function(_4,_5,_6){
if(!_6){
_6=0;
}
if(_5){
var l=_5.length;
if(typeof (l)!="number"){
if(MochiKit.Iter){
_5=MochiKit.Iter.list(_5);
l=_5.length;
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(!_4){
_4=[];
}
for(var i=_6;i<l;i++){
_4.push(_5[i]);
}
}
return _4;
};
MochiKit.Base.updatetree=function(_9,obj){
if(_9==null){
_9={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!=null){
for(var k in o){
var v=o[k];
if(typeof (_9[k])=="object"&&typeof (v)=="object"){
arguments.callee(_9[k],v);
}else{
_9[k]=v;
}
}
}
}
return _9;
};
MochiKit.Base.update=function(_14,obj){
if(_14==null){
_14={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!=null){
for(var k in o){
_14[k]=o[k];
}
}
}
return _14;
};
MochiKit.Base.setdefault=function(_15,obj){
if(_15==null){
_15={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
for(var k in o){
if(!(k in _15)){
_15[k]=o[k];
}
}
}
return _15;
};
MochiKit.Base.keys=function(obj){
var _16=[];
for(var _17 in obj){
_16.push(_17);
}
return _16;
};
MochiKit.Base.items=function(obj){
var _18=[];
for(var _19 in obj){
_18.push([_19,obj[_19]]);
}
return _18;
};
MochiKit.Base.NamedError=function(_20){
this.message=_20;
this.name=_20;
};
MochiKit.Base.NamedError.prototype=new Error();
MochiKit.Base.NamedError.prototype.repr=function(){
if(this.message&&this.message!=this.name){
return this.name+"("+repr(this.message)+")";
}else{
return this.name+"()";
}
};
MochiKit.Base.NamedError.prototype.toString=function(){
return this.repr();
};
MochiKit.Base._newNamedError=function(_21,_22,_23){
_23.prototype=new MochiKit.Base.NamedError(_21.NAME+"."+_22);
_21[_22]=_23;
};
MochiKit.Base.operator={"truth":function(a){
return !!a;
},"lognot":function(a){
return !a;
},"identity":function(a){
return a;
},"not":function(a){
return ~a;
},"neg":function(a){
return -a;
},"add":function(a,b){
return a+b;
},"sub":function(a,b){
return a-b;
},"div":function(a,b){
return a/b;
},"mod":function(a,b){
return a%b;
},"and":function(a,b){
return a&b;
},"or":function(a,b){
return a|b;
},"xor":function(a,b){
return a^b;
},"lshift":function(a,b){
return a<<b;
},"rshift":function(a,b){
return a>>b;
},"zrshift":function(a,b){
return a>>>b;
},"eq":function(a,b){
return a==b;
},"ne":function(a,b){
return a!=b;
},"gt":function(a,b){
return a>b;
},"ge":function(a,b){
return a>=b;
},"lt":function(a,b){
return a<b;
},"le":function(a,b){
return a<=b;
},"ceq":function(a,b){
return MochiKit.Base.compare(a,b)==0;
},"cne":function(a,b){
return MochiKit.Base.compare(a,b)!=0;
},"cgt":function(a,b){
return MochiKit.Base.compare(a,b)==1;
},"cge":function(a,b){
return MochiKit.Base.compare(a,b)!=-1;
},"clt":function(a,b){
return MochiKit.Base.compare(a,b)==-1;
},"cle":function(a,b){
return MochiKit.Base.compare(a,b)!=1;
},"logand":function(a,b){
return a&&b;
},"logor":function(a,b){
return a||b;
},"contains":function(a,b){
return b in a;
}};
MochiKit.Base.forward=function(_26){
return function(){
return this[_26].apply(this,arguments);
};
};
MochiKit.Base.itemgetter=function(_27){
return function(arg){
return arg[_27];
};
};
MochiKit.Base.typeMatcher=function(){
var _29={};
for(var i=0;i<arguments.length;i++){
var typ=arguments[i];
_29[typ]=typ;
}
return function(){
for(var i=0;i<arguments.length;i++){
if(!(typeof (arguments[i]) in _29)){
return false;
}
}
return true;
};
};
MochiKit.Base.isNull=function(){
for(var i=0;i<arguments.length;i++){
if(arguments[i]!=null){
return false;
}
}
return true;
};
MochiKit.Base.isUndefinedOrNull=function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(typeof (o)=="undefined"||o==null)){
return false;
}
}
return true;
};
MochiKit.Base.isNotEmpty=function(obj){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(o&&o.length)){
return false;
}
}
return true;
};
MochiKit.Base.isArrayLike=function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
var typ=typeof (o);
if((typ!="object"&&!(typ=="function"&&typeof (o.item)=="function"))||o==null||typeof (o.length)!="number"){
return false;
}
}
return true;
};
MochiKit.Base.isDateLike=function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="object"||typeof (o.getTime)!="function"){
return false;
}
}
return true;
};
MochiKit.Base.xmap=function(fn){
if(fn==null){
return MochiKit.Base.extend(null,arguments,1);
}
var _32=[];
for(var i=1;i<arguments.length;i++){
_32.push(fn(arguments[i]));
}
return _32;
};
MochiKit.Base.map=function(fn,lst){
var _34=MochiKit.Base.isArrayLike;
if(arguments.length<=2){
if(!_34(lst)){
if(MochiKit.Iter){
lst=MochiKit.Iter.list(lst);
if(fn==null){
return lst;
}
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn==null){
return MochiKit.Base.extend(null,lst);
}
if(false&&typeof (Array.prototype.map)=="function"){
return Array.prototype.map.call(lst,fn);
}
var _35=[];
for(var i=0;i<lst.length;i++){
_35.push(fn(lst[i]));
}
return _35;
}else{
if(fn==null){
fn=Array;
}
var _36=null;
for(i=1;i<arguments.length;i++){
if(!_34(arguments[i])){
if(MochiKit.Iter){
arguments[i]=MochiKit.Iter.list(arguments[i]);
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
var l=arguments[i].length;
if(_36==null||_36>l){
_36=l;
}
}
_35=[];
for(i=0;i<_36;i++){
var _37=[];
for(var j=1;j<arguments.length;j++){
_37.push(arguments[j][i]);
}
_35.push(fn.apply(this,_37));
}
return _35;
}
};
MochiKit.Base.xfilter=function(fn){
var _39=[];
if(fn==null){
fn=MochiKit.Base.operator.truth;
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(fn(o)){
_39.push(o);
}
}
return _39;
};
MochiKit.Base.filter=function(fn,lst,_40){
var _41=[];
if(!MochiKit.Base.isArrayLike(lst)){
if(MochiKit.Iter){
lst=MochiKit.Iter.list(lst);
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn==null){
fn=MochiKit.Base.operator.truth;
}
if(typeof (Array.prototype.filter)=="function"){
return Array.prototype.filter.call(lst,fn,_40);
}else{
if(typeof (_40)=="undefined"||_40==null){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(fn(o)){
_41.push(o);
}
}
}else{
for(i=0;i<lst.length;i++){
o=lst[i];
if(fn.call(_40,o)){
_41.push(o);
}
}
}
}
return _41;
};
MochiKit.Base._wrapDumbFunction=function(_42){
return function(){
switch(arguments.length){
case 0:
return _42();
case 1:
return _42(arguments[0]);
case 2:
return _42(arguments[0],arguments[1]);
case 3:
return _42(arguments[0],arguments[1],arguments[2]);
}
var _43=[];
for(var i=0;i<arguments.length;i++){
_43.push("arguments["+i+"]");
}
return eval("(func("+_43.join(",")+"))");
};
};
MochiKit.Base.bind=function(_44,_45){
var _46=_44.im_func;
var _47=_44.im_preargs;
var _48=_44.im_self;
if(typeof (_44)=="function"&&typeof (_44.apply)=="undefined"){
_44=MochiKit.Base._wrapDumbFunction(_44);
}
if(typeof (_46)!="function"){
_46=_44;
}
if(typeof (_45)!="undefined"){
_48=_45;
}
if(typeof (_47)=="undefined"){
_47=[];
}else{
_47=_47.slice();
}
MochiKit.Base.extend(_47,arguments,2);
var _49=function(){
var _50=arguments;
var me=arguments.callee;
if(me.im_preargs.length>0){
_50=MochiKit.Base.concat(me.im_preargs,_50);
}
var _45=me.im_self;
if(!_45){
_45=this;
}
return me.im_func.apply(_45,_50);
};
_49.im_self=_48;
_49.im_func=_46;
_49.im_preargs=_47;
return _49;
};
MochiKit.Base.bindMethods=function(_51){
for(var k in _51){
var _52=_51[k];
if(typeof (_52)=="function"){
_51[k]=bind(_52,_51);
}
}
};
MochiKit.Base.NotFound=new MochiKit.Base.NamedError("MochiKit.Base.NotFound");
MochiKit.Base.AdapterRegistry=function(){
this.pairs=[];
};
MochiKit.Base.AdapterRegistry.prototype={register:function(_53,_54,_55,_56){
if(_56){
this.pairs.unshift([_53,_54,_55]);
}else{
this.pairs.push([_53,_54,_55]);
}
},match:function(){
for(var i=0;i<this.pairs.length;i++){
var _57=this.pairs[i];
if(_57[1].apply(this,arguments)){
return _57[2].apply(this,arguments);
}
}
throw MochiKit.Base.NotFound;
},unregister:function(_58){
for(var i=0;i<this.pairs.length;i++){
var _59=this.pairs[i];
if(_59[0]==_58){
this.pairs.splice(i,1);
return true;
}
}
return false;
}};
MochiKit.Base.registerComparator=function(_60,_61,_62,_63){
MochiKit.Base.comparatorRegistry.register(_60,_61,_62,_63);
};
MochiKit.Base.compare=function(a,b){
if(a==b){
return 0;
}
var _64=(typeof (a)=="undefined"||a==null);
var _65=(typeof (b)=="undefined"||b==null);
if(_64&&_65){
return 0;
}else{
if(_64){
return -1;
}else{
if(_65){
return 1;
}
}
}
var m=MochiKit.Base;
try{
return m.comparatorRegistry.match(a,b);
}
catch(e){
if(e!=m.NotFound){
throw e;
}
if(a<b){
return -1;
}else{
if(a>b){
return 1;
}
}
var _67=m.repr;
throw new TypeError(_67(a)+" and "+_67(b)+" can not be compared");
}
};
MochiKit.Base.compareDateLike=function(a,b){
a=a.getTime();
b=b.getTime();
if(a==b){
return 0;
}else{
if(a<b){
return -1;
}else{
if(a>b){
return 1;
}
}
}
var _68=MochiKit.Base.repr;
throw new TypeError(_68(a)+" and "+_68(b)+" can not be compared");
};
MochiKit.Base.compareArrayLike=function(a,b){
var _69=MochiKit.Base.compare;
var _70=a.length;
var _71=0;
if(_70>b.length){
_71=1;
_70=b.length;
}else{
if(_70<b.length){
_71=-1;
}
}
for(var i=0;i<_70;i++){
var cmp=_69(a[i],b[i]);
if(cmp){
return cmp;
}
}
return _71;
};
MochiKit.Base.registerRepr=function(_73,_74,_75,_76){
MochiKit.Base.reprRegistry.register(_73,_74,_75,_76);
};
MochiKit.Base.repr=function(o){
if(typeof (o)=="undefined"){
return "undefined";
}else{
if(o===null){
return "null";
}
}
try{
if(typeof (o.__repr__)=="function"){
return o.__repr__();
}else{
if(typeof (o.repr)=="function"&&o.repr!=arguments.callee){
return o.repr();
}
}
return MochiKit.Base.reprRegistry.match(o);
}
catch(e){
if(typeof (o.NAME)=="string"&&(o.toString==Function.prototype.toString||o.toString==Object.prototype.toString)){
return o.NAME;
}
}
if(typeof (o)=="function"){
o=(o+"").replace(/^\s+/,"");
var idx=o.indexOf("{");
if(idx!=-1){
o=o.substr(0,idx)+"{...}";
}
}
return o+"";
};
MochiKit.Base.reprArrayLike=function(o){
var m=MochiKit.Base;
return "["+m.map(m.repr,o).join(", ")+"]";
};
MochiKit.Base.reprString=function(o){
return ("\""+o.replace(/(["\\])/g,"\\$1")+"\"").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\r]/g,"\\r");
};
MochiKit.Base.reprNumber=function(o){
return o+"";
};
MochiKit.Base.registerJSON=function(_78,_79,_80,_81){
MochiKit.Base.jsonRegistry.register(_78,_79,_80,_81);
};
MochiKit.Base.evalJSON=function(){
return eval("("+arguments[0]+")");
};
MochiKit.Base.serializeJSON=function(o){
var _82=typeof (o);
if(_82=="undefined"){
return "undefined";
}else{
if(_82=="number"||_82=="boolean"){
return o+"";
}else{
if(o===null){
return "null";
}
}
}
var m=MochiKit.Base;
var _83=m.reprString;
if(_82=="string"){
return _83(o);
}
var me=arguments.callee;
var _84;
if(typeof (o.__json__)=="function"){
_84=o.__json__();
if(o!==_84){
return me(_84);
}
}
if(typeof (o.json)=="function"){
_84=o.json();
if(o!==_84){
return me(_84);
}
}
if(_82!="function"&&typeof (o.length)=="number"){
var res=[];
for(var i=0;i<o.length;i++){
var val=me(o[i]);
if(typeof (val)!="string"){
val="undefined";
}
res.push(val);
}
return "["+res.join(",")+"]";
}
try{
_84=m.jsonRegistry.match(o);
return me(_84);
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
if(_82=="function"){
return null;
}
res=[];
for(var k in o){
var _87;
if(typeof (k)=="number"){
_87="\""+k+"\"";
}else{
if(typeof (k)=="string"){
_87=_83(k);
}else{
continue;
}
}
val=me(o[k]);
if(typeof (val)!="string"){
continue;
}
res.push(_87+":"+val);
}
return "{"+res.join(",")+"}";
};
MochiKit.Base.objEqual=function(a,b){
return (MochiKit.Base.compare(a,b)==0);
};
MochiKit.Base.arrayEqual=function(_88,arr){
if(_88.length!=arr.length){
return false;
}
return (MochiKit.Base.compare(_88,arr)==0);
};
MochiKit.Base.concat=function(){
var _90=[];
var _91=MochiKit.Base.extend;
for(var i=0;i<arguments.length;i++){
_91(_90,arguments[i]);
}
return _90;
};
MochiKit.Base.keyComparator=function(key){
var m=MochiKit.Base;
var _93=m.compare;
if(arguments.length==1){
return function(a,b){
return _93(a[key],b[key]);
};
}
var _94=m.extend(null,arguments);
return function(a,b){
var _95=0;
for(var i=0;(_95==0)&&(i<_94.length);i++){
var key=_94[i];
_95=_93(a[key],b[key]);
}
return _95;
};
};
MochiKit.Base.reverseKeyComparator=function(key){
var _96=MochiKit.Base.keyComparator.apply(this,arguments);
return function(a,b){
return _96(b,a);
};
};
MochiKit.Base.partial=function(_97){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([_97,undefined],arguments,1));
};
MochiKit.Base.listMinMax=function(_98,lst){
if(lst.length==0){
return null;
}
var cur=lst[0];
var _100=MochiKit.Base.compare;
for(var i=1;i<lst.length;i++){
var o=lst[i];
if(_100(o,cur)==_98){
cur=o;
}
}
return cur;
};
MochiKit.Base.objMax=function(){
return MochiKit.Base.listMinMax(1,arguments);
};
MochiKit.Base.objMin=function(){
return MochiKit.Base.listMinMax(-1,arguments);
};
MochiKit.Base.nodeWalk=function(node,_102){
var _103=[node];
var _104=MochiKit.Base.extend;
while(_103.length){
var res=_102(_103.shift());
if(res){
_104(_103,res);
}
}
};
MochiKit.Base.nameFunctions=function(_105){
var base=_105.NAME;
if(typeof (base)=="undefined"){
base="";
}else{
base=base+".";
}
for(var name in _105){
var o=_105[name];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+name;
}
catch(e){
}
}
}
};
if(typeof (encodeURIComponent)!="undefined"){
MochiKit.Base.urlEncode=function(_108){
return encodeURIComponent(_108).replace(/\'/g,"%27");
};
}else{
MochiKit.Base.urlEncode=function(_109){
return escape(_109).replace(/\+/g,"%2B").replace(/\"/g,"%22").rval.replace(/\'/g,"%27");
};
}
MochiKit.Base.queryString=function(_110,_111){
if(arguments.length==1){
var o=_110;
_110=[];
_111=[];
for(var k in o){
var v=o[k];
if(typeof (v)!="function"){
_110.push(k);
_111.push(v);
}
}
}
var rval=[];
var len=Math.min(_110.length,_111.length);
var _114=MochiKit.Base.urlEncode;
for(var i=0;i<len;i++){
v=_111[i];
if(typeof (v)!="undefined"&&v!=null){
rval.push(_114(_110[i])+"="+_114(v));
}
}
return rval.join("&");
};
MochiKit.Base.parseQueryString=function(_115,_116){
var _117=_115.replace(/\+/g,"%20").split("&");
var o={};
var _118;
if(typeof (decodeURIComponent)!="undefined"){
_118=decodeURIComponent;
}else{
_118=unescape;
}
if(_116){
for(var i=0;i<_117.length;i++){
var pair=_117[i].split("=");
var name=_118(pair[0]);
var arr=o[name];
if(!(arr instanceof Array)){
arr=[];
o[name]=arr;
}
arr.push(_118(pair[1]));
}
}else{
for(i=0;i<_117.length;i++){
pair=_117[i].split("=");
o[_118(pair[0])]=_118(pair[1]);
}
}
return o;
};
MochiKit.Base.EXPORT=["counter","clone","extend","update","updatetree","setdefault","keys","items","NamedError","operator","forward","itemgetter","typeMatcher","isCallable","isUndefined","isUndefinedOrNull","isNull","isNotEmpty","isArrayLike","isDateLike","xmap","map","xfilter","filter","bind","bindMethods","NotFound","AdapterRegistry","registerComparator","compare","registerRepr","repr","objEqual","arrayEqual","concat","keyComparator","reverseKeyComparator","partial","merge","listMinMax","listMax","listMin","objMax","objMin","nodeWalk","zip","urlEncode","queryString","serializeJSON","registerJSON","evalJSON","parseQueryString"];
MochiKit.Base.EXPORT_OK=["nameFunctions","comparatorRegistry","reprRegistry","jsonRegistry","compareDateLike","compareArrayLike","reprArrayLike","reprString","reprNumber"];
MochiKit.Base._exportSymbols=function(_120,_121){
if((typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined")||(typeof (MochiKit.__compat__)=="boolean"&&MochiKit.__compat__)){
var all=_121.EXPORT_TAGS[":all"];
for(var i=0;i<all.length;i++){
_120[all[i]]=_121[all[i]];
}
}
};
MochiKit.Base.__new__=function(){
this.listMax=this.partial(this.listMinMax,1);
this.listMin=this.partial(this.listMinMax,-1);
this.isCallable=this.typeMatcher("function");
this.isUndefined=this.typeMatcher("undefined");
this.merge=this.partial(this.update,null);
this.zip=this.partial(this.map,null);
this.comparatorRegistry=new this.AdapterRegistry();
this.registerComparator("dateLike",this.isDateLike,this.compareDateLike);
this.registerComparator("arrayLike",this.isArrayLike,this.compareArrayLike);
this.reprRegistry=new this.AdapterRegistry();
this.registerRepr("arrayLike",this.isArrayLike,this.reprArrayLike);
this.registerRepr("string",this.typeMatcher("string"),this.reprString);
this.registerRepr("numbers",this.typeMatcher("number","boolean"),this.reprNumber);
this.jsonRegistry=new this.AdapterRegistry();
var all=this.concat(this.EXPORT,this.EXPORT_OK);
this.EXPORT_TAGS={":common":this.concat(this.EXPORT_OK),":all":all};
this.nameFunctions(this);
};
MochiKit.Base.__new__();
compare=MochiKit.Base.compare;
MochiKit.Base._exportSymbols(this,MochiKit.Base);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Iter");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Iter depends on MochiKit.Base!";
}
if(typeof (MochiKit.Iter)=="undefined"){
MochiKit.Iter={};
}
MochiKit.Iter.NAME="MochiKit.Iter";
MochiKit.Iter.VERSION="1.0";
MochiKit.Base.update(MochiKit.Iter,{__repr__:function(){
return "["+this.NAME+" "+this.VERSION+"]";
},toString:function(){
return this.__repr__();
},registerIteratorFactory:function(name,_123,_124,_125){
MochiKit.Iter.iteratorRegistry.register(name,_123,_124,_125);
},iter:function(_126,_127){
var self=MochiKit.Iter;
if(arguments.length==2){
return self.takewhile(function(a){
return a!=_127;
},_126);
}
if(typeof (_126.next)=="function"){
return _126;
}else{
if(typeof (_126.iter)=="function"){
return _126.iter();
}
}
try{
return self.iteratorRegistry.match(_126);
}
catch(e){
var m=MochiKit.Base;
if(e==m.NotFound){
e=new TypeError(typeof (_126)+": "+m.repr(_126)+" is not iterable");
}
throw e;
}
},count:function(n){
if(!n){
n=0;
}
var m=MochiKit.Base;
return {repr:function(){
return "count("+n+")";
},toString:m.forward("repr"),next:m.counter(n)};
},cycle:function(p){
var self=MochiKit.Iter;
var m=MochiKit.Base;
var lst=[];
var _130=self.iter(p);
return {repr:function(){
return "cycle(...)";
},toString:m.forward("repr"),next:function(){
try{
var rval=_130.next();
lst.push(rval);
return rval;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
if(lst.length==0){
this.next=function(){
throw self.StopIteration;
};
}else{
var i=-1;
this.next=function(){
i=(i+1)%lst.length;
return lst[i];
};
}
return this.next();
}
}};
},repeat:function(elem,n){
var m=MochiKit.Base;
if(typeof (n)=="undefined"){
return {repr:function(){
return "repeat("+m.repr(elem)+")";
},toString:m.forward("repr"),next:function(){
return elem;
}};
}
return {repr:function(){
return "repeat("+m.repr(elem)+", "+n+")";
},toString:m.forward("repr"),next:function(){
if(n<=0){
throw MochiKit.Iter.StopIteration;
}
n-=1;
return elem;
}};
},next:function(_132){
return _132.next();
},izip:function(p,q){
var m=MochiKit.Base;
var next=MochiKit.Iter.next;
var _135=m.map(iter,arguments);
return {repr:function(){
return "izip(...)";
},toString:m.forward("repr"),next:function(){
return m.map(next,_135);
}};
},ifilter:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred==null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilter(...)";
},toString:m.forward("repr"),next:function(){
while(true){
var rval=seq.next();
if(pred(rval)){
return rval;
}
}
return undefined;
}};
},ifilterfalse:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred==null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilterfalse(...)";
},toString:m.forward("repr"),next:function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
return rval;
}
}
return undefined;
}};
},islice:function(seq){
var self=MochiKit.Iter;
var m=MochiKit.Base;
seq=self.iter(seq);
var _138=0;
var stop=0;
var step=1;
var i=-1;
if(arguments.length==2){
stop=arguments[1];
}else{
if(arguments.length==3){
_138=arguments[1];
stop=arguments[2];
}else{
_138=arguments[1];
stop=arguments[2];
step=arguments[3];
}
}
return {repr:function(){
return "islice("+["...",_138,stop,step].join(", ")+")";
},toString:m.forward("repr"),next:function(){
var rval;
while(i<_138){
rval=seq.next();
i++;
}
if(_138>=stop){
throw self.StopIteration;
}
_138+=step;
return rval;
}};
},imap:function(fun,p,q){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var _142=m.map(self.iter,m.extend(null,arguments,1));
var map=m.map;
var next=self.next;
return {repr:function(){
return "imap(...)";
},toString:m.forward("repr"),next:function(){
return fun.apply(this,map(next,_142));
}};
},applymap:function(fun,seq,self){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
return {repr:function(){
return "applymap(...)";
},toString:m.forward("repr"),next:function(){
return fun.apply(self,seq.next());
}};
},chain:function(p,q){
var self=MochiKit.Iter;
var m=MochiKit.Base;
if(arguments.length==1){
return self.iter(arguments[0]);
}
var _144=m.map(self.iter,arguments);
return {repr:function(){
return "chain(...)";
},toString:m.forward("repr"),next:function(){
while(_144.length>1){
try{
return _144[0].next();
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
_144.shift();
}
}
if(_144.length==1){
var arg=_144.shift();
this.next=m.bind(arg.next,arg);
return this.next();
}
throw self.StopIteration;
}};
},takewhile:function(pred,seq){
var self=MochiKit.Iter;
seq=self.iter(seq);
return {repr:function(){
return "takewhile(...)";
},toString:MochiKit.Base.forward("repr"),next:function(){
var rval=seq.next();
if(!pred(rval)){
this.next=function(){
throw self.StopIteration;
};
this.next();
}
return rval;
}};
},dropwhile:function(pred,seq){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
var bind=m.bind;
return {"repr":function(){
return "dropwhile(...)";
},"toString":m.forward("repr"),"next":function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
break;
}
}
this.next=bind(seq.next,seq);
return rval;
}};
},_tee:function(_146,sync,_148){
sync.pos[_146]=-1;
var m=MochiKit.Base;
var _149=m.listMin;
return {repr:function(){
return "tee("+_146+", ...)";
},toString:m.forward("repr"),next:function(){
var rval;
var i=sync.pos[_146];
if(i==sync.max){
rval=_148.next();
sync.deque.push(rval);
sync.max+=1;
sync.pos[_146]+=1;
}else{
rval=sync.deque[i-sync.min];
sync.pos[_146]+=1;
if(i==sync.min&&_149(sync.pos)!=sync.min){
sync.min+=1;
sync.deque.shift();
}
}
return rval;
}};
},tee:function(_150,n){
var rval=[];
var sync={"pos":[],"deque":[],"max":-1,"min":-1};
if(arguments.length==1){
n=2;
}
var self=MochiKit.Iter;
_150=self.iter(_150);
var _tee=self._tee;
for(var i=0;i<n;i++){
rval.push(_tee(i,sync,_150));
}
return rval;
},list:function(_152){
var m=MochiKit.Base;
if(typeof (_152.slice)=="function"){
return _152.slice();
}else{
if(m.isArrayLike(_152)){
return m.concat(_152);
}
}
var self=MochiKit.Iter;
_152=self.iter(_152);
var rval=[];
try{
while(true){
rval.push(_152.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return rval;
}
return undefined;
},reduce:function(fn,_153,_154){
var i=0;
var x=_154;
var self=MochiKit.Iter;
_153=self.iter(_153);
if(arguments.length<3){
try{
x=_153.next();
}
catch(e){
if(e==self.StopIteration){
e=new TypeError("reduce() of empty sequence with no initial value");
}
throw e;
}
i++;
}
try{
while(true){
x=fn(x,_153.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},range:function(){
var _156=0;
var stop=0;
var step=1;
if(arguments.length==1){
stop=arguments[0];
}else{
if(arguments.length==2){
_156=arguments[0];
stop=arguments[1];
}else{
if(arguments.length==3){
_156=arguments[0];
stop=arguments[1];
step=arguments[2];
}else{
throw new TypeError("range() takes 1, 2, or 3 arguments!");
}
}
}
if(step==0){
throw new TypeError("range() step must not be 0");
}
return {next:function(){
if((step>0&&_156>=stop)||(step<0&&_156<=stop)){
throw MochiKit.Iter.StopIteration;
}
var rval=_156;
_156+=step;
return rval;
},repr:function(){
return "range("+[_156,stop,step].join(", ")+")";
},toString:MochiKit.Base.forward("repr")};
},sum:function(_157,_158){
var x=_158||0;
var self=MochiKit.Iter;
_157=self.iter(_157);
try{
while(true){
x+=_157.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},exhaust:function(_159){
var self=MochiKit.Iter;
_159=self.iter(_159);
try{
while(true){
_159.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
},forEach:function(_160,func,self){
var m=MochiKit.Base;
if(arguments.length>2){
func=m.bind(func,self);
}
if(m.isArrayLike(_160)){
for(var i=0;i<_160.length;i++){
func(_160[i]);
}
}else{
var self=MochiKit.Iter;
self.exhaust(self.imap(func,_160));
}
},every:function(_162,func){
var self=MochiKit.Iter;
try{
self.ifilterfalse(func,_162).next();
return false;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return true;
}
},sorted:function(_163,cmp){
var rval=MochiKit.Iter.list(_163);
if(arguments.length==1){
cmp=MochiKit.Base.compare;
}
rval.sort(cmp);
return rval;
},reversed:function(_164){
var rval=MochiKit.Iter.list(_164);
rval.reverse();
return rval;
},some:function(_165,func){
var self=MochiKit.Iter;
try{
self.ifilter(func,_165).next();
return true;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return false;
}
},iextend:function(lst,_166){
if(MochiKit.Base.isArrayLike(_166)){
for(var i=0;i<_166.length;i++){
lst.push(_166[i]);
}
}else{
var self=MochiKit.Iter;
_166=self.iter(_166);
try{
while(true){
lst.push(_166.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
}
return lst;
},arrayLikeIter:function(_167){
var i=0;
return {repr:function(){
return "arrayLikeIter(...)";
},toString:MochiKit.Base.forward("repr"),next:function(){
if(i>=_167.length){
throw MochiKit.Iter.StopIteration;
}
return _167[i++];
}};
}});
MochiKit.Iter.EXPORT_OK=["iteratorRegistry","arrayLikeIter"];
MochiKit.Iter.EXPORT=["StopIteration","registerIteratorFactory","iter","count","cycle","repeat","next","izip","ifilter","ifilterfalse","islice","imap","applymap","chain","takewhile","dropwhile","tee","list","reduce","range","sum","exhaust","forEach","every","sorted","reversed","some","iextend"];
MochiKit.Iter.__new__=function(){
var m=MochiKit.Base;
this.StopIteration=new m.NamedError("StopIteration");
this.iteratorRegistry=new m.AdapterRegistry();
this.registerIteratorFactory("arrayLike",m.isArrayLike,this.arrayLikeIter);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Iter.__new__();
reduce=MochiKit.Iter.reduce;
MochiKit.Base._exportSymbols(this,MochiKit.Iter);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Logging");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Logging depends on MochiKit.Base!";
}
if(typeof (MochiKit.Logging)=="undefined"){
MochiKit.Logging={};
}
MochiKit.Logging.NAME="MochiKit.Logging";
MochiKit.Logging.VERSION="1.0";
MochiKit.Logging.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Logging.toString=function(){
return this.__repr__();
};
MochiKit.Logging.EXPORT=["LogLevel","LogMessage","Logger","alertListener","logger","log","logError","logDebug","logFatal","logWarning"];
MochiKit.Logging.EXPORT_OK=["logLevelAtLeast","isLogMessage","compareLogMessage"];
MochiKit.Logging.LogMessage=function(num,_169,info){
this.num=num;
this.level=_169;
this.info=info;
this.timestamp=new Date();
};
MochiKit.Logging.LogMessage.prototype={repr:function(){
var m=MochiKit.Base;
return "LogMessage("+m.map(m.repr,[this.num,this.level,this.info]).join(", ")+")";
},toString:MochiKit.Base.forward("repr")};
MochiKit.Base.update(MochiKit.Logging,{logLevelAtLeast:function(_171){
var self=MochiKit.Logging;
if(typeof (_171)=="string"){
_171=self.LogLevel[_171];
}
return function(msg){
var _173=msg.level;
if(typeof (_173)=="string"){
_173=self.LogLevel[_173];
}
return _173>=_171;
};
},isLogMessage:function(){
var _174=MochiKit.Logging.LogMessage;
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof _174)){
return false;
}
}
return true;
},compareLogMessage:function(a,b){
return MochiKit.Base.compare([a.level,a.info],[b.level,b.info]);
},alertListener:function(msg){
alert("num: "+msg.num+"\nlevel: "+msg.level+"\ninfo: "+msg.info.join(" "));
}});
MochiKit.Logging.Logger=function(_175){
this.counter=0;
if(typeof (_175)=="undefined"||_175==null){
_175=-1;
}
this.maxSize=_175;
this._messages=[];
this.listeners={};
};
MochiKit.Logging.Logger.prototype={clear:function(){
this._messages.splice(0,this._messages.length);
},dispatchListeners:function(msg){
for(var k in this.listeners){
var pair=this.listeners[k];
if(pair[0]&&!pair[0](msg)){
continue;
}
pair[1](msg);
}
},addListener:function(_176,_177,_178){
if(typeof (_177)=="string"){
_177=MochiKit.Logging.logLevelAtLeast(_177);
}
this.listeners[_176]=[_177,_178];
},removeListener:function(_179){
delete this.listeners[_179];
},baseLog:function(_180,_181){
var msg=new MochiKit.Logging.LogMessage(this.counter,_180,MochiKit.Base.extend(null,arguments,1));
this._messages.push(msg);
this.dispatchListeners(msg);
this.counter+=1;
while(this.maxSize>=0&&this._messages.length>this.maxSize){
this._messges.shift();
}
},getMessages:function(_182){
var _183=0;
if(!(typeof (_182)=="undefined"||_182==null)){
_183=Math.max(0,this._messages.length-_182);
}
return this._messages.slice(_183);
},getMessageText:function(_184){
if(typeof (_184)=="undefined"||_184==null){
_184=30;
}
var _185=this.getMessages(_184);
if(_185.length){
var lst=map(function(m){
return "\n  ["+m.num+"] "+m.level+": "+m.info.join(" ");
},_185);
lst.unshift("LAST "+_185.length+" MESSAGES:");
return lst.join("");
}
return "";
},debuggingBookmarklet:function(_186){
if(typeof (MochiKit.LoggingPane)=="undefined"){
alert(this.getMessageText());
}else{
MochiKit.LoggingPane.createLoggingPane(_186||false);
}
}};
MochiKit.Logging.__new__=function(){
this.LogLevel={ERROR:40,FATAL:50,WARNING:30,INFO:20,DEBUG:10};
var m=MochiKit.Base;
m.registerComparator("LogMessage",this.isLogMessage,this.compareLogMessage);
var _187=m.partial;
var _188=this.Logger;
var _189=_188.prototype.baseLog;
m.update(this.Logger.prototype,{debug:_187(_189,"DEBUG"),log:_187(_189,"INFO"),error:_187(_189,"ERROR"),fatal:_187(_189,"FATAL"),warning:_187(_189,"WARNING")});
var self=this;
var _190=function(name){
return function(){
self.logger[name].apply(self.logger,arguments);
};
};
this.log=_190("log");
this.logError=_190("error");
this.logDebug=_190("debug");
this.logFatal=_190("fatal");
this.logWarning=_190("warning");
this.logger=new _188();
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Logging.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Logging);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.DateTime");
}
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.DateTime)=="undefined"){
MochiKit.DateTime={};
}
MochiKit.DateTime.NAME="MochiKit.DateTime";
MochiKit.DateTime.VERSION="1.0";
MochiKit.DateTime.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.DateTime.toString=function(){
return this.__repr__();
};
MochiKit.DateTime.isoDate=function(str){
str=str+"";
if(typeof (str)!="string"||str.length==0){
return null;
}
var iso=str.split("-");
if(iso.length==0){
return null;
}
return new Date(iso[0],iso[1]-1,iso[2]);
};
MochiKit.DateTime._isoRegexp=/(\d{4,})(?:-(\d{1,2})(?:-(\d{1,2})(?:[T ](\d{1,2}):(\d{1,2})(?::(\d{1,2})(?:\.(\d+))?)?(?:(Z)|([+-])(\d{1,2})(?::(\d{1,2}))?)?)?)?)?/;
MochiKit.DateTime.isoTimestamp=function(str){
str=str+"";
if(typeof (str)!="string"||str.length==0){
return null;
}
var res=str.match(MochiKit.DateTime._isoRegexp);
if(typeof (res)=="undefined"||res==null){
return null;
}
var year,month,day,hour,min,sec,msec;
year=parseInt(res[1],10);
if(typeof (res[2])=="undefined"||res[2]==""){
return new Date(year);
}
month=parseInt(res[2],10)-1;
day=parseInt(res[3],10);
if(typeof (res[4])=="undefined"||res[4]==""){
return new Date(year,month,day);
}
hour=parseInt(res[4],10);
min=parseInt(res[5],10);
sec=(typeof (res[6])!="undefined"&&res[6]!="")?parseInt(res[6],10):0;
if(typeof (res[7])!="undefined"&&res[7]!=""){
msec=Math.round(1000*parseFloat("0."+res[7]));
}else{
msec=0;
}
if((typeof (res[8])=="undefined"||res[8]=="")&&(typeof (res[9])=="undefined"||res[9]=="")){
return new Date(year,month,day,hour,min,sec,msec);
}
var ofs;
if(typeof (res[9])!="undefined"&&res[9]!=""){
ofs=parseInt(res[10],10)*3600;
if(typeof (res[11])!="undefined"&&res[11]!=""){
ofs+=parseInt(res[11],10)*60;
}
if(res[9]=="-"){
ofs=-ofs;
}
}else{
ofs=0;
}
return new Date(Date.UTC(year,month,day,hour,min,sec,msec)+ofs);
};
MochiKit.DateTime.toISOTime=function(date,_196){
if(typeof (date)=="undefined"||date==null){
return null;
}
var hh=date.getHours();
var mm=date.getMinutes();
var ss=date.getSeconds();
var lst=[((_196&&(hh<10))?"0"+hh:hh),((mm<10)?"0"+mm:mm),((ss<10)?"0"+ss:ss)];
return lst.join(":");
};
MochiKit.DateTime.toISOTimestamp=function(date,_200){
if(typeof (date)=="undefined"||date==null){
return null;
}
var sep=_200?"T":" ";
var foot=_200?"Z":"";
if(_200){
date=new Date(date.getTime()+(date.getTimezoneOffset()*60000));
}
return MochiKit.DateTime.toISODate(date)+sep+MochiKit.DateTime.toISOTime(date,_200)+foot;
};
MochiKit.DateTime.toISODate=function(date){
if(typeof (date)=="undefined"||date==null){
return null;
}
var _203=MochiKit.DateTime._padTwo;
return [date.getFullYear(),_203(date.getMonth()+1),_203(date.getDate())].join("-");
};
MochiKit.DateTime.americanDate=function(d){
d=d+"";
if(typeof (d)!="string"||d.length==0){
return null;
}
var a=d.split("/");
return new Date(a[2],a[0]-1,a[1]);
};
MochiKit.DateTime._padTwo=function(n){
return (n>9)?n:"0"+n;
};
MochiKit.DateTime.toPaddedAmericanDate=function(d){
if(typeof (d)=="undefined"||d==null){
return null;
}
var _205=MochiKit.DateTime._padTwo;
return [_205(d.getMonth()+1),_205(d.getDate()),d.getFullYear()].join("/");
};
MochiKit.DateTime.toAmericanDate=function(d){
if(typeof (d)=="undefined"||d==null){
return null;
}
return [d.getMonth()+1,d.getDate(),d.getFullYear()].join("/");
};
MochiKit.DateTime.EXPORT=["isoDate","isoTimestamp","toISOTime","toISOTimestamp","toISODate","americanDate","toPaddedAmericanDate","toAmericanDate"];
MochiKit.DateTime.EXPORT_OK=[];
MochiKit.DateTime.EXPORT_TAGS={":common":MochiKit.DateTime.EXPORT,":all":MochiKit.DateTime.EXPORT};
MochiKit.DateTime.__new__=function(){
var base=this.NAME+".";
for(var k in this){
var o=this[k];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+k;
}
catch(e){
}
}
}
};
MochiKit.DateTime.__new__();
(function(_206,_207){
if((typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined")||(typeof (MochiKit.__compat__)=="boolean"&&MochiKit.__compat__)){
var all=_207.EXPORT_TAGS[":all"];
for(var i=0;i<all.length;i++){
_206[all[i]]=_207[all[i]];
}
}
})(this,MochiKit.DateTime);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Format");
}
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.Format)=="undefined"){
MochiKit.Format={};
}
MochiKit.Format.NAME="MochiKit.Format";
MochiKit.Format.VERSION="1.0";
MochiKit.Format.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Format.toString=function(){
return this.__repr__();
};
MochiKit.Format._numberFormatter=function(_208,_209,_210,_211,_212,_213,_214,_215,_216){
return function(num){
num=parseFloat(num);
if(typeof (num)=="undefined"||num==null||isNaN(num)){
return _208;
}
var _217=_209;
var _218=_210;
if(num<0){
num=-num;
}else{
_217=_217.replace(/-/,"");
}
var me=arguments.callee;
var fmt=MochiKit.Format.formatLocale(_211);
if(_212){
num=num*100;
_218=fmt.percent+_218;
}
num=MochiKit.Format.roundToFixed(num,_213);
var _220=num.split(/\./);
var _221=_220[0];
var frac=(_220.length==1)?"":_220[1];
var res="";
while(_221.length<_214){
_221="0"+_221;
}
if(_215){
while(_221.length>_215){
var i=_221.length-_215;
res=res+fmt.separator+_221.substring(i,_221.length);
_221=_221.substring(0,i);
}
}
res=_221+res;
if(_213>0){
while(frac.length<_216){
frac=frac+"0";
}
res=res+fmt.decimal+frac;
}
return _217+res+_218;
};
};
MochiKit.Format.numberFormatter=function(_223,_224,_225){
if(typeof (_224)=="undefined"){
_224="";
}
var _226=_223.match(/((?:[0#]+,)?[0#]+)(?:\.([0#]+))?(%)?/);
if(!_226){
throw TypeError("Invalid pattern");
}
var _227=_223.substr(0,_226.index);
var _228=_223.substr(_226.index+_226[0].length);
if(_227.search(/-/)==-1){
_227=_227+"-";
}
var _229=_226[1];
var frac=(typeof (_226[2])=="string"&&_226[2]!="")?_226[2]:"";
var _230=(typeof (_226[3])=="string"&&_226[3]!="");
var tmp=_229.split(/,/);
var _232;
if(typeof (_225)=="undefined"){
_225="default";
}
if(tmp.length==1){
_232=null;
}else{
_232=tmp[1].length;
}
var _233=_229.length-_229.replace(/0/g,"").length;
var _234=frac.length-frac.replace(/0/g,"").length;
var _235=frac.length;
return MochiKit.Format._numberFormatter(_224,_227,_228,_225,_230,_235,_233,_232,_234);
};
MochiKit.Format.formatLocale=function(_236){
if(typeof (_236)=="undefined"||_236==null){
_236="default";
}
if(typeof (_236)=="string"){
var rval=MochiKit.Format.LOCALE[_236];
if(typeof (rval)=="string"){
rval=arguments.callee(rval);
MochiKit.Format.LOCALE[_236]=rval;
}
return rval;
}else{
return _236;
}
};
MochiKit.Format.twoDigitAverage=function(_237,_238){
if(_238){
var res=_237/_238;
if(!isNaN(res)){
return MochiKit.Format.twoDigitFloat(_237/_238);
}
}
return "0";
};
MochiKit.Format.twoDigitFloat=function(_239){
var sign=(_239<0?"-":"");
var s=Math.floor(Math.abs(_239)*100).toString();
if(s=="0"){
return s;
}
if(s.length<3){
while(s.charAt(s.length-1)=="0"){
s=s.substring(0,s.length-1);
}
return sign+"0."+s;
}
var head=sign+s.substring(0,s.length-2);
var tail=s.substring(s.length-2,s.length);
if(tail=="00"){
return head;
}else{
if(tail.charAt(1)=="0"){
return head+"."+tail.charAt(0);
}else{
return head+"."+tail;
}
}
};
MochiKit.Format.lstrip=function(str,_244){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_244){
return str.replace(/^\s+/,"");
}else{
return str.replace(new RegExp("^["+_244+"]+"),"");
}
};
MochiKit.Format.rstrip=function(str,_245){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_245){
return str.replace(/\s+$/,"");
}else{
return str.replace(new RegExp("["+_245+"]+$"),"");
}
};
MochiKit.Format.strip=function(str,_246){
var self=MochiKit.Format;
return self.rstrip(self.lstrip(str,_246),_246);
};
MochiKit.Format.truncToFixed=function(_247,_248){
_247=Math.floor(_247*Math.pow(10,_248));
var res=(_247*Math.pow(10,-_248)).toFixed(_248);
if(res.charAt(0)=="."){
res="0"+res;
}
return res;
};
MochiKit.Format.roundToFixed=function(_249,_250){
return MochiKit.Format.truncToFixed(_249+0.5*Math.pow(10,-_250),_250);
};
MochiKit.Format.percentFormat=function(_251){
return MochiKit.Format.twoDigitFloat(100*_251)+"%";
};
MochiKit.Format.EXPORT=["truncToFixed","roundToFixed","numberFormatter","formatLocale","twoDigitAverage","twoDigitFloat","percentFormat","lstrip","rstrip","strip"];
MochiKit.Format.LOCALE={"en_US":{"separator":",","decimal":".","percent":"%"},"de_DE":{"separator":".","decimal":",","percent":"%"},"fr_FR":{"separator":" ","decimal":",","percent":"%"},"default":"en_US"};
MochiKit.Format.EXPORT_OK=[];
MochiKit.Format.EXPORT_TAGS={":all":MochiKit.Format.EXPORT,":common":MochiKit.Format.EXPORT};
MochiKit.Format.__new__=function(){
var base=this.NAME+".";
for(var k in this){
var o=this[k];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+k;
}
catch(e){
}
}
}
};
MochiKit.Format.__new__();
(function(_252,_253){
if((typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined")||(typeof (MochiKit.__compat__)=="boolean"&&MochiKit.__compat__)){
var all=_253.EXPORT_TAGS[":all"];
for(var i=0;i<all.length;i++){
_252[all[i]]=_253[all[i]];
}
}
})(this,MochiKit.Format);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Async");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Async depends on MochiKit.Base!";
}
if(typeof (MochiKit.Async)=="undefined"){
MochiKit.Async={};
}
MochiKit.Async.NAME="MochiKit.Async";
MochiKit.Async.VERSION="1.0";
MochiKit.Async.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Async.toString=function(){
return this.__repr__();
};
MochiKit.Async.Deferred=function(_254){
this.chain=[];
this.id=this._nextId();
this.fired=-1;
this.paused=0;
this.results=[null,null];
this.canceller=_254;
this.silentlyCancelled=false;
};
MochiKit.Async.Deferred.prototype={repr:function(){
var _255;
if(this.fired==-1){
_255="unfired";
}else{
if(this.fired==0){
_255="success";
}else{
_255="error";
}
}
return "Deferred("+this.id+", "+_255+")";
},toString:MochiKit.Base.forward("repr"),_nextId:MochiKit.Base.counter(),cancel:function(){
if(this.fired==-1){
if(this.canceller){
this.canceller(this);
}else{
this.silentlyCancelled=true;
}
if(this.fired==-1){
this.errback(new MochiKit.Async.CancelledError(this));
}
}else{
if((this.fired==0)&&(this.results[0] instanceof MochiKit.Async.Deferred)){
this.results[0].cancel();
}
}
},_pause:function(){
this.paused++;
},_unpause:function(){
this.paused--;
if((this.paused==0)&&(this.fired>=0)){
this._fire();
}
},_continue:function(res){
this._resback(res);
this._unpause();
},_resback:function(res){
this.fired=((res instanceof Error)?1:0);
this.results[this.fired]=res;
this._fire();
},_check:function(){
if(this.fired!=-1){
if(!this.silentlyCancelled){
throw new MochiKit.Async.AlreadyCalledError(this);
}
this.silentlyCancelled=false;
return;
}
},callback:function(res){
this._check();
this._resback(res);
},errback:function(res){
this._check();
if(!(res instanceof Error)){
res=new MochiKit.Async.GenericError(res);
}
this._resback(res);
},addBoth:function(fn){
return this.addCallbacks(fn,fn);
},addCallback:function(fn){
return this.addCallbacks(fn,null);
},addErrback:function(fn){
return this.addCallbacks(null,fn);
},addCallbacks:function(cb,eb){
this.chain.push([cb,eb]);
if(this.fired>=0){
this._fire();
}
return this;
},_fire:function(){
var _258=this.chain;
var _259=this.fired;
var res=this.results[_259];
var self=this;
var cb=null;
while(_258.length>0&&this.paused==0){
var pair=_258.shift();
var f=pair[_259];
if(f==null){
continue;
}
try{
res=f(res);
_259=((res instanceof Error)?1:0);
if(res instanceof MochiKit.Async.Deferred){
cb=function(res){
self._continue(res);
};
this._pause();
}
}
catch(err){
_259=1;
res=err;
}
}
this.fired=_259;
this.results[_259]=res;
if(cb&&this.paused){
res.addBoth(cb);
}
}};
MochiKit.Async.evalJSONRequest=function(req){
return eval("("+req.responseText+")");
};
MochiKit.Async.succeed=function(_262){
var d=new MochiKit.Async.Deferred();
d.callback.apply(d,arguments);
return d;
};
MochiKit.Async.fail=function(_263){
var d=new MochiKit.Async.Deferred();
d.errback.apply(d,arguments);
return d;
};
MochiKit.Async.getXMLHttpRequest=function(){
var self=arguments.callee;
if(!self.XMLHttpRequest){
var _264=[function(){
return new XMLHttpRequest();
},function(){
return new ActiveXObject("Msxml2.XMLHTTP");
},function(){
return new ActiveXObject("Microsoft.XMLHTTP");
},function(){
return new ActiveXObject("Msxml2.XMLHTTP.4.0");
},function(){
throw new MochiKit.Async.BrowserComplianceError("Browser does not support XMLHttpRequest");
}];
for(var i=0;i<_264.length;i++){
var func=_264[i];
try{
self.XMLHttpRequest=func;
return func();
}
catch(e){
}
}
}
return self.XMLHttpRequest();
};
MochiKit.Async.sendXMLHttpRequest=function(req,_265){
if(typeof (_265)=="undefined"){
send=null;
}
var _266=function(){
try{
req.onreadystatechange=null;
}
catch(e){
try{
req.onreadystatechange=function(){
};
}
catch(e){
}
}
req.abort();
};
var d=new MochiKit.Async.Deferred(_266);
var _267=function(){
if(req.readyState==4){
try{
req.onreadystatechange=null;
}
catch(e){
try{
req.onreadystatechange=function(){
};
}
catch(e){
}
}
var _268=null;
try{
_268=req.status;
if(!_268&&MochiKit.Base.isNotEmpty(req.responseText)){
_268=304;
}
}
catch(e){
}
if(_268==200||_268==304){
d.callback(req);
}else{
var err=new MochiKit.Async.XMLHttpRequestError(req,"Request failed");
if(err.number){
d.errback(err);
}else{
d.errback(err);
}
}
}
};
try{
req.onreadystatechange=_267;
req.send(_265);
}
catch(e){
try{
req.onreadystatechange=null;
}
catch(ignore){
}
d.errback(e);
}
return d;
};
MochiKit.Async.doSimpleXMLHttpRequest=function(url){
var req=MochiKit.Async.getXMLHttpRequest();
req.open("GET",url,true);
return MochiKit.Async.sendXMLHttpRequest(req);
};
MochiKit.Async.loadJSONDoc=function(url){
var d=MochiKit.Async.doSimpleXMLHttpRequest(url);
d=d.addCallback(MochiKit.Async.evalJSONRequest);
return d;
};
MochiKit.Async.wait=function(_271,_272){
var d=new MochiKit.Async.Deferred();
var bind=MochiKit.Base.bind;
var _273=MochiKit.Base.partial;
if(typeof (_272)!="undefined"){
d.addCallback(function(){
return _272;
});
}
var _274=setTimeout(bind(d.callback,d),Math.floor(_271*1000));
d.canceller=function(){
try{
clearTimeout(_274);
}
catch(e){
}
};
return d;
};
MochiKit.Async.callLater=function(_275,func){
var m=MochiKit.Base;
var _276=m.partial.apply(null,m.extend(null,arguments,1));
return MochiKit.Async.wait(_275).addCallback(function(res){
return _276();
});
};
MochiKit.Async.DeferredLock=function(){
this.waiting=[];
this.locked=false;
this.id=this._nextId();
};
MochiKit.Async.DeferredLock.prototype={__class__:MochiKit.Async.DeferredLock,acquire:function(){
d=new MochiKit.Async.Deferred();
if(this.locked){
this.waiting.push(d);
}else{
this.locked=true;
d.callback(this);
}
return d;
},release:function(){
if(!this.locked){
throw TypeError("Tried to release an unlocked DeferredLock");
}
this.locked=false;
if(this.waiting.length>0){
this.locked=true;
this.waiting.shift().callback(this);
}
},_nextId:MochiKit.Base.counter(),repr:function(){
var _277;
if(this.locked){
_277="locked, "+this.waiting.length+" waiting";
}else{
_277="unlocked";
}
return "DeferredLock("+this.id+", "+_277+")";
},toString:MochiKit.Base.forward("repr")};
MochiKit.Async.EXPORT=["AlreadyCalledError","CancelledError","BrowserComplianceError","GenericError","XMLHttpRequestError","Deferred","succeed","fail","getXMLHttpRequest","doSimpleXMLHttpRequest","loadJSONDoc","wait","callLater","sendXMLHttpRequest","DeferredLock"];
MochiKit.Async.EXPORT_OK=["evalJSONRequest"];
MochiKit.Async.__new__=function(){
var m=MochiKit.Base;
var ne=m.partial(m._newNamedError,this);
ne("AlreadyCalledError",function(_279){
this.deferred=_279;
});
ne("CancelledError",function(_280){
this.deferred=_280;
});
ne("BrowserComplianceError",function(msg){
this.message=msg;
});
ne("GenericError",function(msg){
this.message=msg;
});
ne("XMLHttpRequestError",function(req,msg){
this.req=req;
this.message=msg;
try{
this.number=req.status;
}
catch(e){
}
});
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Async.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Async);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.DOM");
dojo.require("MochiKit.Iter");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Iter",[]);
}
try{
if(typeof (MochiKit.Iter)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.DOM depends on MochiKit.Iter!";
}
if(typeof (MochiKit.DOM)=="undefined"){
MochiKit.DOM={};
}
MochiKit.DOM.NAME="MochiKit.DOM";
MochiKit.DOM.VERSION="1.0";
MochiKit.DOM.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.DOM.toString=function(){
return this.__repr__();
};
MochiKit.DOM.EXPORT=["registerDOMConverter","coerceToDOM","createDOM","createDOMFunc","getNodeAttribute","setNodeAttribute","updateNodeAttributes","appendChildNodes","replaceChildNodes","removeElement","swapDOM","BUTTON","TT","PRE","H1","H2","H3","BR","HR","LABEL","TEXTAREA","FORM","P","UL","OL","LI","TD","TR","THEAD","TBODY","TFOOT","TABLE","TH","INPUT","SPAN","A","DIV","IMG","getElement","$","getComputedStyle","getElementsByTagAndClassName","addToCallStack","addLoadEvent","focusOnLoad","setElementClass","toggleElementClass","addElementClass","removeElementClass","swapElementClass","hasElementClass","escapeHTML","toHTML","emitHTML","setDisplayForElement","hideElement","showElement","scrapeText"];
MochiKit.DOM.EXPORT_OK=["domConverters"];
MochiKit.DOM.registerDOMConverter=function(name,_281,wrap,_283){
MochiKit.DOM.domConverters.register(name,_281,wrap,_283);
};
MochiKit.DOM.coerceToDOM=function(node,ctx){
var iter=MochiKit.Iter.iter;
var _286=MochiKit.Iter.repeat;
var imap=MochiKit.Iter.imap;
var _288=MochiKit.DOM.domConverters;
var _289=MochiKit.DOM.coerceToDOM;
var _290=MochiKit.Base.NotFound;
while(true){
if(typeof (node)=="undefined"||node==null){
return null;
}
if(typeof (node.nodeType)!="undefined"&&node.nodeType>0){
return node;
}
if(typeof (node)=="number"||typeof (node)=="bool"){
node=node.toString();
}
if(typeof (node)=="string"){
return document.createTextNode(node);
}
if(typeof (node.toDOM)=="function"){
node=node.toDOM(ctx);
continue;
}
if(typeof (node)=="function"){
node=node(ctx);
continue;
}
var _291=null;
try{
_291=iter(node);
}
catch(e){
}
if(_291){
return imap(_289,_291,_286(ctx));
}
try{
node=_288.match(node,ctx);
continue;
}
catch(e){
if(e!=_290){
throw e;
}
}
return document.createTextNode(node.toString());
}
return undefined;
};
MochiKit.DOM.setNodeAttribute=function(node,attr,_293){
var o={};
o.attr=_293;
try{
return MochiKit.DOM.updateNodeAttributes(node,o);
}
catch(e){
}
return null;
};
MochiKit.DOM.getNodeAttribute=function(node,attr){
var _294=MochiKit.DOM.attributeArray.renames[attr];
node=MochiKit.DOM.getElement(node);
try{
if(_294){
return node[_294];
}
return node.getAttribute(attr);
}
catch(e){
}
return null;
};
MochiKit.DOM.updateNodeAttributes=function(node,_295){
var elem=node;
if(typeof (node)=="string"){
elem=MochiKit.DOM.getElement(node);
}
if(_295){
var _296=MochiKit.Base.updatetree;
if(MochiKit.DOM.attributeArray.compliant){
for(var k in _295){
var v=_295[k];
if(typeof (v)=="object"&&typeof (elem[k])=="object"){
_296(elem[k],v);
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}else{
var _297=MochiKit.DOM.attributeArray.renames;
for(k in _295){
v=_295[k];
var _298=_297[k];
if(typeof (_298)=="string"){
elem[_298]=v;
}else{
if(typeof (elem[k])=="object"&&typeof (v)=="object"){
_296(elem[k],v);
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}
}
}
return elem;
};
MochiKit.DOM.appendChildNodes=function(node){
var elem=node;
if(typeof (node)=="string"){
elem=MochiKit.DOM.getElement(node);
}
var _299=[MochiKit.DOM.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _300=MochiKit.Iter.iextend;
while(_299.length){
var n=_299.shift();
if(typeof (n)=="undefined"||n==null){
}else{
if(typeof (n.nodeType)=="number"){
elem.appendChild(n);
}else{
_300(_299,n);
}
}
}
return elem;
};
MochiKit.DOM.replaceChildNodes=function(node){
var elem=node;
if(typeof (node)=="string"){
elem=MochiKit.DOM.getElement(node);
arguments[0]=elem;
}
var _301;
while((_301=elem.firstChild)){
elem.removeChild(_301);
}
if(arguments.length<2){
return elem;
}else{
return MochiKit.DOM.appendChildNodes.apply(this,arguments);
}
};
MochiKit.DOM.createDOM=function(name,_302){
var elem;
if(typeof (name)=="string"){
elem=document.createElement(name);
}else{
elem=name;
}
if(_302){
MochiKit.DOM.updateNodeAttributes(elem,_302);
}
if(arguments.length<=2){
return elem;
}else{
var args=MochiKit.Base.extend([elem],arguments,2);
return MochiKit.DOM.appendChildNodes.apply(this,args);
}
};
MochiKit.DOM.createDOMFunc=function(){
return MochiKit.Base.partial.apply(this,MochiKit.Base.extend([MochiKit.DOM.createDOM],arguments));
};
MochiKit.DOM.swapDOM=function(dest,src){
dest=MochiKit.DOM.getElement(dest);
var _306=dest.parentNode;
if(src){
src=MochiKit.DOM.getElement(src);
_306.replaceChild(src,dest);
}else{
_306.removeChild(dest);
}
return src;
};
MochiKit.DOM.getElement=function(id){
if(arguments.length==1){
return ((typeof (id)=="string")?document.getElementById(id):id);
}else{
return MochiKit.Base.map(getElement,arguments);
}
};
MochiKit.DOM.getComputedStyle=function(_308,_309,_310){
if(arguments.length==2){
_310=_309;
}
var el=MochiKit.DOM.getElement(_308);
if(!el||el==document){
return undefined;
}
if(el.currentStyle){
return el.currentStyle[_309];
}
if(typeof (document.defaultView)=="undefined"){
return undefined;
}
if(document.defaultView==null){
return undefined;
}
var _312=document.defaultView.getComputedStyle(el,null);
if(typeof (_312)=="undefined"||_312==null){
return undefined;
}
return _312.getPropertyValue(_310);
};
MochiKit.DOM.getElementsByTagAndClassName=function(_313,_314,_315){
if(typeof (_313)=="undefined"||_313==null){
_313="*";
}
if(typeof (_315)=="undefined"||_315==null){
_315=document;
}
_315=MochiKit.DOM.getElement(_315);
var _316=_315.getElementsByTagName(_313)||document.all;
if(typeof (_314)=="undefined"||_314==null){
return MochiKit.Base.extend(null,_316);
}
var _317=[];
for(var i=0;i<_316.length;i++){
var _318=_316[i];
var _319=_318.className.split(" ");
for(var j=0;j<_319.length;j++){
if(_319[j]==_314){
_317.push(_318);
break;
}
}
}
return _317;
};
MochiKit.DOM._newCallStack=function(path,once){
var rval=function(){
var _322=arguments.callee.callStack;
for(var i=0;i<_322.length;i++){
if(_322[i].apply(this,arguments)===false){
break;
}
}
if(once){
try{
this[path]=null;
}
catch(e){
}
}
};
rval.callStack=[];
return rval;
};
MochiKit.DOM.addToCallStack=function(_323,path,func,once){
var _324=_323[path];
var _325=_324;
if(!(typeof (_324)=="function"&&typeof (_324.callStack)=="object"&&_324.callStack!=null)){
_325=MochiKit.DOM._newCallStack(path,once);
if(typeof (_324)=="function"){
_325.callStack.push(_324);
}
_323[path]=_325;
}
_325.callStack.push(func);
};
MochiKit.DOM.addLoadEvent=function(func){
MochiKit.DOM.addToCallStack(window,"onload",func,true);
};
MochiKit.DOM.focusOnLoad=function(_326){
MochiKit.DOM.addLoadEvent(function(){
_326=MochiKit.DOM.getElement(_326);
if(_326){
_326.focus();
}
});
};
MochiKit.DOM.setElementClass=function(_327,_328){
var obj=MochiKit.DOM.getElement(_327);
if(MochiKit.DOM.attributeArray.compliant){
obj.setAttribute("class",_328);
}else{
obj.setAttribute("className",_328);
}
};
MochiKit.DOM.toggleElementClass=function(_329){
var _330=MochiKit.DOM.getElement;
var _331=MochiKit.DOM.addElementClass;
var _332=MochiKit.DOM.removeElementClass;
for(var i=1;i<arguments.length;i++){
var obj=_330(arguments[i]);
if(!_331(obj,_329)){
_332(obj,_329);
}
}
};
MochiKit.DOM.addElementClass=function(_333,_334){
var obj=MochiKit.DOM.getElement(_333);
var cls=obj.className;
if(cls.length==0){
MochiKit.DOM.setElementClass(obj,_334);
return true;
}
if(cls==_334){
return false;
}
var _336=obj.className.split(" ");
for(var i=0;i<_336.length;i++){
if(_336[i]==_334){
return false;
}
}
MochiKit.DOM.setElementClass(obj,cls+" "+_334);
return true;
};
MochiKit.DOM.removeElementClass=function(_337,_338){
var obj=MochiKit.DOM.getElement(_337);
var cls=obj.className;
if(cls.length==0){
return false;
}
if(cls==_338){
MochiKit.DOM.setElementClass(obj,"");
return true;
}
var _339=obj.className.split(" ");
for(var i=0;i<_339.length;i++){
if(_339[i]==_338){
_339.splice(i,1);
MochiKit.DOM.setElementClass(obj,_339.join(" "));
return true;
}
}
return false;
};
MochiKit.DOM.swapElementClass=function(_340,_341,_342){
var obj=MochiKit.DOM.getElement(_340);
var res=MochiKit.DOM.removeElementClass(obj,_341);
if(res){
MochiKit.DOM.addElementClass(obj,_342);
}
return res;
};
MochiKit.DOM.hasElementClass=function(_343,_344){
var obj=MochiKit.DOM.getElement(_343);
var _345=obj.className.split(" ");
for(var i=1;i<arguments.length;i++){
var good=false;
for(var j=0;j<_345.length;j++){
if(_345[j]==arguments[i]){
good=true;
break;
}
}
if(!good){
return false;
}
}
return true;
};
MochiKit.DOM.escapeHTML=function(s){
return s.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/</g,"&lt;").replace(/>/g,"&gt;");
};
MochiKit.DOM.toHTML=function(dom){
return MochiKit.DOM.emitHTML(dom).join("");
};
MochiKit.DOM.emitHTML=function(dom,lst){
if(typeof (lst)=="undefined"||lst==null){
lst=[];
}
var _348=[dom];
var _349=MochiKit.DOM.escapeHTML;
var _350=MochiKit.DOM.attributeArray;
while(_348.length){
dom=_348.pop();
if(typeof (dom)=="string"){
lst.push(dom);
}else{
if(dom.nodeType==1){
lst.push("<"+dom.nodeName.toLowerCase());
var _351=[];
var _352=_350(dom);
for(var i=0;i<_352.length;i++){
var a=_352[i];
_351.push([" ",a.name,"=\"",_349(a.value),"\""]);
}
_351.sort();
for(i=0;i<_351.length;i++){
var _353=_351[i];
for(var j=0;j<_353.length;j++){
lst.push(_353[j]);
}
}
if(dom.hasChildNodes()){
lst.push(">");
_348.push("</"+dom.nodeName.toLowerCase()+">");
var _354=dom.childNodes;
for(i=_354.length-1;i>=0;i--){
_348.push(_354[i]);
}
}else{
lst.push("/>");
}
}else{
if(dom.nodeType==3){
lst.push(_349(dom.nodeValue));
}
}
}
}
return lst;
};
MochiKit.DOM.setDisplayForElement=function(_355,_356){
var _357=MochiKit.Base.extend(null,arguments,1);
MochiKit.Iter.forEach(MochiKit.Base.filter(null,MochiKit.Base.map(getElement,_357)),function(_356){
_356.style.display=_355;
});
};
MochiKit.DOM.scrapeText=function(node,_358){
var rval=[];
MochiKit.Base.nodeWalk(node,function(node){
var _359=node.nodeValue;
if(typeof (_359)=="string"){
rval.push(_359);
}
return node.childNodes;
});
if(_358){
return rval;
}else{
return rval.join("");
}
};
MochiKit.DOM.__new__=function(){
this.domConverters=new MochiKit.Base.AdapterRegistry();
var _360=document.createElement("span");
var _361;
if(_360.attributes.length>0){
var _362=MochiKit.Base.filter;
_361=function(node){
return _362(_361.ignoreAttrFilter,node.attributes);
};
_361.ignoreAttr={};
MochiKit.Iter.forEach(_360.attributes,function(a){
_361.ignoreAttr[a.name]=a.value;
});
_361.ignoreAttrFilter=function(a){
return (_361.ignoreAttr[a.name]!=a.value);
};
_361.compliant=false;
_361.renames={"class":"className","checked":"defaultChecked"};
}else{
_361=function(node){
return node.attributes;
};
_361.compliant=true;
_361.renames={};
}
this.attributeArray=_361;
var _363=this.createDOMFunc;
this.UL=_363("ul");
this.OL=_363("ol");
this.LI=_363("li");
this.TD=_363("td");
this.TR=_363("tr");
this.TBODY=_363("tbody");
this.THEAD=_363("thead");
this.TFOOT=_363("tfoot");
this.TABLE=_363("table");
this.TH=_363("th");
this.INPUT=_363("input");
this.SPAN=_363("span");
this.A=_363("a");
this.DIV=_363("div");
this.IMG=_363("img");
this.BUTTON=_363("button");
this.TT=_363("tt");
this.PRE=_363("pre");
this.H1=_363("h1");
this.H2=_363("h2");
this.H3=_363("h3");
this.BR=_363("br");
this.HR=_363("hr");
this.LABEL=_363("label");
this.TEXTAREA=_363("textarea");
this.FORM=_363("form");
this.P=_363("p");
var _364=MochiKit.Base.partial;
this.hideElement=_364(this.setDisplayForElement,"none");
this.showElement=_364(this.setDisplayForElement,"block");
this.removeElement=this.swapDOM;
this.$=this.getElement;
this.EXPORT_TAGS={":common":this.EXPORT,":all":MochiKit.Base.concat(this.EXPORT,this.EXPORT_OK)};
MochiKit.Base.nameFunctions(this);
};
MochiKit.DOM.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.DOM);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.LoggingPane");
dojo.require("MochiKit.Logging");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Logging",[]);
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"||typeof (MochiKit.Logging)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.LoggingPane depends on MochiKit.Base and MochiKit.Logging!";
}
if(typeof (MochiKit.LoggingPane)=="undefined"){
MochiKit.LoggingPane={};
}
MochiKit.LoggingPane.NAME="MochiKit.LoggingPane";
MochiKit.LoggingPane.VERSION="1.0";
MochiKit.LoggingPane.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.LoggingPane.toString=function(){
return this.__repr__();
};
MochiKit.LoggingPane.createLoggingPane=function(_365){
var m=MochiKit.LoggingPane;
_365=!(!_365);
if(m._loggingPane&&m._loggingPane.inline!=_365){
m._loggingPane.closePane();
m._loggingPane=null;
}
if(!m._loggingPane||m._loggingPane.closed){
m._loggingPane=new m.LoggingPane(_365,MochiKit.Logging.logger);
}
return m._loggingPane;
};
MochiKit.LoggingPane.LoggingPane=function(_366,_367){
var doc=document;
if(typeof (_367)=="undefined"||_367==null){
MochiKit.Logging.logger;
}
var _369=MochiKit.Base.update;
var _370=MochiKit.Base.updatetree;
var bind=MochiKit.Base.bind;
var _371=MochiKit.Base.clone;
var win;
if(!_366){
win=window.open("","","dependent,resizable,height=200");
if(!win){
alert("Not able to open debugging window due to pop-up blocking.");
return;
}
doc=win.document;
}
this.doc=doc;
var _373=doc.createElement("div");
var _374=doc.createElement("input");
var _375=doc.createElement("input");
var _376=doc.createElement("button");
var _377=doc.createElement("button");
var _378=doc.createElement("button");
var _379=doc.createElement("button");
var _380=doc.createElement("div");
var _381=doc.createElement("div");
var _382="_debugPaneListener";
this.colorTable=_371(this.colorTable);
var _383=[];
var _384=null;
var _385=function(msg){
var _386=msg.level;
if(typeof (_386)=="number"){
_386=MochiKit.Logging.LogLevel[_386];
}
return _386;
};
var _387=function(msg){
return msg.info.join(" ");
};
var _388=bind(function(msg){
var _389=_385(msg);
var text=_387(msg);
var c=this.colorTable[_389];
var p=doc.createElement("span");
p.style.color=c;
p.style.margin="0";
p.appendChild(doc.createTextNode(_389+": "+text));
_381.appendChild(p);
_381.appendChild(doc.createElement("br"));
if(_380.offsetHeight>_380.scrollHeight){
_380.scrollTop=0;
}else{
_380.scrollTop=_380.scrollHeight;
}
},this);
var _392=function(msg){
_383[_383.length]=msg;
_388(msg);
};
var _393=function(){
var _394,infore;
try{
_394=new RegExp(_374.value);
infore=new RegExp(_375.value);
}
catch(e){
logDebug("Error in filter regex: "+e.message);
return null;
}
return function(msg){
return (_394.test(_385(msg))&&infore.test(_387(msg)));
};
};
var _395=function(){
while(_381.firstChild){
_381.removeChild(_381.firstChild);
}
};
var _396=function(){
_383=[];
_395();
};
var _397=bind(function(){
if(this.closed){
return;
}
this.closed=true;
if(MochiKit.LoggingPane._loggingPane==this){
MochiKit.LoggingPane._loggingPane=null;
}
_367.removeListener(_382);
if(_366){
_373.parentNode.removeChild(_373);
}else{
this.win.close();
}
},this);
var _398=function(){
_395();
for(var i=0;i<_383.length;i++){
var msg=_383[i];
if(_384==null||_384(msg)){
_388(msg);
}
}
};
var _399=function(){
_384=_393();
_398();
_367.removeListener(_382);
_367.addListener(_382,_384,_392);
};
var _400=function(){
_383=_367.getMessages();
_398();
};
var _401=function(_402){
_402=_402||window.event;
key=_402.which||_402.keyCode;
if(key==13){
_399();
}
};
var _403={"display":"block","position":"fixed","left":"0px","bottom":"0px","font":this.logFont,"width":"100%","height":"100%","backgroundColor":"white"};
if(_366){
_403.height="10em";
_403.borderTop="2px solid black";
}
_369(_373.style,_403);
doc.body.appendChild(_373);
_403={"width":"33%","display":"inline","font":this.logFont};
_370(_374,{"value":"FATAL|ERROR|WARNING|INFO|DEBUG","onkeypress":_401,"style":_403});
_373.appendChild(_374);
_370(_375,{"value":".*","onkeypress":_401,"style":_403});
_373.appendChild(_375);
_403={"width":"8%","display":"inline","font":this.logFont};
_376.appendChild(doc.createTextNode("Filter"));
_376.onclick=_399;
_369(_376.style,_403);
_373.appendChild(_376);
_377.appendChild(doc.createTextNode("Load"));
_377.onclick=_400;
_369(_377.style,_403);
_373.appendChild(_377);
_378.appendChild(doc.createTextNode("Clear"));
_378.onclick=_396;
_369(_378.style,_403);
_373.appendChild(_378);
_379.appendChild(doc.createTextNode("Close"));
_379.onclick=_397;
_369(_379.style,_403);
_373.appendChild(_379);
_373.style.display="block";
_380.style.overflow="auto";
_380.style.width="100%";
_381.style.whitespace="preserve";
_381.style.width="100%";
_381.style.height="8em";
_380.appendChild(_381);
_373.appendChild(_380);
_399();
_400();
this.win=win;
this.inline=_366;
this.closePane=_397;
this.closed=false;
};
MochiKit.LoggingPane.LoggingPane.prototype={"logFont":"8pt Verdana,sans-serif","colorTable":{"ERROR":"red","FATAL":"darkred","WARNING":"blue","INFO":"black","DEBUG":"green"}};
MochiKit.LoggingPane.EXPORT_OK=["LoggingPane"];
MochiKit.LoggingPane.EXPORT=["createLoggingPane"];
MochiKit.LoggingPane.__new__=function(){
this.EXPORT_TAGS={":common":this.EXPORT,":all":MochiKit.Base.concat(this.EXPORT,this.EXPORT_OK)};
MochiKit.Base.nameFunctions(this);
MochiKit.LoggingPane._loggingPane=null;
};
MochiKit.LoggingPane.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.LoggingPane);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Color");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Color depends on MochiKit.Base";
}
if(typeof (MochiKit.Color)=="undefined"){
MochiKit.Color={};
}
MochiKit.Color.NAME="MochiKit.Color";
MochiKit.Color.VERSION="1.0";
MochiKit.Color.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Color.toString=function(){
return this.__repr__();
};
MochiKit.Color.Color=function(red,_405,blue,_407){
if(typeof (_407)=="undefined"||_407==null){
_407=1;
}
this.rgb={r:red,g:_405,b:blue,a:_407};
};
MochiKit.Color.Color.prototype={__class__:MochiKit.Color.Color,colorWithAlpha:function(_408){
var rgb=this.rgb;
var m=MochiKit.Color;
return m.Color.fromRGB(rgb.r,rgb.g,rgb.b,_408);
},colorWithHue:function(hue){
var hsl=this.asHSL();
hsl.h=hue;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithSaturation:function(_412){
var hsl=this.asHSL();
hsl.s=_412;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithLightness:function(_413){
var hsl=this.asHSL();
hsl.l=_413;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},darkerColorWithLevel:function(_414){
var hsl=this.asHSL();
hsl.l=Math.max(hsl.l-_414,0);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},lighterColorWithLevel:function(_415){
var hsl=this.asHSL();
Math.min(hsl.l+_415,1);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},blendedColor:function(_416,_417){
if(typeof (_417)=="undefined"||_417==null){
_417=0.5;
}
var sf=1-_417;
var s=this.rgb;
var d=_416.rgb;
var df=_417;
return MochiKit.Color.Color.fromRGB((s.r*sf)+(d.r*df),(s.g*sf)+(d.g*df),(s.b*sf)+(d.b*df),(s.a*sf)+(d.a*df));
},compareRGB:function(_420){
var a=this.asRGB();
var b=_420.asRGB();
return MochiKit.Base.compare([a.r,a.g,a.b,a.a],[b.r,b.g,b.b,b.a]);
},isLight:function(){
return this.asHSL().b>0.5;
},isDark:function(){
return (!this.isLight());
},toHSLString:function(){
var c=this.asHSL();
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hslString;
if(!rval){
var mid=(ccc(c.h,360).toFixed(0)+","+ccc(c.s,100).toPrecision(4)+"%"+","+ccc(c.l,100).toPrecision(4)+"%");
var a=c.a;
if(a>=1){
a=1;
rval="hsl("+mid+")";
}else{
if(a<=0){
a=0;
}
rval="hsla("+mid+","+a+")";
}
this._hslString=rval;
}
return rval;
},toRGBString:function(){
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._rgbString;
if(!rval){
var mid=(ccc(c.r,255).toFixed(0)+","+ccc(c.g,255).toFixed(0)+","+ccc(c.b,255).toFixed(0));
if(c.a!=1){
rval="rgba("+mid+","+c.a+")";
}else{
rval="rgb("+mid+")";
}
this._rgbString=rval;
}
return rval;
},asRGB:function(){
return MochiKit.Base.clone(this.rgb);
},toHexString:function(){
var m=MochiKit.Color;
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hexString;
if(!rval){
rval=("#"+m.toColorPart(ccc(c.r,255))+m.toColorPart(ccc(c.g,255))+m.toColorPart(ccc(c.b,255)));
this._hexString=rval;
}
return rval;
},asHSV:function(){
var hsv=this.hsv;
var c=this.rgb;
if(typeof (hsv)=="undefined"||hsv==null){
hsv=MochiKit.Color.rgbToHSV(this.rgb);
this.hsv=hsv;
}
return MochiKit.Base.clone(hsv);
},asHSL:function(){
var hsl=this.hsl;
var c=this.rgb;
if(typeof (hsl)=="undefined"||hsl==null){
hsl=MochiKit.Color.rgbToHSL(this.rgb);
this.hsl=hsl;
}
return MochiKit.Base.clone(hsl);
},toString:function(){
return this.toRGBString();
},repr:function(){
var c=this.rgb;
var col=[c.r,c.g,c.b,c.a];
return this.__class__.NAME+"("+col.join(", ")+")";
}};
MochiKit.Base.update(MochiKit.Color.Color,{fromRGB:function(red,_425,blue,_426){
var _427=MochiKit.Color.Color;
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_425=rgb.g;
blue=rgb.b;
if(typeof (rgb.a)=="undefined"){
_426=undefined;
}else{
_426=rgb.a;
}
}
return new _427(red,_425,blue,_426);
},fromHSL:function(hue,_428,_429,_430){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hslToRGB.apply(m,arguments));
},fromHSV:function(hue,_431,_432,_433){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hsvToRGB.apply(m,arguments));
},fromName:function(name){
var _434=MochiKit.Color.Color;
var _435=_434._namedColors[name.toLowerCase()];
if(typeof (_435)=="string"){
return _434.fromHexString(_435);
}else{
if(name=="transparent"){
return _434.transparentColor();
}
}
return null;
},fromString:function(_436){
var self=MochiKit.Color.Color;
var _437=_436.substr(0,3);
if(_437=="rgb"){
return self.fromRGBString(_436);
}else{
if(_437=="hsl"){
return self.fromHSLString(_436);
}else{
if(_436.charAt(0)=="#"){
return self.fromHexString(_436);
}
}
}
return self.fromName(_436);
},fromHexString:function(_438){
if(_438.charAt(0)=="#"){
_438=_438.substring(1);
}
var _439=[];
var i,hex;
if(_438.length==3){
for(i=0;i<3;i++){
hex=_438.substr(i,1);
_439.push(parseInt(hex+hex,16)/255);
}
}else{
for(i=0;i<6;i+=2){
hex=_438.substr(i,2);
_439.push(parseInt(hex,16)/255);
}
}
var _440=MochiKit.Color.Color;
return _440.fromRGB.apply(_440,_439);
},_fromColorString:function(pre,_442,_443,_444){
if(_444.indexOf(pre)==0){
_444=_444.substring(_444.indexOf("(",3)+1,_444.length-1);
}
var _445=_444.split(/\s*,\s*/);
var _446=[];
for(var i=0;i<_445.length;i++){
var c=_445[i];
var val;
var _447=c.substring(c.length-3);
if(c.charAt(c.length-1)=="%"){
val=0.01*parseFloat(c.substring(0,c.length-1));
}else{
if(_447=="deg"){
val=parseFloat(c)/360;
}else{
if(_447=="rad"){
val=parseFloat(c)/(Math.PI*2);
}else{
val=_443[i]*parseFloat(c);
}
}
}
_446.push(val);
}
return this[_442].apply(this,_446);
},fromBackground:function(elem){
var m=MochiKit.Color;
var d=MochiKit.DOM;
for(elem=d.getElement(elem);elem;elem=elem.parentNode){
var _448=d.getComputedStyle(elem,"backgroundColor","background-color");
if(!_448){
continue;
}
var _449=m.Color.fromString(_448);
if(!_449){
break;
}
if(_449.asRGB().a>0){
return _449;
}
}
return m.Color.whiteColor();
},namedColors:function(){
return MochiKit.Base.clone(MochiKit.Color.Color._namedColors);
}});
MochiKit.Base.update(MochiKit.Color,{clampColorComponent:function(v,_450){
v*=_450;
if(v<0){
return 0;
}else{
if(v>_450){
return _450;
}else{
return v;
}
}
},_hslValue:function(n1,n2,hue){
if(hue>6){
hue-=6;
}else{
if(hue<0){
hue+=6;
}
}
var val;
if(hue<1){
val=n1+(n2-n1)*hue;
}else{
if(hue<3){
val=n2;
}else{
if(hue<4){
val=n1+(n2-n1)*(4-hue);
}else{
val=n1;
}
}
}
return val;
},hsvToRGB:function(hue,_453,_454,_455){
if(arguments.length==1){
var hsv=hue;
hue=hsv.h;
_453=hsv.s;
_454=hsv.v;
_455=hsv.a;
}
var red;
var _456;
var blue;
if(_453==0){
red=0;
_456=0;
blue=0;
}else{
var i=Math.floor(hue*6);
var f=(hue*6)-i;
var p=_454*(1-_453);
var q=_454*(1-(_453*f));
var t=_454*(1-(_453*(1-f)));
switch(i){
case 1:
red=q;
_456=_454;
blue=p;
break;
case 2:
red=p;
_456=_454;
blue=t;
break;
case 3:
red=p;
_456=q;
blue=_454;
break;
case 4:
red=t;
_456=p;
blue=_454;
break;
case 5:
red=_454;
_456=p;
blue=q;
break;
case 6:
case 0:
red=_454;
_456=t;
blue=p;
break;
}
}
return {r:red,g:_456,b:blue,a:_455};
},hslToRGB:function(hue,_458,_459,_460){
if(arguments.length==1){
var hsl=hue;
hue=hsl.h;
_458=hsl.s;
_459=hsl.l;
_460=hsl.a;
}
var red;
var _461;
var blue;
if(_458==0){
red=_459;
_461=_459;
blue=_459;
}else{
var m2;
if(_459<=0.5){
m2=_459*(1+_458);
}else{
m2=_459+_458-(_459*_458);
}
var m1=(2*_459)-m2;
var f=MochiKit.Color._hslValue;
var h6=hue*6;
red=f(m1,m2,h6+2);
_461=f(m1,m2,h6);
blue=f(m1,m2,h6-2);
}
return {r:red,g:_461,b:blue,a:_460};
},rgbToHSV:function(red,_465,blue,_466){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_465=rgb.g;
blue=rgb.b;
_466=rgb.a;
}
var max=Math.max(Math.max(red,_465),blue);
var min=Math.min(Math.min(red,_465),blue);
var hue;
var _469;
var _470=max;
if(min==max){
hue=0;
_469=0;
}else{
var _471=(max-min);
_469=_471/max;
if(red==max){
hue=(_465-blue)/_471;
}else{
if(_465==max){
hue=2+((blue-red)/_471);
}else{
hue=4+((red-_465)/_471);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_469,v:_470,a:_466};
},rgbToHSL:function(red,_472,blue,_473){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_472=rgb.g;
blue=rgb.b;
_473=rgb.a;
}
var max=Math.max(red,Math.max(_472,blue));
var min=Math.min(red,Math.min(_472,blue));
var hue;
var _474;
var _475=(max+min)/2;
var _476=max-min;
if(_476==0){
hue=0;
_474=0;
}else{
if(_475<=0.5){
_474=_476/(max+min);
}else{
_474=_476/(2-max-min);
}
if(red==max){
hue=(_472-blue)/_476;
}else{
if(_472==max){
hue=2+((blue-red)/_476);
}else{
hue=4+((red-_472)/_476);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_474,l:_475,a:_473};
},toColorPart:function(num){
var _477=Math.round(num).toString(16);
if(num<16){
return "0"+_477;
}
return _477;
},__new__:function(){
var m=MochiKit.Base;
this.Color.fromRGBString=m.bind(this.Color._fromColorString,this.Color,"rgb","fromRGB",[1/255,1/255,1/255,1]);
this.Color.fromHSLString=m.bind(this.Color._fromColorString,this.Color,"hsl","fromHSL",[1/360,0.01,0.01,1]);
var _478=1/3;
var _479={black:[0,0,0],blue:[0,0,1],brown:[0.6,0.4,0.2],cyan:[0,1,1],darkGray:[_478,_478,_478],gray:[0.5,0.5,0.5],green:[0,1,0],lightGray:[2*_478,2*_478,2*_478],magenta:[1,0,1],orange:[1,0.5,0],purple:[0.5,0,0.5],red:[1,0,0],transparent:[0,0,0,0],white:[1,1,1],yellow:[1,1,0]};
var _480=function(name,r,g,b,a){
var rval=this.fromRGB(r,g,b,a);
this[name]=function(){
return rval;
};
return rval;
};
for(var k in _479){
var name=k+"Color";
var _483=m.concat([_480,this.Color,name],_479[k]);
this.Color[name]=m.bind.apply(null,_483);
}
var _484=function(){
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof Color)){
return false;
}
}
return true;
};
var _485=function(a,b){
return a.compareRGB(b);
};
m.nameFunctions(this);
m.registerComparator(this.Color.NAME,_484,_485);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
}});
MochiKit.Color.EXPORT=["Color"];
MochiKit.Color.EXPORT_OK=["clampColorComponent","rgbToHSL","hslToRGB","rgbToHSV","hsvToRGB","toColorPart"];
MochiKit.Color.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Color);
MochiKit.Color.Color._namedColors={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"};
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Visual");
dojo.require("MochiKit.Base");
dojo.require("MochiKit.DOM");
dojo.require("MochiKit.Color");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
JSAN.use("MochiKit.DOM",[]);
JSAN.use("MochiKit.Color",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"||typeof (MochiKit.DOM)=="undefined"||typeof (MochiKit.Color)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Visual depends on MochiKit.Base, MochiKit.DOM and MochiKit.Color!";
}
if(typeof (MochiKit.Visual)=="undefined"){
MochiKit.Visual={};
}
MochiKit.Visual.NAME="MochiKit.Visual";
MochiKit.Visual.VERSION="1.0";
MochiKit.Visual.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Visual.toString=function(){
return this.__repr__();
};
MochiKit.Visual._RoundCorners=function(e,_487){
e=MochiKit.DOM.getElement(e);
this._setOptions(_487);
if(this.options.__unstable__wrapElement){
e=this._doWrap(e);
}
var _488=this.options.color;
var C=MochiKit.Color.Color;
if(this.options.color=="fromElement"){
_488=C.fromBackground(e);
}else{
if(!(_488 instanceof C)){
_488=C.fromString(_488);
}
}
this.isTransparent=(_488.asRGB().a<=0);
var _490=this.options.bgColor;
if(this.options.bgColor=="fromParent"){
_490=C.fromBackground(e.offsetParent);
}else{
if(!(_490 instanceof C)){
_490=C.fromString(_490);
}
}
this._roundCornersImpl(e,_488,_490);
};
MochiKit.Visual._RoundCorners.prototype={_doWrap:function(e){
var _491=e.parentNode;
if(typeof (document.defaultView)=="undefined"||document.defaultView==null){
return e;
}
var _492=document.defaultView.getComputedStyle(e,null);
if(typeof (_492)=="undefined"||_492==null){
return e;
}
var _493=MochiKit.DOM.DIV({"style":{display:"block",marginTop:_492.getPropertyValue("padding-top"),marginRight:_492.getPropertyValue("padding-right"),marginBottom:_492.getPropertyValue("padding-bottom"),marginLeft:_492.getPropertyValue("padding-left"),padding:"0px"}});
_493.innerHTML=e.innerHTML;
e.innerHTML="";
e.appendChild(_493);
return e;
},_roundCornersImpl:function(e,_494,_495){
if(this.options.border){
this._renderBorder(e,_495);
}
if(this._isTopRounded()){
this._roundTopCorners(e,_494,_495);
}
if(this._isBottomRounded()){
this._roundBottomCorners(e,_494,_495);
}
},_renderBorder:function(el,_496){
var _497="1px solid "+this._borderColor(_496);
var _498="border-left: "+_497;
var _499="border-right: "+_497;
var _500="style='"+_498+";"+_499+"'";
el.innerHTML="<div "+_500+">"+el.innerHTML+"</div>";
},_roundTopCorners:function(el,_501,_502){
var _503=this._createCorner(_502);
for(var i=0;i<this.options.numSlices;i++){
_503.appendChild(this._createCornerSlice(_501,_502,i,"top"));
}
el.style.paddingTop=0;
el.insertBefore(_503,el.firstChild);
},_roundBottomCorners:function(el,_504,_505){
var _506=this._createCorner(_505);
for(var i=(this.options.numSlices-1);i>=0;i--){
_506.appendChild(this._createCornerSlice(_504,_505,i,"bottom"));
}
el.style.paddingBottom=0;
el.appendChild(_506);
},_createCorner:function(_507){
var _508=document.createElement("div");
_508.style.backgroundColor=_507.toString();
return _508;
},_createCornerSlice:function(_509,_510,n,_511){
var _512=document.createElement("span");
var _513=_512.style;
_513.backgroundColor=_509.toString();
_513.display="block";
_513.height="1px";
_513.overflow="hidden";
_513.fontSize="1px";
var _514=this._borderColor(_509,_510);
if(this.options.border&&n==0){
_513.borderTopStyle="solid";
_513.borderTopWidth="1px";
_513.borderLeftWidth="0px";
_513.borderRightWidth="0px";
_513.borderBottomWidth="0px";
_513.height="0px";
_513.borderColor=_514.toString();
}else{
if(_514){
_513.borderColor=_514.toString();
_513.borderStyle="solid";
_513.borderWidth="0px 1px";
}
}
if(!this.options.compact&&(n==(this.options.numSlices-1))){
_513.height="2px";
}
this._setMargin(_512,n,_511);
this._setBorder(_512,n,_511);
return _512;
},_setOptions:function(_515){
this.options={corners:"all",color:"fromElement",bgColor:"fromParent",blend:true,border:false,compact:false,__unstable__wrapElement:false};
MochiKit.Base.update(this.options,_515);
this.options.numSlices=(this.options.compact?2:4);
},_whichSideTop:function(){
var _516=this.options.corners;
if(this._hasString(_516,"all","top")){
return "";
}
var _517=(_516.indexOf("tl")!=-1);
var _518=(_516.indexOf("tr")!=-1);
if(_517&&_518){
return "";
}
if(_517){
return "left";
}
if(_518){
return "right";
}
return "";
},_whichSideBottom:function(){
var _519=this.options.corners;
if(this._hasString(_519,"all","bottom")){
return "";
}
var _520=(_519.indexOf("bl")!=-1);
var _521=(_519.indexOf("br")!=-1);
if(_520&&_521){
return "";
}
if(_520){
return "left";
}
if(_521){
return "right";
}
return "";
},_borderColor:function(_522,_523){
if(_522=="transparent"){
return _523;
}else{
if(this.options.border){
return this.options.border;
}else{
if(this.options.blend){
return _523.blendedColor(_522);
}
}
}
return "";
},_setMargin:function(el,n,_524){
var _525=this._marginSize(n)+"px";
var _526=(_524=="top"?this._whichSideTop():this._whichSideBottom());
var _527=el.style;
if(_526=="left"){
_527.marginLeft=_525;
_527.marginRight="0px";
}else{
if(_526=="right"){
_527.marginRight=_525;
_527.marginLeft="0px";
}else{
_527.marginLeft=_525;
_527.marginRight=_525;
}
}
},_setBorder:function(el,n,_528){
var _529=this._borderSize(n)+"px";
var _530=(_528=="top"?this._whichSideTop():this._whichSideBottom());
var _531=el.style;
if(_530=="left"){
_531.borderLeftWidth=_529;
_531.borderRightWidth="0px";
}else{
if(_530=="right"){
_531.borderRightWidth=_529;
_531.borderLeftWidth="0px";
}else{
_531.borderLeftWidth=_529;
_531.borderRightWidth=_529;
}
}
},_marginSize:function(n){
if(this.isTransparent){
return 0;
}
var o=this.options;
if(o.compact&&o.blend){
var _532=[1,0];
return _532[n];
}else{
if(o.compact){
var _533=[2,1];
return _533[n];
}else{
if(o.blend){
var _534=[3,2,1,0];
return _534[n];
}else{
var _535=[5,3,2,1];
return _535[n];
}
}
}
},_borderSize:function(n){
var o=this.options;
var _536;
if(o.compact&&(o.blend||this.isTransparent)){
return 1;
}else{
if(o.compact){
_536=[1,0];
}else{
if(o.blend){
_536=[2,1,1,1];
}else{
if(o.border){
_536=[0,2,0,0];
}else{
if(this.isTransparent){
_536=[5,3,2,1];
}else{
return 0;
}
}
}
}
}
return _536[n];
},_hasString:function(str){
for(var i=1;i<arguments.length;i++){
if(str.indexOf(arguments[i])!=-1){
return true;
}
}
return false;
},_isTopRounded:function(){
return this._hasString(this.options.corners,"all","top","tl","tr");
},_isBottomRounded:function(){
return this._hasString(this.options.corners,"all","bottom","bl","br");
},_hasSingleTextChild:function(el){
return (el.childNodes.length==1&&el.childNodes[0].nodeType==3);
}};
MochiKit.Visual.roundElement=function(e,_537){
new MochiKit.Visual._RoundCorners(e,_537);
};
MochiKit.Visual.roundClass=function(_538,_539,_540){
var _541=MochiKit.DOM.getElementsByTagAndClassName(_538,_539);
for(var i=0;i<_541.length;i++){
MochiKit.Visual.roundElement(_541[i],_540);
}
};
MochiKit.Visual.Color=MochiKit.Color.Color;
MochiKit.Visual.getElementsComputedStyle=MochiKit.DOM.getComputedStyle;
MochiKit.Visual.__new__=function(){
var m=MochiKit.Base;
m.nameFunctions(this);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
};
MochiKit.Visual.EXPORT=["roundElement","roundClass"];
MochiKit.Visual.EXPORT_OK=[];
MochiKit.Visual.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Visual);
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.MochiKit)=="undefined"){
MochiKit.MochiKit={};
}
MochiKit.MochiKit.NAME="MochiKit.MochiKit";
MochiKit.MochiKit.VERSION="1.0";
MochiKit.MochiKit.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.MochiKit.toString=function(){
return this.__repr__();
};
MochiKit.MochiKit.SUBMODULES=["Base","Iter","Logging","DateTime","Format","Async","DOM","LoggingPane","Color","Visual"];
if(typeof (JSAN)!="undefined"||typeof (dojo)!="undefined"){
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.MochiKit");
dojo.require("MochiKit.*");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
JSAN.use("MochiKit.Iter",[]);
JSAN.use("MochiKit.Logging",[]);
JSAN.use("MochiKit.DateTime",[]);
JSAN.use("MochiKit.Format",[]);
JSAN.use("MochiKit.Async",[]);
JSAN.use("MochiKit.DOM",[]);
JSAN.use("MochiKit.LoggingPane",[]);
JSAN.use("MochiKit.Color",[]);
JSAN.use("MochiKit.Visual",[]);
}
(function(){
var _542=MochiKit.Base.extend;
var self=MochiKit.MochiKit;
var _543=self.SUBMODULES;
var _544=[];
var _545=[];
var _546={};
var i,k,m,all;
for(i=0;i<_543.length;i++){
m=MochiKit[_543[i]];
_542(_544,m.EXPORT);
_542(_545,m.EXPORT_OK);
for(k in m.EXPORT_TAGS){
_546[k]=_542(_546[k],m.EXPORT_TAGS[k]);
}
all=m.EXPORT_TAGS[":all"];
if(!all){
all=_542(null,m.EXPORT,m.EXPORT_OK);
}
for(i=0;i<all.length;i++){
k=all[i];
self[k]=m[k];
}
}
self.EXPORT=_544;
self.EXPORT_OK=_545;
self.EXPORT_TAGS=_546;
}());
}else{
if(typeof (MochiKit.__compat__)=="undefined"){
MochiKit.__compat__=true;
}
(function(){
var _547=document.getElementsByTagName("script");
var _548="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
var base=null;
var _549=null;
var _550={};
var i;
for(i=0;i<_547.length;i++){
var src=_547[i].getAttribute("src");
if(!src){
continue;
}
_550[src]=true;
if(src.match(/MochiKit.js$/)){
base=src.substring(0,src.lastIndexOf("MochiKit.js"));
_549=_547[i];
}
}
if(base==null){
return;
}
var _551=MochiKit.MochiKit.SUBMODULES;
for(i=0;i<_551.length;i++){
if(MochiKit[_551[i]]){
continue;
}
var uri=base+_551[i]+".js";
if(uri in _550){
continue;
}
if(document.documentElement&&document.documentElement.namespaceURI==_548){
var s=document.createElementNS(_548,"script");
s.setAttribute("id","MochiKit_"+base+_551[i]);
s.setAttribute("src",uri);
s.setAttribute("type","application/x-javascript");
_549.parentNode.appendChild(s);
}else{
var tag="<"+"script src=\""+uri+"\" type=\"text/javascript\""+">"+"<"+"/script"+">";
document.write(tag);
}
}
})();
}


