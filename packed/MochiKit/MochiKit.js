/***

    MochiKit.MochiKit 1.3 : PACKED VERSION

    THIS FILE IS AUTOMATICALLY GENERATED.  If creating patches, please
    diff against the source tree, not this file.

    See <http://mochikit.com/> for documentation, downloads, license, etc.

    (c) 2005 Bob Ippolito.  All rights Reserved.

***/

if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Base");
}
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.Base)=="undefined"){
MochiKit.Base={};
}
MochiKit.Base.VERSION="1.3";
MochiKit.Base.NAME="MochiKit.Base";
MochiKit.Base.update=function(_1,_2){
if(_1==null){
_1={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!=null){
for(var k in o){
_1[k]=o[k];
}
}
}
return _1;
};
MochiKit.Base.update(MochiKit.Base,{__repr__:function(){
return "["+this.NAME+" "+this.VERSION+"]";
},toString:function(){
return this.__repr__();
},counter:function(n){
if(arguments.length==0){
n=1;
}
return function(){
return n++;
};
},clone:function(_7){
var me=arguments.callee;
if(arguments.length==1){
me.prototype=_7;
return new me();
}
},extend:function(_9,obj,_11){
if(!_11){
_11=0;
}
if(obj){
var l=obj.length;
if(typeof (l)!="number"){
if(typeof (MochiKit.Iter)!="undefined"){
obj=MochiKit.Iter.list(obj);
l=obj.length;
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(!_9){
_9=[];
}
for(var i=_11;i<l;i++){
_9.push(obj[i]);
}
}
return _9;
},updatetree:function(_13,obj){
if(_13==null){
_13={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!=null){
for(var k in o){
var v=o[k];
if(typeof (_13[k])=="object"&&typeof (v)=="object"){
arguments.callee(_13[k],v);
}else{
_13[k]=v;
}
}
}
}
return _13;
},setdefault:function(_15,obj){
if(_15==null){
_15={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
for(var k in o){
if(!(k in _15)){
_15[k]=o[k];
}
}
}
return _15;
},keys:function(obj){
var _16=[];
for(var _17 in obj){
_16.push(_17);
}
return _16;
},items:function(obj){
var _18=[];
var e;
for(var _20 in obj){
var v;
try{
v=obj[_20];
}
catch(e){
continue;
}
_18.push([_20,v]);
}
return _18;
},_newNamedError:function(_21,_22,_23){
_23.prototype=new MochiKit.Base.NamedError(_21.NAME+"."+_22);
_21[_22]=_23;
},operator:{truth:function(a){
return !!a;
},lognot:function(a){
return !a;
},identity:function(a){
return a;
},not:function(a){
return ~a;
},neg:function(a){
return -a;
},add:function(a,b){
return a+b;
},sub:function(a,b){
return a-b;
},div:function(a,b){
return a/b;
},mod:function(a,b){
return a%b;
},mul:function(a,b){
return a*b;
},and:function(a,b){
return a&b;
},or:function(a,b){
return a|b;
},xor:function(a,b){
return a^b;
},lshift:function(a,b){
return a<<b;
},rshift:function(a,b){
return a>>b;
},zrshift:function(a,b){
return a>>>b;
},eq:function(a,b){
return a==b;
},ne:function(a,b){
return a!=b;
},gt:function(a,b){
return a>b;
},ge:function(a,b){
return a>=b;
},lt:function(a,b){
return a<b;
},le:function(a,b){
return a<=b;
},ceq:function(a,b){
return MochiKit.Base.compare(a,b)==0;
},cne:function(a,b){
return MochiKit.Base.compare(a,b)!=0;
},cgt:function(a,b){
return MochiKit.Base.compare(a,b)==1;
},cge:function(a,b){
return MochiKit.Base.compare(a,b)!=-1;
},clt:function(a,b){
return MochiKit.Base.compare(a,b)==-1;
},cle:function(a,b){
return MochiKit.Base.compare(a,b)!=1;
},logand:function(a,b){
return a&&b;
},logor:function(a,b){
return a||b;
},contains:function(a,b){
return b in a;
}},forward:function(_26){
return function(){
return this[_26].apply(this,arguments);
};
},itemgetter:function(_27){
return function(arg){
return arg[_27];
};
},typeMatcher:function(){
var _29={};
for(var i=0;i<arguments.length;i++){
var typ=arguments[i];
_29[typ]=typ;
}
return function(){
for(var i=0;i<arguments.length;i++){
if(!(typeof (arguments[i]) in _29)){
return false;
}
}
return true;
};
},isNull:function(){
for(var i=0;i<arguments.length;i++){
if(arguments[i]!==null){
return false;
}
}
return true;
},isUndefinedOrNull:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(typeof (o)=="undefined"||o==null)){
return false;
}
}
return true;
},isNotEmpty:function(obj){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(o&&o.length)){
return false;
}
}
return true;
},isArrayLike:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
var typ=typeof (o);
if((typ!="object"&&!(typ=="function"&&typeof (o.item)=="function"))||o==null||typeof (o.length)!="number"){
return false;
}
}
return true;
},isDateLike:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="object"||o==null||typeof (o.getTime)!="function"){
return false;
}
}
return true;
},xmap:function(fn){
if(fn==null){
return MochiKit.Base.extend(null,arguments,1);
}
var _32=[];
for(var i=1;i<arguments.length;i++){
_32.push(fn(arguments[i]));
}
return _32;
},map:function(fn,lst){
var m=MochiKit.Base;
var _35=m.isArrayLike;
if(arguments.length<=2){
if(!_35(lst)){
if(MochiKit.Iter){
lst=MochiKit.Iter.list(lst);
if(fn==null){
return lst;
}
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn==null){
return m.extend(null,lst);
}
var _36=[];
for(var i=0;i<lst.length;i++){
_36.push(fn(lst[i]));
}
return _36;
}else{
if(fn==null){
fn=Array;
}
var _37=null;
for(i=1;i<arguments.length;i++){
if(!_35(arguments[i])){
if(MochiKit.Iter){
arguments[i]=MochiKit.Iter.list(arguments[i]);
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
var l=arguments[i].length;
if(_37==null||_37>l){
_37=l;
}
}
_36=[];
for(i=0;i<_37;i++){
var _38=[];
for(var j=1;j<arguments.length;j++){
_38.push(arguments[j][i]);
}
_36.push(fn.apply(this,_38));
}
return _36;
}
},xfilter:function(fn){
var _40=[];
if(fn==null){
fn=MochiKit.Base.operator.truth;
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(fn(o)){
_40.push(o);
}
}
return _40;
},filter:function(fn,lst,_41){
var _42=[];
var m=MochiKit.Base;
if(!m.isArrayLike(lst)){
if(MochiKit.Iter){
lst=MochiKit.Iter.list(lst);
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn==null){
fn=m.operator.truth;
}
if(typeof (Array.prototype.filter)=="function"){
return Array.prototype.filter.call(lst,fn,_41);
}else{
if(typeof (_41)=="undefined"||_41==null){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(fn(o)){
_42.push(o);
}
}
}else{
for(i=0;i<lst.length;i++){
o=lst[i];
if(fn.call(_41,o)){
_42.push(o);
}
}
}
}
return _42;
},_wrapDumbFunction:function(_43){
return function(){
switch(arguments.length){
case 0:
return _43();
case 1:
return _43(arguments[0]);
case 2:
return _43(arguments[0],arguments[1]);
case 3:
return _43(arguments[0],arguments[1],arguments[2]);
}
var _44=[];
for(var i=0;i<arguments.length;i++){
_44.push("arguments["+i+"]");
}
return eval("(func("+_44.join(",")+"))");
};
},bind:function(_45,_46){
if(typeof (_45)=="string"){
_45=_46[_45];
}
var _47=_45.im_func;
var _48=_45.im_preargs;
var _49=_45.im_self;
var m=MochiKit.Base;
if(typeof (_45)=="function"&&typeof (_45.apply)=="undefined"){
_45=m._wrapDumbFunction(_45);
}
if(typeof (_47)!="function"){
_47=_45;
}
if(typeof (_46)!="undefined"){
_49=_46;
}
if(typeof (_48)=="undefined"){
_48=[];
}else{
_48=_48.slice();
}
m.extend(_48,arguments,2);
var _50=function(){
var _51=arguments;
var me=arguments.callee;
if(me.im_preargs.length>0){
_51=m.concat(me.im_preargs,_51);
}
var _46=me.im_self;
if(!_46){
_46=this;
}
return me.im_func.apply(_46,_51);
};
_50.im_self=_49;
_50.im_func=_47;
_50.im_preargs=_48;
return _50;
},bindMethods:function(_52){
var _53=MochiKit.Base.bind;
for(var k in _52){
var _54=_52[k];
if(typeof (_54)=="function"){
_52[k]=_53(_54,_52);
}
}
},registerComparator:function(_55,_56,_57,_58){
MochiKit.Base.comparatorRegistry.register(_55,_56,_57,_58);
},_primitives:{"bool":true,"string":true,"number":true},compare:function(a,b){
if(a==b){
return 0;
}
var _59=(typeof (a)=="undefined"||a==null);
var _60=(typeof (b)=="undefined"||b==null);
if(_59&&_60){
return 0;
}else{
if(_59){
return -1;
}else{
if(_60){
return 1;
}
}
}
var m=MochiKit.Base;
var _61=m._primitives;
if(!(typeof (a) in _61&&typeof (b) in _61)){
try{
return m.comparatorRegistry.match(a,b);
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
}
if(a<b){
return -1;
}else{
if(a>b){
return 1;
}
}
var _62=m.repr;
throw new TypeError(_62(a)+" and "+_62(b)+" can not be compared");
},compareDateLike:function(a,b){
return MochiKit.Base.compare(a.getTime(),b.getTime());
},compareArrayLike:function(a,b){
var _63=MochiKit.Base.compare;
var _64=a.length;
var _65=0;
if(_64>b.length){
_65=1;
_64=b.length;
}else{
if(_64<b.length){
_65=-1;
}
}
for(var i=0;i<_64;i++){
var cmp=_63(a[i],b[i]);
if(cmp){
return cmp;
}
}
return _65;
},registerRepr:function(_67,_68,_69,_70){
MochiKit.Base.reprRegistry.register(_67,_68,_69,_70);
},repr:function(o){
if(typeof (o)=="undefined"){
return "undefined";
}else{
if(o===null){
return "null";
}
}
try{
if(typeof (o.__repr__)=="function"){
return o.__repr__();
}else{
if(typeof (o.repr)=="function"&&o.repr!=arguments.callee){
return o.repr();
}
}
return MochiKit.Base.reprRegistry.match(o);
}
catch(e){
if(typeof (o.NAME)=="string"&&(o.toString==Function.prototype.toString||o.toString==Object.prototype.toString)){
return o.NAME;
}
}
try{
var _71=(o+"");
}
catch(e){
return "["+typeof (o)+"]";
}
if(typeof (o)=="function"){
o=_71.replace(/^\s+/,"");
var idx=o.indexOf("{");
if(idx!=-1){
o=o.substr(0,idx)+"{...}";
}
}
return _71;
},reprArrayLike:function(o){
var m=MochiKit.Base;
return "["+m.map(m.repr,o).join(", ")+"]";
},reprString:function(o){
return ("\""+o.replace(/(["\\])/g,"\\$1")+"\"").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\r]/g,"\\r");
},reprNumber:function(o){
return o+"";
},registerJSON:function(_73,_74,_75,_76){
MochiKit.Base.jsonRegistry.register(_73,_74,_75,_76);
},evalJSON:function(){
return eval("("+arguments[0]+")");
},serializeJSON:function(o){
var _77=typeof (o);
if(_77=="undefined"){
return "undefined";
}else{
if(_77=="number"||_77=="boolean"){
return o+"";
}else{
if(o===null){
return "null";
}
}
}
var m=MochiKit.Base;
var _78=m.reprString;
if(_77=="string"){
return _78(o);
}
var me=arguments.callee;
var _79;
if(typeof (o.__json__)=="function"){
_79=o.__json__();
if(o!==_79){
return me(_79);
}
}
if(typeof (o.json)=="function"){
_79=o.json();
if(o!==_79){
return me(_79);
}
}
if(_77!="function"&&typeof (o.length)=="number"){
var res=[];
for(var i=0;i<o.length;i++){
var val=me(o[i]);
if(typeof (val)!="string"){
val="undefined";
}
res.push(val);
}
return "["+res.join(", ")+"]";
}
try{
_79=m.jsonRegistry.match(o);
return me(_79);
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
if(_77=="function"){
return null;
}
res=[];
for(var k in o){
var _82;
if(typeof (k)=="number"){
_82="\""+k+"\"";
}else{
if(typeof (k)=="string"){
_82=_78(k);
}else{
continue;
}
}
val=me(o[k]);
if(typeof (val)!="string"){
continue;
}
res.push(_82+":"+val);
}
return "{"+res.join(", ")+"}";
},objEqual:function(a,b){
return (MochiKit.Base.compare(a,b)==0);
},arrayEqual:function(_83,arr){
if(_83.length!=arr.length){
return false;
}
return (MochiKit.Base.compare(_83,arr)==0);
},concat:function(){
var _85=[];
var _86=MochiKit.Base.extend;
for(var i=0;i<arguments.length;i++){
_86(_85,arguments[i]);
}
return _85;
},keyComparator:function(key){
var m=MochiKit.Base;
var _88=m.compare;
if(arguments.length==1){
return function(a,b){
return _88(a[key],b[key]);
};
}
var _89=m.extend(null,arguments);
return function(a,b){
var _90=0;
for(var i=0;(_90==0)&&(i<_89.length);i++){
var key=_89[i];
_90=_88(a[key],b[key]);
}
return _90;
};
},reverseKeyComparator:function(key){
var _91=MochiKit.Base.keyComparator.apply(this,arguments);
return function(a,b){
return _91(b,a);
};
},partial:function(_92){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([_92,undefined],arguments,1));
},listMinMax:function(_93,lst){
if(lst.length==0){
return null;
}
var cur=lst[0];
var _95=MochiKit.Base.compare;
for(var i=1;i<lst.length;i++){
var o=lst[i];
if(_95(o,cur)==_93){
cur=o;
}
}
return cur;
},objMax:function(){
return MochiKit.Base.listMinMax(1,arguments);
},objMin:function(){
return MochiKit.Base.listMinMax(-1,arguments);
},findIdentical:function(lst,_96,_97,end){
if(typeof (end)=="undefined"||end==null){
end=lst.length;
}
for(var i=(_97||0);i<end;i++){
if(lst[i]===_96){
return i;
}
}
return -1;
},find:function(lst,_99,_100,end){
if(typeof (end)=="undefined"||end==null){
end=lst.length;
}
var cmp=MochiKit.Base.compare;
for(var i=(_100||0);i<end;i++){
if(cmp(lst[i],_99)==0){
return i;
}
}
return -1;
},nodeWalk:function(node,_102){
var _103=[node];
var _104=MochiKit.Base.extend;
while(_103.length){
var res=_102(_103.shift());
if(res){
_104(_103,res);
}
}
},nameFunctions:function(_105){
var base=_105.NAME;
if(typeof (base)=="undefined"){
base="";
}else{
base=base+".";
}
for(var name in _105){
var o=_105[name];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+name;
}
catch(e){
}
}
}
},queryString:function(_108,_109){
if(typeof (MochiKit.DOM)!="undefined"&&arguments.length==1&&(typeof (_108)=="string"||(typeof (_108.nodeType)!="undefined"&&_108.nodeType>0))){
var kv=MochiKit.DOM.formContents(_108);
_108=kv[0];
_109=kv[1];
}else{
if(arguments.length==1){
var o=_108;
_108=[];
_109=[];
for(var k in o){
var v=o[k];
if(typeof (v)!="function"){
_108.push(k);
_109.push(v);
}
}
}
}
var rval=[];
var len=Math.min(_108.length,_109.length);
var _113=MochiKit.Base.urlEncode;
for(var i=0;i<len;i++){
v=_109[i];
if(typeof (v)!="undefined"&&v!=null){
rval.push(_113(_108[i])+"="+_113(v));
}
}
return rval.join("&");
},parseQueryString:function(_114,_115){
var _116=_114.replace(/\+/g,"%20").split("&");
var o={};
var _117;
if(typeof (decodeURIComponent)!="undefined"){
_117=decodeURIComponent;
}else{
_117=unescape;
}
if(_115){
for(var i=0;i<_116.length;i++){
var pair=_116[i].split("=");
var name=_117(pair[0]);
var arr=o[name];
if(!(arr instanceof Array)){
arr=[];
o[name]=arr;
}
arr.push(_117(pair[1]));
}
}else{
for(i=0;i<_116.length;i++){
pair=_116[i].split("=");
o[_117(pair[0])]=_117(pair[1]);
}
}
return o;
}});
MochiKit.Base.AdapterRegistry=function(){
this.pairs=[];
};
MochiKit.Base.AdapterRegistry.prototype={register:function(name,_119,wrap,_121){
if(_121){
this.pairs.unshift([name,_119,wrap]);
}else{
this.pairs.push([name,_119,wrap]);
}
},match:function(){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[1].apply(this,arguments)){
return pair[2].apply(this,arguments);
}
}
throw MochiKit.Base.NotFound;
},unregister:function(name){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[0]==name){
this.pairs.splice(i,1);
return true;
}
}
return false;
}};
MochiKit.Base.EXPORT=["counter","clone","extend","update","updatetree","setdefault","keys","items","NamedError","operator","forward","itemgetter","typeMatcher","isCallable","isUndefined","isUndefinedOrNull","isNull","isNotEmpty","isArrayLike","isDateLike","xmap","map","xfilter","filter","bind","bindMethods","NotFound","AdapterRegistry","registerComparator","compare","registerRepr","repr","objEqual","arrayEqual","concat","keyComparator","reverseKeyComparator","partial","merge","listMinMax","listMax","listMin","objMax","objMin","nodeWalk","zip","urlEncode","queryString","serializeJSON","registerJSON","evalJSON","parseQueryString","find","findIdentical"];
MochiKit.Base.EXPORT_OK=["nameFunctions","comparatorRegistry","reprRegistry","jsonRegistry","compareDateLike","compareArrayLike","reprArrayLike","reprString","reprNumber"];
MochiKit.Base._exportSymbols=function(_122,_123){
if(typeof (MochiKit.__export__)=="undefined"){
MochiKit.__export__=(MochiKit.__compat__||(typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined"));
}
if(!MochiKit.__export__){
return;
}
var all=_123.EXPORT_TAGS[":all"];
for(var i=0;i<all.length;i++){
_122[all[i]]=_123[all[i]];
}
};
MochiKit.Base.__new__=function(){
var m=this;
if(typeof (encodeURIComponent)!="undefined"){
m.urlEncode=function(_125){
return encodeURIComponent(_125).replace(/\'/g,"%27");
};
}else{
m.urlEncode=function(_126){
return escape(_126).replace(/\+/g,"%2B").replace(/\"/g,"%22").rval.replace(/\'/g,"%27");
};
}
m.NamedError=function(name){
this.message=name;
this.name=name;
};
m.NamedError.prototype=new Error();
m.update(m.NamedError.prototype,{repr:function(){
if(this.message&&this.message!=this.name){
return this.name+"("+m.repr(this.message)+")";
}else{
return this.name+"()";
}
},toString:m.forward("repr")});
m.NotFound=new m.NamedError("MochiKit.Base.NotFound");
m.listMax=m.partial(m.listMinMax,1);
m.listMin=m.partial(m.listMinMax,-1);
m.isCallable=m.typeMatcher("function");
m.isUndefined=m.typeMatcher("undefined");
m.merge=m.partial(m.update,null);
m.zip=m.partial(m.map,null);
m.comparatorRegistry=new m.AdapterRegistry();
m.registerComparator("dateLike",m.isDateLike,m.compareDateLike);
m.registerComparator("arrayLike",m.isArrayLike,m.compareArrayLike);
m.reprRegistry=new m.AdapterRegistry();
m.registerRepr("arrayLike",m.isArrayLike,m.reprArrayLike);
m.registerRepr("string",m.typeMatcher("string"),m.reprString);
m.registerRepr("numbers",m.typeMatcher("number","boolean"),m.reprNumber);
m.jsonRegistry=new m.AdapterRegistry();
var all=m.concat(m.EXPORT,m.EXPORT_OK);
m.EXPORT_TAGS={":common":m.concat(m.EXPORT_OK),":all":all};
m.nameFunctions(this);
};
MochiKit.Base.__new__();
compare=MochiKit.Base.compare;
MochiKit.Base._exportSymbols(this,MochiKit.Base);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Iter");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Iter depends on MochiKit.Base!";
}
if(typeof (MochiKit.Iter)=="undefined"){
MochiKit.Iter={};
}
MochiKit.Iter.NAME="MochiKit.Iter";
MochiKit.Iter.VERSION="1.3";
MochiKit.Base.update(MochiKit.Iter,{__repr__:function(){
return "["+this.NAME+" "+this.VERSION+"]";
},toString:function(){
return this.__repr__();
},registerIteratorFactory:function(name,_127,_128,_129){
MochiKit.Iter.iteratorRegistry.register(name,_127,_128,_129);
},iter:function(_130,_131){
var self=MochiKit.Iter;
if(arguments.length==2){
return self.takewhile(function(a){
return a!=_131;
},_130);
}
if(typeof (_130.next)=="function"){
return _130;
}else{
if(typeof (_130.iter)=="function"){
return _130.iter();
}
}
try{
return self.iteratorRegistry.match(_130);
}
catch(e){
var m=MochiKit.Base;
if(e==m.NotFound){
e=new TypeError(typeof (_130)+": "+m.repr(_130)+" is not iterable");
}
throw e;
}
},count:function(n){
if(!n){
n=0;
}
var m=MochiKit.Base;
return {repr:function(){
return "count("+n+")";
},toString:m.forward("repr"),next:m.counter(n)};
},cycle:function(p){
var self=MochiKit.Iter;
var m=MochiKit.Base;
var lst=[];
var _134=self.iter(p);
return {repr:function(){
return "cycle(...)";
},toString:m.forward("repr"),next:function(){
try{
var rval=_134.next();
lst.push(rval);
return rval;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
if(lst.length==0){
this.next=function(){
throw self.StopIteration;
};
}else{
var i=-1;
this.next=function(){
i=(i+1)%lst.length;
return lst[i];
};
}
return this.next();
}
}};
},repeat:function(elem,n){
var m=MochiKit.Base;
if(typeof (n)=="undefined"){
return {repr:function(){
return "repeat("+m.repr(elem)+")";
},toString:m.forward("repr"),next:function(){
return elem;
}};
}
return {repr:function(){
return "repeat("+m.repr(elem)+", "+n+")";
},toString:m.forward("repr"),next:function(){
if(n<=0){
throw MochiKit.Iter.StopIteration;
}
n-=1;
return elem;
}};
},next:function(_136){
return _136.next();
},izip:function(p,q){
var m=MochiKit.Base;
var next=MochiKit.Iter.next;
var _139=m.map(iter,arguments);
return {repr:function(){
return "izip(...)";
},toString:m.forward("repr"),next:function(){
return m.map(next,_139);
}};
},ifilter:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred==null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilter(...)";
},toString:m.forward("repr"),next:function(){
while(true){
var rval=seq.next();
if(pred(rval)){
return rval;
}
}
return undefined;
}};
},ifilterfalse:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred==null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilterfalse(...)";
},toString:m.forward("repr"),next:function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
return rval;
}
}
return undefined;
}};
},islice:function(seq){
var self=MochiKit.Iter;
var m=MochiKit.Base;
seq=self.iter(seq);
var _142=0;
var stop=0;
var step=1;
var i=-1;
if(arguments.length==2){
stop=arguments[1];
}else{
if(arguments.length==3){
_142=arguments[1];
stop=arguments[2];
}else{
_142=arguments[1];
stop=arguments[2];
step=arguments[3];
}
}
return {repr:function(){
return "islice("+["...",_142,stop,step].join(", ")+")";
},toString:m.forward("repr"),next:function(){
var rval;
while(i<_142){
rval=seq.next();
i++;
}
if(_142>=stop){
throw self.StopIteration;
}
_142+=step;
return rval;
}};
},imap:function(fun,p,q){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var _146=m.map(self.iter,m.extend(null,arguments,1));
var map=m.map;
var next=self.next;
return {repr:function(){
return "imap(...)";
},toString:m.forward("repr"),next:function(){
return fun.apply(this,map(next,_146));
}};
},applymap:function(fun,seq,self){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
return {repr:function(){
return "applymap(...)";
},toString:m.forward("repr"),next:function(){
return fun.apply(self,seq.next());
}};
},chain:function(p,q){
var self=MochiKit.Iter;
var m=MochiKit.Base;
if(arguments.length==1){
return self.iter(arguments[0]);
}
var _148=m.map(self.iter,arguments);
return {repr:function(){
return "chain(...)";
},toString:m.forward("repr"),next:function(){
while(_148.length>1){
try{
return _148[0].next();
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
_148.shift();
}
}
if(_148.length==1){
var arg=_148.shift();
this.next=m.bind("next",arg);
return this.next();
}
throw self.StopIteration;
}};
},takewhile:function(pred,seq){
var self=MochiKit.Iter;
seq=self.iter(seq);
return {repr:function(){
return "takewhile(...)";
},toString:MochiKit.Base.forward("repr"),next:function(){
var rval=seq.next();
if(!pred(rval)){
this.next=function(){
throw self.StopIteration;
};
this.next();
}
return rval;
}};
},dropwhile:function(pred,seq){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
var bind=m.bind;
return {"repr":function(){
return "dropwhile(...)";
},"toString":m.forward("repr"),"next":function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
break;
}
}
this.next=bind("next",seq);
return rval;
}};
},_tee:function(_150,sync,_152){
sync.pos[_150]=-1;
var m=MochiKit.Base;
var _153=m.listMin;
return {repr:function(){
return "tee("+_150+", ...)";
},toString:m.forward("repr"),next:function(){
var rval;
var i=sync.pos[_150];
if(i==sync.max){
rval=_152.next();
sync.deque.push(rval);
sync.max+=1;
sync.pos[_150]+=1;
}else{
rval=sync.deque[i-sync.min];
sync.pos[_150]+=1;
if(i==sync.min&&_153(sync.pos)!=sync.min){
sync.min+=1;
sync.deque.shift();
}
}
return rval;
}};
},tee:function(_154,n){
var rval=[];
var sync={"pos":[],"deque":[],"max":-1,"min":-1};
if(arguments.length==1){
n=2;
}
var self=MochiKit.Iter;
_154=self.iter(_154);
var _tee=self._tee;
for(var i=0;i<n;i++){
rval.push(_tee(i,sync,_154));
}
return rval;
},list:function(_156){
var m=MochiKit.Base;
if(typeof (_156.slice)=="function"){
return _156.slice();
}else{
if(m.isArrayLike(_156)){
return m.concat(_156);
}
}
var self=MochiKit.Iter;
_156=self.iter(_156);
var rval=[];
try{
while(true){
rval.push(_156.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return rval;
}
return undefined;
},reduce:function(fn,_157,_158){
var i=0;
var x=_158;
var self=MochiKit.Iter;
_157=self.iter(_157);
if(arguments.length<3){
try{
x=_157.next();
}
catch(e){
if(e==self.StopIteration){
e=new TypeError("reduce() of empty sequence with no initial value");
}
throw e;
}
i++;
}
try{
while(true){
x=fn(x,_157.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},range:function(){
var _160=0;
var stop=0;
var step=1;
if(arguments.length==1){
stop=arguments[0];
}else{
if(arguments.length==2){
_160=arguments[0];
stop=arguments[1];
}else{
if(arguments.length==3){
_160=arguments[0];
stop=arguments[1];
step=arguments[2];
}else{
throw new TypeError("range() takes 1, 2, or 3 arguments!");
}
}
}
if(step==0){
throw new TypeError("range() step must not be 0");
}
return {next:function(){
if((step>0&&_160>=stop)||(step<0&&_160<=stop)){
throw MochiKit.Iter.StopIteration;
}
var rval=_160;
_160+=step;
return rval;
},repr:function(){
return "range("+[_160,stop,step].join(", ")+")";
},toString:MochiKit.Base.forward("repr")};
},sum:function(_161,_162){
var x=_162||0;
var self=MochiKit.Iter;
_161=self.iter(_161);
try{
while(true){
x+=_161.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},exhaust:function(_163){
var self=MochiKit.Iter;
_163=self.iter(_163);
try{
while(true){
_163.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
},forEach:function(_164,func,self){
var m=MochiKit.Base;
if(arguments.length>2){
func=m.bind(func,self);
}
if(m.isArrayLike(_164)){
try{
for(var i=0;i<_164.length;i++){
func(_164[i]);
}
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
}
}else{
self=MochiKit.Iter;
self.exhaust(self.imap(func,_164));
}
},every:function(_166,func){
var self=MochiKit.Iter;
try{
self.ifilterfalse(func,_166).next();
return false;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return true;
}
},sorted:function(_167,cmp){
var rval=MochiKit.Iter.list(_167);
if(arguments.length==1){
cmp=MochiKit.Base.compare;
}
rval.sort(cmp);
return rval;
},reversed:function(_168){
var rval=MochiKit.Iter.list(_168);
rval.reverse();
return rval;
},some:function(_169,func){
var self=MochiKit.Iter;
try{
self.ifilter(func,_169).next();
return true;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return false;
}
},iextend:function(lst,_170){
if(MochiKit.Base.isArrayLike(_170)){
for(var i=0;i<_170.length;i++){
lst.push(_170[i]);
}
}else{
var self=MochiKit.Iter;
_170=self.iter(_170);
try{
while(true){
lst.push(_170.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
}
return lst;
},groupby:function(_171,_172){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_172=m.operator.identity;
}
_171=self.iter(_171);
var pk=undefined;
var k=undefined;
var v;
function fetch(){
v=_171.next();
k=_172(v);
}
function eat(){
var ret=v;
v=undefined;
return ret;
}
var _175=true;
return {repr:function(){
return "groupby(...)";
},next:function(){
while(k==pk){
fetch();
if(_175){
_175=false;
break;
}
}
pk=k;
return [k,{next:function(){
if(v==undefined){
fetch();
}
if(k!=pk){
throw self.StopIteration;
}
return eat();
}}];
}};
},groupby_as_array:function(_176,_177){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_177=m.operator.identity;
}
_176=self.iter(_176);
var _178=[];
var _179=true;
var _180;
while(true){
try{
var _181=_176.next();
var key=_177(_181);
}
catch(e){
if(e==self.StopIteration){
break;
}
throw e;
}
if(_179||key!=_180){
var _182=[];
_178.push([key,_182]);
}
_182.push(_181);
_179=false;
_180=key;
}
return _178;
},arrayLikeIter:function(_183){
var i=0;
return {repr:function(){
return "arrayLikeIter(...)";
},toString:MochiKit.Base.forward("repr"),next:function(){
if(i>=_183.length){
throw MochiKit.Iter.StopIteration;
}
return _183[i++];
}};
},hasIterateNext:function(_184){
return (_184&&typeof (_184.iterateNext)=="function");
},iterateNextIter:function(_185){
return {repr:function(){
return "iterateNextIter(...)";
},toString:MochiKit.Base.forward("repr"),next:function(){
var rval=_185.iterateNext();
if(rval===null||rval===undefined){
throw MochiKit.Iter.StopIteration;
}
return rval;
}};
}});
MochiKit.Iter.EXPORT_OK=["iteratorRegistry","arrayLikeIter","hasIterateNext","iterateNextIter",];
MochiKit.Iter.EXPORT=["StopIteration","registerIteratorFactory","iter","count","cycle","repeat","next","izip","ifilter","ifilterfalse","islice","imap","applymap","chain","takewhile","dropwhile","tee","list","reduce","range","sum","exhaust","forEach","every","sorted","reversed","some","iextend","groupby","groupby_as_array"];
MochiKit.Iter.__new__=function(){
var m=MochiKit.Base;
this.StopIteration=new m.NamedError("StopIteration");
this.iteratorRegistry=new m.AdapterRegistry();
this.registerIteratorFactory("arrayLike",m.isArrayLike,this.arrayLikeIter);
this.registerIteratorFactory("iterateNext",this.hasIterateNext,this.iterateNextIter);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Iter.__new__();
reduce=MochiKit.Iter.reduce;
MochiKit.Base._exportSymbols(this,MochiKit.Iter);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Logging");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Logging depends on MochiKit.Base!";
}
if(typeof (MochiKit.Logging)=="undefined"){
MochiKit.Logging={};
}
MochiKit.Logging.NAME="MochiKit.Logging";
MochiKit.Logging.VERSION="1.3";
MochiKit.Logging.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Logging.toString=function(){
return this.__repr__();
};
MochiKit.Logging.EXPORT=["LogLevel","LogMessage","Logger","alertListener","logger","log","logError","logDebug","logFatal","logWarning"];
MochiKit.Logging.EXPORT_OK=["logLevelAtLeast","isLogMessage","compareLogMessage"];
MochiKit.Logging.LogMessage=function(num,_187,info){
this.num=num;
this.level=_187;
this.info=info;
this.timestamp=new Date();
};
MochiKit.Logging.LogMessage.prototype={repr:function(){
var m=MochiKit.Base;
return "LogMessage("+m.map(m.repr,[this.num,this.level,this.info]).join(", ")+")";
},toString:MochiKit.Base.forward("repr")};
MochiKit.Base.update(MochiKit.Logging,{logLevelAtLeast:function(_189){
var self=MochiKit.Logging;
if(typeof (_189)=="string"){
_189=self.LogLevel[_189];
}
return function(msg){
var _191=msg.level;
if(typeof (_191)=="string"){
_191=self.LogLevel[_191];
}
return _191>=_189;
};
},isLogMessage:function(){
var _192=MochiKit.Logging.LogMessage;
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof _192)){
return false;
}
}
return true;
},compareLogMessage:function(a,b){
return MochiKit.Base.compare([a.level,a.info],[b.level,b.info]);
},alertListener:function(msg){
alert("num: "+msg.num+"\nlevel: "+msg.level+"\ninfo: "+msg.info.join(" "));
}});
MochiKit.Logging.Logger=function(_193){
this.counter=0;
if(typeof (_193)=="undefined"||_193==null){
_193=-1;
}
this.maxSize=_193;
this._messages=[];
this.listeners={};
};
MochiKit.Logging.Logger.prototype={clear:function(){
this._messages.splice(0,this._messages.length);
},dispatchListeners:function(msg){
for(var k in this.listeners){
var pair=this.listeners[k];
if(pair.ident!=k||(pair[0]&&!pair[0](msg))){
continue;
}
pair[1](msg);
}
},addListener:function(_194,_195,_196){
if(typeof (_195)=="string"){
_195=MochiKit.Logging.logLevelAtLeast(_195);
}
var _197=[_195,_196];
_197.ident=_194;
this.listeners[_194]=_197;
},removeListener:function(_198){
delete this.listeners[_198];
},baseLog:function(_199,_200){
var msg=new MochiKit.Logging.LogMessage(this.counter,_199,MochiKit.Base.extend(null,arguments,1));
this._messages.push(msg);
this.dispatchListeners(msg);
this.counter+=1;
while(this.maxSize>=0&&this._messages.length>this.maxSize){
this._messages.shift();
}
},getMessages:function(_201){
var _202=0;
if(!(typeof (_201)=="undefined"||_201==null)){
_202=Math.max(0,this._messages.length-_201);
}
return this._messages.slice(_202);
},getMessageText:function(_203){
if(typeof (_203)=="undefined"||_203==null){
_203=30;
}
var _204=this.getMessages(_203);
if(_204.length){
var lst=map(function(m){
return "\n  ["+m.num+"] "+m.level+": "+m.info.join(" ");
},_204);
lst.unshift("LAST "+_204.length+" MESSAGES:");
return lst.join("");
}
return "";
},debuggingBookmarklet:function(_205){
if(typeof (MochiKit.LoggingPane)=="undefined"){
alert(this.getMessageText());
}else{
MochiKit.LoggingPane.createLoggingPane(_205||false);
}
}};
MochiKit.Logging.__new__=function(){
this.LogLevel={ERROR:40,FATAL:50,WARNING:30,INFO:20,DEBUG:10};
var m=MochiKit.Base;
m.registerComparator("LogMessage",this.isLogMessage,this.compareLogMessage);
var _206=m.partial;
var _207=this.Logger;
var _208=_207.prototype.baseLog;
m.update(this.Logger.prototype,{debug:_206(_208,"DEBUG"),log:_206(_208,"INFO"),error:_206(_208,"ERROR"),fatal:_206(_208,"FATAL"),warning:_206(_208,"WARNING")});
var self=this;
var _209=function(name){
return function(){
self.logger[name].apply(self.logger,arguments);
};
};
this.log=_209("log");
this.logError=_209("error");
this.logDebug=_209("debug");
this.logFatal=_209("fatal");
this.logWarning=_209("warning");
this.logger=new _207();
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Logging.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Logging);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.DateTime");
}
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.DateTime)=="undefined"){
MochiKit.DateTime={};
}
MochiKit.DateTime.NAME="MochiKit.DateTime";
MochiKit.DateTime.VERSION="1.3";
MochiKit.DateTime.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.DateTime.toString=function(){
return this.__repr__();
};
MochiKit.DateTime.isoDate=function(str){
str=str+"";
if(typeof (str)!="string"||str.length==0){
return null;
}
var iso=str.split("-");
if(iso.length==0){
return null;
}
return new Date(iso[0],iso[1]-1,iso[2]);
};
MochiKit.DateTime._isoRegexp=/(\d{4,})(?:-(\d{1,2})(?:-(\d{1,2})(?:[T ](\d{1,2}):(\d{1,2})(?::(\d{1,2})(?:\.(\d+))?)?(?:(Z)|([+-])(\d{1,2})(?::(\d{1,2}))?)?)?)?)?/;
MochiKit.DateTime.isoTimestamp=function(str){
str=str+"";
if(typeof (str)!="string"||str.length==0){
return null;
}
var res=str.match(MochiKit.DateTime._isoRegexp);
if(typeof (res)=="undefined"||res==null){
return null;
}
var year,month,day,hour,min,sec,msec;
year=parseInt(res[1],10);
if(typeof (res[2])=="undefined"||res[2]==""){
return new Date(year);
}
month=parseInt(res[2],10)-1;
day=parseInt(res[3],10);
if(typeof (res[4])=="undefined"||res[4]==""){
return new Date(year,month,day);
}
hour=parseInt(res[4],10);
min=parseInt(res[5],10);
sec=(typeof (res[6])!="undefined"&&res[6]!="")?parseInt(res[6],10):0;
if(typeof (res[7])!="undefined"&&res[7]!=""){
msec=Math.round(1000*parseFloat("0."+res[7]));
}else{
msec=0;
}
if((typeof (res[8])=="undefined"||res[8]=="")&&(typeof (res[9])=="undefined"||res[9]=="")){
return new Date(year,month,day,hour,min,sec,msec);
}
var ofs;
if(typeof (res[9])!="undefined"&&res[9]!=""){
ofs=parseInt(res[10],10)*3600000;
if(typeof (res[11])!="undefined"&&res[11]!=""){
ofs+=parseInt(res[11],10)*60000;
}
if(res[9]=="-"){
ofs=-ofs;
}
}else{
ofs=0;
}
return new Date(Date.UTC(year,month,day,hour,min,sec,msec)-ofs);
};
MochiKit.DateTime.toISOTime=function(date,_215){
if(typeof (date)=="undefined"||date==null){
return null;
}
var hh=date.getHours();
var mm=date.getMinutes();
var ss=date.getSeconds();
var lst=[((_215&&(hh<10))?"0"+hh:hh),((mm<10)?"0"+mm:mm),((ss<10)?"0"+ss:ss)];
return lst.join(":");
};
MochiKit.DateTime.toISOTimestamp=function(date,_219){
if(typeof (date)=="undefined"||date==null){
return null;
}
var sep=_219?"T":" ";
var foot=_219?"Z":"";
if(_219){
date=new Date(date.getTime()+(date.getTimezoneOffset()*60000));
}
return MochiKit.DateTime.toISODate(date)+sep+MochiKit.DateTime.toISOTime(date,_219)+foot;
};
MochiKit.DateTime.toISODate=function(date){
if(typeof (date)=="undefined"||date==null){
return null;
}
var _222=MochiKit.DateTime._padTwo;
return [date.getFullYear(),_222(date.getMonth()+1),_222(date.getDate())].join("-");
};
MochiKit.DateTime.americanDate=function(d){
d=d+"";
if(typeof (d)!="string"||d.length==0){
return null;
}
var a=d.split("/");
return new Date(a[2],a[0]-1,a[1]);
};
MochiKit.DateTime._padTwo=function(n){
return (n>9)?n:"0"+n;
};
MochiKit.DateTime.toPaddedAmericanDate=function(d){
if(typeof (d)=="undefined"||d==null){
return null;
}
var _224=MochiKit.DateTime._padTwo;
return [_224(d.getMonth()+1),_224(d.getDate()),d.getFullYear()].join("/");
};
MochiKit.DateTime.toAmericanDate=function(d){
if(typeof (d)=="undefined"||d==null){
return null;
}
return [d.getMonth()+1,d.getDate(),d.getFullYear()].join("/");
};
MochiKit.DateTime.EXPORT=["isoDate","isoTimestamp","toISOTime","toISOTimestamp","toISODate","americanDate","toPaddedAmericanDate","toAmericanDate"];
MochiKit.DateTime.EXPORT_OK=[];
MochiKit.DateTime.EXPORT_TAGS={":common":MochiKit.DateTime.EXPORT,":all":MochiKit.DateTime.EXPORT};
MochiKit.DateTime.__new__=function(){
var base=this.NAME+".";
for(var k in this){
var o=this[k];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+k;
}
catch(e){
}
}
}
};
MochiKit.DateTime.__new__();
if(typeof (MochiKit.Base)!="undefined"){
MochiKit.Base._exportSymbols(this,MochiKit.DateTime);
}else{
(function(_225,_226){
if((typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined")||(typeof (MochiKit.__compat__)=="boolean"&&MochiKit.__compat__)){
var all=_226.EXPORT_TAGS[":all"];
for(var i=0;i<all.length;i++){
_225[all[i]]=_226[all[i]];
}
}
})(this,MochiKit.DateTime);
}
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Format");
}
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.Format)=="undefined"){
MochiKit.Format={};
}
MochiKit.Format.NAME="MochiKit.Format";
MochiKit.Format.VERSION="1.3";
MochiKit.Format.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Format.toString=function(){
return this.__repr__();
};
MochiKit.Format._numberFormatter=function(_227,_228,_229,_230,_231,_232,_233,_234,_235){
return function(num){
num=parseFloat(num);
if(typeof (num)=="undefined"||num==null||isNaN(num)){
return _227;
}
var _236=_228;
var _237=_229;
if(num<0){
num=-num;
}else{
_236=_236.replace(/-/,"");
}
var me=arguments.callee;
var fmt=MochiKit.Format.formatLocale(_230);
if(_231){
num=num*100;
_237=fmt.percent+_237;
}
num=MochiKit.Format.roundToFixed(num,_232);
var _239=num.split(/\./);
var _240=_239[0];
var frac=(_239.length==1)?"":_239[1];
var res="";
while(_240.length<_233){
_240="0"+_240;
}
if(_234){
while(_240.length>_234){
var i=_240.length-_234;
res=fmt.separator+_240.substring(i,_240.length)+res;
_240=_240.substring(0,i);
}
}
res=_240+res;
if(_232>0){
while(frac.length<_235){
frac=frac+"0";
}
res=res+fmt.decimal+frac;
}
return _236+res+_237;
};
};
MochiKit.Format.numberFormatter=function(_242,_243,_244){
if(typeof (_243)=="undefined"){
_243="";
}
var _245=_242.match(/((?:[0#]+,)?[0#]+)(?:\.([0#]+))?(%)?/);
if(!_245){
throw TypeError("Invalid pattern");
}
var _246=_242.substr(0,_245.index);
var _247=_242.substr(_245.index+_245[0].length);
if(_246.search(/-/)==-1){
_246=_246+"-";
}
var _248=_245[1];
var frac=(typeof (_245[2])=="string"&&_245[2]!="")?_245[2]:"";
var _249=(typeof (_245[3])=="string"&&_245[3]!="");
var tmp=_248.split(/,/);
var _251;
if(typeof (_244)=="undefined"){
_244="default";
}
if(tmp.length==1){
_251=null;
}else{
_251=tmp[1].length;
}
var _252=_248.length-_248.replace(/0/g,"").length;
var _253=frac.length-frac.replace(/0/g,"").length;
var _254=frac.length;
var rval=MochiKit.Format._numberFormatter(_243,_246,_247,_244,_249,_254,_252,_251,_253);
var m=MochiKit.Base;
if(m){
var fn=arguments.callee;
var args=m.concat(arguments);
rval.repr=function(){
return [self.NAME,"(",map(m.repr,args).join(", "),")"].join("");
};
}
return rval;
};
MochiKit.Format.formatLocale=function(_256){
if(typeof (_256)=="undefined"||_256==null){
_256="default";
}
if(typeof (_256)=="string"){
var rval=MochiKit.Format.LOCALE[_256];
if(typeof (rval)=="string"){
rval=arguments.callee(rval);
MochiKit.Format.LOCALE[_256]=rval;
}
return rval;
}else{
return _256;
}
};
MochiKit.Format.twoDigitAverage=function(_257,_258){
if(_258){
var res=_257/_258;
if(!isNaN(res)){
return MochiKit.Format.twoDigitFloat(_257/_258);
}
}
return "0";
};
MochiKit.Format.twoDigitFloat=function(_259){
var sign=(_259<0?"-":"");
var s=Math.floor(Math.abs(_259)*100).toString();
if(s=="0"){
return s;
}
if(s.length<3){
while(s.charAt(s.length-1)=="0"){
s=s.substring(0,s.length-1);
}
return sign+"0."+s;
}
var head=sign+s.substring(0,s.length-2);
var tail=s.substring(s.length-2,s.length);
if(tail=="00"){
return head;
}else{
if(tail.charAt(1)=="0"){
return head+"."+tail.charAt(0);
}else{
return head+"."+tail;
}
}
};
MochiKit.Format.lstrip=function(str,_264){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_264){
return str.replace(/^\s+/,"");
}else{
return str.replace(new RegExp("^["+_264+"]+"),"");
}
};
MochiKit.Format.rstrip=function(str,_265){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_265){
return str.replace(/\s+$/,"");
}else{
return str.replace(new RegExp("["+_265+"]+$"),"");
}
};
MochiKit.Format.strip=function(str,_266){
var self=MochiKit.Format;
return self.rstrip(self.lstrip(str,_266),_266);
};
MochiKit.Format.truncToFixed=function(_267,_268){
_267=Math.floor(_267*Math.pow(10,_268));
var res=(_267*Math.pow(10,-_268)).toFixed(_268);
if(res.charAt(0)=="."){
res="0"+res;
}
return res;
};
MochiKit.Format.roundToFixed=function(_269,_270){
return MochiKit.Format.truncToFixed(_269+0.5*Math.pow(10,-_270),_270);
};
MochiKit.Format.percentFormat=function(_271){
return MochiKit.Format.twoDigitFloat(100*_271)+"%";
};
MochiKit.Format.EXPORT=["truncToFixed","roundToFixed","numberFormatter","formatLocale","twoDigitAverage","twoDigitFloat","percentFormat","lstrip","rstrip","strip"];
MochiKit.Format.LOCALE={en_US:{separator:",",decimal:".",percent:"%"},de_DE:{separator:".",decimal:",",percent:"%"},fr_FR:{separator:" ",decimal:",",percent:"%"},"default":"en_US"};
MochiKit.Format.EXPORT_OK=[];
MochiKit.Format.EXPORT_TAGS={":all":MochiKit.Format.EXPORT,":common":MochiKit.Format.EXPORT};
MochiKit.Format.__new__=function(){
var base=this.NAME+".";
var k,v,o;
for(k in this.LOCALE){
o=this.LOCALE[k];
if(typeof (o)=="object"){
o.repr=function(){
return this.NAME;
};
o.NAME=base+"LOCALE."+k;
}
}
for(k in this){
o=this[k];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+k;
}
catch(e){
}
}
}
};
MochiKit.Format.__new__();
if(typeof (MochiKit.Base)!="undefined"){
MochiKit.Base._exportSymbols(this,MochiKit.Format);
}else{
(function(_272,_273){
if((typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined")||(typeof (MochiKit.__compat__)=="boolean"&&MochiKit.__compat__)){
var all=_273.EXPORT_TAGS[":all"];
for(var i=0;i<all.length;i++){
_272[all[i]]=_273[all[i]];
}
}
})(this,MochiKit.Format);
}
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Async");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Async depends on MochiKit.Base!";
}
if(typeof (MochiKit.Async)=="undefined"){
MochiKit.Async={};
}
MochiKit.Async.NAME="MochiKit.Async";
MochiKit.Async.VERSION="1.3";
MochiKit.Async.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Async.toString=function(){
return this.__repr__();
};
MochiKit.Async.Deferred=function(_274){
this.chain=[];
this.id=this._nextId();
this.fired=-1;
this.paused=0;
this.results=[null,null];
this.canceller=_274;
this.silentlyCancelled=false;
this.chained=false;
};
MochiKit.Async.Deferred.prototype={repr:function(){
var _275;
if(this.fired==-1){
_275="unfired";
}else{
if(this.fired==0){
_275="success";
}else{
_275="error";
}
}
return "Deferred("+this.id+", "+_275+")";
},toString:MochiKit.Base.forward("repr"),_nextId:MochiKit.Base.counter(),cancel:function(){
var self=MochiKit.Async;
if(this.fired==-1){
if(this.canceller){
this.canceller(this);
}else{
this.silentlyCancelled=true;
}
if(this.fired==-1){
this.errback(new self.CancelledError(this));
}
}else{
if((this.fired==0)&&(this.results[0] instanceof self.Deferred)){
this.results[0].cancel();
}
}
},_pause:function(){
this.paused++;
},_unpause:function(){
this.paused--;
if((this.paused==0)&&(this.fired>=0)){
this._fire();
}
},_continue:function(res){
this._resback(res);
this._unpause();
},_resback:function(res){
this.fired=((res instanceof Error)?1:0);
this.results[this.fired]=res;
this._fire();
},_check:function(){
if(this.fired!=-1){
if(!this.silentlyCancelled){
throw new MochiKit.Async.AlreadyCalledError(this);
}
this.silentlyCancelled=false;
return;
}
},callback:function(res){
this._check();
if(res instanceof MochiKit.Async.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
this._resback(res);
},errback:function(res){
this._check();
var self=MochiKit.Async;
if(res instanceof self.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
if(!(res instanceof Error)){
res=new self.GenericError(res);
}
this._resback(res);
},addBoth:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,fn);
},addCallback:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,null);
},addErrback:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(null,fn);
},addCallbacks:function(cb,eb){
if(this.chained){
throw new Error("Chained Deferreds can not be re-used");
}
this.chain.push([cb,eb]);
if(this.fired>=0){
this._fire();
}
return this;
},_fire:function(){
var _278=this.chain;
var _279=this.fired;
var res=this.results[_279];
var self=this;
var cb=null;
while(_278.length>0&&this.paused==0){
var pair=_278.shift();
var f=pair[_279];
if(f==null){
continue;
}
try{
res=f(res);
_279=((res instanceof Error)?1:0);
if(res instanceof MochiKit.Async.Deferred){
cb=function(res){
self._continue(res);
};
this._pause();
}
}
catch(err){
_279=1;
if(!(err instanceof Error)){
err=new MochiKit.Async.GenericError(err);
}
res=err;
}
}
this.fired=_279;
this.results[_279]=res;
if(cb&&this.paused){
res.addBoth(cb);
res.chained=true;
}
}};
MochiKit.Base.update(MochiKit.Async,{evalJSONRequest:function(){
return eval("("+arguments[0].responseText+")");
},succeed:function(_281){
var d=new MochiKit.Async.Deferred();
d.callback.apply(d,arguments);
return d;
},fail:function(_282){
var d=new MochiKit.Async.Deferred();
d.errback.apply(d,arguments);
return d;
},getXMLHttpRequest:function(){
var self=arguments.callee;
if(!self.XMLHttpRequest){
var _283=[function(){
return new XMLHttpRequest();
},function(){
return new ActiveXObject("Msxml2.XMLHTTP");
},function(){
return new ActiveXObject("Microsoft.XMLHTTP");
},function(){
return new ActiveXObject("Msxml2.XMLHTTP.4.0");
},function(){
throw new MochiKit.Async.BrowserComplianceError("Browser does not support XMLHttpRequest");
}];
for(var i=0;i<_283.length;i++){
var func=_283[i];
try{
self.XMLHttpRequest=func;
return func();
}
catch(e){
}
}
}
return self.XMLHttpRequest();
},sendXMLHttpRequest:function(req,_285){
if(_285==null){
_285="";
}
var _286=function(){
try{
req.onreadystatechange=null;
}
catch(e){
try{
req.onreadystatechange=function(){
};
}
catch(e){
}
}
req.abort();
};
var self=MochiKit.Async;
var d=new self.Deferred(_286);
var _287=function(){
if(req.readyState==4){
try{
req.onreadystatechange=null;
}
catch(e){
try{
req.onreadystatechange=function(){
};
}
catch(e){
}
}
var _288=null;
try{
_288=req.status;
if(!_288&&MochiKit.Base.isNotEmpty(req.responseText)){
_288=304;
}
}
catch(e){
}
if(_288==200||_288==304){
d.callback(req);
}else{
var err=new self.XMLHttpRequestError(req,"Request failed");
if(err.number){
d.errback(err);
}else{
d.errback(err);
}
}
}
};
try{
req.onreadystatechange=_287;
req.send(_285);
}
catch(e){
try{
req.onreadystatechange=null;
}
catch(ignore){
}
d.errback(e);
}
return d;
},doSimpleXMLHttpRequest:function(url){
var self=MochiKit.Async;
var req=self.getXMLHttpRequest();
if(arguments.length>1){
var m=MochiKit.Base;
var qs=m.queryString.apply(null,m.extend(null,arguments,1));
if(qs){
url+="?"+qs;
}
}
req.open("GET",url,true);
return self.sendXMLHttpRequest(req);
},loadJSONDoc:function(url){
var self=MochiKit.Async;
var d=self.doSimpleXMLHttpRequest.apply(self,arguments);
d=d.addCallback(self.evalJSONRequest);
return d;
},wait:function(_292,_293){
var d=new MochiKit.Async.Deferred();
var m=MochiKit.Base;
if(typeof (_293)!="undefined"){
d.addCallback(function(){
return _293;
});
}
var _294=setTimeout(m.bind("callback",d),Math.floor(_292*1000));
d.canceller=function(){
try{
clearTimeout(_294);
}
catch(e){
}
};
return d;
},callLater:function(_295,func){
var m=MochiKit.Base;
var _296=m.partial.apply(m,m.extend(null,arguments,1));
return MochiKit.Async.wait(_295).addCallback(function(res){
return _296();
});
}});
MochiKit.Async.DeferredLock=function(){
this.waiting=[];
this.locked=false;
this.id=this._nextId();
};
MochiKit.Async.DeferredLock.prototype={__class__:MochiKit.Async.DeferredLock,acquire:function(){
d=new MochiKit.Async.Deferred();
if(this.locked){
this.waiting.push(d);
}else{
this.locked=true;
d.callback(this);
}
return d;
},release:function(){
if(!this.locked){
throw TypeError("Tried to release an unlocked DeferredLock");
}
this.locked=false;
if(this.waiting.length>0){
this.locked=true;
this.waiting.shift().callback(this);
}
},_nextId:MochiKit.Base.counter(),repr:function(){
var _297;
if(this.locked){
_297="locked, "+this.waiting.length+" waiting";
}else{
_297="unlocked";
}
return "DeferredLock("+this.id+", "+_297+")";
},toString:MochiKit.Base.forward("repr")};
MochiKit.Async.DeferredList=function(list,_299,_300,_301,_302){
this.list=list;
this.resultList=new Array(this.list.length);
this.chain=[];
this.id=this._nextId();
this.fired=-1;
this.paused=0;
this.results=[null,null];
this.canceller=_302;
this.silentlyCancelled=false;
if(this.list.length==0&&!_299){
this.callback(this.resultList);
}
this.finishedCount=0;
this.fireOnOneCallback=_299;
this.fireOnOneErrback=_300;
this.consumeErrors=_301;
var _303=0;
MochiKit.Base.map(MochiKit.Base.bind(function(d){
d.addCallback(MochiKit.Base.bind(this._cbDeferred,this),_303,true);
d.addErrback(MochiKit.Base.bind(this._cbDeferred,this),_303,false);
_303+=1;
},this),this.list);
};
MochiKit.Base.update(MochiKit.Async.DeferredList.prototype,MochiKit.Async.Deferred.prototype);
MochiKit.Base.update(MochiKit.Async.DeferredList.prototype,{_cbDeferred:function(_304,_305,_306){
this.resultList[_304]=[_305,_306];
this.finishedCount+=1;
if(this.fired!=0){
if(_305&&this.fireOnOneCallback){
this.callback([_304,_306]);
}else{
if(!_305&&this.fireOnOneErrback){
this.errback(_306);
}else{
if(this.finishedCount==this.list.length){
this.callback(this.resultList);
}
}
}
}
if(!_305&&this.consumeErrors){
_306=null;
}
return _306;
}});
MochiKit.Async.gatherResults=function(_307){
var d=new MochiKit.Async.DeferredList(_307,false,true,false);
d.addCallback(function(_308){
var ret=[];
for(var i=0;i<_308.length;i++){
ret.push(_308[i][1]);
}
return ret;
});
return d;
};
MochiKit.Async.maybeDeferred=function(func){
var self=MochiKit.Async;
var _309;
try{
var r=func.apply(null,MochiKit.Base.extend([],arguments,1));
if(r instanceof self.Deferred){
_309=r;
}else{
if(r instanceof Error){
_309=self.fail(r);
}else{
_309=self.succeed(r);
}
}
}
catch(e){
_309=self.fail(e);
}
return _309;
};
MochiKit.Async.EXPORT=["AlreadyCalledError","CancelledError","BrowserComplianceError","GenericError","XMLHttpRequestError","Deferred","succeed","fail","getXMLHttpRequest","doSimpleXMLHttpRequest","loadJSONDoc","wait","callLater","sendXMLHttpRequest","DeferredLock","DeferredList","gatherResults","maybeDeferred"];
MochiKit.Async.EXPORT_OK=["evalJSONRequest"];
MochiKit.Async.__new__=function(){
var m=MochiKit.Base;
var ne=m.partial(m._newNamedError,this);
ne("AlreadyCalledError",function(_312){
this.deferred=_312;
});
ne("CancelledError",function(_313){
this.deferred=_313;
});
ne("BrowserComplianceError",function(msg){
this.message=msg;
});
ne("GenericError",function(msg){
this.message=msg;
});
ne("XMLHttpRequestError",function(req,msg){
this.req=req;
this.message=msg;
try{
this.number=req.status;
}
catch(e){
}
});
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Async.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Async);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.DOM");
dojo.require("MochiKit.Iter");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Iter",[]);
}
try{
if(typeof (MochiKit.Iter)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.DOM depends on MochiKit.Iter!";
}
if(typeof (MochiKit.DOM)=="undefined"){
MochiKit.DOM={};
}
MochiKit.DOM.NAME="MochiKit.DOM";
MochiKit.DOM.VERSION="1.3";
MochiKit.DOM.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.DOM.toString=function(){
return this.__repr__();
};
MochiKit.DOM.EXPORT=["formContents","currentWindow","currentDocument","withWindow","withDocument","registerDOMConverter","coerceToDOM","createDOM","createDOMFunc","getNodeAttribute","setNodeAttribute","updateNodeAttributes","appendChildNodes","replaceChildNodes","removeElement","swapDOM","BUTTON","TT","PRE","H1","H2","H3","BR","CANVAS","HR","LABEL","TEXTAREA","FORM","STRONG","SELECT","OPTION","OPTGROUP","LEGEND","FIELDSET","P","UL","OL","LI","TD","TR","THEAD","TBODY","TFOOT","TABLE","TH","INPUT","SPAN","A","DIV","IMG","getElement","$","computedStyle","getElementsByTagAndClassName","addToCallStack","addLoadEvent","focusOnLoad","setElementClass","toggleElementClass","addElementClass","removeElementClass","swapElementClass","hasElementClass","escapeHTML","toHTML","emitHTML","setDisplayForElement","hideElement","showElement","scrapeText","elementDimensions","elementPosition","setElementDimensions","setElementPosition","getViewportDimensions","setOpacity"];
MochiKit.DOM.EXPORT_OK=["domConverters"];
MochiKit.DOM.Dimensions=function(w,h){
this.w=w;
this.h=h;
};
MochiKit.DOM.Dimensions.prototype.repr=function(){
var repr=MochiKit.Base.repr;
return "{w: "+repr(this.w)+", h: "+repr(this.h)+"}";
};
MochiKit.DOM.Coordinates=function(x,y){
this.x=x;
this.y=y;
};
MochiKit.DOM.Coordinates.prototype.repr=function(){
var repr=MochiKit.Base.repr;
return "{x: "+repr(this.x)+", y: "+repr(this.y)+"}";
};
MochiKit.DOM.Coordinates.prototype.toString=function(){
return this.repr();
};
MochiKit.Base.update(MochiKit.DOM,{setOpacity:function(elem,o){
elem=MochiKit.DOM.getElement(elem);
MochiKit.DOM.updateNodeAttributes(elem,{"style":{"opacity":o,"-moz-opacity":o,"-khtml-opacity":o,"filter":" alpha(opacity="+(o*100)+")"}});
},getViewportDimensions:function(){
var d=new MochiKit.DOM.Dimensions();
var w=MochiKit.DOM._window;
var b=MochiKit.DOM._document.body;
if(w.innerWidth){
d.w=w.innerWidth;
d.h=w.innerHeight;
}else{
if(b.parentElement.clientWidth){
d.w=b.parentElement.clientWidth;
d.h=b.parentElement.clientHeight;
}else{
if(b&&b.clientWidth){
d.w=b.clientWidth;
d.h=b.clientHeight;
}
}
}
return d;
},elementDimensions:function(elem){
var self=MochiKit.DOM;
if(typeof (elem.w)=="number"||typeof (elem.h)=="number"){
return new self.Dimensions(elem.w||0,elem.h||0);
}
elem=self.getElement(elem);
if(!elem){
return undefined;
}
if(self.computedStyle(elem,"display")!="none"){
return new self.Dimensions(elem.offsetWidth||0,elem.offsetHeight||0);
}
var s=elem.style;
var _318=s.visibility;
var _319=s.position;
s.visibility="hidden";
s.position="absolute";
s.display="";
var _320=elem.offsetWidth;
var _321=elem.offsetHeight;
s.display="none";
s.position=_319;
s.visibility=_318;
return new self.Dimensions(_320,_321);
},elementPosition:function(elem,_322){
var self=MochiKit.DOM;
elem=self.getElement(elem);
if(!elem){
return undefined;
}
var c=new self.Coordinates(0,0);
if(elem.x&&elem.y){
c.x+=elem.x||0;
c.y+=elem.y||0;
return c;
}else{
if(elem.parentNode===null||self.computedStyle(elem,"display")=="none"){
return undefined;
}
}
var box=null;
var _325=null;
var d=MochiKit.DOM._document;
if(elem.getBoundingClientRect){
box=elem.getBoundingClientRect();
c.x+=box.left+(d.documentElement.scrollLeft||d.body.scrollLeft);
c.y+=box.top+(d.documentElement.scrollTop||d.body.scrollTop);
return c;
}else{
if(d.getBoxObjectFor){
box=d.getBoxObjectFor(elem);
c.x+=box.x;
c.y+=box.y;
}else{
if(elem.offsetParent){
c.x+=elem.offsetLeft;
c.y+=elem.offsetTop;
_325=elem.offsetParent;
if(_325!=elem){
while(_325){
c.x+=_325.offsetLeft;
c.y+=_325.offsetTop;
_325=_325.offsetParent;
}
}
var ua=navigator.userAgent.toLowerCase();
if(ua.indexOf("opera")!=-1||(ua.indexOf("safari")!=-1&&self.computedStyle(elem,"position")=="absolute")){
c.x-=d.body.offsetLeft;
c.y-=d.body.offsetTop;
}
}
}
}
if(typeof (_322)!="undefined"){
_322=arguments.callee(_322);
if(_322){
c.x-=(_322.x||0);
c.y-=(_322.y||0);
}
}
if(elem.parentNode){
_325=elem.parentNode;
}else{
_325=null;
}
while(_325&&_325.tagName!="BODY"&&_325.tagName!="HTML"){
c.x-=_325.scrollLeft;
c.y-=_325.scrollTop;
if(_325.parentNode){
_325=_325.parentNode;
}else{
_325=null;
}
}
return c;
},setElementDimensions:function(elem,_327,_328){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_328)=="undefined"){
_328="px";
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":{"width":_327.w+_328,"height":_327.h+_328}});
},setElementPosition:function(elem,_329,_330){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_330)=="undefined"){
_330="px";
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":{"left":_329.x+_330,"top":_329.y+_330}});
},currentWindow:function(){
return MochiKit.DOM._window;
},currentDocument:function(){
return MochiKit.DOM._document;
},withWindow:function(win,func){
var self=MochiKit.DOM;
var _332=self._document;
var _333=self._win;
var rval;
try{
self._window=win;
self._document=win.document;
rval=func();
}
catch(e){
self._window=_333;
self._document=_332;
throw e;
}
self._window=_333;
self._document=_332;
return rval;
},formContents:function(elem){
var _334=[];
var _335=[];
var m=MochiKit.Base;
var self=MochiKit.DOM;
if(typeof (elem)=="undefined"||elem===null){
elem=self._document;
}else{
elem=self.getElement(elem);
}
m.nodeWalk(elem,function(elem){
var name=elem.name;
if(m.isNotEmpty(name)){
var _336=elem.nodeName;
if(_336=="INPUT"&&(elem.type=="radio"||elem.type=="checkbox")&&!elem.checked){
return null;
}
if(_336=="SELECT"){
if(elem.selectedIndex>=0){
var opt=elem.options[elem.selectedIndex];
_334.push(name);
_335.push((opt.value)?opt.value:opt.text);
return null;
}
_334.push(name);
_335.push("");
return null;
}
if(_336=="FORM"||_336=="P"||_336=="SPAN"||_336=="DIV"){
return elem.childNodes;
}
_334.push(name);
_335.push(elem.value||"");
return null;
}
return elem.childNodes;
});
return [_334,_335];
},withDocument:function(doc,func){
var self=MochiKit.DOM;
var _339=self._document;
var rval;
try{
self._document=doc;
rval=func();
}
catch(e){
self._document=_339;
throw e;
}
self._document=_339;
return rval;
},registerDOMConverter:function(name,_340,wrap,_341){
MochiKit.DOM.domConverters.register(name,_340,wrap,_341);
},coerceToDOM:function(node,ctx){
var im=MochiKit.Iter;
var self=MochiKit.DOM;
var iter=im.iter;
var _345=im.repeat;
var imap=im.imap;
var _347=self.domConverters;
var _348=self.coerceToDOM;
var _349=MochiKit.Base.NotFound;
while(true){
if(typeof (node)=="undefined"||node===null){
return null;
}
if(typeof (node.nodeType)!="undefined"&&node.nodeType>0){
return node;
}
if(typeof (node)=="number"||typeof (node)=="bool"){
node=node.toString();
}
if(typeof (node)=="string"){
return self._document.createTextNode(node);
}
if(typeof (node.toDOM)=="function"){
node=node.toDOM(ctx);
continue;
}
if(typeof (node)=="function"){
node=node(ctx);
continue;
}
var _350=null;
try{
_350=iter(node);
}
catch(e){
}
if(_350){
return imap(_348,_350,_345(ctx));
}
try{
node=_347.match(node,ctx);
continue;
}
catch(e){
if(e!=_349){
throw e;
}
}
return self._document.createTextNode(node.toString());
}
return undefined;
},setNodeAttribute:function(node,attr,_352){
var o={};
o[attr]=_352;
try{
return MochiKit.DOM.updateNodeAttributes(node,o);
}
catch(e){
}
return null;
},getNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _353=self.attributeArray.renames[attr];
node=self.getElement(node);
try{
if(_353){
return node[_353];
}
return node.getAttribute(attr);
}
catch(e){
}
return null;
},updateNodeAttributes:function(node,_354){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
if(_354){
var _355=MochiKit.Base.updatetree;
if(self.attributeArray.compliant){
for(var k in _354){
var v=_354[k];
if(typeof (v)=="object"&&typeof (elem[k])=="object"){
_355(elem[k],v);
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}else{
var _356=self.attributeArray.renames;
for(k in _354){
v=_354[k];
var _357=_356[k];
if(k=="style"&&typeof (v)=="string"){
elem.style.cssText=v;
}else{
if(typeof (_357)=="string"){
elem[_357]=v;
}else{
if(typeof (elem[k])=="object"&&typeof (v)=="object"){
_355(elem[k],v);
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}
}
}
}
return elem;
},appendChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _358=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _359=MochiKit.Base.concat;
while(_358.length){
var n=_358.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
elem.appendChild(n);
}else{
_358=_359(n,_358);
}
}
}
return elem;
},replaceChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
arguments[0]=elem;
}
var _360;
while((_360=elem.firstChild)){
elem.removeChild(_360);
}
if(arguments.length<2){
return elem;
}else{
return self.appendChildNodes.apply(this,arguments);
}
},createDOM:function(name,_361){
var elem;
var self=MochiKit.DOM;
if(typeof (name)=="string"){
if(_361&&"name" in _361&&!self.attributeArray.compliant){
name=("<"+name+" name=\""+self.escapeHTML(_361.name)+"\">");
}
elem=self._document.createElement(name);
}else{
elem=name;
}
if(_361){
self.updateNodeAttributes(elem,_361);
}
if(arguments.length<=2){
return elem;
}else{
var args=MochiKit.Base.extend([elem],arguments,2);
return self.appendChildNodes.apply(this,args);
}
},createDOMFunc:function(){
var m=MochiKit.Base;
return m.partial.apply(this,m.extend([MochiKit.DOM.createDOM],arguments));
},swapDOM:function(dest,src){
var self=MochiKit.DOM;
dest=self.getElement(dest);
var _364=dest.parentNode;
if(src){
src=self.getElement(src);
_364.replaceChild(src,dest);
}else{
_364.removeChild(dest);
}
return src;
},getElement:function(id){
var self=MochiKit.DOM;
if(arguments.length==1){
return ((typeof (id)=="string")?self._document.getElementById(id):id);
}else{
return MochiKit.Base.map(self.getElement,arguments);
}
},computedStyle:function(_366,_367,_368){
if(arguments.length==2){
_368=_367;
}
var self=MochiKit.DOM;
var el=self.getElement(_366);
var _370=self._document;
if(!el||el==_370){
return undefined;
}
if(el.currentStyle){
return el.currentStyle[_367];
}
if(typeof (_370.defaultView)=="undefined"){
return undefined;
}
if(_370.defaultView===null){
return undefined;
}
var _371=_370.defaultView.getComputedStyle(el,null);
if(typeof (_371)=="undefined"||_371===null){
return undefined;
}
return _371.getPropertyValue(_368);
},getElementsByTagAndClassName:function(_372,_373,_374){
var self=MochiKit.DOM;
if(typeof (_372)=="undefined"||_372===null){
_372="*";
}
if(typeof (_374)=="undefined"||_374===null){
_374=self._document;
}
_374=self.getElement(_374);
var _375=(_374.getElementsByTagName(_372)||self._document.all);
if(typeof (_373)=="undefined"||_373===null){
return MochiKit.Base.extend(null,_375);
}
var _376=[];
for(var i=0;i<_375.length;i++){
var _377=_375[i];
var _378=_377.className.split(" ");
for(var j=0;j<_378.length;j++){
if(_378[j]==_373){
_376.push(_377);
break;
}
}
}
return _376;
},_newCallStack:function(path,once){
var rval=function(){
var _381=arguments.callee.callStack;
for(var i=0;i<_381.length;i++){
if(_381[i].apply(this,arguments)===false){
break;
}
}
if(once){
try{
this[path]=null;
}
catch(e){
}
}
};
rval.callStack=[];
return rval;
},addToCallStack:function(_382,path,func,once){
var self=MochiKit.DOM;
var _383=_382[path];
var _384=_383;
if(!(typeof (_383)=="function"&&typeof (_383.callStack)=="object"&&_383.callStack!==null)){
_384=self._newCallStack(path,once);
if(typeof (_383)=="function"){
_384.callStack.push(_383);
}
_382[path]=_384;
}
_384.callStack.push(func);
},addLoadEvent:function(func){
var self=MochiKit.DOM;
self.addToCallStack(self._window,"onload",func,true);
},focusOnLoad:function(_385){
var self=MochiKit.DOM;
self.addLoadEvent(function(){
_385=self.getElement(_385);
if(_385){
_385.focus();
}
});
},setElementClass:function(_386,_387){
var self=MochiKit.DOM;
var obj=self.getElement(_386);
if(self.attributeArray.compliant){
obj.setAttribute("class",_387);
}else{
obj.setAttribute("className",_387);
}
},toggleElementClass:function(_388){
var self=MochiKit.DOM;
for(var i=1;i<arguments.length;i++){
var obj=self.getElement(arguments[i]);
if(!self.addElementClass(obj,_388)){
self.removeElementClass(obj,_388);
}
}
},addElementClass:function(_389,_390){
var self=MochiKit.DOM;
var obj=self.getElement(_389);
var cls=obj.className;
if(cls.length===0){
self.setElementClass(obj,_390);
return true;
}
if(cls==_390){
return false;
}
var _392=obj.className.split(" ");
for(var i=0;i<_392.length;i++){
if(_392[i]==_390){
return false;
}
}
self.setElementClass(obj,cls+" "+_390);
return true;
},removeElementClass:function(_393,_394){
var self=MochiKit.DOM;
var obj=self.getElement(_393);
var cls=obj.className;
if(cls.length===0){
return false;
}
if(cls==_394){
self.setElementClass(obj,"");
return true;
}
var _395=obj.className.split(" ");
for(var i=0;i<_395.length;i++){
if(_395[i]==_394){
_395.splice(i,1);
self.setElementClass(obj,_395.join(" "));
return true;
}
}
return false;
},swapElementClass:function(_396,_397,_398){
var obj=MochiKit.DOM.getElement(_396);
var res=MochiKit.DOM.removeElementClass(obj,_397);
if(res){
MochiKit.DOM.addElementClass(obj,_398);
}
return res;
},hasElementClass:function(_399,_400){
var obj=MochiKit.DOM.getElement(_399);
var _401=obj.className.split(" ");
for(var i=1;i<arguments.length;i++){
var good=false;
for(var j=0;j<_401.length;j++){
if(_401[j]==arguments[i]){
good=true;
break;
}
}
if(!good){
return false;
}
}
return true;
},escapeHTML:function(s){
return s.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/</g,"&lt;").replace(/>/g,"&gt;");
},toHTML:function(dom){
return MochiKit.DOM.emitHTML(dom).join("");
},emitHTML:function(dom,lst){
if(typeof (lst)=="undefined"||lst===null){
lst=[];
}
var _404=[dom];
var self=MochiKit.DOM;
var _405=self.escapeHTML;
var _406=self.attributeArray;
while(_404.length){
dom=_404.pop();
if(typeof (dom)=="string"){
lst.push(dom);
}else{
if(dom.nodeType==1){
lst.push("<"+dom.nodeName.toLowerCase());
var _407=[];
var _408=_406(dom);
for(var i=0;i<_408.length;i++){
var a=_408[i];
_407.push([" ",a.name,"=\"",_405(a.value),"\""]);
}
_407.sort();
for(i=0;i<_407.length;i++){
var _409=_407[i];
for(var j=0;j<_409.length;j++){
lst.push(_409[j]);
}
}
if(dom.hasChildNodes()){
lst.push(">");
_404.push("</"+dom.nodeName.toLowerCase()+">");
var _410=dom.childNodes;
for(i=_410.length-1;i>=0;i--){
_404.push(_410[i]);
}
}else{
lst.push("/>");
}
}else{
if(dom.nodeType==3){
lst.push(_405(dom.nodeValue));
}
}
}
}
return lst;
},setDisplayForElement:function(_411,_412){
var m=MochiKit.Base;
var _413=m.extend(null,arguments,1);
MochiKit.Iter.forEach(m.filter(null,m.map(MochiKit.DOM.getElement,_413)),function(_412){
_412.style.display=_411;
});
},scrapeText:function(node,_414){
var rval=[];
(function(node){
var cn=node.childNodes;
if(cn){
for(var i=0;i<cn.length;i++){
arguments.callee.call(this,cn[i]);
}
}
var _416=node.nodeValue;
if(typeof (_416)=="string"){
rval.push(_416);
}
})(MochiKit.DOM.getElement(node));
if(_414){
return rval;
}else{
return rval.join("");
}
},__new__:function(win){
var m=MochiKit.Base;
this._document=document;
this._window=win;
this.domConverters=new m.AdapterRegistry();
var _417=this._document.createElement("span");
var _418;
if(_417&&_417.attributes&&_417.attributes.length>0){
var _419=m.filter;
_418=function(node){
return _419(_418.ignoreAttrFilter,node.attributes);
};
_418.ignoreAttr={};
MochiKit.Iter.forEach(_417.attributes,function(a){
_418.ignoreAttr[a.name]=a.value;
});
_418.ignoreAttrFilter=function(a){
return (_418.ignoreAttr[a.name]!=a.value);
};
_418.compliant=false;
_418.renames={"class":"className","checked":"defaultChecked","usemap":"useMap","for":"htmlFor"};
}else{
_418=function(node){
return node.attributes;
};
_418.compliant=true;
_418.renames={};
}
this.attributeArray=_418;
var _420=this.createDOMFunc;
this.UL=_420("ul");
this.OL=_420("ol");
this.LI=_420("li");
this.TD=_420("td");
this.TR=_420("tr");
this.TBODY=_420("tbody");
this.THEAD=_420("thead");
this.TFOOT=_420("tfoot");
this.TABLE=_420("table");
this.TH=_420("th");
this.INPUT=_420("input");
this.SPAN=_420("span");
this.A=_420("a");
this.DIV=_420("div");
this.IMG=_420("img");
this.BUTTON=_420("button");
this.TT=_420("tt");
this.PRE=_420("pre");
this.H1=_420("h1");
this.H2=_420("h2");
this.H3=_420("h3");
this.BR=_420("br");
this.HR=_420("hr");
this.LABEL=_420("label");
this.TEXTAREA=_420("textarea");
this.FORM=_420("form");
this.P=_420("p");
this.SELECT=_420("select");
this.OPTION=_420("option");
this.OPTGROUP=_420("optgroup");
this.LEGEND=_420("legend");
this.FIELDSET=_420("fieldset");
this.STRONG=_420("strong");
this.CANVAS=_420("canvas");
this.hideElement=m.partial(this.setDisplayForElement,"none");
this.showElement=m.partial(this.setDisplayForElement,"block");
this.removeElement=this.swapDOM;
this.$=this.getElement;
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
}});
MochiKit.DOM.__new__(((typeof (window)=="undefined")?this:window));
withWindow=MochiKit.DOM.withWindow;
withDocument=MochiKit.DOM.withDocument;
MochiKit.Base._exportSymbols(this,MochiKit.DOM);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.LoggingPane");
dojo.require("MochiKit.Logging");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Logging",[]);
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"||typeof (MochiKit.Logging)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.LoggingPane depends on MochiKit.Base and MochiKit.Logging!";
}
if(typeof (MochiKit.LoggingPane)=="undefined"){
MochiKit.LoggingPane={};
}
MochiKit.LoggingPane.NAME="MochiKit.LoggingPane";
MochiKit.LoggingPane.VERSION="1.3";
MochiKit.LoggingPane.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.LoggingPane.toString=function(){
return this.__repr__();
};
MochiKit.LoggingPane.createLoggingPane=function(_421){
var m=MochiKit.LoggingPane;
_421=!(!_421);
if(m._loggingPane&&m._loggingPane.inline!=_421){
m._loggingPane.closePane();
m._loggingPane=null;
}
if(!m._loggingPane||m._loggingPane.closed){
m._loggingPane=new m.LoggingPane(_421,MochiKit.Logging.logger);
}
return m._loggingPane;
};
MochiKit.LoggingPane.LoggingPane=function(_422,_423){
if(typeof (_423)=="undefined"||_423==null){
_423=MochiKit.Logging.logger;
}
this.logger=_423;
var _424=MochiKit.Base.update;
var _425=MochiKit.Base.updatetree;
var bind=MochiKit.Base.bind;
var _426=MochiKit.Base.clone;
var win=window;
var uid="_MochiKit_LoggingPane";
if(typeof (MochiKit.DOM)!="undefined"){
win=MochiKit.DOM.currentWindow();
}
if(!_422){
var url=win.location.href.split("?")[0].replace(/[:\/.><&]/g,"_");
var name=uid+"_"+url;
var nwin=win.open("",name,"dependent,resizable,height=200");
if(!nwin){
alert("Not able to open debugging window due to pop-up blocking.");
return undefined;
}
nwin.document.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" "+"\"http://www.w3.org/TR/html4/loose.dtd\">"+"<html><head><title>[MochiKit.LoggingPane]</title></head>"+"<body></body></html>");
nwin.document.close();
nwin.document.title+=" "+win.document.title;
win=nwin;
}
var doc=win.document;
this.doc=doc;
var _429=doc.getElementById(uid);
var _430=!!_429;
if(_429&&typeof (_429.loggingPane)!="undefined"){
_429.loggingPane.logger=this.logger;
_429.loggingPane.buildAndApplyFilter();
return _429.loggingPane;
}
if(_430){
var _431;
while((_431=_429.firstChild)){
_429.removeChild(_431);
}
}else{
_429=doc.createElement("div");
_429.id=uid;
}
_429.loggingPane=this;
var _432=doc.createElement("input");
var _433=doc.createElement("input");
var _434=doc.createElement("button");
var _435=doc.createElement("button");
var _436=doc.createElement("button");
var _437=doc.createElement("button");
var _438=doc.createElement("div");
var _439=doc.createElement("div");
var _440=uid+"_Listener";
this.colorTable=_426(this.colorTable);
var _441=[];
var _442=null;
var _443=function(msg){
var _444=msg.level;
if(typeof (_444)=="number"){
_444=MochiKit.Logging.LogLevel[_444];
}
return _444;
};
var _445=function(msg){
return msg.info.join(" ");
};
var _446=bind(function(msg){
var _447=_443(msg);
var text=_445(msg);
var c=this.colorTable[_447];
var p=doc.createElement("span");
p.className="MochiKit-LogMessage MochiKit-LogLevel-"+_447;
p.style.cssText="margin: 0px; white-space: -moz-pre-wrap; white-space: -o-pre-wrap; white-space: pre-wrap; white-space: pre-line; word-wrap: break-word; wrap-option: emergency; color: "+c;
p.appendChild(doc.createTextNode(_447+": "+text));
_439.appendChild(p);
_439.appendChild(doc.createElement("br"));
if(_438.offsetHeight>_438.scrollHeight){
_438.scrollTop=0;
}else{
_438.scrollTop=_438.scrollHeight;
}
},this);
var _449=function(msg){
_441[_441.length]=msg;
_446(msg);
};
var _450=function(){
var _451,infore;
try{
_451=new RegExp(_432.value);
infore=new RegExp(_433.value);
}
catch(e){
logDebug("Error in filter regex: "+e.message);
return null;
}
return function(msg){
return (_451.test(_443(msg))&&infore.test(_445(msg)));
};
};
var _452=function(){
while(_439.firstChild){
_439.removeChild(_439.firstChild);
}
};
var _453=function(){
_441=[];
_452();
};
var _454=bind(function(){
if(this.closed){
return;
}
this.closed=true;
if(MochiKit.LoggingPane._loggingPane==this){
MochiKit.LoggingPane._loggingPane=null;
}
this.logger.removeListener(_440);
_429.loggingPane=null;
if(_422){
_429.parentNode.removeChild(_429);
}else{
this.win.close();
}
},this);
var _455=function(){
_452();
for(var i=0;i<_441.length;i++){
var msg=_441[i];
if(_442==null||_442(msg)){
_446(msg);
}
}
};
this.buildAndApplyFilter=function(){
_442=_450();
_455();
this.logger.removeListener(_440);
this.logger.addListener(_440,_442,_449);
};
var _456=bind(function(){
_441=this.logger.getMessages();
_455();
},this);
var _457=bind(function(_458){
_458=_458||window.event;
key=_458.which||_458.keyCode;
if(key==13){
this.buildAndApplyFilter();
}
},this);
var _459="display: block; left: 0px; bottom: 0px; position: fixed; width: 100%; background-color: white; font: "+this.logFont;
if(_422){
_459+="; height: 10em; border-top: 2px solid black";
}else{
_459+="; height: 100%;";
}
_429.style.cssText=_459;
if(!_430){
doc.body.appendChild(_429);
}
_459={"cssText":"width: 33%; display: inline; font: "+this.logFont};
_425(_432,{"value":"FATAL|ERROR|WARNING|INFO|DEBUG","onkeypress":_457,"style":_459});
_429.appendChild(_432);
_425(_433,{"value":".*","onkeypress":_457,"style":_459});
_429.appendChild(_433);
_459="width: 8%; display:inline; font: "+this.logFont;
_434.appendChild(doc.createTextNode("Filter"));
_434.onclick=bind("buildAndApplyFilter",this);
_434.style.cssText=_459;
_429.appendChild(_434);
_435.appendChild(doc.createTextNode("Load"));
_435.onclick=_456;
_435.style.cssText=_459;
_429.appendChild(_435);
_436.appendChild(doc.createTextNode("Clear"));
_436.onclick=_453;
_436.style.cssText=_459;
_429.appendChild(_436);
_437.appendChild(doc.createTextNode("Close"));
_437.onclick=_454;
_437.style.cssText=_459;
_429.appendChild(_437);
_438.style.cssText="overflow: auto; width: 100%";
_439.style.cssText="width: 100%; height: "+(_422?"8em":"100%");
_438.appendChild(_439);
_429.appendChild(_438);
this.buildAndApplyFilter();
_456();
if(_422){
this.win=undefined;
}else{
this.win=win;
}
this.inline=_422;
this.closePane=_454;
this.closed=false;
return this;
};
MochiKit.LoggingPane.LoggingPane.prototype={"logFont":"8pt Verdana,sans-serif","colorTable":{"ERROR":"red","FATAL":"darkred","WARNING":"blue","INFO":"black","DEBUG":"green"}};
MochiKit.LoggingPane.EXPORT_OK=["LoggingPane"];
MochiKit.LoggingPane.EXPORT=["createLoggingPane"];
MochiKit.LoggingPane.__new__=function(){
this.EXPORT_TAGS={":common":this.EXPORT,":all":MochiKit.Base.concat(this.EXPORT,this.EXPORT_OK)};
MochiKit.Base.nameFunctions(this);
MochiKit.LoggingPane._loggingPane=null;
};
MochiKit.LoggingPane.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.LoggingPane);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Color");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Color depends on MochiKit.Base";
}
if(typeof (MochiKit.Color)=="undefined"){
MochiKit.Color={};
}
MochiKit.Color.NAME="MochiKit.Color";
MochiKit.Color.VERSION="1.3";
MochiKit.Color.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Color.toString=function(){
return this.__repr__();
};
MochiKit.Color.Color=function(red,_461,blue,_463){
if(typeof (_463)=="undefined"||_463==null){
_463=1;
}
this.rgb={r:red,g:_461,b:blue,a:_463};
};
MochiKit.Color.Color.prototype={__class__:MochiKit.Color.Color,colorWithAlpha:function(_464){
var rgb=this.rgb;
var m=MochiKit.Color;
return m.Color.fromRGB(rgb.r,rgb.g,rgb.b,_464);
},colorWithHue:function(hue){
var hsl=this.asHSL();
hsl.h=hue;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithSaturation:function(_468){
var hsl=this.asHSL();
hsl.s=_468;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithLightness:function(_469){
var hsl=this.asHSL();
hsl.l=_469;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},darkerColorWithLevel:function(_470){
var hsl=this.asHSL();
hsl.l=Math.max(hsl.l-_470,0);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},lighterColorWithLevel:function(_471){
var hsl=this.asHSL();
hsl.l=Math.min(hsl.l+_471,1);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},blendedColor:function(_472,_473){
if(typeof (_473)=="undefined"||_473==null){
_473=0.5;
}
var sf=1-_473;
var s=this.rgb;
var d=_472.rgb;
var df=_473;
return MochiKit.Color.Color.fromRGB((s.r*sf)+(d.r*df),(s.g*sf)+(d.g*df),(s.b*sf)+(d.b*df),(s.a*sf)+(d.a*df));
},compareRGB:function(_476){
var a=this.asRGB();
var b=_476.asRGB();
return MochiKit.Base.compare([a.r,a.g,a.b,a.a],[b.r,b.g,b.b,b.a]);
},isLight:function(){
return this.asHSL().b>0.5;
},isDark:function(){
return (!this.isLight());
},toHSLString:function(){
var c=this.asHSL();
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hslString;
if(!rval){
var mid=(ccc(c.h,360).toFixed(0)+","+ccc(c.s,100).toPrecision(4)+"%"+","+ccc(c.l,100).toPrecision(4)+"%");
var a=c.a;
if(a>=1){
a=1;
rval="hsl("+mid+")";
}else{
if(a<=0){
a=0;
}
rval="hsla("+mid+","+a+")";
}
this._hslString=rval;
}
return rval;
},toRGBString:function(){
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._rgbString;
if(!rval){
var mid=(ccc(c.r,255).toFixed(0)+","+ccc(c.g,255).toFixed(0)+","+ccc(c.b,255).toFixed(0));
if(c.a!=1){
rval="rgba("+mid+","+c.a+")";
}else{
rval="rgb("+mid+")";
}
this._rgbString=rval;
}
return rval;
},asRGB:function(){
return MochiKit.Base.clone(this.rgb);
},toHexString:function(){
var m=MochiKit.Color;
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hexString;
if(!rval){
rval=("#"+m.toColorPart(ccc(c.r,255))+m.toColorPart(ccc(c.g,255))+m.toColorPart(ccc(c.b,255)));
this._hexString=rval;
}
return rval;
},asHSV:function(){
var hsv=this.hsv;
var c=this.rgb;
if(typeof (hsv)=="undefined"||hsv==null){
hsv=MochiKit.Color.rgbToHSV(this.rgb);
this.hsv=hsv;
}
return MochiKit.Base.clone(hsv);
},asHSL:function(){
var hsl=this.hsl;
var c=this.rgb;
if(typeof (hsl)=="undefined"||hsl==null){
hsl=MochiKit.Color.rgbToHSL(this.rgb);
this.hsl=hsl;
}
return MochiKit.Base.clone(hsl);
},toString:function(){
return this.toRGBString();
},repr:function(){
var c=this.rgb;
var col=[c.r,c.g,c.b,c.a];
return this.__class__.NAME+"("+col.join(", ")+")";
}};
MochiKit.Base.update(MochiKit.Color.Color,{fromRGB:function(red,_481,blue,_482){
var _483=MochiKit.Color.Color;
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_481=rgb.g;
blue=rgb.b;
if(typeof (rgb.a)=="undefined"){
_482=undefined;
}else{
_482=rgb.a;
}
}
return new _483(red,_481,blue,_482);
},fromHSL:function(hue,_484,_485,_486){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hslToRGB.apply(m,arguments));
},fromHSV:function(hue,_487,_488,_489){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hsvToRGB.apply(m,arguments));
},fromName:function(name){
var _490=MochiKit.Color.Color;
if(name.charAt(0)=="\""){
name=name.substr(1,name.length-2);
}
var _491=_490._namedColors[name.toLowerCase()];
if(typeof (_491)=="string"){
return _490.fromHexString(_491);
}else{
if(name=="transparent"){
return _490.transparentColor();
}
}
return null;
},fromString:function(_492){
var self=MochiKit.Color.Color;
var _493=_492.substr(0,3);
if(_493=="rgb"){
return self.fromRGBString(_492);
}else{
if(_493=="hsl"){
return self.fromHSLString(_492);
}else{
if(_492.charAt(0)=="#"){
return self.fromHexString(_492);
}
}
}
return self.fromName(_492);
},fromHexString:function(_494){
if(_494.charAt(0)=="#"){
_494=_494.substring(1);
}
var _495=[];
var i,hex;
if(_494.length==3){
for(i=0;i<3;i++){
hex=_494.substr(i,1);
_495.push(parseInt(hex+hex,16)/255);
}
}else{
for(i=0;i<6;i+=2){
hex=_494.substr(i,2);
_495.push(parseInt(hex,16)/255);
}
}
var _496=MochiKit.Color.Color;
return _496.fromRGB.apply(_496,_495);
},_fromColorString:function(pre,_498,_499,_500){
if(_500.indexOf(pre)==0){
_500=_500.substring(_500.indexOf("(",3)+1,_500.length-1);
}
var _501=_500.split(/\s*,\s*/);
var _502=[];
for(var i=0;i<_501.length;i++){
var c=_501[i];
var val;
var _503=c.substring(c.length-3);
if(c.charAt(c.length-1)=="%"){
val=0.01*parseFloat(c.substring(0,c.length-1));
}else{
if(_503=="deg"){
val=parseFloat(c)/360;
}else{
if(_503=="rad"){
val=parseFloat(c)/(Math.PI*2);
}else{
val=_499[i]*parseFloat(c);
}
}
}
_502.push(val);
}
return this[_498].apply(this,_502);
},fromComputedStyle:function(elem,_504,_505){
var d=MochiKit.DOM;
var cls=MochiKit.Color.Color;
for(elem=d.getElement(elem);elem;elem=elem.parentNode){
var _506=d.computedStyle.apply(d,arguments);
if(!_506){
continue;
}
var _507=cls.fromString(_506);
if(!_507){
break;
}
if(_507.asRGB().a>0){
return _507;
}
}
return null;
},fromBackground:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"backgroundColor","background-color")||cls.whiteColor();
},fromText:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"color","color")||cls.blackColor();
},namedColors:function(){
return MochiKit.Base.clone(MochiKit.Color.Color._namedColors);
}});
MochiKit.Base.update(MochiKit.Color,{clampColorComponent:function(v,_508){
v*=_508;
if(v<0){
return 0;
}else{
if(v>_508){
return _508;
}else{
return v;
}
}
},_hslValue:function(n1,n2,hue){
if(hue>6){
hue-=6;
}else{
if(hue<0){
hue+=6;
}
}
var val;
if(hue<1){
val=n1+(n2-n1)*hue;
}else{
if(hue<3){
val=n2;
}else{
if(hue<4){
val=n1+(n2-n1)*(4-hue);
}else{
val=n1;
}
}
}
return val;
},hsvToRGB:function(hue,_511,_512,_513){
if(arguments.length==1){
var hsv=hue;
hue=hsv.h;
_511=hsv.s;
_512=hsv.v;
_513=hsv.a;
}
var red;
var _514;
var blue;
if(_511==0){
red=0;
_514=0;
blue=0;
}else{
var i=Math.floor(hue*6);
var f=(hue*6)-i;
var p=_512*(1-_511);
var q=_512*(1-(_511*f));
var t=_512*(1-(_511*(1-f)));
switch(i){
case 1:
red=q;
_514=_512;
blue=p;
break;
case 2:
red=p;
_514=_512;
blue=t;
break;
case 3:
red=p;
_514=q;
blue=_512;
break;
case 4:
red=t;
_514=p;
blue=_512;
break;
case 5:
red=_512;
_514=p;
blue=q;
break;
case 6:
case 0:
red=_512;
_514=t;
blue=p;
break;
}
}
return {r:red,g:_514,b:blue,a:_513};
},hslToRGB:function(hue,_516,_517,_518){
if(arguments.length==1){
var hsl=hue;
hue=hsl.h;
_516=hsl.s;
_517=hsl.l;
_518=hsl.a;
}
var red;
var _519;
var blue;
if(_516==0){
red=_517;
_519=_517;
blue=_517;
}else{
var m2;
if(_517<=0.5){
m2=_517*(1+_516);
}else{
m2=_517+_516-(_517*_516);
}
var m1=(2*_517)-m2;
var f=MochiKit.Color._hslValue;
var h6=hue*6;
red=f(m1,m2,h6+2);
_519=f(m1,m2,h6);
blue=f(m1,m2,h6-2);
}
return {r:red,g:_519,b:blue,a:_518};
},rgbToHSV:function(red,_523,blue,_524){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_523=rgb.g;
blue=rgb.b;
_524=rgb.a;
}
var max=Math.max(Math.max(red,_523),blue);
var min=Math.min(Math.min(red,_523),blue);
var hue;
var _527;
var _528=max;
if(min==max){
hue=0;
_527=0;
}else{
var _529=(max-min);
_527=_529/max;
if(red==max){
hue=(_523-blue)/_529;
}else{
if(_523==max){
hue=2+((blue-red)/_529);
}else{
hue=4+((red-_523)/_529);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_527,v:_528,a:_524};
},rgbToHSL:function(red,_530,blue,_531){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_530=rgb.g;
blue=rgb.b;
_531=rgb.a;
}
var max=Math.max(red,Math.max(_530,blue));
var min=Math.min(red,Math.min(_530,blue));
var hue;
var _532;
var _533=(max+min)/2;
var _534=max-min;
if(_534==0){
hue=0;
_532=0;
}else{
if(_533<=0.5){
_532=_534/(max+min);
}else{
_532=_534/(2-max-min);
}
if(red==max){
hue=(_530-blue)/_534;
}else{
if(_530==max){
hue=2+((blue-red)/_534);
}else{
hue=4+((red-_530)/_534);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_532,l:_533,a:_531};
},toColorPart:function(num){
num=Math.round(num);
var _535=num.toString(16);
if(num<16){
return "0"+_535;
}
return _535;
},__new__:function(){
var m=MochiKit.Base;
this.Color.fromRGBString=m.bind(this.Color._fromColorString,this.Color,"rgb","fromRGB",[1/255,1/255,1/255,1]);
this.Color.fromHSLString=m.bind(this.Color._fromColorString,this.Color,"hsl","fromHSL",[1/360,0.01,0.01,1]);
var _536=1/3;
var _537={black:[0,0,0],blue:[0,0,1],brown:[0.6,0.4,0.2],cyan:[0,1,1],darkGray:[_536,_536,_536],gray:[0.5,0.5,0.5],green:[0,1,0],lightGray:[2*_536,2*_536,2*_536],magenta:[1,0,1],orange:[1,0.5,0],purple:[0.5,0,0.5],red:[1,0,0],transparent:[0,0,0,0],white:[1,1,1],yellow:[1,1,0]};
var _538=function(name,r,g,b,a){
var rval=this.fromRGB(r,g,b,a);
this[name]=function(){
return rval;
};
return rval;
};
for(var k in _537){
var name=k+"Color";
var _540=m.concat([_538,this.Color,name],_537[k]);
this.Color[name]=m.bind.apply(null,_540);
}
var _541=function(){
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof Color)){
return false;
}
}
return true;
};
var _542=function(a,b){
return a.compareRGB(b);
};
m.nameFunctions(this);
m.registerComparator(this.Color.NAME,_541,_542);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
}});
MochiKit.Color.EXPORT=["Color"];
MochiKit.Color.EXPORT_OK=["clampColorComponent","rgbToHSL","hslToRGB","rgbToHSV","hsvToRGB","toColorPart"];
MochiKit.Color.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Color);
MochiKit.Color.Color._namedColors={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"};
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Signal");
dojo.require("MochiKit.Base");
dojo.require("MochiKit.DOM");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
JSAN.use("MochiKit.DOM",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Signal depends on MochiKit.Base!";
}
try{
if(typeof (MochiKit.DOM)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Signal depends on MochiKit.DOM!";
}
if(typeof (MochiKit.Signal)=="undefined"){
MochiKit.Signal={};
}
MochiKit.Signal.NAME="MochiKit.Signal";
MochiKit.Signal.VERSION="1.3";
MochiKit.Signal._observers=[];
MochiKit.Signal.Event=function(e){
this._event=e||window.event;
};
MochiKit.Signal.Event.prototype.event=function(){
return this._event;
};
MochiKit.Signal.Event.prototype.type=function(){
return this._event.type||undefined;
};
MochiKit.Signal.Event.prototype.target=function(){
return this._event.target||this._event.srcElement;
};
MochiKit.Signal.Event.prototype.relatedTarget=function(){
if(this.type()=="mouseover"){
return (this._event.relatedTarget||this._event.fromElement);
}else{
if(this.type()=="mouseout"){
return (this._event.relatedTarget||this._event.toElement);
}
}
throw new Error("No related target");
};
MochiKit.Signal.Event.prototype.modifier=function(){
var m={};
m.alt=this._event.altKey;
m.ctrl=this._event.ctrlKey;
m.meta=this._event.metaKey||false;
m.shift=this._event.shiftKey;
return m;
};
MochiKit.Signal.Event.prototype.key=function(){
var k={};
if(this.type()&&this.type().indexOf("key")===0){
if(this.type()=="keydown"||this.type()=="keyup"){
k.code=this._event.keyCode;
k.string=(MochiKit.Signal._specialKeys[k.code]||"KEY_UNKNOWN");
return k;
}else{
if(this.type()=="keypress"){
k.code=(this._event.charCode||this._event.keyCode);
k.string=String.fromCharCode(k.code);
return k;
}
}
}
throw new Error("This is not a key event");
};
MochiKit.Signal.Event.prototype._fixPoint=function(_543){
if(typeof (_543)=="undefined"||_543<0){
return 0;
}
return _543;
};
MochiKit.Signal.Event.prototype.mouse=function(){
var m={};
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
m.client=new MochiKit.DOM.Coordinates(0,0);
if(this._event.clientX||this._event.clientY){
m.client.x=this._fixPoint(this._event.clientX);
m.client.y=this._fixPoint(this._event.clientY);
}
m.page=new MochiKit.DOM.Coordinates(0,0);
if(this._event.pageX||this._event.pageY){
m.page.x=this._fixPoint(this._event.pageX);
m.page.y=this._fixPoint(this._event.pageY);
}else{
m.page.x=(this._event.clientX+(document.documentElement.scrollLeft||document.body.scrollLeft)-document.documentElement.clientLeft);
m.page.y=(this._event.clientY+(document.documentElement.scrollTop||document.body.scrollTop)-document.documentElement.clientTop);
}
if(this.type()!="mousemove"){
m.button={};
m.button.left=false;
m.button.right=false;
m.button.middle=false;
if(this._event.which){
m.button.left=(this._event.which==1);
m.button.middle=(this._event.which==2);
m.button.right=(this._event.which==3);
}else{
m.button.left=!!(this._event.button&1);
m.button.right=!!(this._event.button&2);
m.button.middle=!!(this._event.button&4);
}
}
return m;
}
throw new Error("This is not a mouse event");
};
MochiKit.Signal.Event.prototype.stop=function(){
this.stopPropagation();
this.preventDefault();
};
MochiKit.Signal.Event.prototype.stopPropagation=function(){
if(this._event.stopPropagation){
this._event.stopPropagation();
}else{
this._event.cancelBubble=true;
}
};
MochiKit.Signal.Event.prototype.preventDefault=function(){
if(this._event.preventDefault){
this._event.preventDefault();
}else{
this._event.returnValue=false;
}
};
MochiKit.Signal.Event.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
var str="{event(): "+repr(this.event())+", type(): "+repr(this.type())+", target(): "+repr(this.target())+", modifier(): "+"{alt: "+repr(this.modifier().alt)+", ctrl: "+repr(this.modifier().ctrl)+", meta: "+repr(this.modifier().meta)+", shift: "+repr(this.modifier().shift)+"}";
if(this.type()&&this.type().indexOf("key")===0){
str+=", key(): {code: "+repr(this.key().code)+", string: "+repr(this.key().string)+"}";
}
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
str+=", mouse(): {page: "+repr(this.mouse().page)+", client: "+repr(this.mouse().client);
if(this.type()!="mousemove"){
str+=", button: {left: "+repr(this.mouse().button.left)+", middle: "+repr(this.mouse().button.middle)+", right: "+repr(this.mouse().button.right)+"}}";
}else{
str+="}";
}
}
if(this.type()=="mouseover"||this.type()=="mouseout"){
str+=", relatedTarget(): "+repr(this.relatedTarget());
}
str+="}";
return str;
};
MochiKit.Signal.Event.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Base.update(MochiKit.Signal,{__repr__:function(){
return "["+this.NAME+" "+this.VERSION+"]";
},toString:function(){
return this.__repr__();
},_specialKeys:{8:"KEY_BACKSPACE",9:"KEY_TAB",13:"KEY_ENTER",16:"KEY_SHIFT",17:"KEY_CTRL",18:"KEY_ALT",19:"KEY_PAUSE",20:"KEY_CAPS_LOCK",27:"KEY_ESCAPE",32:"KEY_SPACE",33:"KEY_PAGE_UP",34:"KEY_PAGE_DOWN",35:"KEY_END",36:"KEY_HOME",37:"KEY_LEFT_ARROW",38:"KEY_UP_ARROW",39:"KEY_RIGHT_ARROW",40:"KEY_DOWN_ARROW",45:"KEY_INSERT",46:"KEY_DELETE",91:"KEY_LEFT_WINDOW",92:"KEY_RIGHT_WINDOW",93:"KEY_SELECT",112:"KEY_F1",113:"KEY_F2",114:"KEY_F3",115:"KEY_F4",116:"KEY_F5",117:"KEY_F6",118:"KEY_F7",119:"KEY_F8",120:"KEY_F9",121:"KEY_F10",122:"KEY_F11",123:"KEY_F12",144:"KEY_NUM_LOCK",145:"KEY_SCROLL_LOCK"},_getSlot:function(slot,func){
if(typeof (func)=="string"||typeof (func)=="function"){
if(typeof (func)=="string"&&typeof (slot[func])=="undefined"){
throw new Error("Invalid function slot");
}
slot=[slot,func];
}else{
if(!func&&typeof (slot)=="function"){
slot=[slot];
}else{
throw new Error("Invalid slot parameters");
}
}
return slot;
},_unloadCache:function(){
for(var i=0;i<MochiKit.Signal._observers.length;i++){
var src=MochiKit.Signal._observers[i][0];
var sig=MochiKit.Signal._observers[i][1];
var _546=MochiKit.Signal._observers[i][2];
try{
if(src.removeEventListener){
src.removeEventListener(sig.substr(2),_546,false);
}else{
if(src.detachEvent){
src.detachEvent(sig,_546);
}else{
src._signals[sig]=undefined;
}
}
if(src._listeners&&src._listeners[sig]){
src._listeners[sig]=undefined;
}
delete (src._listeners);
delete (src._signals);
}
catch(e){
}
}
MochiKit.Signal._observers=undefined;
try{
window.onload=undefined;
}
catch(e){
}
try{
window.onunload=undefined;
}
catch(e){
}
},connect:function(src,sig,slot,func){
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
if(typeof (sig)!="string"){
throw new Error("'sig' must be a string");
}
slot=MochiKit.Signal._getSlot(slot,func);
if(src.addEventListener||src.attachEvent||src[sig]){
if(!src._listeners){
src._listeners={};
}
if(!src._listeners[sig]){
var _547=function(_548){
var _549=new MochiKit.Signal.Event(_548);
MochiKit.Signal.signal(src,sig,_549);
return true;
};
MochiKit.Signal._observers.push([src,sig,_547]);
if(src.addEventListener){
src.addEventListener(sig.substr(2),_547,false);
}else{
if(src.attachEvent){
src.attachEvent(sig,_547);
}else{
src[sig]=_547;
}
}
src._listeners[sig]=_547;
}
if(!src._signals){
src._signals={};
}
if(!src._signals[sig]){
src._signals[sig]=[];
}
}else{
if(!src._signals||!src._signals[sig]){
throw new Error("No such signal '"+sig+"' registered.");
}
}
var _550=src._signals[sig];
for(var i=0;i<_550.length;i++){
var s=_550[i];
if(slot[0]===s[0]&&slot[1]===s[1]&&slot[2]===s[2]){
return;
}
}
_550.push(slot);
},disconnect:function(src,sig,slot,func){
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
if(typeof (sig)!="string"){
throw new Error("'signal' must be a string");
}
slot=MochiKit.Signal._getSlot(slot,func);
if(src._signals&&src._signals[sig]){
var _551=src._signals[sig];
var _552=_551.length;
for(var i=0;i<_551.length;i++){
var s=_551[i];
if(s[0]===slot[0]&&s[1]===slot[1]&&s[2]===slot[2]){
_551.splice(i,1);
break;
}
}
}else{
throw new Error("Invalid signal to disconnect");
}
if(src.addEventListener||src.attachEvent||src._signals[sig]){
if(src._listeners&&src._listeners[sig]&&src._signals[sig].length===0){
var _553=src._listeners[sig];
if(src.removeEventListener){
src.removeEventListener(sig.substr(2),_553,false);
}else{
if(src.detachEvent){
src.detachEvent(sig,_553);
}else{
src._signals[sig]=undefined;
}
}
var _554=MochiKit.Signal._observers;
for(var i=0;i<_554.length;i++){
var o=_554[i];
if(o[0]===src&&o[1]===sig&&o[2]===_553){
_554.splice(i,1);
break;
}
}
src._listeners[sig]=undefined;
}
}
},signal:function(src,sig){
if(typeof (src)=="string"){
src=MochiKit.DOM.getElement(src);
}
if(typeof (sig)!="string"){
throw new Error("'signal' must be a string");
}
if(!src._signals||!src._signals[sig]){
if(src.addEventListener||src.attachEvent||src[sig]){
return;
}else{
throw new Error("No such signal '"+sig+"'");
}
}
var _555=src._signals[sig];
var args=MochiKit.Base.extend(null,arguments,2);
var slot;
var _556=[];
for(var i=0;i<_555.length;i++){
slot=_555[i];
try{
if(slot.length==1){
slot[0].apply(src,args);
}else{
if(typeof (slot[1])=="string"){
slot[0][slot[1]].apply(slot[0],args);
}else{
slot[1].apply(slot[0],args);
}
}
}
catch(e){
_556.push(e);
}
}
if(_556.length==1){
throw _556[0];
}else{
if(_556.length){
var e=new Error("There were errors in handling signal 'sig'.");
e.errors=_556;
throw e;
}
}
},registerSignals:function(src,_557){
if(!src._signals){
src._signals={};
}
for(var i=0;i<_557.length;i++){
var sig=_557[i];
if(!src._signals[sig]){
src._signals[sig]=[];
}
}
}});
MochiKit.Signal.EXPORT_OK=[];
MochiKit.Signal.EXPORT=["connect","disconnect","signal","registerSignals"];
MochiKit.Signal.__new__=function(win){
var m=MochiKit.Base;
this._document=document;
this._window=win;
try{
this.connect(window,"onunload",this._unloadCache);
}
catch(e){
}
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Signal.__new__(this);
MochiKit.Base._exportSymbols(this,MochiKit.Signal);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Visual");
dojo.require("MochiKit.Base");
dojo.require("MochiKit.DOM");
dojo.require("MochiKit.Color");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
JSAN.use("MochiKit.DOM",[]);
JSAN.use("MochiKit.Color",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"||typeof (MochiKit.DOM)=="undefined"||typeof (MochiKit.Color)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Visual depends on MochiKit.Base, MochiKit.DOM and MochiKit.Color!";
}
if(typeof (MochiKit.Visual)=="undefined"){
MochiKit.Visual={};
}
MochiKit.Visual.NAME="MochiKit.Visual";
MochiKit.Visual.VERSION="1.3";
MochiKit.Visual.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Visual.toString=function(){
return this.__repr__();
};
MochiKit.Visual._RoundCorners=function(e,_558){
e=MochiKit.DOM.getElement(e);
this._setOptions(_558);
if(this.options.__unstable__wrapElement){
e=this._doWrap(e);
}
var _559=this.options.color;
var C=MochiKit.Color.Color;
if(this.options.color=="fromElement"){
_559=C.fromBackground(e);
}else{
if(!(_559 instanceof C)){
_559=C.fromString(_559);
}
}
this.isTransparent=(_559.asRGB().a<=0);
var _561=this.options.bgColor;
if(this.options.bgColor=="fromParent"){
_561=C.fromBackground(e.offsetParent);
}else{
if(!(_561 instanceof C)){
_561=C.fromString(_561);
}
}
this._roundCornersImpl(e,_559,_561);
};
MochiKit.Visual._RoundCorners.prototype={_doWrap:function(e){
var _562=e.parentNode;
var doc=MochiKit.DOM.currentDocument();
if(typeof (doc.defaultView)=="undefined"||doc.defaultView==null){
return e;
}
var _563=doc.defaultView.getComputedStyle(e,null);
if(typeof (_563)=="undefined"||_563==null){
return e;
}
var _564=MochiKit.DOM.DIV({"style":{display:"block",marginTop:_563.getPropertyValue("padding-top"),marginRight:_563.getPropertyValue("padding-right"),marginBottom:_563.getPropertyValue("padding-bottom"),marginLeft:_563.getPropertyValue("padding-left"),padding:"0px"}});
_564.innerHTML=e.innerHTML;
e.innerHTML="";
e.appendChild(_564);
return e;
},_roundCornersImpl:function(e,_565,_566){
if(this.options.border){
this._renderBorder(e,_566);
}
if(this._isTopRounded()){
this._roundTopCorners(e,_565,_566);
}
if(this._isBottomRounded()){
this._roundBottomCorners(e,_565,_566);
}
},_renderBorder:function(el,_567){
var _568="1px solid "+this._borderColor(_567);
var _569="border-left: "+_568;
var _570="border-right: "+_568;
var _571="style='"+_569+";"+_570+"'";
el.innerHTML="<div "+_571+">"+el.innerHTML+"</div>";
},_roundTopCorners:function(el,_572,_573){
var _574=this._createCorner(_573);
for(var i=0;i<this.options.numSlices;i++){
_574.appendChild(this._createCornerSlice(_572,_573,i,"top"));
}
el.style.paddingTop=0;
el.insertBefore(_574,el.firstChild);
},_roundBottomCorners:function(el,_575,_576){
var _577=this._createCorner(_576);
for(var i=(this.options.numSlices-1);i>=0;i--){
_577.appendChild(this._createCornerSlice(_575,_576,i,"bottom"));
}
el.style.paddingBottom=0;
el.appendChild(_577);
},_createCorner:function(_578){
var dom=MochiKit.DOM;
return dom.DIV({style:{backgroundColor:_578.toString()}});
},_createCornerSlice:function(_579,_580,n,_581){
var _582=MochiKit.DOM.SPAN();
var _583=_582.style;
_583.backgroundColor=_579.toString();
_583.display="block";
_583.height="1px";
_583.overflow="hidden";
_583.fontSize="1px";
var _584=this._borderColor(_579,_580);
if(this.options.border&&n==0){
_583.borderTopStyle="solid";
_583.borderTopWidth="1px";
_583.borderLeftWidth="0px";
_583.borderRightWidth="0px";
_583.borderBottomWidth="0px";
_583.height="0px";
_583.borderColor=_584.toString();
}else{
if(_584){
_583.borderColor=_584.toString();
_583.borderStyle="solid";
_583.borderWidth="0px 1px";
}
}
if(!this.options.compact&&(n==(this.options.numSlices-1))){
_583.height="2px";
}
this._setMargin(_582,n,_581);
this._setBorder(_582,n,_581);
return _582;
},_setOptions:function(_585){
this.options={corners:"all",color:"fromElement",bgColor:"fromParent",blend:true,border:false,compact:false,__unstable__wrapElement:false};
MochiKit.Base.update(this.options,_585);
this.options.numSlices=(this.options.compact?2:4);
},_whichSideTop:function(){
var _586=this.options.corners;
if(this._hasString(_586,"all","top")){
return "";
}
var _587=(_586.indexOf("tl")!=-1);
var _588=(_586.indexOf("tr")!=-1);
if(_587&&_588){
return "";
}
if(_587){
return "left";
}
if(_588){
return "right";
}
return "";
},_whichSideBottom:function(){
var _589=this.options.corners;
if(this._hasString(_589,"all","bottom")){
return "";
}
var _590=(_589.indexOf("bl")!=-1);
var _591=(_589.indexOf("br")!=-1);
if(_590&&_591){
return "";
}
if(_590){
return "left";
}
if(_591){
return "right";
}
return "";
},_borderColor:function(_592,_593){
if(_592=="transparent"){
return _593;
}else{
if(this.options.border){
return this.options.border;
}else{
if(this.options.blend){
return _593.blendedColor(_592);
}
}
}
return "";
},_setMargin:function(el,n,_594){
var _595=this._marginSize(n)+"px";
var _596=(_594=="top"?this._whichSideTop():this._whichSideBottom());
var _597=el.style;
if(_596=="left"){
_597.marginLeft=_595;
_597.marginRight="0px";
}else{
if(_596=="right"){
_597.marginRight=_595;
_597.marginLeft="0px";
}else{
_597.marginLeft=_595;
_597.marginRight=_595;
}
}
},_setBorder:function(el,n,_598){
var _599=this._borderSize(n)+"px";
var _600=(_598=="top"?this._whichSideTop():this._whichSideBottom());
var _601=el.style;
if(_600=="left"){
_601.borderLeftWidth=_599;
_601.borderRightWidth="0px";
}else{
if(_600=="right"){
_601.borderRightWidth=_599;
_601.borderLeftWidth="0px";
}else{
_601.borderLeftWidth=_599;
_601.borderRightWidth=_599;
}
}
},_marginSize:function(n){
if(this.isTransparent){
return 0;
}
var o=this.options;
if(o.compact&&o.blend){
var _602=[1,0];
return _602[n];
}else{
if(o.compact){
var _603=[2,1];
return _603[n];
}else{
if(o.blend){
var _604=[3,2,1,0];
return _604[n];
}else{
var _605=[5,3,2,1];
return _605[n];
}
}
}
},_borderSize:function(n){
var o=this.options;
var _606;
if(o.compact&&(o.blend||this.isTransparent)){
return 1;
}else{
if(o.compact){
_606=[1,0];
}else{
if(o.blend){
_606=[2,1,1,1];
}else{
if(o.border){
_606=[0,2,0,0];
}else{
if(this.isTransparent){
_606=[5,3,2,1];
}else{
return 0;
}
}
}
}
}
return _606[n];
},_hasString:function(str){
for(var i=1;i<arguments.length;i++){
if(str.indexOf(arguments[i])!=-1){
return true;
}
}
return false;
},_isTopRounded:function(){
return this._hasString(this.options.corners,"all","top","tl","tr");
},_isBottomRounded:function(){
return this._hasString(this.options.corners,"all","bottom","bl","br");
},_hasSingleTextChild:function(el){
return (el.childNodes.length==1&&el.childNodes[0].nodeType==3);
}};
MochiKit.Visual.roundElement=function(e,_607){
new MochiKit.Visual._RoundCorners(e,_607);
};
MochiKit.Visual.roundClass=function(_608,_609,_610){
var _611=MochiKit.DOM.getElementsByTagAndClassName(_608,_609);
for(var i=0;i<_611.length;i++){
MochiKit.Visual.roundElement(_611[i],_610);
}
};
MochiKit.Visual.Color=MochiKit.Color.Color;
MochiKit.Visual.getElementsComputedStyle=MochiKit.DOM.computedStyle;
MochiKit.Visual.__new__=function(){
var m=MochiKit.Base;
m.nameFunctions(this);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
};
MochiKit.Visual.EXPORT=["roundElement","roundClass"];
MochiKit.Visual.EXPORT_OK=[];
MochiKit.Visual.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Visual);
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.MochiKit)=="undefined"){
MochiKit.MochiKit={};
}
MochiKit.MochiKit.NAME="MochiKit.MochiKit";
MochiKit.MochiKit.VERSION="1.3";
MochiKit.MochiKit.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.MochiKit.toString=function(){
return this.__repr__();
};
MochiKit.MochiKit.SUBMODULES=["Base","Iter","Logging","DateTime","Format","Async","DOM","LoggingPane","Color","Signal","Visual"];
if(typeof (JSAN)!="undefined"||typeof (dojo)!="undefined"){
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.MochiKit");
dojo.require("MochiKit.*");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
JSAN.use("MochiKit.Iter",[]);
JSAN.use("MochiKit.Logging",[]);
JSAN.use("MochiKit.DateTime",[]);
JSAN.use("MochiKit.Format",[]);
JSAN.use("MochiKit.Async",[]);
JSAN.use("MochiKit.DOM",[]);
JSAN.use("MochiKit.LoggingPane",[]);
JSAN.use("MochiKit.Color",[]);
JSAN.use("MochiKit.Signal",[]);
JSAN.use("MochiKit.Visual",[]);
}
(function(){
var _612=MochiKit.Base.extend;
var self=MochiKit.MochiKit;
var _613=self.SUBMODULES;
var _614=[];
var _615=[];
var _616={};
var i,k,m,all;
for(i=0;i<_613.length;i++){
m=MochiKit[_613[i]];
_612(_614,m.EXPORT);
_612(_615,m.EXPORT_OK);
for(k in m.EXPORT_TAGS){
_616[k]=_612(_616[k],m.EXPORT_TAGS[k]);
}
all=m.EXPORT_TAGS[":all"];
if(!all){
all=_612(null,m.EXPORT,m.EXPORT_OK);
}
var j;
for(j=0;j<all.length;j++){
k=all[j];
self[k]=m[k];
}
}
self.EXPORT=_614;
self.EXPORT_OK=_615;
self.EXPORT_TAGS=_616;
}());
}else{
if(typeof (MochiKit.__compat__)=="undefined"){
MochiKit.__compat__=true;
}
(function(){
var _617=document.getElementsByTagName("script");
var _618="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
var base=null;
var _619=null;
var _620={};
var i;
for(i=0;i<_617.length;i++){
var src=_617[i].getAttribute("src");
if(!src){
continue;
}
_620[src]=true;
if(src.match(/MochiKit.js$/)){
base=src.substring(0,src.lastIndexOf("MochiKit.js"));
_619=_617[i];
}
}
if(base==null){
return;
}
var _621=MochiKit.MochiKit.SUBMODULES;
for(var i=0;i<_621.length;i++){
if(MochiKit[_621[i]]){
continue;
}
var uri=base+_621[i]+".js";
if(uri in _620){
continue;
}
if(document.documentElement&&document.documentElement.namespaceURI==_618){
var s=document.createElementNS(_618,"script");
s.setAttribute("id","MochiKit_"+base+_621[i]);
s.setAttribute("src",uri);
s.setAttribute("type","application/x-javascript");
_619.parentNode.appendChild(s);
}else{
document.write("<script src=\""+uri+"\" type=\"text/javascript\"></script>");
}
}
})();
}


