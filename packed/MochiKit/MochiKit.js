/***

    MochiKit.MochiKit 1.4 : PACKED VERSION

    THIS FILE IS AUTOMATICALLY GENERATED.  If creating patches, please
    diff against the source tree, not this file.

    See <http://mochikit.com/> for documentation, downloads, license, etc.

    (c) 2005 Bob Ippolito.  All rights Reserved.

***/

if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Base");
}
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.Base)=="undefined"){
MochiKit.Base={};
}
if(typeof (MochiKit.__export__)=="undefined"){
MochiKit.__export__=(MochiKit.__compat__||(typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined"));
}
MochiKit.Base.VERSION="1.4";
MochiKit.Base.NAME="MochiKit.Base";
MochiKit.Base.update=function(_1,_2){
if(_1===null||_1===undefined){
_1={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
_1[k]=o[k];
}
}
}
return _1;
};
MochiKit.Base.update(MochiKit.Base,{__repr__:function(){
return "["+this.NAME+" "+this.VERSION+"]";
},toString:function(){
return this.__repr__();
},camelize:function(_6){
var _7=_6.split("-");
var cc=_7[0];
for(var i=1;i<_7.length;i++){
cc+=_7[i].charAt(0).toUpperCase()+_7[i].substring(1);
}
return cc;
},counter:function(n){
if(arguments.length===0){
n=1;
}
return function(){
return n++;
};
},clone:function(_b){
var me=arguments.callee;
if(arguments.length==1){
me.prototype=_b;
return new me();
}
},_deps:function(_d,_e){
if(!(_d in MochiKit)){
MochiKit[_d]={};
}
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit."+_d);
}
for(var i=0;i<_e.length;i++){
if(typeof (dojo)!="undefined"){
dojo.require("MochiKit."+_e[i]);
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit."+_e[i],[]);
}
if(!(_e[i] in MochiKit)){
throw "MochiKit."+_d+" depends on MochiKit."+_e[i]+"!";
}
}
},_flattenArray:function(res,lst){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(o instanceof Array){
arguments.callee(res,o);
}else{
res.push(o);
}
}
return res;
},flattenArray:function(lst){
return MochiKit.Base._flattenArray([],lst);
},flattenArguments:function(lst){
var res=[];
var m=MochiKit.Base;
var _18=m.extend(null,arguments);
while(_18.length){
var o=_18.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
for(var i=o.length-1;i>=0;i--){
_18.unshift(o[i]);
}
}else{
res.push(o);
}
}
return res;
},extend:function(_1b,obj,_1d){
if(!_1d){
_1d=0;
}
if(obj){
var l=obj.length;
if(typeof (l)!="number"){
if(typeof (MochiKit.Iter)!="undefined"){
obj=MochiKit.Iter.list(obj);
l=obj.length;
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(!_1b){
_1b=[];
}
for(var i=_1d;i<l;i++){
_1b.push(obj[i]);
}
}
return _1b;
},updatetree:function(_20,obj){
if(_20===null||_20===undefined){
_20={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
var v=o[k];
if(typeof (_20[k])=="object"&&typeof (v)=="object"){
arguments.callee(_20[k],v);
}else{
_20[k]=v;
}
}
}
}
return _20;
},setdefault:function(_26,obj){
if(_26===null||_26===undefined){
_26={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
for(var k in o){
if(!(k in _26)){
_26[k]=o[k];
}
}
}
return _26;
},keys:function(obj){
var _2c=[];
for(var _2d in obj){
_2c.push(_2d);
}
return _2c;
},values:function(obj){
var _2f=[];
for(var _30 in obj){
_2f.push(obj[_30]);
}
return _2f;
},items:function(obj){
var _32=[];
var e;
for(var _34 in obj){
var v;
try{
v=obj[_34];
}
catch(e){
continue;
}
_32.push([_34,v]);
}
return _32;
},_newNamedError:function(_36,_37,_38){
_38.prototype=new MochiKit.Base.NamedError(_36.NAME+"."+_37);
_36[_37]=_38;
},operator:{truth:function(a){
return !!a;
},lognot:function(a){
return !a;
},identity:function(a){
return a;
},not:function(a){
return ~a;
},neg:function(a){
return -a;
},add:function(a,b){
return a+b;
},sub:function(a,b){
return a-b;
},div:function(a,b){
return a/b;
},mod:function(a,b){
return a%b;
},mul:function(a,b){
return a*b;
},and:function(a,b){
return a&b;
},or:function(a,b){
return a|b;
},xor:function(a,b){
return a^b;
},lshift:function(a,b){
return a<<b;
},rshift:function(a,b){
return a>>b;
},zrshift:function(a,b){
return a>>>b;
},eq:function(a,b){
return a==b;
},ne:function(a,b){
return a!=b;
},gt:function(a,b){
return a>b;
},ge:function(a,b){
return a>=b;
},lt:function(a,b){
return a<b;
},le:function(a,b){
return a<=b;
},seq:function(a,b){
return a===b;
},sne:function(a,b){
return a!==b;
},ceq:function(a,b){
return MochiKit.Base.compare(a,b)===0;
},cne:function(a,b){
return MochiKit.Base.compare(a,b)!==0;
},cgt:function(a,b){
return MochiKit.Base.compare(a,b)==1;
},cge:function(a,b){
return MochiKit.Base.compare(a,b)!=-1;
},clt:function(a,b){
return MochiKit.Base.compare(a,b)==-1;
},cle:function(a,b){
return MochiKit.Base.compare(a,b)!=1;
},logand:function(a,b){
return a&&b;
},logor:function(a,b){
return a||b;
},contains:function(a,b){
return b in a;
}},forwardCall:function(_76){
return function(){
return this[_76].apply(this,arguments);
};
},itemgetter:function(_77){
return function(arg){
return arg[_77];
};
},typeMatcher:function(){
var _79={};
for(var i=0;i<arguments.length;i++){
var typ=arguments[i];
_79[typ]=typ;
}
return function(){
for(var i=0;i<arguments.length;i++){
if(!(typeof (arguments[i]) in _79)){
return false;
}
}
return true;
};
},isNull:function(){
for(var i=0;i<arguments.length;i++){
if(arguments[i]!==null){
return false;
}
}
return true;
},isUndefinedOrNull:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(typeof (o)=="undefined"||o===null)){
return false;
}
}
return true;
},isEmpty:function(obj){
return !MochiKit.Base.isNotEmpty.apply(this,arguments);
},isNotEmpty:function(obj){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(o&&o.length)){
return false;
}
}
return true;
},isArrayLike:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
var typ=typeof (o);
if((typ!="object"&&!(typ=="function"&&typeof (o.item)=="function"))||o===null||typeof (o.length)!="number"||o.nodeType===3||o.nodeType===4){
return false;
}
}
return true;
},isDateLike:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="object"||o===null||typeof (o.getTime)!="function"){
return false;
}
}
return true;
},xmap:function(fn){
if(fn===null){
return MochiKit.Base.extend(null,arguments,1);
}
var _8a=[];
for(var i=1;i<arguments.length;i++){
_8a.push(fn(arguments[i]));
}
return _8a;
},map:function(fn,lst){
var m=MochiKit.Base;
var itr=MochiKit.Iter;
var _90=m.isArrayLike;
if(arguments.length<=2){
if(!_90(lst)){
if(itr){
lst=itr.list(lst);
if(fn===null){
return lst;
}
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
return m.extend(null,lst);
}
var _91=[];
for(var i=0;i<lst.length;i++){
_91.push(fn(lst[i]));
}
return _91;
}else{
if(fn===null){
fn=Array;
}
var _93=null;
for(i=1;i<arguments.length;i++){
if(!_90(arguments[i])){
if(itr){
return itr.list(itr.imap.apply(null,arguments));
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
var l=arguments[i].length;
if(_93===null||_93>l){
_93=l;
}
}
_91=[];
for(i=0;i<_93;i++){
var _95=[];
for(var j=1;j<arguments.length;j++){
_95.push(arguments[j][i]);
}
_91.push(fn.apply(this,_95));
}
return _91;
}
},xfilter:function(fn){
var _98=[];
if(fn===null){
fn=MochiKit.Base.operator.truth;
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(fn(o)){
_98.push(o);
}
}
return _98;
},filter:function(fn,lst,_9d){
var _9e=[];
var m=MochiKit.Base;
if(!m.isArrayLike(lst)){
if(MochiKit.Iter){
lst=MochiKit.Iter.list(lst);
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
fn=m.operator.truth;
}
if(typeof (Array.prototype.filter)=="function"){
return Array.prototype.filter.call(lst,fn,_9d);
}else{
if(typeof (_9d)=="undefined"||_9d===null){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(fn(o)){
_9e.push(o);
}
}
}else{
for(i=0;i<lst.length;i++){
o=lst[i];
if(fn.call(_9d,o)){
_9e.push(o);
}
}
}
}
return _9e;
},_wrapDumbFunction:function(_a2){
return function(){
switch(arguments.length){
case 0:
return _a2();
case 1:
return _a2(arguments[0]);
case 2:
return _a2(arguments[0],arguments[1]);
case 3:
return _a2(arguments[0],arguments[1],arguments[2]);
}
var _a3=[];
for(var i=0;i<arguments.length;i++){
_a3.push("arguments["+i+"]");
}
return eval("(func("+_a3.join(",")+"))");
};
},methodcaller:function(_a5){
var _a6=MochiKit.Base.extend(null,arguments,1);
if(typeof (_a5)=="function"){
return function(obj){
return _a5.apply(obj,_a6);
};
}else{
return function(obj){
return obj[_a5].apply(obj,_a6);
};
}
},method:function(_a9,_aa){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([_aa,_a9],arguments,2));
},compose:function(f1,f2){
var _ae=[];
var m=MochiKit.Base;
if(arguments.length===0){
throw new TypeError("compose() requires at least one argument");
}
for(var i=0;i<arguments.length;i++){
var fn=arguments[i];
if(typeof (fn)!="function"){
throw new TypeError(m.repr(fn)+" is not a function");
}
_ae.push(fn);
}
return function(){
var _b2=arguments;
for(var i=_ae.length-1;i>=0;i--){
_b2=[_ae[i].apply(this,_b2)];
}
return _b2[0];
};
},bind:function(_b4,_b5){
if(typeof (_b4)=="string"){
_b4=_b5[_b4];
}
var _b6=_b4.im_func;
var _b7=_b4.im_preargs;
var _b8=_b4.im_self;
var m=MochiKit.Base;
if(typeof (_b4)=="function"&&typeof (_b4.apply)=="undefined"){
_b4=m._wrapDumbFunction(_b4);
}
if(typeof (_b6)!="function"){
_b6=_b4;
}
if(typeof (_b5)!="undefined"){
_b8=_b5;
}
if(typeof (_b7)=="undefined"){
_b7=[];
}else{
_b7=_b7.slice();
}
m.extend(_b7,arguments,2);
var _ba=function(){
var _bb=arguments;
var me=arguments.callee;
if(me.im_preargs.length>0){
_bb=m.concat(me.im_preargs,_bb);
}
var _bd=me.im_self;
if(!_bd){
_bd=this;
}
return me.im_func.apply(_bd,_bb);
};
_ba.im_self=_b8;
_ba.im_func=_b6;
_ba.im_preargs=_b7;
return _ba;
},bindLate:function(_be,_bf){
var m=MochiKit.Base;
if(typeof (_be)!="string"){
return m.bind.apply(this,arguments);
}
var _c1=m.extend([],arguments,2);
var _c2=function(){
var _c3=arguments;
var me=arguments.callee;
if(me.im_preargs.length>0){
_c3=m.concat(me.im_preargs,_c3);
}
var _c5=me.im_self;
if(!_c5){
_c5=this;
}
return _c5[me.im_func].apply(_c5,_c3);
};
_c2.im_self=_bf;
_c2.im_func=_be;
_c2.im_preargs=_c1;
return _c2;
},bindMethods:function(_c6){
var _c7=MochiKit.Base.bind;
for(var k in _c6){
var _c9=_c6[k];
if(typeof (_c9)=="function"){
_c6[k]=_c7(_c9,_c6);
}
}
},registerComparator:function(_ca,_cb,_cc,_cd){
MochiKit.Base.comparatorRegistry.register(_ca,_cb,_cc,_cd);
},_primitives:{"boolean":true,"string":true,"number":true},compare:function(a,b){
if(a==b){
return 0;
}
var _d0=(typeof (a)=="undefined"||a===null);
var _d1=(typeof (b)=="undefined"||b===null);
if(_d0&&_d1){
return 0;
}else{
if(_d0){
return -1;
}else{
if(_d1){
return 1;
}
}
}
var m=MochiKit.Base;
var _d3=m._primitives;
if(!(typeof (a) in _d3&&typeof (b) in _d3)){
try{
return m.comparatorRegistry.match(a,b);
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
}
if(a<b){
return -1;
}else{
if(a>b){
return 1;
}
}
var _d4=m.repr;
throw new TypeError(_d4(a)+" and "+_d4(b)+" can not be compared");
},compareDateLike:function(a,b){
return MochiKit.Base.compare(a.getTime(),b.getTime());
},compareArrayLike:function(a,b){
var _d9=MochiKit.Base.compare;
var _da=a.length;
var _db=0;
if(_da>b.length){
_db=1;
_da=b.length;
}else{
if(_da<b.length){
_db=-1;
}
}
for(var i=0;i<_da;i++){
var cmp=_d9(a[i],b[i]);
if(cmp){
return cmp;
}
}
return _db;
},registerRepr:function(_de,_df,_e0,_e1){
MochiKit.Base.reprRegistry.register(_de,_df,_e0,_e1);
},repr:function(o){
if(typeof (o)=="undefined"){
return "undefined";
}else{
if(o===null){
return "null";
}
}
try{
if(typeof (o.__repr__)=="function"){
return o.__repr__();
}else{
if(typeof (o.repr)=="function"&&o.repr!=arguments.callee){
return o.repr();
}
}
return MochiKit.Base.reprRegistry.match(o);
}
catch(e){
if(typeof (o.NAME)=="string"&&(o.toString==Function.prototype.toString||o.toString==Object.prototype.toString)){
return o.NAME;
}
}
try{
var _e3=(o+"");
}
catch(e){
return "["+typeof (o)+"]";
}
if(typeof (o)=="function"){
_e3=_e3.replace(/^\s+/,"").replace(/\s+/g," ");
_e3=_e3.replace(/,(\S)/,", $1");
var idx=_e3.indexOf("{");
if(idx!=-1){
_e3=_e3.substr(0,idx)+"{...}";
}
}
return _e3;
},reprArrayLike:function(o){
var m=MochiKit.Base;
return "["+m.map(m.repr,o).join(", ")+"]";
},reprString:function(o){
return ("\""+o.replace(/(["\\])/g,"\\$1")+"\"").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\v]/g,"\\v").replace(/[\r]/g,"\\r");
},reprNumber:function(o){
return o+"";
},registerJSON:function(_e9,_ea,_eb,_ec){
MochiKit.Base.jsonRegistry.register(_e9,_ea,_eb,_ec);
},evalJSON:function(){
return eval("("+MochiKit.Base._filterJSON(arguments[0])+")");
},_filterJSON:function(s){
var m=s.match(/^\s*\/\*(.*)\*\/\s*$/);
if(m){
return m[1];
}
return s;
},serializeJSON:function(o){
var _f0=typeof (o);
if(_f0=="number"||_f0=="boolean"){
return o+"";
}else{
if(o===null){
return "null";
}else{
if(_f0=="string"){
var res="";
for(var i=0;i<o.length;i++){
var c=o.charAt(i);
if(c=="\""){
res+="\\\"";
}else{
if(c=="\\"){
res+="\\\\";
}else{
if(c=="\b"){
res+="\\b";
}else{
if(c=="\f"){
res+="\\f";
}else{
if(c=="\n"){
res+="\\n";
}else{
if(c=="\r"){
res+="\\r";
}else{
if(c=="\t"){
res+="\\t";
}else{
if(o.charCodeAt(i)<=31){
var hex=o.charCodeAt(i).toString(16);
if(hex.length<2){
hex="0"+hex;
}
res+="\\u00"+hex.toUpperCase();
}else{
res+=c;
}
}
}
}
}
}
}
}
}
return "\""+res+"\"";
}
}
}
var me=arguments.callee;
var _f6;
if(typeof (o.__json__)=="function"){
_f6=o.__json__();
if(o!==_f6){
return me(_f6);
}
}
if(typeof (o.json)=="function"){
_f6=o.json();
if(o!==_f6){
return me(_f6);
}
}
if(_f0!="function"&&typeof (o.length)=="number"){
var res=[];
for(var i=0;i<o.length;i++){
var val=me(o[i]);
if(typeof (val)!="string"){
continue;
}
res.push(val);
}
return "["+res.join(", ")+"]";
}
var m=MochiKit.Base;
try{
_f6=m.jsonRegistry.match(o);
if(o!==_f6){
return me(_f6);
}
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
if(_f0=="undefined"){
throw new TypeError("undefined can not be serialized as JSON");
}
if(_f0=="function"){
return null;
}
res=[];
for(var k in o){
var _fa;
if(typeof (k)=="number"){
_fa="\""+k+"\"";
}else{
if(typeof (k)=="string"){
_fa=me(k);
}else{
continue;
}
}
val=me(o[k]);
if(typeof (val)!="string"){
continue;
}
res.push(_fa+":"+val);
}
return "{"+res.join(", ")+"}";
},objEqual:function(a,b){
return (MochiKit.Base.compare(a,b)===0);
},arrayEqual:function(_fd,arr){
if(_fd.length!=arr.length){
return false;
}
return (MochiKit.Base.compare(_fd,arr)===0);
},concat:function(){
var _ff=[];
var _100=MochiKit.Base.extend;
for(var i=0;i<arguments.length;i++){
_100(_ff,arguments[i]);
}
return _ff;
},keyComparator:function(key){
var m=MochiKit.Base;
var _104=m.compare;
if(arguments.length==1){
return function(a,b){
return _104(a[key],b[key]);
};
}
var _107=m.extend(null,arguments);
return function(a,b){
var rval=0;
for(var i=0;(rval===0)&&(i<_107.length);i++){
var key=_107[i];
rval=_104(a[key],b[key]);
}
return rval;
};
},reverseKeyComparator:function(key){
var _10e=MochiKit.Base.keyComparator.apply(this,arguments);
return function(a,b){
return _10e(b,a);
};
},partial:function(func){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([func,undefined],arguments,1));
},listMinMax:function(_113,lst){
if(lst.length===0){
return null;
}
var cur=lst[0];
var _116=MochiKit.Base.compare;
for(var i=1;i<lst.length;i++){
var o=lst[i];
if(_116(o,cur)==_113){
cur=o;
}
}
return cur;
},objMax:function(){
return MochiKit.Base.listMinMax(1,arguments);
},objMin:function(){
return MochiKit.Base.listMinMax(-1,arguments);
},findIdentical:function(lst,_11a,_11b,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_11b)=="undefined"||_11b===null){
_11b=0;
}
for(var i=_11b;i<end;i++){
if(lst[i]===_11a){
return i;
}
}
return -1;
},mean:function(){
var sum=0;
var m=MochiKit.Base;
var args=m.extend(null,arguments);
var _121=args.length;
while(args.length){
var o=args.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
_121+=o.length-1;
for(var i=o.length-1;i>=0;i--){
sum+=o[i];
}
}else{
sum+=o;
}
}
if(_121<=0){
throw new TypeError("mean() requires at least one argument");
}
return sum/_121;
},median:function(){
var data=MochiKit.Base.flattenArguments(arguments);
if(data.length===0){
throw new TypeError("median() requires at least one argument");
}
data.sort(compare);
if(data.length%2==0){
var _125=data.length/2;
return (data[_125]+data[_125-1])/2;
}else{
return data[(data.length-1)/2];
}
},findValue:function(lst,_127,_128,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_128)=="undefined"||_128===null){
_128=0;
}
var cmp=MochiKit.Base.compare;
for(var i=_128;i<end;i++){
if(cmp(lst[i],_127)===0){
return i;
}
}
return -1;
},nodeWalk:function(node,_12d){
var _12e=[node];
var _12f=MochiKit.Base.extend;
while(_12e.length){
var res=_12d(_12e.shift());
if(res){
_12f(_12e,res);
}
}
},nameFunctions:function(_131){
var base=_131.NAME;
if(typeof (base)=="undefined"){
base="";
}else{
base=base+".";
}
for(var name in _131){
var o=_131[name];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+name;
}
catch(e){
}
}
}
},queryString:function(_135,_136){
if(typeof (MochiKit.DOM)!="undefined"&&arguments.length==1&&(typeof (_135)=="string"||(typeof (_135.nodeType)!="undefined"&&_135.nodeType>0))){
var kv=MochiKit.DOM.formContents(_135);
_135=kv[0];
_136=kv[1];
}else{
if(arguments.length==1){
if(typeof (_135.length)=="number"&&_135.length==2){
return arguments.callee(_135[0],_135[1]);
}
var o=_135;
_135=[];
_136=[];
for(var k in o){
var v=o[k];
if(typeof (v)=="function"){
continue;
}else{
if(MochiKit.Base.isArrayLike(v)){
for(var i=0;i<v.length;i++){
_135.push(k);
_136.push(v[i]);
}
}else{
_135.push(k);
_136.push(v);
}
}
}
}
}
var rval=[];
var len=Math.min(_135.length,_136.length);
var _13e=MochiKit.Base.urlEncode;
for(var i=0;i<len;i++){
v=_136[i];
if(typeof (v)!="undefined"&&v!==null){
rval.push(_13e(_135[i])+"="+_13e(v));
}
}
return rval.join("&");
},parseQueryString:function(_13f,_140){
var qstr=(_13f.charAt(0)=="?")?_13f.substring(1):_13f;
var _142=qstr.replace(/\+/g,"%20").split(/\&amp\;|\&\#38\;|\&#x26;|\&/);
var o={};
var _144;
if(typeof (decodeURIComponent)!="undefined"){
_144=decodeURIComponent;
}else{
_144=unescape;
}
if(_140){
for(var i=0;i<_142.length;i++){
var pair=_142[i].split("=");
var name=_144(pair.shift());
if(!name){
continue;
}
var arr=o[name];
if(!(arr instanceof Array)){
arr=[];
o[name]=arr;
}
arr.push(_144(pair.join("=")));
}
}else{
for(i=0;i<_142.length;i++){
pair=_142[i].split("=");
var name=pair.shift();
if(!name){
continue;
}
o[_144(name)]=_144(pair.join("="));
}
}
return o;
}});
MochiKit.Base.AdapterRegistry=function(){
this.pairs=[];
};
MochiKit.Base.AdapterRegistry.prototype={register:function(name,_14a,wrap,_14c){
if(_14c){
this.pairs.unshift([name,_14a,wrap]);
}else{
this.pairs.push([name,_14a,wrap]);
}
},match:function(){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[1].apply(this,arguments)){
return pair[2].apply(this,arguments);
}
}
throw MochiKit.Base.NotFound;
},unregister:function(name){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[0]==name){
this.pairs.splice(i,1);
return true;
}
}
return false;
}};
MochiKit.Base.EXPORT=["flattenArray","noop","camelize","counter","clone","extend","update","updatetree","setdefault","keys","values","items","NamedError","operator","forwardCall","itemgetter","typeMatcher","isCallable","isUndefined","isUndefinedOrNull","isNull","isEmpty","isNotEmpty","isArrayLike","isDateLike","xmap","map","xfilter","filter","methodcaller","compose","bind","bindLate","bindMethods","NotFound","AdapterRegistry","registerComparator","compare","registerRepr","repr","objEqual","arrayEqual","concat","keyComparator","reverseKeyComparator","partial","merge","listMinMax","listMax","listMin","objMax","objMin","nodeWalk","zip","urlEncode","queryString","serializeJSON","registerJSON","evalJSON","parseQueryString","findValue","findIdentical","flattenArguments","method","average","mean","median"];
MochiKit.Base.EXPORT_OK=["nameFunctions","comparatorRegistry","reprRegistry","jsonRegistry","compareDateLike","compareArrayLike","reprArrayLike","reprString","reprNumber"];
MochiKit.Base._exportSymbols=function(_152,_153){
if(!MochiKit.__export__){
return;
}
var all=_153.EXPORT_TAGS[":all"];
for(var i=0;i<all.length;i++){
_152[all[i]]=_153[all[i]];
}
};
MochiKit.Base.__new__=function(){
var m=this;
m.noop=m.operator.identity;
m.forward=m.forwardCall;
m.find=m.findValue;
if(typeof (encodeURIComponent)!="undefined"){
m.urlEncode=function(_157){
return encodeURIComponent(_157).replace(/\'/g,"%27");
};
}else{
m.urlEncode=function(_158){
return escape(_158).replace(/\+/g,"%2B").replace(/\"/g,"%22").rval.replace(/\'/g,"%27");
};
}
m.NamedError=function(name){
this.message=name;
this.name=name;
};
m.NamedError.prototype=new Error();
m.update(m.NamedError.prototype,{repr:function(){
if(this.message&&this.message!=this.name){
return this.name+"("+m.repr(this.message)+")";
}else{
return this.name+"()";
}
},toString:m.forwardCall("repr")});
m.NotFound=new m.NamedError("MochiKit.Base.NotFound");
m.listMax=m.partial(m.listMinMax,1);
m.listMin=m.partial(m.listMinMax,-1);
m.isCallable=m.typeMatcher("function");
m.isUndefined=m.typeMatcher("undefined");
m.merge=m.partial(m.update,null);
m.zip=m.partial(m.map,null);
m.average=m.mean;
m.comparatorRegistry=new m.AdapterRegistry();
m.registerComparator("dateLike",m.isDateLike,m.compareDateLike);
m.registerComparator("arrayLike",m.isArrayLike,m.compareArrayLike);
m.reprRegistry=new m.AdapterRegistry();
m.registerRepr("arrayLike",m.isArrayLike,m.reprArrayLike);
m.registerRepr("string",m.typeMatcher("string"),m.reprString);
m.registerRepr("numbers",m.typeMatcher("number","boolean"),m.reprNumber);
m.jsonRegistry=new m.AdapterRegistry();
var all=m.concat(m.EXPORT,m.EXPORT_OK);
m.EXPORT_TAGS={":common":m.concat(m.EXPORT_OK),":all":all};
m.nameFunctions(this);
};
MochiKit.Base.__new__();
if(MochiKit.__export__){
compare=MochiKit.Base.compare;
compose=MochiKit.Base.compose;
serializeJSON=MochiKit.Base.serializeJSON;
mean=MochiKit.Base.mean;
median=MochiKit.Base.median;
}
MochiKit.Base._exportSymbols(this,MochiKit.Base);
MochiKit.Base._deps("Iter",["Base"]);
MochiKit.Iter.NAME="MochiKit.Iter";
MochiKit.Iter.VERSION="1.4";
MochiKit.Base.update(MochiKit.Iter,{__repr__:function(){
return "["+this.NAME+" "+this.VERSION+"]";
},toString:function(){
return this.__repr__();
},registerIteratorFactory:function(name,_15c,_15d,_15e){
MochiKit.Iter.iteratorRegistry.register(name,_15c,_15d,_15e);
},isIterable:function(o){
return o!=null&&(typeof (o.next)=="function"||typeof (o.iter)=="function");
},iter:function(_160,_161){
var self=MochiKit.Iter;
if(arguments.length==2){
return self.takewhile(function(a){
return a!=_161;
},_160);
}
if(typeof (_160.next)=="function"){
return _160;
}else{
if(typeof (_160.iter)=="function"){
return _160.iter();
}
}
try{
return self.iteratorRegistry.match(_160);
}
catch(e){
var m=MochiKit.Base;
if(e==m.NotFound){
e=new TypeError(typeof (_160)+": "+m.repr(_160)+" is not iterable");
}
throw e;
}
},count:function(n){
if(!n){
n=0;
}
var m=MochiKit.Base;
return {repr:function(){
return "count("+n+")";
},toString:m.forwardCall("repr"),next:m.counter(n)};
},cycle:function(p){
var self=MochiKit.Iter;
var m=MochiKit.Base;
var lst=[];
var _16b=self.iter(p);
return {repr:function(){
return "cycle(...)";
},toString:m.forwardCall("repr"),next:function(){
try{
var rval=_16b.next();
lst.push(rval);
return rval;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
if(lst.length===0){
this.next=function(){
throw self.StopIteration;
};
}else{
var i=-1;
this.next=function(){
i=(i+1)%lst.length;
return lst[i];
};
}
return this.next();
}
}};
},repeat:function(elem,n){
var m=MochiKit.Base;
if(typeof (n)=="undefined"){
return {repr:function(){
return "repeat("+m.repr(elem)+")";
},toString:m.forwardCall("repr"),next:function(){
return elem;
}};
}
return {repr:function(){
return "repeat("+m.repr(elem)+", "+n+")";
},toString:m.forwardCall("repr"),next:function(){
if(n<=0){
throw MochiKit.Iter.StopIteration;
}
n-=1;
return elem;
}};
},next:function(_171){
return _171.next();
},izip:function(p,q){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var next=self.next;
var _177=m.map(self.iter,arguments);
return {repr:function(){
return "izip(...)";
},toString:m.forwardCall("repr"),next:function(){
return m.map(next,_177);
}};
},ifilter:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilter(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(pred(rval)){
return rval;
}
}
return undefined;
}};
},ifilterfalse:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilterfalse(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
return rval;
}
}
return undefined;
}};
},islice:function(seq){
var self=MochiKit.Iter;
var m=MochiKit.Base;
seq=self.iter(seq);
var _183=0;
var stop=0;
var step=1;
var i=-1;
if(arguments.length==2){
stop=arguments[1];
}else{
if(arguments.length==3){
_183=arguments[1];
stop=arguments[2];
}else{
_183=arguments[1];
stop=arguments[2];
step=arguments[3];
}
}
return {repr:function(){
return "islice("+["...",_183,stop,step].join(", ")+")";
},toString:m.forwardCall("repr"),next:function(){
var rval;
while(i<_183){
rval=seq.next();
i++;
}
if(_183>=stop){
throw self.StopIteration;
}
_183+=step;
return rval;
}};
},imap:function(fun,p,q){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var _18d=m.map(self.iter,m.extend(null,arguments,1));
var map=m.map;
var next=self.next;
return {repr:function(){
return "imap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(this,map(next,_18d));
}};
},applymap:function(fun,seq,self){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
return {repr:function(){
return "applymap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(self,seq.next());
}};
},chain:function(p,q){
var self=MochiKit.Iter;
var m=MochiKit.Base;
if(arguments.length==1){
return self.iter(arguments[0]);
}
var _198=m.map(self.iter,arguments);
return {repr:function(){
return "chain(...)";
},toString:m.forwardCall("repr"),next:function(){
while(_198.length>1){
try{
var _199=_198[0].next();
return _199;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
_198.shift();
var _199=_198[0].next();
return _199;
}
}
if(_198.length==1){
var arg=_198.shift();
this.next=m.bind("next",arg);
return this.next();
}
throw self.StopIteration;
}};
},takewhile:function(pred,seq){
var self=MochiKit.Iter;
seq=self.iter(seq);
return {repr:function(){
return "takewhile(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=seq.next();
if(!pred(rval)){
this.next=function(){
throw self.StopIteration;
};
this.next();
}
return rval;
}};
},dropwhile:function(pred,seq){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
var bind=m.bind;
return {"repr":function(){
return "dropwhile(...)";
},"toString":m.forwardCall("repr"),"next":function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
break;
}
}
this.next=bind("next",seq);
return rval;
}};
},_tee:function(_1a4,sync,_1a6){
sync.pos[_1a4]=-1;
var m=MochiKit.Base;
var _1a8=m.listMin;
return {repr:function(){
return "tee("+_1a4+", ...)";
},toString:m.forwardCall("repr"),next:function(){
var rval;
var i=sync.pos[_1a4];
if(i==sync.max){
rval=_1a6.next();
sync.deque.push(rval);
sync.max+=1;
sync.pos[_1a4]+=1;
}else{
rval=sync.deque[i-sync.min];
sync.pos[_1a4]+=1;
if(i==sync.min&&_1a8(sync.pos)!=sync.min){
sync.min+=1;
sync.deque.shift();
}
}
return rval;
}};
},tee:function(_1ab,n){
var rval=[];
var sync={"pos":[],"deque":[],"max":-1,"min":-1};
if(arguments.length==1||typeof (n)=="undefined"||n===null){
n=2;
}
var self=MochiKit.Iter;
_1ab=self.iter(_1ab);
var _tee=self._tee;
for(var i=0;i<n;i++){
rval.push(_tee(i,sync,_1ab));
}
return rval;
},list:function(_1b2){
var rval;
if(_1b2 instanceof Array){
return _1b2.slice();
}
if(typeof (_1b2)=="function"&&!(_1b2 instanceof Function)&&typeof (_1b2.length)=="number"){
rval=[];
for(var i=0;i<_1b2.length;i++){
rval.push(_1b2[i]);
}
return rval;
}
var self=MochiKit.Iter;
_1b2=self.iter(_1b2);
var rval=[];
var _1b6;
try{
while(true){
_1b6=_1b2.next();
rval.push(_1b6);
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return rval;
}
return undefined;
},reduce:function(fn,_1b8,_1b9){
var i=0;
var x=_1b9;
var self=MochiKit.Iter;
_1b8=self.iter(_1b8);
if(arguments.length<3){
try{
x=_1b8.next();
}
catch(e){
if(e==self.StopIteration){
e=new TypeError("reduce() of empty sequence with no initial value");
}
throw e;
}
i++;
}
try{
while(true){
x=fn(x,_1b8.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},range:function(){
var _1bd=0;
var stop=0;
var step=1;
if(arguments.length==1){
stop=arguments[0];
}else{
if(arguments.length==2){
_1bd=arguments[0];
stop=arguments[1];
}else{
if(arguments.length==3){
_1bd=arguments[0];
stop=arguments[1];
step=arguments[2];
}else{
throw new TypeError("range() takes 1, 2, or 3 arguments!");
}
}
}
if(step===0){
throw new TypeError("range() step must not be 0");
}
return {next:function(){
if((step>0&&_1bd>=stop)||(step<0&&_1bd<=stop)){
throw MochiKit.Iter.StopIteration;
}
var rval=_1bd;
_1bd+=step;
return rval;
},repr:function(){
return "range("+[_1bd,stop,step].join(", ")+")";
},toString:MochiKit.Base.forwardCall("repr")};
},sum:function(_1c1,_1c2){
if(typeof (_1c2)=="undefined"||_1c2===null){
_1c2=0;
}
var x=_1c2;
var self=MochiKit.Iter;
_1c1=self.iter(_1c1);
try{
while(true){
x+=_1c1.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},exhaust:function(_1c5){
var self=MochiKit.Iter;
_1c5=self.iter(_1c5);
try{
while(true){
_1c5.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
},forEach:function(_1c7,func,obj){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length>2){
func=m.bind(func,obj);
}
if(m.isArrayLike(_1c7)&&!self.isIterable(_1c7)){
try{
for(var i=0;i<_1c7.length;i++){
func(_1c7[i]);
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
}else{
self.exhaust(self.imap(func,_1c7));
}
},every:function(_1cd,func){
var self=MochiKit.Iter;
try{
self.ifilterfalse(func,_1cd).next();
return false;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return true;
}
},sorted:function(_1d0,cmp){
var rval=MochiKit.Iter.list(_1d0);
if(arguments.length==1){
cmp=MochiKit.Base.compare;
}
rval.sort(cmp);
return rval;
},reversed:function(_1d3){
var rval=MochiKit.Iter.list(_1d3);
rval.reverse();
return rval;
},some:function(_1d5,func){
var self=MochiKit.Iter;
try{
self.ifilter(func,_1d5).next();
return true;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return false;
}
},iextend:function(lst,_1d9){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(m.isArrayLike(_1d9)&&!self.isIterable(_1d9)){
for(var i=0;i<_1d9.length;i++){
lst.push(_1d9[i]);
}
}else{
_1d9=self.iter(_1d9);
try{
while(true){
lst.push(_1d9.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
}
return lst;
},groupby:function(_1dd,_1de){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_1de=m.operator.identity;
}
_1dd=self.iter(_1dd);
var pk=undefined;
var k=undefined;
var v;
function fetch(){
v=_1dd.next();
k=_1de(v);
}
function eat(){
var ret=v;
v=undefined;
return ret;
}
var _1e5=true;
var _1e6=m.compare;
return {repr:function(){
return "groupby(...)";
},next:function(){
while(_1e6(k,pk)===0){
fetch();
if(_1e5){
_1e5=false;
break;
}
}
pk=k;
return [k,{next:function(){
if(v==undefined){
fetch();
}
if(_1e6(k,pk)!==0){
throw self.StopIteration;
}
return eat();
}}];
}};
},groupby_as_array:function(_1e7,_1e8){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_1e8=m.operator.identity;
}
_1e7=self.iter(_1e7);
var _1eb=[];
var _1ec=true;
var _1ed;
var _1ee=m.compare;
while(true){
try{
var _1ef=_1e7.next();
var key=_1e8(_1ef);
}
catch(e){
if(e==self.StopIteration){
break;
}
throw e;
}
if(_1ec||_1ee(key,_1ed)!==0){
var _1f1=[];
_1eb.push([key,_1f1]);
}
_1f1.push(_1ef);
_1ec=false;
_1ed=key;
}
return _1eb;
},arrayLikeIter:function(_1f2){
var i=0;
return {repr:function(){
return "arrayLikeIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(i>=_1f2.length){
throw MochiKit.Iter.StopIteration;
}
return _1f2[i++];
}};
},hasIterateNext:function(_1f4){
return (_1f4&&typeof (_1f4.iterateNext)=="function");
},iterateNextIter:function(_1f5){
return {repr:function(){
return "iterateNextIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=_1f5.iterateNext();
if(rval===null||rval===undefined){
throw MochiKit.Iter.StopIteration;
}
return rval;
}};
}});
MochiKit.Iter.EXPORT_OK=["iteratorRegistry","arrayLikeIter","hasIterateNext","iterateNextIter"];
MochiKit.Iter.EXPORT=["StopIteration","registerIteratorFactory","iter","count","cycle","repeat","next","izip","ifilter","ifilterfalse","islice","imap","applymap","chain","takewhile","dropwhile","tee","list","reduce","range","sum","exhaust","forEach","every","sorted","reversed","some","iextend","groupby","groupby_as_array"];
MochiKit.Iter.__new__=function(){
var m=MochiKit.Base;
if(typeof (StopIteration)!="undefined"){
this.StopIteration=StopIteration;
}else{
this.StopIteration=new m.NamedError("StopIteration");
}
this.iteratorRegistry=new m.AdapterRegistry();
this.registerIteratorFactory("arrayLike",m.isArrayLike,this.arrayLikeIter);
this.registerIteratorFactory("iterateNext",this.hasIterateNext,this.iterateNextIter);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Iter.__new__();
if(MochiKit.__export__){
reduce=MochiKit.Iter.reduce;
}
MochiKit.Base._exportSymbols(this,MochiKit.Iter);
MochiKit.Base._deps("Logging",["Base"]);
MochiKit.Logging.NAME="MochiKit.Logging";
MochiKit.Logging.VERSION="1.4";
MochiKit.Logging.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Logging.toString=function(){
return this.__repr__();
};
MochiKit.Logging.EXPORT=["LogLevel","LogMessage","Logger","alertListener","logger","log","logError","logDebug","logFatal","logWarning"];
MochiKit.Logging.EXPORT_OK=["logLevelAtLeast","isLogMessage","compareLogMessage"];
MochiKit.Logging.LogMessage=function(num,_1f9,info){
this.num=num;
this.level=_1f9;
this.info=info;
this.timestamp=new Date();
};
MochiKit.Logging.LogMessage.prototype={repr:function(){
var m=MochiKit.Base;
return "LogMessage("+m.map(m.repr,[this.num,this.level,this.info]).join(", ")+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Base.update(MochiKit.Logging,{logLevelAtLeast:function(_1fc){
var self=MochiKit.Logging;
if(typeof (_1fc)=="string"){
_1fc=self.LogLevel[_1fc];
}
return function(msg){
var _1ff=msg.level;
if(typeof (_1ff)=="string"){
_1ff=self.LogLevel[_1ff];
}
return _1ff>=_1fc;
};
},isLogMessage:function(){
var _200=MochiKit.Logging.LogMessage;
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof _200)){
return false;
}
}
return true;
},compareLogMessage:function(a,b){
return MochiKit.Base.compare([a.level,a.info],[b.level,b.info]);
},alertListener:function(msg){
alert("num: "+msg.num+"\nlevel: "+msg.level+"\ninfo: "+msg.info.join(" "));
}});
MochiKit.Logging.Logger=function(_205){
this.counter=0;
if(typeof (_205)=="undefined"||_205===null){
_205=-1;
}
this.maxSize=_205;
this._messages=[];
this.listeners={};
this.useNativeConsole=false;
};
MochiKit.Logging.Logger.prototype={clear:function(){
this._messages.splice(0,this._messages.length);
},logToConsole:function(msg){
if(typeof (window)!="undefined"&&window.console&&window.console.log){
window.console.log(msg.replace(/%/g,"\uff05"));
}else{
if(typeof (opera)!="undefined"&&opera.postError){
opera.postError(msg);
}else{
if(typeof (printfire)=="function"){
printfire(msg);
}else{
if(typeof (Debug)!="undefined"&&Debug.writeln){
Debug.writeln(msg);
}else{
if(typeof (debug)!="undefined"&&debug.trace){
debug.trace(msg);
}
}
}
}
}
},dispatchListeners:function(msg){
for(var k in this.listeners){
var pair=this.listeners[k];
if(pair.ident!=k||(pair[0]&&!pair[0](msg))){
continue;
}
pair[1](msg);
}
},addListener:function(_20a,_20b,_20c){
if(typeof (_20b)=="string"){
_20b=MochiKit.Logging.logLevelAtLeast(_20b);
}
var _20d=[_20b,_20c];
_20d.ident=_20a;
this.listeners[_20a]=_20d;
},removeListener:function(_20e){
delete this.listeners[_20e];
},baseLog:function(_20f,_210){
if(typeof (_20f)=="number"){
if(_20f>=MochiKit.Logging.LogLevel.FATAL){
_20f="FATAL";
}else{
if(_20f>=MochiKit.Logging.LogLevel.ERROR){
_20f="ERROR";
}else{
if(_20f>=MochiKit.Logging.LogLevel.WARNING){
_20f="WARNING";
}else{
if(_20f>=MochiKit.Logging.LogLevel.INFO){
_20f="INFO";
}else{
_20f="DEBUG";
}
}
}
}
}
var msg=new MochiKit.Logging.LogMessage(this.counter,_20f,MochiKit.Base.extend(null,arguments,1));
this._messages.push(msg);
this.dispatchListeners(msg);
if(this.useNativeConsole){
this.logToConsole(msg.level+": "+msg.info.join(" "));
}
this.counter+=1;
while(this.maxSize>=0&&this._messages.length>this.maxSize){
this._messages.shift();
}
},getMessages:function(_212){
var _213=0;
if(!(typeof (_212)=="undefined"||_212===null)){
_213=Math.max(0,this._messages.length-_212);
}
return this._messages.slice(_213);
},getMessageText:function(_214){
if(typeof (_214)=="undefined"||_214===null){
_214=30;
}
var _215=this.getMessages(_214);
if(_215.length){
var lst=map(function(m){
return "\n  ["+m.num+"] "+m.level+": "+m.info.join(" ");
},_215);
lst.unshift("LAST "+_215.length+" MESSAGES:");
return lst.join("");
}
return "";
},debuggingBookmarklet:function(_218){
if(typeof (MochiKit.LoggingPane)=="undefined"){
alert(this.getMessageText());
}else{
MochiKit.LoggingPane.createLoggingPane(_218||false);
}
}};
MochiKit.Logging.__new__=function(){
this.LogLevel={ERROR:40,FATAL:50,WARNING:30,INFO:20,DEBUG:10};
var m=MochiKit.Base;
m.registerComparator("LogMessage",this.isLogMessage,this.compareLogMessage);
var _21a=m.partial;
var _21b=this.Logger;
var _21c=_21b.prototype.baseLog;
m.update(this.Logger.prototype,{debug:_21a(_21c,"DEBUG"),log:_21a(_21c,"INFO"),error:_21a(_21c,"ERROR"),fatal:_21a(_21c,"FATAL"),warning:_21a(_21c,"WARNING")});
var self=this;
var _21e=function(name){
return function(){
self.logger[name].apply(self.logger,arguments);
};
};
this.log=_21e("log");
this.logError=_21e("error");
this.logDebug=_21e("debug");
this.logFatal=_21e("fatal");
this.logWarning=_21e("warning");
this.logger=new _21b();
this.logger.useNativeConsole=true;
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
if(typeof (printfire)=="undefined"&&typeof (document)!="undefined"&&document.createEvent&&typeof (dispatchEvent)!="undefined"){
printfire=function(){
printfire.args=arguments;
var ev=document.createEvent("Events");
ev.initEvent("printfire",false,true);
dispatchEvent(ev);
};
}
MochiKit.Logging.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Logging);
MochiKit.Base._deps("DateTime",["Base"]);
MochiKit.DateTime.NAME="MochiKit.DateTime";
MochiKit.DateTime.VERSION="1.4";
MochiKit.DateTime.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.DateTime.toString=function(){
return this.__repr__();
};
MochiKit.DateTime.isoDate=function(str){
str=str+"";
if(typeof (str)!="string"||str.length===0){
return null;
}
var iso=str.split("-");
if(iso.length===0){
return null;
}
var date=new Date(iso[0],iso[1]-1,iso[2]);
date.setFullYear(iso[0]);
date.setMonth(iso[1]-1);
date.setDate(iso[2]);
return date;
};
MochiKit.DateTime._isoRegexp=/(\d{4,})(?:-(\d{1,2})(?:-(\d{1,2})(?:[T ](\d{1,2}):(\d{1,2})(?::(\d{1,2})(?:\.(\d+))?)?(?:(Z)|([+-])(\d{1,2})(?::(\d{1,2}))?)?)?)?)?/;
MochiKit.DateTime.isoTimestamp=function(str){
str=str+"";
if(typeof (str)!="string"||str.length===0){
return null;
}
var res=str.match(MochiKit.DateTime._isoRegexp);
if(typeof (res)=="undefined"||res===null){
return null;
}
var year,_227,day,hour,min,sec,msec;
year=parseInt(res[1],10);
if(typeof (res[2])=="undefined"||res[2]===""){
return new Date(year);
}
_227=parseInt(res[2],10)-1;
day=parseInt(res[3],10);
if(typeof (res[4])=="undefined"||res[4]===""){
return new Date(year,_227,day);
}
hour=parseInt(res[4],10);
min=parseInt(res[5],10);
sec=(typeof (res[6])!="undefined"&&res[6]!=="")?parseInt(res[6],10):0;
if(typeof (res[7])!="undefined"&&res[7]!==""){
msec=Math.round(1000*parseFloat("0."+res[7]));
}else{
msec=0;
}
if((typeof (res[8])=="undefined"||res[8]==="")&&(typeof (res[9])=="undefined"||res[9]==="")){
return new Date(year,_227,day,hour,min,sec,msec);
}
var ofs;
if(typeof (res[9])!="undefined"&&res[9]!==""){
ofs=parseInt(res[10],10)*3600000;
if(typeof (res[11])!="undefined"&&res[11]!==""){
ofs+=parseInt(res[11],10)*60000;
}
if(res[9]=="-"){
ofs=-ofs;
}
}else{
ofs=0;
}
return new Date(Date.UTC(year,_227,day,hour,min,sec,msec)-ofs);
};
MochiKit.DateTime.toISOTime=function(date,_22f){
if(typeof (date)=="undefined"||date===null){
return null;
}
var hh=date.getHours();
var mm=date.getMinutes();
var ss=date.getSeconds();
var lst=[((_22f&&(hh<10))?"0"+hh:hh),((mm<10)?"0"+mm:mm),((ss<10)?"0"+ss:ss)];
return lst.join(":");
};
MochiKit.DateTime.toISOTimestamp=function(date,_235){
if(typeof (date)=="undefined"||date===null){
return null;
}
var sep=_235?"T":" ";
var foot=_235?"Z":"";
if(_235){
date=new Date(date.getTime()+(date.getTimezoneOffset()*60000));
}
return MochiKit.DateTime.toISODate(date)+sep+MochiKit.DateTime.toISOTime(date,_235)+foot;
};
MochiKit.DateTime.toISODate=function(date){
if(typeof (date)=="undefined"||date===null){
return null;
}
var _239=MochiKit.DateTime._padTwo;
var _23a=MochiKit.DateTime._padFour;
return [_23a(date.getFullYear()),_239(date.getMonth()+1),_239(date.getDate())].join("-");
};
MochiKit.DateTime.americanDate=function(d){
d=d+"";
if(typeof (d)!="string"||d.length===0){
return null;
}
var a=d.split("/");
return new Date(a[2],a[0]-1,a[1]);
};
MochiKit.DateTime._padTwo=function(n){
return (n>9)?n:"0"+n;
};
MochiKit.DateTime._padFour=function(n){
switch(n.toString().length){
case 1:
return "000"+n;
break;
case 2:
return "00"+n;
break;
case 3:
return "0"+n;
break;
case 4:
default:
return n;
}
};
MochiKit.DateTime.toPaddedAmericanDate=function(d){
if(typeof (d)=="undefined"||d===null){
return null;
}
var _240=MochiKit.DateTime._padTwo;
return [_240(d.getMonth()+1),_240(d.getDate()),d.getFullYear()].join("/");
};
MochiKit.DateTime.toAmericanDate=function(d){
if(typeof (d)=="undefined"||d===null){
return null;
}
return [d.getMonth()+1,d.getDate(),d.getFullYear()].join("/");
};
MochiKit.DateTime.EXPORT=["isoDate","isoTimestamp","toISOTime","toISOTimestamp","toISODate","americanDate","toPaddedAmericanDate","toAmericanDate"];
MochiKit.DateTime.EXPORT_OK=[];
MochiKit.DateTime.EXPORT_TAGS={":common":MochiKit.DateTime.EXPORT,":all":MochiKit.DateTime.EXPORT};
MochiKit.DateTime.__new__=function(){
var base=this.NAME+".";
for(var k in this){
var o=this[k];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+k;
}
catch(e){
}
}
}
};
MochiKit.DateTime.__new__();
if(typeof (MochiKit.Base)!="undefined"){
MochiKit.Base._exportSymbols(this,MochiKit.DateTime);
}else{
(function(_245,_246){
if((typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined")||(MochiKit.__export__===false)){
var all=_246.EXPORT_TAGS[":all"];
for(var i=0;i<all.length;i++){
_245[all[i]]=_246[all[i]];
}
}
})(this,MochiKit.DateTime);
}
MochiKit.Base._deps("Format",["Base"]);
MochiKit.Format.NAME="MochiKit.Format";
MochiKit.Format.VERSION="1.4";
MochiKit.Format.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Format.toString=function(){
return this.__repr__();
};
MochiKit.Format._numberFormatter=function(_249,_24a,_24b,_24c,_24d,_24e,_24f,_250,_251){
return function(num){
num=parseFloat(num);
if(typeof (num)=="undefined"||num===null||isNaN(num)){
return _249;
}
var _253=_24a;
var _254=_24b;
if(num<0){
num=-num;
}else{
_253=_253.replace(/-/,"");
}
var me=arguments.callee;
var fmt=MochiKit.Format.formatLocale(_24c);
if(_24d){
num=num*100;
_254=fmt.percent+_254;
}
num=MochiKit.Format.roundToFixed(num,_24e);
var _257=num.split(/\./);
var _258=_257[0];
var frac=(_257.length==1)?"":_257[1];
var res="";
while(_258.length<_24f){
_258="0"+_258;
}
if(_250){
while(_258.length>_250){
var i=_258.length-_250;
res=fmt.separator+_258.substring(i,_258.length)+res;
_258=_258.substring(0,i);
}
}
res=_258+res;
if(_24e>0){
while(frac.length<_251){
frac=frac+"0";
}
res=res+fmt.decimal+frac;
}
return _253+res+_254;
};
};
MochiKit.Format.numberFormatter=function(_25c,_25d,_25e){
if(typeof (_25d)=="undefined"){
_25d="";
}
var _25f=_25c.match(/((?:[0#]+,)?[0#]+)(?:\.([0#]+))?(%)?/);
if(!_25f){
throw TypeError("Invalid pattern");
}
var _260=_25c.substr(0,_25f.index);
var _261=_25c.substr(_25f.index+_25f[0].length);
if(_260.search(/-/)==-1){
_260=_260+"-";
}
var _262=_25f[1];
var frac=(typeof (_25f[2])=="string"&&_25f[2]!="")?_25f[2]:"";
var _264=(typeof (_25f[3])=="string"&&_25f[3]!="");
var tmp=_262.split(/,/);
var _266;
if(typeof (_25e)=="undefined"){
_25e="default";
}
if(tmp.length==1){
_266=null;
}else{
_266=tmp[1].length;
}
var _267=_262.length-_262.replace(/0/g,"").length;
var _268=frac.length-frac.replace(/0/g,"").length;
var _269=frac.length;
var rval=MochiKit.Format._numberFormatter(_25d,_260,_261,_25e,_264,_269,_267,_266,_268);
var m=MochiKit.Base;
if(m){
var fn=arguments.callee;
var args=m.concat(arguments);
rval.repr=function(){
return [self.NAME,"(",map(m.repr,args).join(", "),")"].join("");
};
}
return rval;
};
MochiKit.Format.formatLocale=function(_26e){
if(typeof (_26e)=="undefined"||_26e===null){
_26e="default";
}
if(typeof (_26e)=="string"){
var rval=MochiKit.Format.LOCALE[_26e];
if(typeof (rval)=="string"){
rval=arguments.callee(rval);
MochiKit.Format.LOCALE[_26e]=rval;
}
return rval;
}else{
return _26e;
}
};
MochiKit.Format.twoDigitAverage=function(_270,_271){
if(_271){
var res=_270/_271;
if(!isNaN(res)){
return MochiKit.Format.twoDigitFloat(res);
}
}
return "0";
};
MochiKit.Format.twoDigitFloat=function(_273){
var res=roundToFixed(_273,2);
if(res.indexOf(".00")>0){
return res.substring(0,res.length-3);
}else{
if(res.charAt(res.length-1)=="0"){
return res.substring(0,res.length-1);
}else{
return res;
}
}
};
MochiKit.Format.lstrip=function(str,_276){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_276){
return str.replace(/^\s+/,"");
}else{
return str.replace(new RegExp("^["+_276+"]+"),"");
}
};
MochiKit.Format.rstrip=function(str,_278){
str=str+"";
if(typeof (str)!="string"){
return null;
}
if(!_278){
return str.replace(/\s+$/,"");
}else{
return str.replace(new RegExp("["+_278+"]+$"),"");
}
};
MochiKit.Format.strip=function(str,_27a){
var self=MochiKit.Format;
return self.rstrip(self.lstrip(str,_27a),_27a);
};
MochiKit.Format.truncToFixed=function(_27c,_27d){
var res=Math.floor(_27c).toFixed(0);
if(_27c<0){
res=Math.ceil(_27c).toFixed(0);
if(res.charAt(0)!="-"&&_27d>0){
res="-"+res;
}
}
if(res.indexOf("e")<0&&_27d>0){
var tail=_27c.toString();
if(tail.indexOf("e")>0){
tail=".";
}else{
if(tail.indexOf(".")<0){
tail=".";
}else{
tail=tail.substring(tail.indexOf("."));
}
}
if(tail.length-1>_27d){
tail=tail.substring(0,_27d+1);
}
while(tail.length-1<_27d){
tail+="0";
}
res+=tail;
}
return res;
};
MochiKit.Format.roundToFixed=function(_280,_281){
var _282=Math.abs(_280)+0.5*Math.pow(10,-_281);
var res=MochiKit.Format.truncToFixed(_282,_281);
if(_280<0){
res="-"+res;
}
return res;
};
MochiKit.Format.percentFormat=function(_284){
return MochiKit.Format.twoDigitFloat(100*_284)+"%";
};
MochiKit.Format.EXPORT=["truncToFixed","roundToFixed","numberFormatter","formatLocale","twoDigitAverage","twoDigitFloat","percentFormat","lstrip","rstrip","strip"];
MochiKit.Format.LOCALE={en_US:{separator:",",decimal:".",percent:"%"},de_DE:{separator:".",decimal:",",percent:"%"},pt_BR:{separator:".",decimal:",",percent:"%"},fr_FR:{separator:" ",decimal:",",percent:"%"},"default":"en_US"};
MochiKit.Format.EXPORT_OK=[];
MochiKit.Format.EXPORT_TAGS={":all":MochiKit.Format.EXPORT,":common":MochiKit.Format.EXPORT};
MochiKit.Format.__new__=function(){
var base=this.NAME+".";
var k,v,o;
for(k in this.LOCALE){
o=this.LOCALE[k];
if(typeof (o)=="object"){
o.repr=function(){
return this.NAME;
};
o.NAME=base+"LOCALE."+k;
}
}
for(k in this){
o=this[k];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+k;
}
catch(e){
}
}
}
};
MochiKit.Format.__new__();
if(typeof (MochiKit.Base)!="undefined"){
MochiKit.Base._exportSymbols(this,MochiKit.Format);
}else{
(function(_289,_28a){
if((typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined")||(MochiKit.__export__===false)){
var all=_28a.EXPORT_TAGS[":all"];
for(var i=0;i<all.length;i++){
_289[all[i]]=_28a[all[i]];
}
}
})(this,MochiKit.Format);
}
MochiKit.Base._deps("Async",["Base"]);
MochiKit.Async.NAME="MochiKit.Async";
MochiKit.Async.VERSION="1.4";
MochiKit.Async.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Async.toString=function(){
return this.__repr__();
};
MochiKit.Async.Deferred=function(_28d){
this.chain=[];
this.id=this._nextId();
this.fired=-1;
this.paused=0;
this.results=[null,null];
this.canceller=_28d;
this.silentlyCancelled=false;
this.chained=false;
};
MochiKit.Async.Deferred.prototype={repr:function(){
var _28e;
if(this.fired==-1){
_28e="unfired";
}else{
if(this.fired===0){
_28e="success";
}else{
_28e="error";
}
}
return "Deferred("+this.id+", "+_28e+")";
},toString:MochiKit.Base.forwardCall("repr"),_nextId:MochiKit.Base.counter(),cancel:function(){
var self=MochiKit.Async;
if(this.fired==-1){
if(this.canceller){
this.canceller(this);
}else{
this.silentlyCancelled=true;
}
if(this.fired==-1){
this.errback(new self.CancelledError(this));
}
}else{
if((this.fired===0)&&(this.results[0] instanceof self.Deferred)){
this.results[0].cancel();
}
}
},_resback:function(res){
this.fired=((res instanceof Error)?1:0);
this.results[this.fired]=res;
this._fire();
},_check:function(){
if(this.fired!=-1){
if(!this.silentlyCancelled){
throw new MochiKit.Async.AlreadyCalledError(this);
}
this.silentlyCancelled=false;
return;
}
},callback:function(res){
this._check();
if(res instanceof MochiKit.Async.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
this._resback(res);
},errback:function(res){
this._check();
var self=MochiKit.Async;
if(res instanceof self.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
if(!(res instanceof Error)){
res=new self.GenericError(res);
}
this._resback(res);
},addBoth:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,fn);
},addCallback:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,null);
},addErrback:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(null,fn);
},addCallbacks:function(cb,eb){
if(this.chained){
throw new Error("Chained Deferreds can not be re-used");
}
this.chain.push([cb,eb]);
if(this.fired>=0){
this._fire();
}
return this;
},_fire:function(){
var _299=this.chain;
var _29a=this.fired;
var res=this.results[_29a];
var self=this;
var cb=null;
while(_299.length>0&&this.paused===0){
var pair=_299.shift();
var f=pair[_29a];
if(f===null){
continue;
}
try{
res=f(res);
_29a=((res instanceof Error)?1:0);
if(res instanceof MochiKit.Async.Deferred){
cb=function(res){
self._resback(res);
self.paused--;
if((self.paused===0)&&(self.fired>=0)){
self._fire();
}
};
this.paused++;
}
}
catch(err){
_29a=1;
if(!(err instanceof Error)){
err=new MochiKit.Async.GenericError(err);
}
res=err;
}
}
this.fired=_29a;
this.results[_29a]=res;
if(cb&&this.paused){
res.addBoth(cb);
res.chained=true;
}
}};
MochiKit.Base.update(MochiKit.Async,{evalJSONRequest:function(req){
return MochiKit.Base.evalJSON(req.responseText);
},succeed:function(_2a2){
var d=new MochiKit.Async.Deferred();
d.callback.apply(d,arguments);
return d;
},fail:function(_2a4){
var d=new MochiKit.Async.Deferred();
d.errback.apply(d,arguments);
return d;
},getXMLHttpRequest:function(){
var self=arguments.callee;
if(!self.XMLHttpRequest){
var _2a7=[function(){
return new XMLHttpRequest();
},function(){
return new ActiveXObject("Msxml2.XMLHTTP");
},function(){
return new ActiveXObject("Microsoft.XMLHTTP");
},function(){
return new ActiveXObject("Msxml2.XMLHTTP.4.0");
},function(){
throw new MochiKit.Async.BrowserComplianceError("Browser does not support XMLHttpRequest");
}];
for(var i=0;i<_2a7.length;i++){
var func=_2a7[i];
try{
self.XMLHttpRequest=func;
return func();
}
catch(e){
}
}
}
return self.XMLHttpRequest();
},_xhr_onreadystatechange:function(d){
var m=MochiKit.Base;
if(this.readyState==4){
try{
this.onreadystatechange=null;
}
catch(e){
try{
this.onreadystatechange=m.noop;
}
catch(e){
}
}
var _2ac=null;
try{
_2ac=this.status;
if(!_2ac&&m.isNotEmpty(this.responseText)){
_2ac=304;
}
}
catch(e){
}
if(_2ac==200||_2ac==201||_2ac==204||_2ac==304||_2ac==1223){
d.callback(this);
}else{
var err=new MochiKit.Async.XMLHttpRequestError(this,"Request failed");
if(err.number){
d.errback(err);
}else{
d.errback(err);
}
}
}
},_xhr_canceller:function(req){
try{
req.onreadystatechange=null;
}
catch(e){
try{
req.onreadystatechange=MochiKit.Base.noop;
}
catch(e){
}
}
req.abort();
},sendXMLHttpRequest:function(req,_2b0){
if(typeof (_2b0)=="undefined"||_2b0===null){
_2b0="";
}
var m=MochiKit.Base;
var self=MochiKit.Async;
var d=new self.Deferred(m.partial(self._xhr_canceller,req));
try{
req.onreadystatechange=m.bind(self._xhr_onreadystatechange,req,d);
req.send(_2b0);
}
catch(e){
try{
req.onreadystatechange=null;
}
catch(ignore){
}
d.errback(e);
}
return d;
},doXHR:function(url,opts){
var self=MochiKit.Async;
return self.callLater(0,self._doXHR,url,opts);
},_doXHR:function(url,opts){
var m=MochiKit.Base;
opts=m.update({method:"GET",sendContent:""},opts);
var self=MochiKit.Async;
var req=self.getXMLHttpRequest();
if(opts.queryString){
var qs=m.queryString(opts.queryString);
if(qs){
url+="?"+qs;
}
}
if("username" in opts){
req.open(opts.method,url,true,opts.username,opts.password);
}else{
req.open(opts.method,url,true);
}
if(req.overrideMimeType&&opts.mimeType){
req.overrideMimeType(opts.mimeType);
}
req.setRequestHeader("X-Requested-With","XMLHttpRequest");
if(opts.headers){
var _2bd=opts.headers;
if(!m.isArrayLike(_2bd)){
_2bd=m.items(_2bd);
}
for(var i=0;i<_2bd.length;i++){
var _2bf=_2bd[i];
var name=_2bf[0];
var _2c1=_2bf[1];
req.setRequestHeader(name,_2c1);
}
}
return self.sendXMLHttpRequest(req,opts.sendContent);
},_buildURL:function(url){
if(arguments.length>1){
var m=MochiKit.Base;
var qs=m.queryString.apply(null,m.extend(null,arguments,1));
if(qs){
return url+"?"+qs;
}
}
return url;
},doSimpleXMLHttpRequest:function(url){
var self=MochiKit.Async;
url=self._buildURL.apply(self,arguments);
return self.doXHR(url);
},loadJSONDoc:function(url){
var self=MochiKit.Async;
url=self._buildURL.apply(self,arguments);
var d=self.doXHR(url,{"mimeType":"text/plain","headers":[["Accept","application/json"]]});
d=d.addCallback(self.evalJSONRequest);
return d;
},wait:function(_2ca,_2cb){
var d=new MochiKit.Async.Deferred();
var m=MochiKit.Base;
if(typeof (_2cb)!="undefined"){
d.addCallback(function(){
return _2cb;
});
}
var _2ce=setTimeout(m.bind("callback",d),Math.floor(_2ca*1000));
d.canceller=function(){
try{
clearTimeout(_2ce);
}
catch(e){
}
};
return d;
},callLater:function(_2cf,func){
var m=MochiKit.Base;
var _2d2=m.partial.apply(m,m.extend(null,arguments,1));
return MochiKit.Async.wait(_2cf).addCallback(function(res){
return _2d2();
});
}});
MochiKit.Async.DeferredLock=function(){
this.waiting=[];
this.locked=false;
this.id=this._nextId();
};
MochiKit.Async.DeferredLock.prototype={__class__:MochiKit.Async.DeferredLock,acquire:function(){
var d=new MochiKit.Async.Deferred();
if(this.locked){
this.waiting.push(d);
}else{
this.locked=true;
d.callback(this);
}
return d;
},release:function(){
if(!this.locked){
throw TypeError("Tried to release an unlocked DeferredLock");
}
this.locked=false;
if(this.waiting.length>0){
this.locked=true;
this.waiting.shift().callback(this);
}
},_nextId:MochiKit.Base.counter(),repr:function(){
var _2d5;
if(this.locked){
_2d5="locked, "+this.waiting.length+" waiting";
}else{
_2d5="unlocked";
}
return "DeferredLock("+this.id+", "+_2d5+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Async.DeferredList=function(list,_2d7,_2d8,_2d9,_2da){
MochiKit.Async.Deferred.apply(this,[_2da]);
this.list=list;
var _2db=[];
this.resultList=_2db;
this.finishedCount=0;
this.fireOnOneCallback=_2d7;
this.fireOnOneErrback=_2d8;
this.consumeErrors=_2d9;
var cb=MochiKit.Base.bind(this._cbDeferred,this);
for(var i=0;i<list.length;i++){
var d=list[i];
_2db.push(undefined);
d.addCallback(cb,i,true);
d.addErrback(cb,i,false);
}
if(list.length===0&&!_2d7){
this.callback(this.resultList);
}
};
MochiKit.Async.DeferredList.prototype=new MochiKit.Async.Deferred();
MochiKit.Async.DeferredList.prototype._cbDeferred=function(_2df,_2e0,_2e1){
this.resultList[_2df]=[_2e0,_2e1];
this.finishedCount+=1;
if(this.fired==-1){
if(_2e0&&this.fireOnOneCallback){
this.callback([_2df,_2e1]);
}else{
if(!_2e0&&this.fireOnOneErrback){
this.errback(_2e1);
}else{
if(this.finishedCount==this.list.length){
this.callback(this.resultList);
}
}
}
}
if(!_2e0&&this.consumeErrors){
_2e1=null;
}
return _2e1;
};
MochiKit.Async.gatherResults=function(_2e2){
var d=new MochiKit.Async.DeferredList(_2e2,false,true,false);
d.addCallback(function(_2e4){
var ret=[];
for(var i=0;i<_2e4.length;i++){
ret.push(_2e4[i][1]);
}
return ret;
});
return d;
};
MochiKit.Async.maybeDeferred=function(func){
var self=MochiKit.Async;
var _2e9;
try{
var r=func.apply(null,MochiKit.Base.extend([],arguments,1));
if(r instanceof self.Deferred){
_2e9=r;
}else{
if(r instanceof Error){
_2e9=self.fail(r);
}else{
_2e9=self.succeed(r);
}
}
}
catch(e){
_2e9=self.fail(e);
}
return _2e9;
};
MochiKit.Async.EXPORT=["AlreadyCalledError","CancelledError","BrowserComplianceError","GenericError","XMLHttpRequestError","Deferred","succeed","fail","getXMLHttpRequest","doSimpleXMLHttpRequest","loadJSONDoc","wait","callLater","sendXMLHttpRequest","DeferredLock","DeferredList","gatherResults","maybeDeferred","doXHR"];
MochiKit.Async.EXPORT_OK=["evalJSONRequest"];
MochiKit.Async.__new__=function(){
var m=MochiKit.Base;
var ne=m.partial(m._newNamedError,this);
ne("AlreadyCalledError",function(_2ed){
this.deferred=_2ed;
});
ne("CancelledError",function(_2ee){
this.deferred=_2ee;
});
ne("BrowserComplianceError",function(msg){
this.message=msg;
});
ne("GenericError",function(msg){
this.message=msg;
});
ne("XMLHttpRequestError",function(req,msg){
this.req=req;
this.message=msg;
try{
this.number=req.status;
}
catch(e){
}
});
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Async.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Async);
MochiKit.Base._deps("DOM",["Base"]);
MochiKit.DOM.NAME="MochiKit.DOM";
MochiKit.DOM.VERSION="1.4";
MochiKit.DOM.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.DOM.toString=function(){
return this.__repr__();
};
MochiKit.DOM.EXPORT=["removeEmptyTextNodes","formContents","currentWindow","currentDocument","withWindow","withDocument","registerDOMConverter","coerceToDOM","createDOM","createDOMFunc","isChildNode","getNodeAttribute","removeNodeAttribute","setNodeAttribute","updateNodeAttributes","appendChildNodes","insertSiblingNodesAfter","insertSiblingNodesBefore","replaceChildNodes","removeElement","swapDOM","BUTTON","TT","PRE","H1","H2","H3","H4","H5","H6","BR","CANVAS","HR","LABEL","TEXTAREA","FORM","STRONG","SELECT","OPTION","OPTGROUP","LEGEND","FIELDSET","P","UL","OL","LI","DL","DT","DD","TD","TR","THEAD","TBODY","TFOOT","TABLE","TH","INPUT","SPAN","A","DIV","IMG","getElement","$","getElementsByTagAndClassName","addToCallStack","addLoadEvent","focusOnLoad","setElementClass","toggleElementClass","addElementClass","removeElementClass","swapElementClass","hasElementClass","escapeHTML","toHTML","emitHTML","scrapeText","isParent","getFirstParentByTagAndClassName","makeClipping","undoClipping","makePositioned","undoPositioned","getFirstElementByTagAndClassName"];
MochiKit.DOM.EXPORT_OK=["domConverters"];
MochiKit.DOM.DEPRECATED=[["computedStyle","MochiKit.Style.getStyle","1.4"],["elementDimensions","MochiKit.Style.getElementDimensions","1.4"],["elementPosition","MochiKit.Style.getElementPosition","1.4"],["hideElement","MochiKit.Style.hideElement","1.4"],["setElementDimensions","MochiKit.Style.setElementDimensions","1.4"],["setElementPosition","MochiKit.Style.setElementPosition","1.4"],["setDisplayForElement","MochiKit.Style.setDisplayForElement","1.4"],["setOpacity","MochiKit.Style.setOpacity","1.4"],["showElement","MochiKit.Style.showElement","1.4"],["Coordinates","MochiKit.Style.Coordinates","1.4"],["Dimensions","MochiKit.Style.Dimensions","1.4"]];
MochiKit.DOM.getViewportDimensions=new Function(""+"if (!MochiKit[\"Style\"]) {"+"    throw new Error(\"This function has been deprecated and depends on MochiKit.Style.\");"+"}"+"return MochiKit.Style.getViewportDimensions.apply(this, arguments);");
MochiKit.Base.update(MochiKit.DOM,{currentWindow:function(){
return MochiKit.DOM._window;
},currentDocument:function(){
return MochiKit.DOM._document;
},withWindow:function(win,func){
var self=MochiKit.DOM;
var _2f6=self._document;
var _2f7=self._window;
var rval;
try{
self._window=win;
self._document=win.document;
rval=func();
}
catch(e){
self._window=_2f7;
self._document=_2f6;
throw e;
}
self._window=_2f7;
self._document=_2f6;
return rval;
},formContents:function(elem){
var _2fa=[];
var _2fb=[];
var m=MochiKit.Base;
var self=MochiKit.DOM;
if(typeof (elem)=="undefined"||elem===null){
elem=self._document.body;
}else{
elem=self.getElement(elem);
}
m.nodeWalk(elem,function(elem){
var name=elem.name;
if(m.isNotEmpty(name)){
var _300=elem.tagName.toUpperCase();
if(_300==="INPUT"&&(elem.type=="radio"||elem.type=="checkbox")&&!elem.checked){
return null;
}
if(_300==="SELECT"){
if(elem.type=="select-one"){
if(elem.selectedIndex>=0){
var opt=elem.options[elem.selectedIndex];
var v=opt.value;
if(!v){
var h=opt.outerHTML;
if(h&&!h.match(/^[^>]+\svalue\s*=/i)){
v=opt.text;
}
}
_2fa.push(name);
_2fb.push(v);
return null;
}
_2fa.push(name);
_2fb.push("");
return null;
}else{
var opts=elem.options;
if(!opts.length){
_2fa.push(name);
_2fb.push("");
return null;
}
for(var i=0;i<opts.length;i++){
var opt=opts[i];
if(!opt.selected){
continue;
}
var v=opt.value;
if(!v){
var h=opt.outerHTML;
if(h&&!h.match(/^[^>]+\svalue\s*=/i)){
v=opt.text;
}
}
_2fa.push(name);
_2fb.push(v);
}
return null;
}
}
if(_300==="FORM"||_300==="P"||_300==="SPAN"||_300==="DIV"){
return elem.childNodes;
}
_2fa.push(name);
_2fb.push(elem.value||"");
return null;
}
return elem.childNodes;
});
return [_2fa,_2fb];
},withDocument:function(doc,func){
var self=MochiKit.DOM;
var _309=self._document;
var rval;
try{
self._document=doc;
rval=func();
}
catch(e){
self._document=_309;
throw e;
}
self._document=_309;
return rval;
},registerDOMConverter:function(name,_30c,wrap,_30e){
MochiKit.DOM.domConverters.register(name,_30c,wrap,_30e);
},coerceToDOM:function(node,ctx){
var m=MochiKit.Base;
var im=MochiKit.Iter;
var self=MochiKit.DOM;
if(im){
var iter=im.iter;
var _315=im.repeat;
var map=m.map;
}
var _317=self.domConverters;
var _318=arguments.callee;
var _319=m.NotFound;
while(true){
if(typeof (node)=="undefined"||node===null){
return null;
}
if(typeof (node)=="function"&&typeof (node.length)=="number"&&!(node instanceof Function)){
node=im.list(node);
}
if(typeof (node.nodeType)!="undefined"&&node.nodeType>0){
return node;
}
if(typeof (node)=="number"||typeof (node)=="boolean"){
node=node.toString();
}
if(typeof (node)=="string"){
return self._document.createTextNode(node);
}
if(typeof (node.__dom__)=="function"){
node=node.__dom__(ctx);
continue;
}
if(typeof (node.dom)=="function"){
node=node.dom(ctx);
continue;
}
if(typeof (node)=="function"){
node=node.apply(ctx,[ctx]);
continue;
}
if(im){
var _31a=null;
try{
_31a=iter(node);
}
catch(e){
}
if(_31a){
return map(_318,_31a,_315(ctx));
}
}
try{
node=_317.match(node,ctx);
continue;
}
catch(e){
if(e!=_319){
throw e;
}
}
return self._document.createTextNode(node.toString());
}
return undefined;
},isChildNode:function(node,_31c){
var self=MochiKit.DOM;
if(typeof (node)=="string"){
node=self.getElement(node);
}
if(typeof (_31c)=="string"){
_31c=self.getElement(_31c);
}
if(typeof (node)=="undefined"||node===null){
return false;
}
while(node!=null&&node!==self._document){
if(node===_31c){
return true;
}
node=node.parentNode;
}
return false;
},setNodeAttribute:function(node,attr,_320){
var o={};
o[attr]=_320;
try{
return MochiKit.DOM.updateNodeAttributes(node,o);
}
catch(e){
}
return null;
},getNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _325=self.attributeArray.renames[attr];
var _326=self.attributeArray.ignoreAttr[attr];
node=self.getElement(node);
try{
if(_325){
return node[_325];
}
var _327=node.getAttribute(attr);
if(_327!=_326){
return _327;
}
}
catch(e){
}
return null;
},removeNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _32b=self.attributeArray.renames[attr];
node=self.getElement(node);
try{
if(_32b){
return node[_32b];
}
return node.removeAttribute(attr);
}
catch(e){
}
return null;
},updateNodeAttributes:function(node,_32d){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
if(_32d){
var _330=MochiKit.Base.updatetree;
if(self.attributeArray.compliant){
for(var k in _32d){
var v=_32d[k];
if(typeof (v)=="object"&&typeof (elem[k])=="object"){
if(k=="style"&&MochiKit.Style){
MochiKit.Style.setStyle(elem,v);
}else{
_330(elem[k],v);
}
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
if(typeof (elem[k])=="string"&&elem[k]!=v){
elem[k]=v;
}
}
}else{
var _333=self.attributeArray.renames;
for(var k in _32d){
v=_32d[k];
var _334=_333[k];
if(k=="style"&&typeof (v)=="string"){
elem.style.cssText=v;
}else{
if(typeof (_334)=="string"){
elem[_334]=v;
}else{
if(typeof (elem[k])=="object"&&typeof (v)=="object"){
if(k=="style"&&MochiKit.Style){
MochiKit.Style.setStyle(elem,v);
}else{
_330(elem[k],v);
}
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}
if(typeof (elem[k])=="string"&&elem[k]!=v){
elem[k]=v;
}
}
}
}
return elem;
},appendChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _338=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _339=MochiKit.Base.concat;
while(_338.length){
var n=_338.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
elem.appendChild(n);
}else{
_338=_339(n,_338);
}
}
}
return elem;
},insertSiblingNodesBefore:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _33e=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _33f=elem.parentNode;
var _340=MochiKit.Base.concat;
while(_33e.length){
var n=_33e.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
_33f.insertBefore(n,elem);
}else{
_33e=_340(n,_33e);
}
}
}
return _33f;
},insertSiblingNodesAfter:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _345=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
if(elem.nextSibling){
return self.insertSiblingNodesBefore(elem.nextSibling,_345);
}else{
return self.appendChildNodes(elem.parentNode,_345);
}
},replaceChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
arguments[0]=elem;
}
var _349;
while((_349=elem.firstChild)){
elem.removeChild(_349);
}
if(arguments.length<2){
return elem;
}else{
return self.appendChildNodes.apply(this,arguments);
}
},createDOM:function(name,_34b){
var elem;
var self=MochiKit.DOM;
var m=MochiKit.Base;
if(typeof (_34b)=="string"||typeof (_34b)=="number"){
var args=m.extend([name,null],arguments,1);
return arguments.callee.apply(this,args);
}
if(typeof (name)=="string"){
var _350=self._xhtml;
if(_34b&&!self.attributeArray.compliant){
var _351="";
if("name" in _34b){
_351+=" name=\""+self.escapeHTML(_34b.name)+"\"";
}
if(name=="input"&&"type" in _34b){
_351+=" type=\""+self.escapeHTML(_34b.type)+"\"";
}
if(_351){
name="<"+name+_351+">";
_350=false;
}
}
var d=self._document;
if(_350&&d===document){
elem=d.createElementNS("http://www.w3.org/1999/xhtml",name);
}else{
elem=d.createElement(name);
}
}else{
elem=name;
}
if(_34b){
self.updateNodeAttributes(elem,_34b);
}
if(arguments.length<=2){
return elem;
}else{
var args=m.extend([elem],arguments,2);
return self.appendChildNodes.apply(this,args);
}
},createDOMFunc:function(){
var m=MochiKit.Base;
return m.partial.apply(this,m.extend([MochiKit.DOM.createDOM],arguments));
},removeElement:function(elem){
var self=MochiKit.DOM;
var e=self.coerceToDOM(self.getElement(elem));
e.parentNode.removeChild(e);
return e;
},swapDOM:function(dest,src){
var self=MochiKit.DOM;
dest=self.getElement(dest);
var _35a=dest.parentNode;
if(src){
src=self.coerceToDOM(self.getElement(src),_35a);
_35a.replaceChild(src,dest);
}else{
_35a.removeChild(dest);
}
return src;
},getElement:function(id){
var self=MochiKit.DOM;
if(arguments.length==1){
return ((typeof (id)=="string")?self._document.getElementById(id):id);
}else{
return MochiKit.Base.map(self.getElement,arguments);
}
},getElementsByTagAndClassName:function(_35d,_35e,_35f){
var self=MochiKit.DOM;
if(typeof (_35d)=="undefined"||_35d===null){
_35d="*";
}
if(typeof (_35f)=="undefined"||_35f===null){
_35f=self._document;
}
_35f=self.getElement(_35f);
if(_35f==null){
return [];
}
var _361=(_35f.getElementsByTagName(_35d)||self._document.all);
if(typeof (_35e)=="undefined"||_35e===null){
return MochiKit.Base.extend(null,_361);
}
var _362=[];
for(var i=0;i<_361.length;i++){
var _364=_361[i];
var cls=_364.className;
if(typeof (cls)!="string"){
cls=_364.getAttribute("class");
}
if(typeof (cls)=="string"){
var _366=cls.split(" ");
for(var j=0;j<_366.length;j++){
if(_366[j]==_35e){
_362.push(_364);
break;
}
}
}
}
return _362;
},_newCallStack:function(path,once){
var rval=function(){
var _36b=arguments.callee.callStack;
for(var i=0;i<_36b.length;i++){
if(_36b[i].apply(this,arguments)===false){
break;
}
}
if(once){
try{
this[path]=null;
}
catch(e){
}
}
};
rval.callStack=[];
return rval;
},addToCallStack:function(_36d,path,func,once){
var self=MochiKit.DOM;
var _372=_36d[path];
var _373=_372;
if(!(typeof (_372)=="function"&&typeof (_372.callStack)=="object"&&_372.callStack!==null)){
_373=self._newCallStack(path,once);
if(typeof (_372)=="function"){
_373.callStack.push(_372);
}
_36d[path]=_373;
}
_373.callStack.push(func);
},addLoadEvent:function(func){
var self=MochiKit.DOM;
self.addToCallStack(self._window,"onload",func,true);
},focusOnLoad:function(_376){
var self=MochiKit.DOM;
self.addLoadEvent(function(){
_376=self.getElement(_376);
if(_376){
_376.focus();
}
});
},setElementClass:function(_378,_379){
var self=MochiKit.DOM;
var obj=self.getElement(_378);
if(self.attributeArray.compliant){
obj.setAttribute("class",_379);
}else{
obj.setAttribute("className",_379);
}
},toggleElementClass:function(_37c){
var self=MochiKit.DOM;
for(var i=1;i<arguments.length;i++){
var obj=self.getElement(arguments[i]);
if(!self.addElementClass(obj,_37c)){
self.removeElementClass(obj,_37c);
}
}
},addElementClass:function(_380,_381){
var self=MochiKit.DOM;
var obj=self.getElement(_380);
var cls=obj.className;
if(typeof (cls)!="string"){
cls=obj.getAttribute("class");
}
if(typeof (cls)!="string"||cls.length===0){
self.setElementClass(obj,_381);
return true;
}
if(cls==_381){
return false;
}
var _385=cls.split(" ");
for(var i=0;i<_385.length;i++){
if(_385[i]==_381){
return false;
}
}
self.setElementClass(obj,cls+" "+_381);
return true;
},removeElementClass:function(_387,_388){
var self=MochiKit.DOM;
var obj=self.getElement(_387);
var cls=obj.className;
if(typeof (cls)!="string"){
cls=obj.getAttribute("class");
}
if(typeof (cls)!="string"||cls.length===0){
return false;
}
if(cls==_388){
self.setElementClass(obj,"");
return true;
}
var _38c=cls.split(" ");
for(var i=0;i<_38c.length;i++){
if(_38c[i]==_388){
_38c.splice(i,1);
self.setElementClass(obj,_38c.join(" "));
return true;
}
}
return false;
},swapElementClass:function(_38e,_38f,_390){
var obj=MochiKit.DOM.getElement(_38e);
var res=MochiKit.DOM.removeElementClass(obj,_38f);
if(res){
MochiKit.DOM.addElementClass(obj,_390);
}
return res;
},hasElementClass:function(_393,_394){
var obj=MochiKit.DOM.getElement(_393);
if(obj==null){
return false;
}
var cls=obj.className;
if(typeof (cls)!="string"){
cls=obj.getAttribute("class");
}
if(typeof (cls)!="string"){
return false;
}
var _397=cls.split(" ");
for(var i=1;i<arguments.length;i++){
var good=false;
for(var j=0;j<_397.length;j++){
if(_397[j]==arguments[i]){
good=true;
break;
}
}
if(!good){
return false;
}
}
return true;
},escapeHTML:function(s){
return s.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/</g,"&lt;").replace(/>/g,"&gt;");
},toHTML:function(dom){
return MochiKit.DOM.emitHTML(dom).join("");
},emitHTML:function(dom,lst){
if(typeof (lst)=="undefined"||lst===null){
lst=[];
}
var _39f=[dom];
var self=MochiKit.DOM;
var _3a1=self.escapeHTML;
var _3a2=self.attributeArray;
while(_39f.length){
dom=_39f.pop();
if(typeof (dom)=="string"){
lst.push(dom);
}else{
if(dom.nodeType==1){
lst.push("<"+dom.tagName.toLowerCase());
var _3a3=[];
var _3a4=_3a2(dom);
for(var i=0;i<_3a4.length;i++){
var a=_3a4[i];
_3a3.push([" ",a.name,"=\"",_3a1(a.value),"\""]);
}
_3a3.sort();
for(i=0;i<_3a3.length;i++){
var _3a7=_3a3[i];
for(var j=0;j<_3a7.length;j++){
lst.push(_3a7[j]);
}
}
if(dom.hasChildNodes()){
lst.push(">");
_39f.push("</"+dom.tagName.toLowerCase()+">");
var _3a9=dom.childNodes;
for(i=_3a9.length-1;i>=0;i--){
_39f.push(_3a9[i]);
}
}else{
lst.push("/>");
}
}else{
if(dom.nodeType==3){
lst.push(_3a1(dom.nodeValue));
}
}
}
}
return lst;
},scrapeText:function(node,_3ab){
var rval=[];
(function(node){
var cn=node.childNodes;
if(cn){
for(var i=0;i<cn.length;i++){
arguments.callee.call(this,cn[i]);
}
}
var _3b0=node.nodeValue;
if(typeof (_3b0)=="string"){
rval.push(_3b0);
}
})(MochiKit.DOM.getElement(node));
if(_3ab){
return rval;
}else{
return rval.join("");
}
},removeEmptyTextNodes:function(_3b1){
_3b1=MochiKit.DOM.getElement(_3b1);
for(var i=0;i<_3b1.childNodes.length;i++){
var node=_3b1.childNodes[i];
if(node.nodeType==3&&!/\S/.test(node.nodeValue)){
node.parentNode.removeChild(node);
}
}
},makeClipping:function(_3b4){
_3b4=MochiKit.DOM.getElement(_3b4);
var _3b5=_3b4.style.overflow;
if((MochiKit.Style.getStyle(_3b4,"overflow")||"visible")!="hidden"){
_3b4.style.overflow="hidden";
}
return _3b5;
},undoClipping:function(_3b6,_3b7){
_3b6=MochiKit.DOM.getElement(_3b6);
if(!_3b7){
return;
}
_3b6.style.overflow=_3b7;
},makePositioned:function(_3b8){
_3b8=MochiKit.DOM.getElement(_3b8);
var pos=MochiKit.Style.getStyle(_3b8,"position");
if(pos=="static"||!pos){
_3b8.style.position="relative";
if(/Opera/.test(navigator.userAgent)){
_3b8.style.top=0;
_3b8.style.left=0;
}
}
},undoPositioned:function(_3ba){
_3ba=MochiKit.DOM.getElement(_3ba);
if(_3ba.style.position=="relative"){
_3ba.style.position=_3ba.style.top=_3ba.style.left=_3ba.style.bottom=_3ba.style.right="";
}
},getFirstElementByTagAndClassName:function(_3bb,_3bc,_3bd){
var self=MochiKit.DOM;
if(typeof (_3bb)=="undefined"||_3bb===null){
_3bb="*";
}
if(typeof (_3bd)=="undefined"||_3bd===null){
_3bd=self._document;
}
_3bd=self.getElement(_3bd);
if(_3bd==null){
return null;
}
var _3bf=(_3bd.getElementsByTagName(_3bb)||self._document.all);
if(_3bf.length<=0){
return null;
}else{
if(typeof (_3bc)=="undefined"||_3bc===null){
return _3bf[0];
}
}
for(var i=0;i<_3bf.length;i++){
var _3c1=_3bf[i];
var cls=_3c1.className;
if(typeof (cls)!="string"){
cls=_3c1.getAttribute("class");
}
if(typeof (cls)=="string"){
var _3c3=cls.split(" ");
for(var j=0;j<_3c3.length;j++){
if(_3c3[j]==_3bc){
return _3c1;
}
}
}
}
return null;
},getFirstParentByTagAndClassName:function(elem,_3c6,_3c7){
var self=MochiKit.DOM;
elem=self.getElement(elem);
if(typeof (_3c6)=="undefined"||_3c6===null){
_3c6="*";
}else{
_3c6=_3c6.toUpperCase();
}
if(typeof (_3c7)=="undefined"||_3c7===null){
_3c7=null;
}
if(elem){
elem=elem.parentNode;
}
while(elem&&elem.tagName){
var _3c9=elem.tagName.toUpperCase();
if((_3c6==="*"||_3c6==_3c9)&&(_3c7===null||self.hasElementClass(elem,_3c7))){
return elem;
}
elem=elem.parentNode;
}
return null;
},isParent:function(_3ca,_3cb){
var self=MochiKit.DOM;
if(typeof (_3ca)=="string"){
_3ca=self.getElement(_3ca);
}
if(typeof (_3cb)=="string"){
_3cb=self.getElement(_3cb);
}
if(_3ca==null||_3cb==null){
return false;
}else{
if(!_3ca.parentNode||_3ca==_3cb){
return false;
}else{
if(_3ca.parentNode==_3cb){
return true;
}else{
return self.isParent(_3ca.parentNode,_3cb);
}
}
}
},__new__:function(win){
var m=MochiKit.Base;
if(typeof (document)!="undefined"){
this._document=document;
var _3cf="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
this._xhtml=(document.documentElement&&document.createElementNS&&document.documentElement.namespaceURI===_3cf);
}else{
if(MochiKit.MockDOM){
this._document=MochiKit.MockDOM.document;
}
}
this._window=win;
this.domConverters=new m.AdapterRegistry();
var _3d0=this._document.createElement("span");
var _3d1;
if(_3d0&&_3d0.attributes&&_3d0.attributes.length>0){
var _3d2=m.filter;
_3d1=function(node){
return _3d2(_3d1.ignoreAttrFilter,node.attributes);
};
_3d1.ignoreAttr={};
var _3d4=_3d0.attributes;
var _3d5=_3d1.ignoreAttr;
for(var i=0;i<_3d4.length;i++){
var a=_3d4[i];
_3d5[a.name]=a.value;
}
_3d1.ignoreAttrFilter=function(a){
return (_3d1.ignoreAttr[a.name]!=a.value);
};
_3d1.compliant=false;
_3d1.renames={"class":"className","checked":"defaultChecked","usemap":"useMap","for":"htmlFor","readonly":"readOnly","colspan":"colSpan","bgcolor":"bgColor","cellspacing":"cellSpacing","cellpadding":"cellPadding"};
}else{
_3d1=function(node){
return node.attributes;
};
_3d1.compliant=true;
_3d1.ignoreAttr={};
_3d1.renames={};
}
this.attributeArray=_3d1;
var _3da=function(_3db,arr){
var _3dd=arr[0];
var _3de=arr[1];
var _3df=_3de.split(".")[1];
var str="";
str+="if (!MochiKit."+_3df+") { throw new Error(\"";
str+="This function has been deprecated and depends on MochiKit.";
str+=_3df+".\");}";
str+="return "+_3de+".apply(this, arguments);";
MochiKit[_3db][_3dd]=new Function(str);
};
for(var i=0;i<MochiKit.DOM.DEPRECATED.length;i++){
_3da("DOM",MochiKit.DOM.DEPRECATED[i]);
}
var _3e1=this.createDOMFunc;
this.UL=_3e1("ul");
this.OL=_3e1("ol");
this.LI=_3e1("li");
this.DL=_3e1("dl");
this.DT=_3e1("dt");
this.DD=_3e1("dd");
this.TD=_3e1("td");
this.TR=_3e1("tr");
this.TBODY=_3e1("tbody");
this.THEAD=_3e1("thead");
this.TFOOT=_3e1("tfoot");
this.TABLE=_3e1("table");
this.TH=_3e1("th");
this.INPUT=_3e1("input");
this.SPAN=_3e1("span");
this.A=_3e1("a");
this.DIV=_3e1("div");
this.IMG=_3e1("img");
this.BUTTON=_3e1("button");
this.TT=_3e1("tt");
this.PRE=_3e1("pre");
this.H1=_3e1("h1");
this.H2=_3e1("h2");
this.H3=_3e1("h3");
this.H4=_3e1("h4");
this.H5=_3e1("h5");
this.H6=_3e1("h6");
this.BR=_3e1("br");
this.HR=_3e1("hr");
this.LABEL=_3e1("label");
this.TEXTAREA=_3e1("textarea");
this.FORM=_3e1("form");
this.P=_3e1("p");
this.SELECT=_3e1("select");
this.OPTION=_3e1("option");
this.OPTGROUP=_3e1("optgroup");
this.LEGEND=_3e1("legend");
this.FIELDSET=_3e1("fieldset");
this.STRONG=_3e1("strong");
this.CANVAS=_3e1("canvas");
this.$=this.getElement;
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
}});
MochiKit.DOM.__new__(((typeof (window)=="undefined")?this:window));
if(MochiKit.__export__){
withWindow=MochiKit.DOM.withWindow;
withDocument=MochiKit.DOM.withDocument;
}
MochiKit.Base._exportSymbols(this,MochiKit.DOM);
MochiKit.Base._deps("Selector",["Base","DOM","Iter"]);
MochiKit.Selector.NAME="MochiKit.Selector";
MochiKit.Selector.VERSION="1.4";
MochiKit.Selector.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Selector.toString=function(){
return this.__repr__();
};
MochiKit.Selector.EXPORT=["Selector","findChildElements","findDocElements","$$"];
MochiKit.Selector.EXPORT_OK=[];
MochiKit.Selector.Selector=function(_3e2){
this.params={classNames:[],pseudoClassNames:[]};
this.expression=_3e2.toString().replace(/(^\s+|\s+$)/g,"");
this.parseExpression();
this.compileMatcher();
};
MochiKit.Selector.Selector.prototype={__class__:MochiKit.Selector.Selector,parseExpression:function(){
function abort(_3e3){
throw "Parse error in selector: "+_3e3;
}
if(this.expression==""){
abort("empty expression");
}
var repr=MochiKit.Base.repr;
var _3e5=this.params;
var expr=this.expression;
var _3e7,_3e8,_3e9,rest;
while(_3e7=expr.match(/^(.*)\[([a-z0-9_:-]+?)(?:([~\|!^$*]?=)(?:"([^"]*)"|([^\]\s]*)))?\]$/i)){
_3e5.attributes=_3e5.attributes||[];
_3e5.attributes.push({name:_3e7[2],operator:_3e7[3],value:_3e7[4]||_3e7[5]||""});
expr=_3e7[1];
}
if(expr=="*"){
return this.params.wildcard=true;
}
while(_3e7=expr.match(/^([^a-z0-9_-])?([a-z0-9_-]+(?:\([^)]*\))?)(.*)/i)){
_3e8=_3e7[1];
_3e9=_3e7[2];
rest=_3e7[3];
switch(_3e8){
case "#":
_3e5.id=_3e9;
break;
case ".":
_3e5.classNames.push(_3e9);
break;
case ":":
_3e5.pseudoClassNames.push(_3e9);
break;
case "":
case undefined:
_3e5.tagName=_3e9.toUpperCase();
break;
default:
abort(repr(expr));
}
expr=rest;
}
if(expr.length>0){
abort(repr(expr));
}
},buildMatchExpression:function(){
var repr=MochiKit.Base.repr;
var _3ec=this.params;
var _3ed=[];
var _3ee,i;
function childElements(_3f0){
return "MochiKit.Base.filter(function (node) { return node.nodeType == 1; }, "+_3f0+".childNodes)";
}
if(_3ec.wildcard){
_3ed.push("true");
}
if(_3ee=_3ec.id){
_3ed.push("element.id == "+repr(_3ee));
}
if(_3ee=_3ec.tagName){
_3ed.push("element.tagName.toUpperCase() == "+repr(_3ee));
}
if((_3ee=_3ec.classNames).length>0){
for(i=0;i<_3ee.length;i++){
_3ed.push("MochiKit.DOM.hasElementClass(element, "+repr(_3ee[i])+")");
}
}
if((_3ee=_3ec.pseudoClassNames).length>0){
for(i=0;i<_3ee.length;i++){
var _3f1=_3ee[i].match(/^([^(]+)(?:\((.*)\))?$/);
var _3f2=_3f1[1];
var _3f3=_3f1[2];
switch(_3f2){
case "root":
_3ed.push("element.nodeType == 9 || element === element.ownerDocument.documentElement");
break;
case "nth-child":
case "nth-last-child":
case "nth-of-type":
case "nth-last-of-type":
_3f1=_3f3.match(/^((?:(\d+)n\+)?(\d+)|odd|even)$/);
if(!_3f1){
throw "Invalid argument to pseudo element nth-child: "+_3f3;
}
var a,b;
if(_3f1[0]=="odd"){
a=2;
b=1;
}else{
if(_3f1[0]=="even"){
a=2;
b=0;
}else{
a=_3f1[2]&&parseInt(_3f1)||null;
b=parseInt(_3f1[3]);
}
}
_3ed.push("this.nthChild(element,"+a+","+b+","+!!_3f2.match("^nth-last")+","+!!_3f2.match("of-type$")+")");
break;
case "first-child":
_3ed.push("this.nthChild(element, null, 1)");
break;
case "last-child":
_3ed.push("this.nthChild(element, null, 1, true)");
break;
case "first-of-type":
_3ed.push("this.nthChild(element, null, 1, false, true)");
break;
case "last-of-type":
_3ed.push("this.nthChild(element, null, 1, true, true)");
break;
case "only-child":
_3ed.push(childElements("element.parentNode")+".length == 1");
break;
case "only-of-type":
_3ed.push("MochiKit.Base.filter(function (node) { return node.tagName == element.tagName; }, "+childElements("element.parentNode")+").length == 1");
break;
case "empty":
_3ed.push("element.childNodes.length == 0");
break;
case "enabled":
_3ed.push("(this.isUIElement(element) && element.disabled === false)");
break;
case "disabled":
_3ed.push("(this.isUIElement(element) && element.disabled === true)");
break;
case "checked":
_3ed.push("(this.isUIElement(element) && element.checked === true)");
break;
case "not":
var _3f6=new MochiKit.Selector.Selector(_3f3);
_3ed.push("!( "+_3f6.buildMatchExpression()+")");
break;
}
}
}
if(_3ee=_3ec.attributes){
MochiKit.Base.map(function(_3f7){
var _3f8="MochiKit.DOM.getNodeAttribute(element, "+repr(_3f7.name)+")";
var _3f9=function(_3fa){
return _3f8+".split("+repr(_3fa)+")";
};
_3ed.push(_3f8+" != null");
switch(_3f7.operator){
case "=":
_3ed.push(_3f8+" == "+repr(_3f7.value));
break;
case "~=":
_3ed.push("MochiKit.Base.findValue("+_3f9(" ")+", "+repr(_3f7.value)+") > -1");
break;
case "^=":
_3ed.push(_3f8+".substring(0, "+_3f7.value.length+") == "+repr(_3f7.value));
break;
case "$=":
_3ed.push(_3f8+".substring("+_3f8+".length - "+_3f7.value.length+") == "+repr(_3f7.value));
break;
case "*=":
_3ed.push(_3f8+".match("+repr(_3f7.value)+")");
break;
case "|=":
_3ed.push(_3f9("-")+"[0].toUpperCase() == "+repr(_3f7.value.toUpperCase()));
break;
case "!=":
_3ed.push(_3f8+" != "+repr(_3f7.value));
break;
case "":
case undefined:
break;
default:
throw "Unknown operator "+_3f7.operator+" in selector";
}
},_3ee);
}
return _3ed.join(" && ");
},compileMatcher:function(){
var code="return (!element.tagName) ? false : "+this.buildMatchExpression()+";";
this.match=new Function("element",code);
},nthChild:function(_3fc,a,b,_3ff,_400){
var _401=MochiKit.Base.filter(function(node){
return node.nodeType==1;
},_3fc.parentNode.childNodes);
if(_400){
_401=MochiKit.Base.filter(function(node){
return node.tagName==_3fc.tagName;
},_401);
}
if(_3ff){
_401=MochiKit.Iter.reversed(_401);
}
if(a){
var _404=MochiKit.Base.findIdentical(_401,_3fc);
return ((_404+1-b)/a)%1==0;
}else{
return b==MochiKit.Base.findIdentical(_401,_3fc)+1;
}
},isUIElement:function(_405){
return MochiKit.Base.findValue(["input","button","select","option","textarea","object"],_405.tagName.toLowerCase())>-1;
},findElements:function(_406,axis){
var _408;
if(axis==undefined){
axis="";
}
function inScope(_409,_40a){
if(axis==""){
return MochiKit.DOM.isChildNode(_409,_40a);
}else{
if(axis==">"){
return _409.parentNode===_40a;
}else{
if(axis=="+"){
return _409===nextSiblingElement(_40a);
}else{
if(axis=="~"){
var _40b=_40a;
while(_40b=nextSiblingElement(_40b)){
if(_409===_40b){
return true;
}
}
return false;
}else{
throw "Invalid axis: "+axis;
}
}
}
}
}
if(_408=MochiKit.DOM.getElement(this.params.id)){
if(this.match(_408)){
if(!_406||inScope(_408,_406)){
return [_408];
}
}
}
function nextSiblingElement(node){
node=node.nextSibling;
while(node&&node.nodeType!=1){
node=node.nextSibling;
}
return node;
}
if(axis==""){
_406=(_406||MochiKit.DOM.currentDocument()).getElementsByTagName(this.params.tagName||"*");
}else{
if(axis==">"){
if(!_406){
throw "> combinator not allowed without preceeding expression";
}
_406=MochiKit.Base.filter(function(node){
return node.nodeType==1;
},_406.childNodes);
}else{
if(axis=="+"){
if(!_406){
throw "+ combinator not allowed without preceeding expression";
}
_406=nextSiblingElement(_406)&&[nextSiblingElement(_406)];
}else{
if(axis=="~"){
if(!_406){
throw "~ combinator not allowed without preceeding expression";
}
var _40e=[];
while(nextSiblingElement(_406)){
_406=nextSiblingElement(_406);
_40e.push(_406);
}
_406=_40e;
}
}
}
}
if(!_406){
return [];
}
var _40f=MochiKit.Base.filter(MochiKit.Base.bind(function(_410){
return this.match(_410);
},this),_406);
return _40f;
},repr:function(){
return "Selector("+this.expression+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Base.update(MochiKit.Selector,{findChildElements:function(_411,_412){
var uniq=function(arr){
var res=[];
for(var i=0;i<arr.length;i++){
if(MochiKit.Base.findIdentical(res,arr[i])<0){
res.push(arr[i]);
}
}
return res;
};
return MochiKit.Base.flattenArray(MochiKit.Base.map(function(_417){
var _418="";
var _419=function(_41a,expr){
if(match=expr.match(/^[>+~]$/)){
_418=match[0];
return _41a;
}else{
var _41c=new MochiKit.Selector.Selector(expr);
var _41d=MochiKit.Iter.reduce(function(_41e,_41f){
return MochiKit.Base.extend(_41e,_41c.findElements(_41f||_411,_418));
},_41a,[]);
_418="";
return _41d;
}
};
var _420=_417.replace(/(^\s+|\s+$)/g,"").split(/\s+/);
return uniq(MochiKit.Iter.reduce(_419,_420,[null]));
},_412));
},findDocElements:function(){
return MochiKit.Selector.findChildElements(MochiKit.DOM.currentDocument(),arguments);
},__new__:function(){
var m=MochiKit.Base;
this.$$=this.findDocElements;
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
}});
MochiKit.Selector.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Selector);
MochiKit.Base._deps("Style",["Base","DOM"]);
MochiKit.Style.NAME="MochiKit.Style";
MochiKit.Style.VERSION="1.4";
MochiKit.Style.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Style.toString=function(){
return this.__repr__();
};
MochiKit.Style.EXPORT_OK=[];
MochiKit.Style.EXPORT=["setStyle","setOpacity","getStyle","getElementDimensions","elementDimensions","setElementDimensions","getElementPosition","elementPosition","setElementPosition","setDisplayForElement","hideElement","showElement","getViewportDimensions","getViewportPosition","Dimensions","Coordinates"];
MochiKit.Style.Dimensions=function(w,h){
this.w=w;
this.h=h;
};
MochiKit.Style.Dimensions.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{w: "+repr(this.w)+", h: "+repr(this.h)+"}";
};
MochiKit.Style.Dimensions.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Style.Coordinates=function(x,y){
this.x=x;
this.y=y;
};
MochiKit.Style.Coordinates.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{x: "+repr(this.x)+", y: "+repr(this.y)+"}";
};
MochiKit.Style.Coordinates.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Base.update(MochiKit.Style,{getStyle:function(elem,_429){
var dom=MochiKit.DOM;
var d=dom._document;
elem=dom.getElement(elem);
_429=MochiKit.Base.camelize(_429);
if(!elem||elem==d){
return undefined;
}
if(_429=="opacity"&&typeof (elem.filters)!="undefined"){
var _42c=(MochiKit.Style.getStyle(elem,"filter")||"").match(/alpha\(opacity=(.*)\)/);
if(_42c&&_42c[1]){
return parseFloat(_42c[1])/100;
}
return 1;
}
if(_429=="float"||_429=="cssFloat"||_429=="styleFloat"){
if(elem.style["float"]){
return elem.style["float"];
}else{
if(elem.style.cssFloat){
return elem.style.cssFloat;
}else{
if(elem.style.styleFloat){
return elem.style.styleFloat;
}else{
return "none";
}
}
}
}
var _42d=elem.style?elem.style[_429]:null;
if(!_42d){
if(d.defaultView&&d.defaultView.getComputedStyle){
var css=d.defaultView.getComputedStyle(elem,null);
_429=_429.replace(/([A-Z])/g,"-$1").toLowerCase();
_42d=css?css.getPropertyValue(_429):null;
}else{
if(elem.currentStyle){
_42d=elem.currentStyle[_429];
if(/^\d/.test(_42d)&&!/px$/.test(_42d)&&_429!="fontWeight"){
var left=elem.style.left;
var _430=elem.runtimeStyle.left;
elem.runtimeStyle.left=elem.currentStyle.left;
elem.style.left=_42d||0;
_42d=elem.style.pixelLeft+"px";
elem.style.left=left;
elem.runtimeStyle.left=_430;
}
}
}
}
if(_429=="opacity"){
_42d=parseFloat(_42d);
}
if(/Opera/.test(navigator.userAgent)&&(MochiKit.Base.findValue(["left","top","right","bottom"],_429)!=-1)){
if(MochiKit.Style.getStyle(elem,"position")=="static"){
_42d="auto";
}
}
return _42d=="auto"?null:_42d;
},setStyle:function(elem,_432){
elem=MochiKit.DOM.getElement(elem);
for(var name in _432){
switch(name){
case "opacity":
MochiKit.Style.setOpacity(elem,_432[name]);
break;
case "float":
case "cssFloat":
case "styleFloat":
if(typeof (elem.style["float"])!="undefined"){
elem.style["float"]=_432[name];
}else{
if(typeof (elem.style.cssFloat)!="undefined"){
elem.style.cssFloat=_432[name];
}else{
elem.style.styleFloat=_432[name];
}
}
break;
default:
elem.style[MochiKit.Base.camelize(name)]=_432[name];
}
}
},setOpacity:function(elem,o){
elem=MochiKit.DOM.getElement(elem);
var self=MochiKit.Style;
if(o==1){
var _437=/Gecko/.test(navigator.userAgent)&&!(/Konqueror|AppleWebKit|KHTML/.test(navigator.userAgent));
elem.style["opacity"]=_437?0.999999:1;
if(/MSIE/.test(navigator.userAgent)){
elem.style["filter"]=self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"");
}
}else{
if(o<0.00001){
o=0;
}
elem.style["opacity"]=o;
if(/MSIE/.test(navigator.userAgent)){
elem.style["filter"]=self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"")+"alpha(opacity="+o*100+")";
}
}
},getElementPosition:function(elem,_439){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
elem=dom.getElement(elem);
if(!elem||(!(elem.x&&elem.y)&&(!elem.parentNode===null||self.getStyle(elem,"display")=="none"))){
return undefined;
}
var c=new self.Coordinates(0,0);
var box=null;
var _43e=null;
var d=MochiKit.DOM._document;
var de=d.documentElement;
var b=d.body;
if(!elem.parentNode&&elem.x&&elem.y){
c.x+=elem.x||0;
c.y+=elem.y||0;
}else{
if(elem.getBoundingClientRect){
box=elem.getBoundingClientRect();
c.x+=box.left+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
c.y+=box.top+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
}else{
if(elem.offsetParent){
c.x+=elem.offsetLeft;
c.y+=elem.offsetTop;
_43e=elem.offsetParent;
if(_43e!=elem){
while(_43e){
c.x+=parseInt(_43e.style.borderLeftWidth)||0;
c.y+=parseInt(_43e.style.borderTopWidth)||0;
c.x+=_43e.offsetLeft;
c.y+=_43e.offsetTop;
_43e=_43e.offsetParent;
}
}
var ua=navigator.userAgent.toLowerCase();
if((typeof (opera)!="undefined"&&parseFloat(opera.version())<9)||(ua.indexOf("AppleWebKit")!=-1&&self.getStyle(elem,"position")=="absolute")){
c.x-=b.offsetLeft;
c.y-=b.offsetTop;
}
if(elem.parentNode){
_43e=elem.parentNode;
}else{
_43e=null;
}
while(_43e){
var _443=_43e.tagName.toUpperCase();
if(_443==="BODY"||_443==="HTML"){
break;
}
var disp=self.getStyle(_43e,"display");
if(disp.search(/^inline|table-row.*$/i)){
c.x-=_43e.scrollLeft;
c.y-=_43e.scrollTop;
}
if(_43e.parentNode){
_43e=_43e.parentNode;
}else{
_43e=null;
}
}
}
}
}
if(typeof (_439)!="undefined"){
_439=arguments.callee(_439);
if(_439){
c.x-=(_439.x||0);
c.y-=(_439.y||0);
}
}
return c;
},setElementPosition:function(elem,_446,_447){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_447)=="undefined"){
_447="px";
}
var _448={};
var _449=MochiKit.Base.isUndefinedOrNull;
if(!_449(_446.x)){
_448["left"]=_446.x+_447;
}
if(!_449(_446.y)){
_448["top"]=_446.y+_447;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_448});
},getElementDimensions:function(elem,_44b){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
if(typeof (elem.w)=="number"||typeof (elem.h)=="number"){
return new self.Dimensions(elem.w||0,elem.h||0);
}
elem=dom.getElement(elem);
if(!elem){
return undefined;
}
var disp=self.getStyle(elem,"display");
if(disp=="none"||disp==""||typeof (disp)=="undefined"){
var s=elem.style;
var _450=s.visibility;
var _451=s.position;
var _452=s.display;
s.visibility="hidden";
s.position="absolute";
s.display="";
var _453=elem.offsetWidth;
var _454=elem.offsetHeight;
s.display=_452;
s.position=_451;
s.visibility=_450;
}else{
_453=elem.offsetWidth||0;
_454=elem.offsetHeight||0;
}
if(_44b){
var _455="colSpan" in elem&&"rowSpan" in elem;
var _456=(_455&&elem.parentNode&&self.getStyle(elem.parentNode,"borderCollapse")=="collapse");
if(_456){
if(/MSIE/.test(navigator.userAgent)){
var _457=elem.previousSibling?0.5:1;
var _458=elem.nextSibling?0.5:1;
}else{
var _457=0.5;
var _458=0.5;
}
}else{
var _457=1;
var _458=1;
}
_453-=Math.round((parseFloat(self.getStyle(elem,"paddingLeft"))||0)+(parseFloat(self.getStyle(elem,"paddingRight"))||0)+_457*(parseFloat(self.getStyle(elem,"borderLeftWidth"))||0)+_458*(parseFloat(self.getStyle(elem,"borderRightWidth"))||0));
if(_455){
if(/Gecko|Opera/.test(navigator.userAgent)&&!/Konqueror|AppleWebKit|KHTML/.test(navigator.userAgent)){
var _459=0;
}else{
if(/MSIE/.test(navigator.userAgent)){
var _459=1;
}else{
var _459=_456?0.5:1;
}
}
}else{
var _459=1;
}
_454-=Math.round((parseFloat(self.getStyle(elem,"paddingTop"))||0)+(parseFloat(self.getStyle(elem,"paddingBottom"))||0)+_459*((parseFloat(self.getStyle(elem,"borderTopWidth"))||0)+(parseFloat(self.getStyle(elem,"borderBottomWidth"))||0)));
}
return new self.Dimensions(_453,_454);
},setElementDimensions:function(elem,_45b,_45c){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_45c)=="undefined"){
_45c="px";
}
var _45d={};
var _45e=MochiKit.Base.isUndefinedOrNull;
if(!_45e(_45b.w)){
_45d["width"]=_45b.w+_45c;
}
if(!_45e(_45b.h)){
_45d["height"]=_45b.h+_45c;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_45d});
},setDisplayForElement:function(_45f,_460){
var _461=MochiKit.Base.extend(null,arguments,1);
var _462=MochiKit.DOM.getElement;
for(var i=0;i<_461.length;i++){
_460=_462(_461[i]);
if(_460){
_460.style.display=_45f;
}
}
},getViewportDimensions:function(){
var d=new MochiKit.Style.Dimensions();
var w=MochiKit.DOM._window;
var b=MochiKit.DOM._document.body;
if(w.innerWidth){
d.w=w.innerWidth;
d.h=w.innerHeight;
}else{
if(b.parentElement.clientWidth){
d.w=b.parentElement.clientWidth;
d.h=b.parentElement.clientHeight;
}else{
if(b&&b.clientWidth){
d.w=b.clientWidth;
d.h=b.clientHeight;
}
}
}
return d;
},getViewportPosition:function(){
var c=new MochiKit.Style.Coordinates(0,0);
var d=MochiKit.DOM._document;
var de=d.documentElement;
var db=d.body;
if(de&&(de.scrollTop||de.scrollLeft)){
c.x=de.scrollLeft;
c.y=de.scrollTop;
}else{
if(db){
c.x=db.scrollLeft;
c.y=db.scrollTop;
}
}
return c;
},__new__:function(){
var m=MochiKit.Base;
this.elementPosition=this.getElementPosition;
this.elementDimensions=this.getElementDimensions;
this.hideElement=m.partial(this.setDisplayForElement,"none");
this.showElement=m.partial(this.setDisplayForElement,"block");
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
}});
MochiKit.Style.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Style);
MochiKit.Base._deps("LoggingPane",["Base","Logging"]);
MochiKit.LoggingPane.NAME="MochiKit.LoggingPane";
MochiKit.LoggingPane.VERSION="1.4";
MochiKit.LoggingPane.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.LoggingPane.toString=function(){
return this.__repr__();
};
MochiKit.LoggingPane.createLoggingPane=function(_46c){
var m=MochiKit.LoggingPane;
_46c=!(!_46c);
if(m._loggingPane&&m._loggingPane.inline!=_46c){
m._loggingPane.closePane();
m._loggingPane=null;
}
if(!m._loggingPane||m._loggingPane.closed){
m._loggingPane=new m.LoggingPane(_46c,MochiKit.Logging.logger);
}
return m._loggingPane;
};
MochiKit.LoggingPane.LoggingPane=function(_46e,_46f){
if(typeof (_46f)=="undefined"||_46f===null){
_46f=MochiKit.Logging.logger;
}
this.logger=_46f;
var _470=MochiKit.Base.update;
var _471=MochiKit.Base.updatetree;
var bind=MochiKit.Base.bind;
var _473=MochiKit.Base.clone;
var win=window;
var uid="_MochiKit_LoggingPane";
if(typeof (MochiKit.DOM)!="undefined"){
win=MochiKit.DOM.currentWindow();
}
if(!_46e){
var url=win.location.href.split("?")[0].replace(/[#:\/.><&%-]/g,"_");
var name=uid+"_"+url;
var nwin=win.open("",name,"dependent,resizable,height=200");
if(!nwin){
alert("Not able to open debugging window due to pop-up blocking.");
return undefined;
}
nwin.document.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" "+"\"http://www.w3.org/TR/html4/loose.dtd\">"+"<html><head><title>[MochiKit.LoggingPane]</title></head>"+"<body></body></html>");
nwin.document.close();
nwin.document.title+=" "+win.document.title;
win=nwin;
}
var doc=win.document;
this.doc=doc;
var _47a=doc.getElementById(uid);
var _47b=!!_47a;
if(_47a&&typeof (_47a.loggingPane)!="undefined"){
_47a.loggingPane.logger=this.logger;
_47a.loggingPane.buildAndApplyFilter();
return _47a.loggingPane;
}
if(_47b){
var _47c;
while((_47c=_47a.firstChild)){
_47a.removeChild(_47c);
}
}else{
_47a=doc.createElement("div");
_47a.id=uid;
}
_47a.loggingPane=this;
var _47d=doc.createElement("input");
var _47e=doc.createElement("input");
var _47f=doc.createElement("button");
var _480=doc.createElement("button");
var _481=doc.createElement("button");
var _482=doc.createElement("button");
var _483=doc.createElement("div");
var _484=doc.createElement("div");
var _485=uid+"_Listener";
this.colorTable=_473(this.colorTable);
var _486=[];
var _487=null;
var _488=function(msg){
var _48a=msg.level;
if(typeof (_48a)=="number"){
_48a=MochiKit.Logging.LogLevel[_48a];
}
return _48a;
};
var _48b=function(msg){
return msg.info.join(" ");
};
var _48d=bind(function(msg){
var _48f=_488(msg);
var text=_48b(msg);
var c=this.colorTable[_48f];
var p=doc.createElement("span");
p.className="MochiKit-LogMessage MochiKit-LogLevel-"+_48f;
p.style.cssText="margin: 0px; white-space: -moz-pre-wrap; white-space: -o-pre-wrap; white-space: pre-wrap; white-space: pre-line; word-wrap: break-word; wrap-option: emergency; color: "+c;
p.appendChild(doc.createTextNode(_48f+": "+text));
_484.appendChild(p);
_484.appendChild(doc.createElement("br"));
if(_483.offsetHeight>_483.scrollHeight){
_483.scrollTop=0;
}else{
_483.scrollTop=_483.scrollHeight;
}
},this);
var _493=function(msg){
_486[_486.length]=msg;
_48d(msg);
};
var _495=function(){
var _496,_497;
try{
_496=new RegExp(_47d.value);
_497=new RegExp(_47e.value);
}
catch(e){
logDebug("Error in filter regex: "+e.message);
return null;
}
return function(msg){
return (_496.test(_488(msg))&&_497.test(_48b(msg)));
};
};
var _499=function(){
while(_484.firstChild){
_484.removeChild(_484.firstChild);
}
};
var _49a=function(){
_486=[];
_499();
};
var _49b=bind(function(){
if(this.closed){
return;
}
this.closed=true;
if(MochiKit.LoggingPane._loggingPane==this){
MochiKit.LoggingPane._loggingPane=null;
}
this.logger.removeListener(_485);
try{
try{
_47a.loggingPane=null;
}
catch(e){
logFatal("Bookmarklet was closed incorrectly.");
}
if(_46e){
_47a.parentNode.removeChild(_47a);
}else{
this.win.close();
}
}
catch(e){
}
},this);
var _49c=function(){
_499();
for(var i=0;i<_486.length;i++){
var msg=_486[i];
if(_487===null||_487(msg)){
_48d(msg);
}
}
};
this.buildAndApplyFilter=function(){
_487=_495();
_49c();
this.logger.removeListener(_485);
this.logger.addListener(_485,_487,_493);
};
var _49f=bind(function(){
_486=this.logger.getMessages();
_49c();
},this);
var _4a0=bind(function(_4a1){
_4a1=_4a1||window.event;
key=_4a1.which||_4a1.keyCode;
if(key==13){
this.buildAndApplyFilter();
}
},this);
var _4a2="display: block; z-index: 1000; left: 0px; bottom: 0px; position: fixed; width: 100%; background-color: white; font: "+this.logFont;
if(_46e){
_4a2+="; height: 10em; border-top: 2px solid black";
}else{
_4a2+="; height: 100%;";
}
_47a.style.cssText=_4a2;
if(!_47b){
doc.body.appendChild(_47a);
}
_4a2={"cssText":"width: 33%; display: inline; font: "+this.logFont};
_471(_47d,{"value":"FATAL|ERROR|WARNING|INFO|DEBUG","onkeypress":_4a0,"style":_4a2});
_47a.appendChild(_47d);
_471(_47e,{"value":".*","onkeypress":_4a0,"style":_4a2});
_47a.appendChild(_47e);
_4a2="width: 8%; display:inline; font: "+this.logFont;
_47f.appendChild(doc.createTextNode("Filter"));
_47f.onclick=bind("buildAndApplyFilter",this);
_47f.style.cssText=_4a2;
_47a.appendChild(_47f);
_480.appendChild(doc.createTextNode("Load"));
_480.onclick=_49f;
_480.style.cssText=_4a2;
_47a.appendChild(_480);
_481.appendChild(doc.createTextNode("Clear"));
_481.onclick=_49a;
_481.style.cssText=_4a2;
_47a.appendChild(_481);
_482.appendChild(doc.createTextNode("Close"));
_482.onclick=_49b;
_482.style.cssText=_4a2;
_47a.appendChild(_482);
_483.style.cssText="overflow: auto; width: 100%";
_484.style.cssText="width: 100%; height: "+(_46e?"8em":"100%");
_483.appendChild(_484);
_47a.appendChild(_483);
this.buildAndApplyFilter();
_49f();
if(_46e){
this.win=undefined;
}else{
this.win=win;
}
this.inline=_46e;
this.closePane=_49b;
this.closed=false;
return this;
};
MochiKit.LoggingPane.LoggingPane.prototype={"logFont":"8pt Verdana,sans-serif","colorTable":{"ERROR":"red","FATAL":"darkred","WARNING":"blue","INFO":"black","DEBUG":"green"}};
MochiKit.LoggingPane.EXPORT_OK=["LoggingPane"];
MochiKit.LoggingPane.EXPORT=["createLoggingPane"];
MochiKit.LoggingPane.__new__=function(){
this.EXPORT_TAGS={":common":this.EXPORT,":all":MochiKit.Base.concat(this.EXPORT,this.EXPORT_OK)};
MochiKit.Base.nameFunctions(this);
MochiKit.LoggingPane._loggingPane=null;
};
MochiKit.LoggingPane.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.LoggingPane);
MochiKit.Base._deps("Color",["Base","DOM","Style"]);
MochiKit.Color.NAME="MochiKit.Color";
MochiKit.Color.VERSION="1.4";
MochiKit.Color.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Color.toString=function(){
return this.__repr__();
};
MochiKit.Color.Color=function(red,_4a4,blue,_4a6){
if(typeof (_4a6)=="undefined"||_4a6===null){
_4a6=1;
}
this.rgb={r:red,g:_4a4,b:blue,a:_4a6};
};
MochiKit.Color.Color.prototype={__class__:MochiKit.Color.Color,colorWithAlpha:function(_4a7){
var rgb=this.rgb;
var m=MochiKit.Color;
return m.Color.fromRGB(rgb.r,rgb.g,rgb.b,_4a7);
},colorWithHue:function(hue){
var hsl=this.asHSL();
hsl.h=hue;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithSaturation:function(_4ad){
var hsl=this.asHSL();
hsl.s=_4ad;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},colorWithLightness:function(_4b0){
var hsl=this.asHSL();
hsl.l=_4b0;
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},darkerColorWithLevel:function(_4b3){
var hsl=this.asHSL();
hsl.l=Math.max(hsl.l-_4b3,0);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},lighterColorWithLevel:function(_4b6){
var hsl=this.asHSL();
hsl.l=Math.min(hsl.l+_4b6,1);
var m=MochiKit.Color;
return m.Color.fromHSL(hsl);
},blendedColor:function(_4b9,_4ba){
if(typeof (_4ba)=="undefined"||_4ba===null){
_4ba=0.5;
}
var sf=1-_4ba;
var s=this.rgb;
var d=_4b9.rgb;
var df=_4ba;
return MochiKit.Color.Color.fromRGB((s.r*sf)+(d.r*df),(s.g*sf)+(d.g*df),(s.b*sf)+(d.b*df),(s.a*sf)+(d.a*df));
},compareRGB:function(_4bf){
var a=this.asRGB();
var b=_4bf.asRGB();
return MochiKit.Base.compare([a.r,a.g,a.b,a.a],[b.r,b.g,b.b,b.a]);
},isLight:function(){
return this.asHSL().b>0.5;
},isDark:function(){
return (!this.isLight());
},toHSLString:function(){
var c=this.asHSL();
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hslString;
if(!rval){
var mid=(ccc(c.h,360).toFixed(0)+","+ccc(c.s,100).toPrecision(4)+"%"+","+ccc(c.l,100).toPrecision(4)+"%");
var a=c.a;
if(a>=1){
a=1;
rval="hsl("+mid+")";
}else{
if(a<=0){
a=0;
}
rval="hsla("+mid+","+a+")";
}
this._hslString=rval;
}
return rval;
},toRGBString:function(){
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._rgbString;
if(!rval){
var mid=(ccc(c.r,255).toFixed(0)+","+ccc(c.g,255).toFixed(0)+","+ccc(c.b,255).toFixed(0));
if(c.a!=1){
rval="rgba("+mid+","+c.a+")";
}else{
rval="rgb("+mid+")";
}
this._rgbString=rval;
}
return rval;
},asRGB:function(){
return MochiKit.Base.clone(this.rgb);
},toHexString:function(){
var m=MochiKit.Color;
var c=this.rgb;
var ccc=MochiKit.Color.clampColorComponent;
var rval=this._hexString;
if(!rval){
rval=("#"+m.toColorPart(ccc(c.r,255))+m.toColorPart(ccc(c.g,255))+m.toColorPart(ccc(c.b,255)));
this._hexString=rval;
}
return rval;
},asHSV:function(){
var hsv=this.hsv;
var c=this.rgb;
if(typeof (hsv)=="undefined"||hsv===null){
hsv=MochiKit.Color.rgbToHSV(this.rgb);
this.hsv=hsv;
}
return MochiKit.Base.clone(hsv);
},asHSL:function(){
var hsl=this.hsl;
var c=this.rgb;
if(typeof (hsl)=="undefined"||hsl===null){
hsl=MochiKit.Color.rgbToHSL(this.rgb);
this.hsl=hsl;
}
return MochiKit.Base.clone(hsl);
},toString:function(){
return this.toRGBString();
},repr:function(){
var c=this.rgb;
var col=[c.r,c.g,c.b,c.a];
return this.__class__.NAME+"("+col.join(", ")+")";
}};
MochiKit.Base.update(MochiKit.Color.Color,{fromRGB:function(red,_4d6,blue,_4d8){
var _4d9=MochiKit.Color.Color;
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_4d6=rgb.g;
blue=rgb.b;
if(typeof (rgb.a)=="undefined"){
_4d8=undefined;
}else{
_4d8=rgb.a;
}
}
return new _4d9(red,_4d6,blue,_4d8);
},fromHSL:function(hue,_4dc,_4dd,_4de){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hslToRGB.apply(m,arguments));
},fromHSV:function(hue,_4e1,_4e2,_4e3){
var m=MochiKit.Color;
return m.Color.fromRGB(m.hsvToRGB.apply(m,arguments));
},fromName:function(name){
var _4e6=MochiKit.Color.Color;
if(name.charAt(0)=="\""){
name=name.substr(1,name.length-2);
}
var _4e7=_4e6._namedColors[name.toLowerCase()];
if(typeof (_4e7)=="string"){
return _4e6.fromHexString(_4e7);
}else{
if(name=="transparent"){
return _4e6.transparentColor();
}
}
return null;
},fromString:function(_4e8){
var self=MochiKit.Color.Color;
var _4ea=_4e8.substr(0,3);
if(_4ea=="rgb"){
return self.fromRGBString(_4e8);
}else{
if(_4ea=="hsl"){
return self.fromHSLString(_4e8);
}else{
if(_4e8.charAt(0)=="#"){
return self.fromHexString(_4e8);
}
}
}
return self.fromName(_4e8);
},fromHexString:function(_4eb){
if(_4eb.charAt(0)=="#"){
_4eb=_4eb.substring(1);
}
var _4ec=[];
var i,hex;
if(_4eb.length==3){
for(i=0;i<3;i++){
hex=_4eb.substr(i,1);
_4ec.push(parseInt(hex+hex,16)/255);
}
}else{
for(i=0;i<6;i+=2){
hex=_4eb.substr(i,2);
_4ec.push(parseInt(hex,16)/255);
}
}
var _4ef=MochiKit.Color.Color;
return _4ef.fromRGB.apply(_4ef,_4ec);
},_fromColorString:function(pre,_4f1,_4f2,_4f3){
if(_4f3.indexOf(pre)===0){
_4f3=_4f3.substring(_4f3.indexOf("(",3)+1,_4f3.length-1);
}
var _4f4=_4f3.split(/\s*,\s*/);
var _4f5=[];
for(var i=0;i<_4f4.length;i++){
var c=_4f4[i];
var val;
var _4f9=c.substring(c.length-3);
if(c.charAt(c.length-1)=="%"){
val=0.01*parseFloat(c.substring(0,c.length-1));
}else{
if(_4f9=="deg"){
val=parseFloat(c)/360;
}else{
if(_4f9=="rad"){
val=parseFloat(c)/(Math.PI*2);
}else{
val=_4f2[i]*parseFloat(c);
}
}
}
_4f5.push(val);
}
return this[_4f1].apply(this,_4f5);
},fromComputedStyle:function(elem,_4fb){
var d=MochiKit.DOM;
var cls=MochiKit.Color.Color;
for(elem=d.getElement(elem);elem;elem=elem.parentNode){
var _4fe=MochiKit.Style.getStyle.apply(d,arguments);
if(!_4fe){
continue;
}
var _4ff=cls.fromString(_4fe);
if(!_4ff){
break;
}
if(_4ff.asRGB().a>0){
return _4ff;
}
}
return null;
},fromBackground:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"backgroundColor","background-color")||cls.whiteColor();
},fromText:function(elem){
var cls=MochiKit.Color.Color;
return cls.fromComputedStyle(elem,"color","color")||cls.blackColor();
},namedColors:function(){
return MochiKit.Base.clone(MochiKit.Color.Color._namedColors);
}});
MochiKit.Base.update(MochiKit.Color,{clampColorComponent:function(v,_505){
v*=_505;
if(v<0){
return 0;
}else{
if(v>_505){
return _505;
}else{
return v;
}
}
},_hslValue:function(n1,n2,hue){
if(hue>6){
hue-=6;
}else{
if(hue<0){
hue+=6;
}
}
var val;
if(hue<1){
val=n1+(n2-n1)*hue;
}else{
if(hue<3){
val=n2;
}else{
if(hue<4){
val=n1+(n2-n1)*(4-hue);
}else{
val=n1;
}
}
}
return val;
},hsvToRGB:function(hue,_50b,_50c,_50d){
if(arguments.length==1){
var hsv=hue;
hue=hsv.h;
_50b=hsv.s;
_50c=hsv.v;
_50d=hsv.a;
}
var red;
var _510;
var blue;
if(_50b===0){
red=_50c;
_510=_50c;
blue=_50c;
}else{
var i=Math.floor(hue*6);
var f=(hue*6)-i;
var p=_50c*(1-_50b);
var q=_50c*(1-(_50b*f));
var t=_50c*(1-(_50b*(1-f)));
switch(i){
case 1:
red=q;
_510=_50c;
blue=p;
break;
case 2:
red=p;
_510=_50c;
blue=t;
break;
case 3:
red=p;
_510=q;
blue=_50c;
break;
case 4:
red=t;
_510=p;
blue=_50c;
break;
case 5:
red=_50c;
_510=p;
blue=q;
break;
case 6:
case 0:
red=_50c;
_510=t;
blue=p;
break;
}
}
return {r:red,g:_510,b:blue,a:_50d};
},hslToRGB:function(hue,_518,_519,_51a){
if(arguments.length==1){
var hsl=hue;
hue=hsl.h;
_518=hsl.s;
_519=hsl.l;
_51a=hsl.a;
}
var red;
var _51d;
var blue;
if(_518===0){
red=_519;
_51d=_519;
blue=_519;
}else{
var m2;
if(_519<=0.5){
m2=_519*(1+_518);
}else{
m2=_519+_518-(_519*_518);
}
var m1=(2*_519)-m2;
var f=MochiKit.Color._hslValue;
var h6=hue*6;
red=f(m1,m2,h6+2);
_51d=f(m1,m2,h6);
blue=f(m1,m2,h6-2);
}
return {r:red,g:_51d,b:blue,a:_51a};
},rgbToHSV:function(red,_524,blue,_526){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_524=rgb.g;
blue=rgb.b;
_526=rgb.a;
}
var max=Math.max(Math.max(red,_524),blue);
var min=Math.min(Math.min(red,_524),blue);
var hue;
var _52b;
var _52c=max;
if(min==max){
hue=0;
_52b=0;
}else{
var _52d=(max-min);
_52b=_52d/max;
if(red==max){
hue=(_524-blue)/_52d;
}else{
if(_524==max){
hue=2+((blue-red)/_52d);
}else{
hue=4+((red-_524)/_52d);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_52b,v:_52c,a:_526};
},rgbToHSL:function(red,_52f,blue,_531){
if(arguments.length==1){
var rgb=red;
red=rgb.r;
_52f=rgb.g;
blue=rgb.b;
_531=rgb.a;
}
var max=Math.max(red,Math.max(_52f,blue));
var min=Math.min(red,Math.min(_52f,blue));
var hue;
var _536;
var _537=(max+min)/2;
var _538=max-min;
if(_538===0){
hue=0;
_536=0;
}else{
if(_537<=0.5){
_536=_538/(max+min);
}else{
_536=_538/(2-max-min);
}
if(red==max){
hue=(_52f-blue)/_538;
}else{
if(_52f==max){
hue=2+((blue-red)/_538);
}else{
hue=4+((red-_52f)/_538);
}
}
hue/=6;
if(hue<0){
hue+=1;
}
if(hue>1){
hue-=1;
}
}
return {h:hue,s:_536,l:_537,a:_531};
},toColorPart:function(num){
num=Math.round(num);
var _53a=num.toString(16);
if(num<16){
return "0"+_53a;
}
return _53a;
},__new__:function(){
var m=MochiKit.Base;
this.Color.fromRGBString=m.bind(this.Color._fromColorString,this.Color,"rgb","fromRGB",[1/255,1/255,1/255,1]);
this.Color.fromHSLString=m.bind(this.Color._fromColorString,this.Color,"hsl","fromHSL",[1/360,0.01,0.01,1]);
var _53c=1/3;
var _53d={black:[0,0,0],blue:[0,0,1],brown:[0.6,0.4,0.2],cyan:[0,1,1],darkGray:[_53c,_53c,_53c],gray:[0.5,0.5,0.5],green:[0,1,0],lightGray:[2*_53c,2*_53c,2*_53c],magenta:[1,0,1],orange:[1,0.5,0],purple:[0.5,0,0.5],red:[1,0,0],transparent:[0,0,0,0],white:[1,1,1],yellow:[1,1,0]};
var _53e=function(name,r,g,b,a){
var rval=this.fromRGB(r,g,b,a);
this[name]=function(){
return rval;
};
return rval;
};
for(var k in _53d){
var name=k+"Color";
var _547=m.concat([_53e,this.Color,name],_53d[k]);
this.Color[name]=m.bind.apply(null,_547);
}
var _548=function(){
for(var i=0;i<arguments.length;i++){
if(!(arguments[i] instanceof MochiKit.Color.Color)){
return false;
}
}
return true;
};
var _54a=function(a,b){
return a.compareRGB(b);
};
m.nameFunctions(this);
m.registerComparator(this.Color.NAME,_548,_54a);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
}});
MochiKit.Color.EXPORT=["Color"];
MochiKit.Color.EXPORT_OK=["clampColorComponent","rgbToHSL","hslToRGB","rgbToHSV","hsvToRGB","toColorPart"];
MochiKit.Color.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Color);
MochiKit.Color.Color._namedColors={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"};
MochiKit.Base._deps("Signal",["Base","DOM","Style"]);
MochiKit.Signal.NAME="MochiKit.Signal";
MochiKit.Signal.VERSION="1.4";
MochiKit.Signal._observers=[];
MochiKit.Signal.Event=function(src,e){
this._event=e||window.event;
this._src=src;
};
MochiKit.Base.update(MochiKit.Signal.Event.prototype,{__repr__:function(){
var repr=MochiKit.Base.repr;
var str="{event(): "+repr(this.event())+", src(): "+repr(this.src())+", type(): "+repr(this.type())+", target(): "+repr(this.target());
if(this.type()&&this.type().indexOf("key")===0||this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu"){
str+=", modifier(): "+"{alt: "+repr(this.modifier().alt)+", ctrl: "+repr(this.modifier().ctrl)+", meta: "+repr(this.modifier().meta)+", shift: "+repr(this.modifier().shift)+", any: "+repr(this.modifier().any)+"}";
}
if(this.type()&&this.type().indexOf("key")===0){
str+=", key(): {code: "+repr(this.key().code)+", string: "+repr(this.key().string)+"}";
}
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
str+=", mouse(): {page: "+repr(this.mouse().page)+", client: "+repr(this.mouse().client);
if(this.type()!="mousemove"&&this.type()!="mousewheel"){
str+=", button: {left: "+repr(this.mouse().button.left)+", middle: "+repr(this.mouse().button.middle)+", right: "+repr(this.mouse().button.right)+"}";
}
if(this.type()=="mousewheel"){
str+=", wheel: "+repr(this.mouse().wheel);
}
str+="}";
}
if(this.type()=="mouseover"||this.type()=="mouseout"||this.type()=="mouseenter"||this.type()=="mouseleave"){
str+=", relatedTarget(): "+repr(this.relatedTarget());
}
str+="}";
return str;
},toString:function(){
return this.__repr__();
},src:function(){
return this._src;
},event:function(){
return this._event;
},type:function(){
if(this._event.type==="DOMMouseScroll"){
return "mousewheel";
}else{
return this._event.type||undefined;
}
},target:function(){
return this._event.target||this._event.srcElement;
},_relatedTarget:null,relatedTarget:function(){
if(this._relatedTarget!==null){
return this._relatedTarget;
}
var elem=null;
if(this.type()=="mouseover"||this.type()=="mouseenter"){
elem=(this._event.relatedTarget||this._event.fromElement);
}else{
if(this.type()=="mouseout"||this.type()=="mouseleave"){
elem=(this._event.relatedTarget||this._event.toElement);
}
}
if(elem!==null){
this._relatedTarget=elem;
return elem;
}
return undefined;
},_modifier:null,modifier:function(){
if(this._modifier!==null){
return this._modifier;
}
var m={};
m.alt=this._event.altKey;
m.ctrl=this._event.ctrlKey;
m.meta=this._event.metaKey||false;
m.shift=this._event.shiftKey;
m.any=m.alt||m.ctrl||m.shift||m.meta;
this._modifier=m;
return m;
},_key:null,key:function(){
if(this._key!==null){
return this._key;
}
var k={};
if(this.type()&&this.type().indexOf("key")===0){
if(this.type()=="keydown"||this.type()=="keyup"){
k.code=this._event.keyCode;
k.string=(MochiKit.Signal._specialKeys[k.code]||"KEY_UNKNOWN");
this._key=k;
return k;
}else{
if(this.type()=="keypress"){
k.code=0;
k.string="";
if(typeof (this._event.charCode)!="undefined"&&this._event.charCode!==0&&!MochiKit.Signal._specialMacKeys[this._event.charCode]){
k.code=this._event.charCode;
k.string=String.fromCharCode(k.code);
}else{
if(this._event.keyCode&&typeof (this._event.charCode)=="undefined"){
k.code=this._event.keyCode;
k.string=String.fromCharCode(k.code);
}
}
this._key=k;
return k;
}
}
}
return undefined;
},_mouse:null,mouse:function(){
if(this._mouse!==null){
return this._mouse;
}
var m={};
var e=this._event;
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
m.client=new MochiKit.Style.Coordinates(0,0);
if(e.clientX||e.clientY){
m.client.x=(!e.clientX||e.clientX<0)?0:e.clientX;
m.client.y=(!e.clientY||e.clientY<0)?0:e.clientY;
}
m.page=new MochiKit.Style.Coordinates(0,0);
if(e.pageX||e.pageY){
m.page.x=(!e.pageX||e.pageX<0)?0:e.pageX;
m.page.y=(!e.pageY||e.pageY<0)?0:e.pageY;
}else{
var de=MochiKit.DOM._document.documentElement;
var b=MochiKit.DOM._document.body;
m.page.x=e.clientX+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
m.page.y=e.clientY+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
}
if(this.type()!="mousemove"&&this.type()!="mousewheel"){
m.button={};
m.button.left=false;
m.button.right=false;
m.button.middle=false;
if(e.which){
m.button.left=(e.which==1);
m.button.middle=(e.which==2);
m.button.right=(e.which==3);
}else{
m.button.left=!!(e.button&1);
m.button.right=!!(e.button&2);
m.button.middle=!!(e.button&4);
}
}
if(this.type()=="mousewheel"){
m.wheel=new MochiKit.Style.Coordinates(0,0);
if(e.wheelDeltaX||e.wheelDeltaY){
m.wheel.x=e.wheelDeltaX/-40||0;
m.wheel.y=e.wheelDeltaY/-40||0;
}else{
if(e.wheelDelta){
m.wheel.y=e.wheelDelta/-40;
}else{
m.wheel.y=e.detail||0;
}
}
}
this._mouse=m;
return m;
}
return undefined;
},stop:function(){
this.stopPropagation();
this.preventDefault();
},stopPropagation:function(){
if(this._event.stopPropagation){
this._event.stopPropagation();
}else{
this._event.cancelBubble=true;
}
},preventDefault:function(){
if(this._event.preventDefault){
this._event.preventDefault();
}else{
if(this._confirmUnload===null){
this._event.returnValue=false;
}
}
},_confirmUnload:null,confirmUnload:function(msg){
if(this.type()=="beforeunload"){
this._confirmUnload=msg;
this._event.returnValue=msg;
}
}});
MochiKit.Signal._specialMacKeys={3:"KEY_ENTER",63289:"KEY_NUM_PAD_CLEAR",63276:"KEY_PAGE_UP",63277:"KEY_PAGE_DOWN",63275:"KEY_END",63273:"KEY_HOME",63234:"KEY_ARROW_LEFT",63232:"KEY_ARROW_UP",63235:"KEY_ARROW_RIGHT",63233:"KEY_ARROW_DOWN",63302:"KEY_INSERT",63272:"KEY_DELETE"};
(function(){
var _559=MochiKit.Signal._specialMacKeys;
for(i=63236;i<=63242;i++){
_559[i]="KEY_F"+(i-63236+1);
}
})();
MochiKit.Signal._specialKeys={8:"KEY_BACKSPACE",9:"KEY_TAB",12:"KEY_NUM_PAD_CLEAR",13:"KEY_ENTER",16:"KEY_SHIFT",17:"KEY_CTRL",18:"KEY_ALT",19:"KEY_PAUSE",20:"KEY_CAPS_LOCK",27:"KEY_ESCAPE",32:"KEY_SPACEBAR",33:"KEY_PAGE_UP",34:"KEY_PAGE_DOWN",35:"KEY_END",36:"KEY_HOME",37:"KEY_ARROW_LEFT",38:"KEY_ARROW_UP",39:"KEY_ARROW_RIGHT",40:"KEY_ARROW_DOWN",44:"KEY_PRINT_SCREEN",45:"KEY_INSERT",46:"KEY_DELETE",59:"KEY_SEMICOLON",91:"KEY_WINDOWS_LEFT",92:"KEY_WINDOWS_RIGHT",93:"KEY_SELECT",106:"KEY_NUM_PAD_ASTERISK",107:"KEY_NUM_PAD_PLUS_SIGN",109:"KEY_NUM_PAD_HYPHEN-MINUS",110:"KEY_NUM_PAD_FULL_STOP",111:"KEY_NUM_PAD_SOLIDUS",144:"KEY_NUM_LOCK",145:"KEY_SCROLL_LOCK",186:"KEY_SEMICOLON",187:"KEY_EQUALS_SIGN",188:"KEY_COMMA",189:"KEY_HYPHEN-MINUS",190:"KEY_FULL_STOP",191:"KEY_SOLIDUS",192:"KEY_GRAVE_ACCENT",219:"KEY_LEFT_SQUARE_BRACKET",220:"KEY_REVERSE_SOLIDUS",221:"KEY_RIGHT_SQUARE_BRACKET",222:"KEY_APOSTROPHE"};
(function(){
var _55a=MochiKit.Signal._specialKeys;
for(var i=48;i<=57;i++){
_55a[i]="KEY_"+(i-48);
}
for(i=65;i<=90;i++){
_55a[i]="KEY_"+String.fromCharCode(i);
}
for(i=96;i<=105;i++){
_55a[i]="KEY_NUM_PAD_"+(i-96);
}
for(i=112;i<=123;i++){
_55a[i]="KEY_F"+(i-112+1);
}
})();
MochiKit.Signal.Ident=function(_55c){
this.source=_55c.source;
this.signal=_55c.signal;
this.listener=_55c.listener;
this.isDOM=_55c.isDOM;
this.objOrFunc=_55c.objOrFunc;
this.funcOrStr=_55c.funcOrStr;
this.connected=_55c.connected;
};
MochiKit.Signal.Ident.prototype={};
MochiKit.Base.update(MochiKit.Signal,{__repr__:function(){
return "["+this.NAME+" "+this.VERSION+"]";
},toString:function(){
return this.__repr__();
},_unloadCache:function(){
var self=MochiKit.Signal;
var _55e=self._observers;
for(var i=0;i<_55e.length;i++){
if(_55e[i].signal!=="onload"&&_55e[i].signal!=="onunload"){
self._disconnect(_55e[i]);
}
}
},_listener:function(src,sig,func,obj,_564){
var self=MochiKit.Signal;
var E=self.Event;
if(!_564){
if(typeof (func.im_self)=="undefined"){
return MochiKit.Base.bindLate(func,obj);
}else{
return func;
}
}
obj=obj||src;
if(typeof (func)=="string"){
if(sig==="onload"||sig==="onunload"){
return function(_567){
obj[func].apply(obj,[new E(src,_567)]);
var _568=new MochiKit.Signal.Ident({source:src,signal:sig,objOrFunc:obj,funcOrStr:func});
MochiKit.Signal._disconnect(_568);
};
}else{
return function(_569){
obj[func].apply(obj,[new E(src,_569)]);
};
}
}else{
if(sig==="onload"||sig==="onunload"){
return function(_56a){
func.apply(obj,[new E(src,_56a)]);
var _56b=new MochiKit.Signal.Ident({source:src,signal:sig,objOrFunc:func});
MochiKit.Signal._disconnect(_56b);
};
}else{
return function(_56c){
func.apply(obj,[new E(src,_56c)]);
};
}
}
},_browserAlreadyHasMouseEnterAndLeave:function(){
return /MSIE/.test(navigator.userAgent);
},_browserLacksMouseWheelEvent:function(){
return /Gecko\//.test(navigator.userAgent);
},_mouseEnterListener:function(src,sig,func,obj){
var E=MochiKit.Signal.Event;
return function(_572){
var e=new E(src,_572);
try{
e.relatedTarget().nodeName;
}
catch(err){
return;
}
e.stop();
if(MochiKit.DOM.isChildNode(e.relatedTarget(),src)){
return;
}
e.type=function(){
return sig;
};
if(typeof (func)=="string"){
return obj[func].apply(obj,[e]);
}else{
return func.apply(obj,[e]);
}
};
},_getDestPair:function(_574,_575){
var obj=null;
var func=null;
if(typeof (_575)!="undefined"){
obj=_574;
func=_575;
if(typeof (_575)=="string"){
if(typeof (_574[_575])!="function"){
throw new Error("'funcOrStr' must be a function on 'objOrFunc'");
}
}else{
if(typeof (_575)!="function"){
throw new Error("'funcOrStr' must be a function or string");
}
}
}else{
if(typeof (_574)!="function"){
throw new Error("'objOrFunc' must be a function if 'funcOrStr' is not given");
}else{
func=_574;
}
}
return [obj,func];
},connect:function(src,sig,_57a,_57b){
src=MochiKit.DOM.getElement(src);
var self=MochiKit.Signal;
if(typeof (sig)!="string"){
throw new Error("'sig' must be a string");
}
var _57d=self._getDestPair(_57a,_57b);
var obj=_57d[0];
var func=_57d[1];
if(typeof (obj)=="undefined"||obj===null){
obj=src;
}
var _580=!!(src.addEventListener||src.attachEvent);
if(_580&&(sig==="onmouseenter"||sig==="onmouseleave")&&!self._browserAlreadyHasMouseEnterAndLeave()){
var _581=self._mouseEnterListener(src,sig.substr(2),func,obj);
if(sig==="onmouseenter"){
sig="onmouseover";
}else{
sig="onmouseout";
}
}else{
if(_580&&sig=="onmousewheel"&&self._browserLacksMouseWheelEvent()){
var _581=self._listener(src,sig,func,obj,_580);
sig="onDOMMouseScroll";
}else{
var _581=self._listener(src,sig,func,obj,_580);
}
}
if(src.addEventListener){
src.addEventListener(sig.substr(2),_581,false);
}else{
if(src.attachEvent){
src.attachEvent(sig,_581);
}
}
var _582=new MochiKit.Signal.Ident({source:src,signal:sig,listener:_581,isDOM:_580,objOrFunc:_57a,funcOrStr:_57b,connected:true});
self._observers.push(_582);
if(!_580&&typeof (src.__connect__)=="function"){
var args=MochiKit.Base.extend([_582],arguments,1);
src.__connect__.apply(src,args);
}
return _582;
},_disconnect:function(_584){
if(!_584.connected){
return;
}
_584.connected=false;
var src=_584.source;
var sig=_584.signal;
var _587=_584.listener;
if(!_584.isDOM){
if(typeof (src.__disconnect__)=="function"){
src.__disconnect__(_584,sig,_584.objOrFunc,_584.funcOrStr);
}
return;
}
if(src.removeEventListener){
src.removeEventListener(sig.substr(2),_587,false);
}else{
if(src.detachEvent){
src.detachEvent(sig,_587);
}else{
throw new Error("'src' must be a DOM element");
}
}
},disconnect:function(_588){
var self=MochiKit.Signal;
var _58a=self._observers;
var m=MochiKit.Base;
if(arguments.length>1){
var src=MochiKit.DOM.getElement(arguments[0]);
var sig=arguments[1];
var obj=arguments[2];
var func=arguments[3];
for(var i=_58a.length-1;i>=0;i--){
var o=_58a[i];
if(o.source===src&&o.signal===sig&&o.objOrFunc===obj&&o.funcOrStr===func){
self._disconnect(o);
if(!self._lock){
_58a.splice(i,1);
}else{
self._dirty=true;
}
return true;
}
}
}else{
var idx=m.findIdentical(_58a,_588);
if(idx>=0){
self._disconnect(_588);
if(!self._lock){
_58a.splice(idx,1);
}else{
self._dirty=true;
}
return true;
}
}
return false;
},disconnectAllTo:function(_593,_594){
var self=MochiKit.Signal;
var _596=self._observers;
var _597=self._disconnect;
var _598=self._lock;
var _599=self._dirty;
if(typeof (_594)==="undefined"){
_594=null;
}
for(var i=_596.length-1;i>=0;i--){
var _59b=_596[i];
if(_59b.objOrFunc===_593&&(_594===null||_59b.funcOrStr===_594)){
_597(_59b);
if(_598){
_599=true;
}else{
_596.splice(i,1);
}
}
}
self._dirty=_599;
},disconnectAll:function(src,sig){
src=MochiKit.DOM.getElement(src);
var m=MochiKit.Base;
var _59f=m.flattenArguments(m.extend(null,arguments,1));
var self=MochiKit.Signal;
var _5a1=self._disconnect;
var _5a2=self._observers;
var i,_5a4;
var _5a5=self._lock;
var _5a6=self._dirty;
if(_59f.length===0){
for(i=_5a2.length-1;i>=0;i--){
_5a4=_5a2[i];
if(_5a4.source===src){
_5a1(_5a4);
if(!_5a5){
_5a2.splice(i,1);
}else{
_5a6=true;
}
}
}
}else{
var sigs={};
for(i=0;i<_59f.length;i++){
sigs[_59f[i]]=true;
}
for(i=_5a2.length-1;i>=0;i--){
_5a4=_5a2[i];
if(_5a4.source===src&&_5a4.signal in sigs){
_5a1(_5a4);
if(!_5a5){
_5a2.splice(i,1);
}else{
_5a6=true;
}
}
}
}
self._dirty=_5a6;
},signal:function(src,sig){
var self=MochiKit.Signal;
var _5ab=self._observers;
src=MochiKit.DOM.getElement(src);
var args=MochiKit.Base.extend(null,arguments,2);
var _5ad=[];
self._lock=true;
for(var i=0;i<_5ab.length;i++){
var _5af=_5ab[i];
if(_5af.source===src&&_5af.signal===sig&&_5af.connected){
try{
_5af.listener.apply(src,args);
}
catch(e){
_5ad.push(e);
}
}
}
self._lock=false;
if(self._dirty){
self._dirty=false;
for(var i=_5ab.length-1;i>=0;i--){
if(!_5ab[i].connected){
_5ab.splice(i,1);
}
}
}
if(_5ad.length==1){
throw _5ad[0];
}else{
if(_5ad.length>1){
var e=new Error("Multiple errors thrown in handling 'sig', see errors property");
e.errors=_5ad;
throw e;
}
}
}});
MochiKit.Signal.EXPORT_OK=[];
MochiKit.Signal.EXPORT=["connect","disconnect","signal","disconnectAll","disconnectAllTo"];
MochiKit.Signal.__new__=function(win){
var m=MochiKit.Base;
this._document=document;
this._window=win;
this._lock=false;
this._dirty=false;
try{
this.connect(window,"onunload",this._unloadCache);
}
catch(e){
}
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Signal.__new__(this);
if(MochiKit.__export__){
connect=MochiKit.Signal.connect;
disconnect=MochiKit.Signal.disconnect;
disconnectAll=MochiKit.Signal.disconnectAll;
signal=MochiKit.Signal.signal;
}
MochiKit.Base._exportSymbols(this,MochiKit.Signal);
MochiKit.Base._deps("Position",["Base","DOM","Style"]);
MochiKit.Position.NAME="MochiKit.Position";
MochiKit.Position.VERSION="1.4";
MochiKit.Position.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Position.toString=function(){
return this.__repr__();
};
MochiKit.Position.EXPORT_OK=[];
MochiKit.Position.EXPORT=[];
MochiKit.Base.update(MochiKit.Position,{includeScrollOffsets:false,prepare:function(){
var _5b3=window.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft||0;
var _5b4=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;
this.windowOffset=new MochiKit.Style.Coordinates(_5b3,_5b4);
},cumulativeOffset:function(_5b5){
var _5b6=0;
var _5b7=0;
do{
_5b6+=_5b5.offsetTop||0;
_5b7+=_5b5.offsetLeft||0;
_5b5=_5b5.offsetParent;
}while(_5b5);
return new MochiKit.Style.Coordinates(_5b7,_5b6);
},realOffset:function(_5b8){
var _5b9=0;
var _5ba=0;
do{
_5b9+=_5b8.scrollTop||0;
_5ba+=_5b8.scrollLeft||0;
_5b8=_5b8.parentNode;
}while(_5b8);
return new MochiKit.Style.Coordinates(_5ba,_5b9);
},within:function(_5bb,x,y){
if(this.includeScrollOffsets){
return this.withinIncludingScrolloffsets(_5bb,x,y);
}
this.xcomp=x;
this.ycomp=y;
this.offset=this.cumulativeOffset(_5bb);
if(_5bb.style.position=="fixed"){
this.offset.x+=this.windowOffset.x;
this.offset.y+=this.windowOffset.y;
}
return (y>=this.offset.y&&y<this.offset.y+_5bb.offsetHeight&&x>=this.offset.x&&x<this.offset.x+_5bb.offsetWidth);
},withinIncludingScrolloffsets:function(_5be,x,y){
var _5c1=this.realOffset(_5be);
this.xcomp=x+_5c1.x-this.windowOffset.x;
this.ycomp=y+_5c1.y-this.windowOffset.y;
this.offset=this.cumulativeOffset(_5be);
return (this.ycomp>=this.offset.y&&this.ycomp<this.offset.y+_5be.offsetHeight&&this.xcomp>=this.offset.x&&this.xcomp<this.offset.x+_5be.offsetWidth);
},overlap:function(mode,_5c3){
if(!mode){
return 0;
}
if(mode=="vertical"){
return ((this.offset.y+_5c3.offsetHeight)-this.ycomp)/_5c3.offsetHeight;
}
if(mode=="horizontal"){
return ((this.offset.x+_5c3.offsetWidth)-this.xcomp)/_5c3.offsetWidth;
}
},absolutize:function(_5c4){
_5c4=MochiKit.DOM.getElement(_5c4);
if(_5c4.style.position=="absolute"){
return;
}
MochiKit.Position.prepare();
var _5c5=MochiKit.Position.positionedOffset(_5c4);
var _5c6=_5c4.clientWidth;
var _5c7=_5c4.clientHeight;
var _5c8={"position":_5c4.style.position,"left":_5c5.x-parseFloat(_5c4.style.left||0),"top":_5c5.y-parseFloat(_5c4.style.top||0),"width":_5c4.style.width,"height":_5c4.style.height};
_5c4.style.position="absolute";
_5c4.style.top=_5c5.y+"px";
_5c4.style.left=_5c5.x+"px";
_5c4.style.width=_5c6+"px";
_5c4.style.height=_5c7+"px";
return _5c8;
},positionedOffset:function(_5c9){
var _5ca=0,_5cb=0;
do{
_5ca+=_5c9.offsetTop||0;
_5cb+=_5c9.offsetLeft||0;
_5c9=_5c9.offsetParent;
if(_5c9){
p=MochiKit.Style.getStyle(_5c9,"position");
if(p=="relative"||p=="absolute"){
break;
}
}
}while(_5c9);
return new MochiKit.Style.Coordinates(_5cb,_5ca);
},relativize:function(_5cc,_5cd){
_5cc=MochiKit.DOM.getElement(_5cc);
if(_5cc.style.position=="relative"){
return;
}
MochiKit.Position.prepare();
var top=parseFloat(_5cc.style.top||0)-(_5cd["top"]||0);
var left=parseFloat(_5cc.style.left||0)-(_5cd["left"]||0);
_5cc.style.position=_5cd["position"];
_5cc.style.top=top+"px";
_5cc.style.left=left+"px";
_5cc.style.width=_5cd["width"];
_5cc.style.height=_5cd["height"];
},clone:function(_5d0,_5d1){
_5d0=MochiKit.DOM.getElement(_5d0);
_5d1=MochiKit.DOM.getElement(_5d1);
_5d1.style.position="absolute";
var _5d2=this.cumulativeOffset(_5d0);
_5d1.style.top=_5d2.y+"px";
_5d1.style.left=_5d2.x+"px";
_5d1.style.width=_5d0.offsetWidth+"px";
_5d1.style.height=_5d0.offsetHeight+"px";
},page:function(_5d3){
var _5d4=0;
var _5d5=0;
var _5d6=_5d3;
do{
_5d4+=_5d6.offsetTop||0;
_5d5+=_5d6.offsetLeft||0;
if(_5d6.offsetParent==document.body&&MochiKit.Style.getStyle(_5d6,"position")=="absolute"){
break;
}
}while(_5d6=_5d6.offsetParent);
_5d6=_5d3;
do{
_5d4-=_5d6.scrollTop||0;
_5d5-=_5d6.scrollLeft||0;
}while(_5d6=_5d6.parentNode);
return new MochiKit.Style.Coordinates(_5d5,_5d4);
}});
MochiKit.Position.__new__=function(win){
var m=MochiKit.Base;
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Position.__new__(this);
MochiKit.Base._deps("Visual",["Base","DOM","Style","Color","Position"]);
MochiKit.Visual.NAME="MochiKit.Visual";
MochiKit.Visual.VERSION="1.4";
MochiKit.Visual.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Visual.toString=function(){
return this.__repr__();
};
MochiKit.Visual._RoundCorners=function(e,_5da){
e=MochiKit.DOM.getElement(e);
this._setOptions(_5da);
if(this.options.__unstable__wrapElement){
e=this._doWrap(e);
}
var _5db=this.options.color;
var C=MochiKit.Color.Color;
if(this.options.color==="fromElement"){
_5db=C.fromBackground(e);
}else{
if(!(_5db instanceof C)){
_5db=C.fromString(_5db);
}
}
this.isTransparent=(_5db.asRGB().a<=0);
var _5dd=this.options.bgColor;
if(this.options.bgColor==="fromParent"){
_5dd=C.fromBackground(e.offsetParent);
}else{
if(!(_5dd instanceof C)){
_5dd=C.fromString(_5dd);
}
}
this._roundCornersImpl(e,_5db,_5dd);
};
MochiKit.Visual._RoundCorners.prototype={_doWrap:function(e){
var _5df=e.parentNode;
var doc=MochiKit.DOM.currentDocument();
if(typeof (doc.defaultView)==="undefined"||doc.defaultView===null){
return e;
}
var _5e1=doc.defaultView.getComputedStyle(e,null);
if(typeof (_5e1)==="undefined"||_5e1===null){
return e;
}
var _5e2=MochiKit.DOM.DIV({"style":{display:"block",marginTop:_5e1.getPropertyValue("padding-top"),marginRight:_5e1.getPropertyValue("padding-right"),marginBottom:_5e1.getPropertyValue("padding-bottom"),marginLeft:_5e1.getPropertyValue("padding-left"),padding:"0px"}});
_5e2.innerHTML=e.innerHTML;
e.innerHTML="";
e.appendChild(_5e2);
return e;
},_roundCornersImpl:function(e,_5e4,_5e5){
if(this.options.border){
this._renderBorder(e,_5e5);
}
if(this._isTopRounded()){
this._roundTopCorners(e,_5e4,_5e5);
}
if(this._isBottomRounded()){
this._roundBottomCorners(e,_5e4,_5e5);
}
},_renderBorder:function(el,_5e7){
var _5e8="1px solid "+this._borderColor(_5e7);
var _5e9="border-left: "+_5e8;
var _5ea="border-right: "+_5e8;
var _5eb="style='"+_5e9+";"+_5ea+"'";
el.innerHTML="<div "+_5eb+">"+el.innerHTML+"</div>";
},_roundTopCorners:function(el,_5ed,_5ee){
var _5ef=this._createCorner(_5ee);
for(var i=0;i<this.options.numSlices;i++){
_5ef.appendChild(this._createCornerSlice(_5ed,_5ee,i,"top"));
}
el.style.paddingTop=0;
el.insertBefore(_5ef,el.firstChild);
},_roundBottomCorners:function(el,_5f2,_5f3){
var _5f4=this._createCorner(_5f3);
for(var i=(this.options.numSlices-1);i>=0;i--){
_5f4.appendChild(this._createCornerSlice(_5f2,_5f3,i,"bottom"));
}
el.style.paddingBottom=0;
el.appendChild(_5f4);
},_createCorner:function(_5f6){
var dom=MochiKit.DOM;
return dom.DIV({style:{backgroundColor:_5f6.toString()}});
},_createCornerSlice:function(_5f8,_5f9,n,_5fb){
var _5fc=MochiKit.DOM.SPAN();
var _5fd=_5fc.style;
_5fd.backgroundColor=_5f8.toString();
_5fd.display="block";
_5fd.height="1px";
_5fd.overflow="hidden";
_5fd.fontSize="1px";
var _5fe=this._borderColor(_5f8,_5f9);
if(this.options.border&&n===0){
_5fd.borderTopStyle="solid";
_5fd.borderTopWidth="1px";
_5fd.borderLeftWidth="0px";
_5fd.borderRightWidth="0px";
_5fd.borderBottomWidth="0px";
_5fd.height="0px";
_5fd.borderColor=_5fe.toString();
}else{
if(_5fe){
_5fd.borderColor=_5fe.toString();
_5fd.borderStyle="solid";
_5fd.borderWidth="0px 1px";
}
}
if(!this.options.compact&&(n==(this.options.numSlices-1))){
_5fd.height="2px";
}
this._setMargin(_5fc,n,_5fb);
this._setBorder(_5fc,n,_5fb);
return _5fc;
},_setOptions:function(_5ff){
this.options={corners:"all",color:"fromElement",bgColor:"fromParent",blend:true,border:false,compact:false,__unstable__wrapElement:false};
MochiKit.Base.update(this.options,_5ff);
this.options.numSlices=(this.options.compact?2:4);
},_whichSideTop:function(){
var _600=this.options.corners;
if(this._hasString(_600,"all","top")){
return "";
}
var _601=(_600.indexOf("tl")!=-1);
var _602=(_600.indexOf("tr")!=-1);
if(_601&&_602){
return "";
}
if(_601){
return "left";
}
if(_602){
return "right";
}
return "";
},_whichSideBottom:function(){
var _603=this.options.corners;
if(this._hasString(_603,"all","bottom")){
return "";
}
var _604=(_603.indexOf("bl")!=-1);
var _605=(_603.indexOf("br")!=-1);
if(_604&&_605){
return "";
}
if(_604){
return "left";
}
if(_605){
return "right";
}
return "";
},_borderColor:function(_606,_607){
if(_606=="transparent"){
return _607;
}else{
if(this.options.border){
return this.options.border;
}else{
if(this.options.blend){
return _607.blendedColor(_606);
}
}
}
return "";
},_setMargin:function(el,n,_60a){
var _60b=this._marginSize(n)+"px";
var _60c=(_60a=="top"?this._whichSideTop():this._whichSideBottom());
var _60d=el.style;
if(_60c=="left"){
_60d.marginLeft=_60b;
_60d.marginRight="0px";
}else{
if(_60c=="right"){
_60d.marginRight=_60b;
_60d.marginLeft="0px";
}else{
_60d.marginLeft=_60b;
_60d.marginRight=_60b;
}
}
},_setBorder:function(el,n,_610){
var _611=this._borderSize(n)+"px";
var _612=(_610=="top"?this._whichSideTop():this._whichSideBottom());
var _613=el.style;
if(_612=="left"){
_613.borderLeftWidth=_611;
_613.borderRightWidth="0px";
}else{
if(_612=="right"){
_613.borderRightWidth=_611;
_613.borderLeftWidth="0px";
}else{
_613.borderLeftWidth=_611;
_613.borderRightWidth=_611;
}
}
},_marginSize:function(n){
if(this.isTransparent){
return 0;
}
var o=this.options;
if(o.compact&&o.blend){
var _616=[1,0];
return _616[n];
}else{
if(o.compact){
var _617=[2,1];
return _617[n];
}else{
if(o.blend){
var _618=[3,2,1,0];
return _618[n];
}else{
var _619=[5,3,2,1];
return _619[n];
}
}
}
},_borderSize:function(n){
var o=this.options;
var _61c;
if(o.compact&&(o.blend||this.isTransparent)){
return 1;
}else{
if(o.compact){
_61c=[1,0];
}else{
if(o.blend){
_61c=[2,1,1,1];
}else{
if(o.border){
_61c=[0,2,0,0];
}else{
if(this.isTransparent){
_61c=[5,3,2,1];
}else{
return 0;
}
}
}
}
}
return _61c[n];
},_hasString:function(str){
for(var i=1;i<arguments.length;i++){
if(str.indexOf(arguments[i])!=-1){
return true;
}
}
return false;
},_isTopRounded:function(){
return this._hasString(this.options.corners,"all","top","tl","tr");
},_isBottomRounded:function(){
return this._hasString(this.options.corners,"all","bottom","bl","br");
},_hasSingleTextChild:function(el){
return (el.childNodes.length==1&&el.childNodes[0].nodeType==3);
}};
MochiKit.Visual.roundElement=function(e,_621){
new MochiKit.Visual._RoundCorners(e,_621);
};
MochiKit.Visual.roundClass=function(_622,_623,_624){
var _625=MochiKit.DOM.getElementsByTagAndClassName(_622,_623);
for(var i=0;i<_625.length;i++){
MochiKit.Visual.roundElement(_625[i],_624);
}
};
MochiKit.Visual.tagifyText=function(_627,_628){
_628=_628||"position:relative";
if(/MSIE/.test(navigator.userAgent)){
_628+=";zoom:1";
}
_627=MochiKit.DOM.getElement(_627);
var ma=MochiKit.Base.map;
ma(function(_62a){
if(_62a.nodeType==3){
ma(function(_62b){
_627.insertBefore(MochiKit.DOM.SPAN({style:_628},_62b==" "?String.fromCharCode(160):_62b),_62a);
},_62a.nodeValue.split(""));
MochiKit.DOM.removeElement(_62a);
}
},_627.childNodes);
};
MochiKit.Visual.forceRerendering=function(_62c){
try{
_62c=MochiKit.DOM.getElement(_62c);
var n=document.createTextNode(" ");
_62c.appendChild(n);
_62c.removeChild(n);
}
catch(e){
}
};
MochiKit.Visual.multiple=function(_62e,_62f,_630){
_630=MochiKit.Base.update({speed:0.1,delay:0},_630);
var _631=_630.delay;
var _632=0;
MochiKit.Base.map(function(_633){
_630.delay=_632*_630.speed+_631;
new _62f(_633,_630);
_632+=1;
},_62e);
};
MochiKit.Visual.PAIRS={"slide":["slideDown","slideUp"],"blind":["blindDown","blindUp"],"appear":["appear","fade"],"size":["grow","shrink"]};
MochiKit.Visual.toggle=function(_634,_635,_636){
_634=MochiKit.DOM.getElement(_634);
_635=(_635||"appear").toLowerCase();
_636=MochiKit.Base.update({queue:{position:"end",scope:(_634.id||"global"),limit:1}},_636);
var v=MochiKit.Visual;
v[MochiKit.Style.getStyle(_634,"display")!="none"?v.PAIRS[_635][1]:v.PAIRS[_635][0]](_634,_636);
};
MochiKit.Visual.Transitions={};
MochiKit.Visual.Transitions.linear=function(pos){
return pos;
};
MochiKit.Visual.Transitions.sinoidal=function(pos){
return 0.5-Math.cos(pos*Math.PI)/2;
};
MochiKit.Visual.Transitions.reverse=function(pos){
return 1-pos;
};
MochiKit.Visual.Transitions.flicker=function(pos){
return 0.25-Math.cos(pos*Math.PI)/4+Math.random()/2;
};
MochiKit.Visual.Transitions.wobble=function(pos){
return 0.5-Math.cos(9*pos*Math.PI)/2;
};
MochiKit.Visual.Transitions.pulse=function(pos,_63e){
if(_63e){
pos*=2*_63e;
}else{
pos*=10;
}
var _63f=pos-Math.floor(pos);
return (Math.floor(pos)%2==0)?_63f:1-_63f;
};
MochiKit.Visual.Transitions.parabolic=function(pos){
return pos*pos;
};
MochiKit.Visual.Transitions.none=function(pos){
return 0;
};
MochiKit.Visual.Transitions.full=function(pos){
return 1;
};
MochiKit.Visual.ScopedQueue=function(){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls();
}
this.__init__();
};
MochiKit.Base.update(MochiKit.Visual.ScopedQueue.prototype,{__init__:function(){
this.effects=[];
this.interval=null;
},add:function(_644){
var _645=new Date().getTime();
var _646=(typeof (_644.options.queue)=="string")?_644.options.queue:_644.options.queue.position;
var ma=MochiKit.Base.map;
switch(_646){
case "front":
ma(function(e){
if(e.state=="idle"){
e.startOn+=_644.finishOn;
e.finishOn+=_644.finishOn;
}
},this.effects);
break;
case "end":
var _649;
ma(function(e){
var i=e.finishOn;
if(i>=(_649||i)){
_649=i;
}
},this.effects);
_645=_649||_645;
break;
case "break":
ma(function(e){
e.finalize();
},this.effects);
break;
}
_644.startOn+=_645;
_644.finishOn+=_645;
if(!_644.options.queue.limit||this.effects.length<_644.options.queue.limit){
this.effects.push(_644);
}
if(!this.interval){
this.interval=this.startLoop(MochiKit.Base.bind(this.loop,this),40);
}
},startLoop:function(func,_64e){
return setInterval(func,_64e);
},remove:function(_64f){
this.effects=MochiKit.Base.filter(function(e){
return e!=_64f;
},this.effects);
if(!this.effects.length){
this.stopLoop(this.interval);
this.interval=null;
}
},stopLoop:function(_651){
clearInterval(_651);
},loop:function(){
var _652=new Date().getTime();
MochiKit.Base.map(function(_653){
_653.loop(_652);
},this.effects);
}});
MochiKit.Visual.Queues={instances:{},get:function(_654){
if(typeof (_654)!="string"){
return _654;
}
if(!this.instances[_654]){
this.instances[_654]=new MochiKit.Visual.ScopedQueue();
}
return this.instances[_654];
}};
MochiKit.Visual.Queue=MochiKit.Visual.Queues.get("global");
MochiKit.Visual.DefaultOptions={transition:MochiKit.Visual.Transitions.sinoidal,duration:1,fps:25,sync:false,from:0,to:1,delay:0,queue:"parallel"};
MochiKit.Visual.Base=function(){
};
MochiKit.Visual.Base.prototype={__class__:MochiKit.Visual.Base,start:function(_655){
var v=MochiKit.Visual;
this.options=MochiKit.Base.setdefault(_655,v.DefaultOptions);
this.currentFrame=0;
this.state="idle";
this.startOn=this.options.delay*1000;
this.finishOn=this.startOn+(this.options.duration*1000);
this.event("beforeStart");
if(!this.options.sync){
v.Queues.get(typeof (this.options.queue)=="string"?"global":this.options.queue.scope).add(this);
}
},loop:function(_657){
if(_657>=this.startOn){
if(_657>=this.finishOn){
return this.finalize();
}
var pos=(_657-this.startOn)/(this.finishOn-this.startOn);
var _659=Math.round(pos*this.options.fps*this.options.duration);
if(_659>this.currentFrame){
this.render(pos);
this.currentFrame=_659;
}
}
},render:function(pos){
if(this.state=="idle"){
this.state="running";
this.event("beforeSetup");
this.setup();
this.event("afterSetup");
}
if(this.state=="running"){
if(this.options.transition){
pos=this.options.transition(pos);
}
pos*=(this.options.to-this.options.from);
pos+=this.options.from;
this.event("beforeUpdate");
this.update(pos);
this.event("afterUpdate");
}
},cancel:function(){
if(!this.options.sync){
MochiKit.Visual.Queues.get(typeof (this.options.queue)=="string"?"global":this.options.queue.scope).remove(this);
}
this.state="finished";
},finalize:function(){
this.render(1);
this.cancel();
this.event("beforeFinish");
this.finish();
this.event("afterFinish");
},setup:function(){
},finish:function(){
},update:function(_65b){
},event:function(_65c){
if(this.options[_65c+"Internal"]){
this.options[_65c+"Internal"](this);
}
if(this.options[_65c]){
this.options[_65c](this);
}
},repr:function(){
return "["+this.__class__.NAME+", options:"+MochiKit.Base.repr(this.options)+"]";
}};
MochiKit.Visual.Parallel=function(_65d,_65e){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_65d,_65e);
}
this.__init__(_65d,_65e);
};
MochiKit.Visual.Parallel.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Parallel.prototype,{__class__:MochiKit.Visual.Parallel,__init__:function(_660,_661){
this.effects=_660||[];
this.start(_661);
},update:function(_662){
MochiKit.Base.map(function(_663){
_663.render(_662);
},this.effects);
},finish:function(){
MochiKit.Base.map(function(_664){
_664.finalize();
},this.effects);
}});
MochiKit.Visual.Sequence=function(_665,_666){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_665,_666);
}
this.__init__(_665,_666);
};
MochiKit.Visual.Sequence.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Sequence.prototype,{__class__:MochiKit.Visual.Sequence,__init__:function(_668,_669){
var defs={transition:MochiKit.Visual.Transitions.linear,duration:0};
this.effects=_668||[];
MochiKit.Base.map(function(_66b){
defs.duration+=_66b.options.duration;
},this.effects);
MochiKit.Base.setdefault(_669,defs);
this.start(_669);
},update:function(_66c){
var time=_66c*this.options.duration;
for(var i=0;i<this.effects.length;i++){
var _66f=this.effects[i];
if(time<=_66f.options.duration){
_66f.render(time/_66f.options.duration);
break;
}else{
time-=_66f.options.duration;
}
}
},finish:function(){
MochiKit.Base.map(function(_670){
_670.finalize();
},this.effects);
}});
MochiKit.Visual.Opacity=function(_671,_672){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_671,_672);
}
this.__init__(_671,_672);
};
MochiKit.Visual.Opacity.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Opacity.prototype,{__class__:MochiKit.Visual.Opacity,__init__:function(_674,_675){
var b=MochiKit.Base;
var s=MochiKit.Style;
this.element=MochiKit.DOM.getElement(_674);
if(this.element.currentStyle&&(!this.element.currentStyle.hasLayout)){
s.setStyle(this.element,{zoom:1});
}
_675=b.update({from:s.getStyle(this.element,"opacity")||0,to:1},_675);
this.start(_675);
},update:function(_678){
MochiKit.Style.setStyle(this.element,{"opacity":_678});
}});
MochiKit.Visual.Move=function(_679,_67a){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_679,_67a);
}
this.__init__(_679,_67a);
};
MochiKit.Visual.Move.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Move.prototype,{__class__:MochiKit.Visual.Move,__init__:function(_67c,_67d){
this.element=MochiKit.DOM.getElement(_67c);
_67d=MochiKit.Base.update({x:0,y:0,mode:"relative"},_67d);
this.start(_67d);
},setup:function(){
MochiKit.DOM.makePositioned(this.element);
var s=this.element.style;
var _67f=s.visibility;
var _680=s.display;
if(_680=="none"){
s.visibility="hidden";
s.display="";
}
this.originalLeft=parseFloat(MochiKit.Style.getStyle(this.element,"left")||"0");
this.originalTop=parseFloat(MochiKit.Style.getStyle(this.element,"top")||"0");
if(this.options.mode=="absolute"){
this.options.x-=this.originalLeft;
this.options.y-=this.originalTop;
}
if(_680=="none"){
s.visibility=_67f;
s.display=_680;
}
},update:function(_681){
MochiKit.Style.setStyle(this.element,{left:Math.round(this.options.x*_681+this.originalLeft)+"px",top:Math.round(this.options.y*_681+this.originalTop)+"px"});
}});
MochiKit.Visual.Scale=function(_682,_683,_684){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_682,_683,_684);
}
this.__init__(_682,_683,_684);
};
MochiKit.Visual.Scale.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Scale.prototype,{__class__:MochiKit.Visual.Scale,__init__:function(_686,_687,_688){
this.element=MochiKit.DOM.getElement(_686);
_688=MochiKit.Base.update({scaleX:true,scaleY:true,scaleContent:true,scaleFromCenter:false,scaleMode:"box",scaleFrom:100,scaleTo:_687},_688);
this.start(_688);
},setup:function(){
this.restoreAfterFinish=this.options.restoreAfterFinish||false;
this.elementPositioning=MochiKit.Style.getStyle(this.element,"position");
var ma=MochiKit.Base.map;
var b=MochiKit.Base.bind;
this.originalStyle={};
ma(b(function(k){
this.originalStyle[k]=this.element.style[k];
},this),["top","left","width","height","fontSize"]);
this.originalTop=this.element.offsetTop;
this.originalLeft=this.element.offsetLeft;
var _68c=MochiKit.Style.getStyle(this.element,"font-size")||"100%";
ma(b(function(_68d){
if(_68c.indexOf(_68d)>0){
this.fontSize=parseFloat(_68c);
this.fontSizeType=_68d;
}
},this),["em","px","%"]);
this.factor=(this.options.scaleTo-this.options.scaleFrom)/100;
if(/^content/.test(this.options.scaleMode)){
this.dims=[this.element.scrollHeight,this.element.scrollWidth];
}else{
if(this.options.scaleMode=="box"){
this.dims=[this.element.offsetHeight,this.element.offsetWidth];
}else{
this.dims=[this.options.scaleMode.originalHeight,this.options.scaleMode.originalWidth];
}
}
},update:function(_68e){
var _68f=(this.options.scaleFrom/100)+(this.factor*_68e);
if(this.options.scaleContent&&this.fontSize){
MochiKit.Style.setStyle(this.element,{fontSize:this.fontSize*_68f+this.fontSizeType});
}
this.setDimensions(this.dims[0]*_68f,this.dims[1]*_68f);
},finish:function(){
if(this.restoreAfterFinish){
MochiKit.Style.setStyle(this.element,this.originalStyle);
}
},setDimensions:function(_690,_691){
var d={};
var r=Math.round;
if(/MSIE/.test(navigator.userAgent)){
r=Math.ceil;
}
if(this.options.scaleX){
d.width=r(_691)+"px";
}
if(this.options.scaleY){
d.height=r(_690)+"px";
}
if(this.options.scaleFromCenter){
var topd=(_690-this.dims[0])/2;
var _695=(_691-this.dims[1])/2;
if(this.elementPositioning=="absolute"){
if(this.options.scaleY){
d.top=this.originalTop-topd+"px";
}
if(this.options.scaleX){
d.left=this.originalLeft-_695+"px";
}
}else{
if(this.options.scaleY){
d.top=-topd+"px";
}
if(this.options.scaleX){
d.left=-_695+"px";
}
}
}
MochiKit.Style.setStyle(this.element,d);
}});
MochiKit.Visual.Highlight=function(_696,_697){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_696,_697);
}
this.__init__(_696,_697);
};
MochiKit.Visual.Highlight.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Highlight.prototype,{__class__:MochiKit.Visual.Highlight,__init__:function(_699,_69a){
this.element=MochiKit.DOM.getElement(_699);
_69a=MochiKit.Base.update({startcolor:"#ffff99"},_69a);
this.start(_69a);
},setup:function(){
var b=MochiKit.Base;
var s=MochiKit.Style;
if(s.getStyle(this.element,"display")=="none"){
this.cancel();
return;
}
this.oldStyle={backgroundImage:s.getStyle(this.element,"background-image")};
s.setStyle(this.element,{backgroundImage:"none"});
if(!this.options.endcolor){
this.options.endcolor=MochiKit.Color.Color.fromBackground(this.element).toHexString();
}
if(b.isUndefinedOrNull(this.options.restorecolor)){
this.options.restorecolor=s.getStyle(this.element,"background-color");
}
this._base=b.map(b.bind(function(i){
return parseInt(this.options.startcolor.slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
this._delta=b.map(b.bind(function(i){
return parseInt(this.options.endcolor.slice(i*2+1,i*2+3),16)-this._base[i];
},this),[0,1,2]);
},update:function(_69f){
var m="#";
MochiKit.Base.map(MochiKit.Base.bind(function(i){
m+=MochiKit.Color.toColorPart(Math.round(this._base[i]+this._delta[i]*_69f));
},this),[0,1,2]);
MochiKit.Style.setStyle(this.element,{backgroundColor:m});
},finish:function(){
MochiKit.Style.setStyle(this.element,MochiKit.Base.update(this.oldStyle,{backgroundColor:this.options.restorecolor}));
}});
MochiKit.Visual.ScrollTo=function(_6a2,_6a3){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_6a2,_6a3);
}
this.__init__(_6a2,_6a3);
};
MochiKit.Visual.ScrollTo.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.ScrollTo.prototype,{__class__:MochiKit.Visual.ScrollTo,__init__:function(_6a5,_6a6){
this.element=MochiKit.DOM.getElement(_6a5);
this.start(_6a6);
},setup:function(){
var p=MochiKit.Position;
p.prepare();
var _6a8=p.cumulativeOffset(this.element);
if(this.options.offset){
_6a8.y+=this.options.offset;
}
var max;
if(window.innerHeight){
max=window.innerHeight-window.height;
}else{
if(document.documentElement&&document.documentElement.clientHeight){
max=document.documentElement.clientHeight-document.body.scrollHeight;
}else{
if(document.body){
max=document.body.clientHeight-document.body.scrollHeight;
}
}
}
this.scrollStart=p.windowOffset.y;
this.delta=(_6a8.y>max?max:_6a8.y)-this.scrollStart;
},update:function(_6aa){
var p=MochiKit.Position;
p.prepare();
window.scrollTo(p.windowOffset.x,this.scrollStart+(_6aa*this.delta));
}});
MochiKit.Visual.CSS_LENGTH=/^(([\+\-]?[0-9\.]+)(em|ex|px|in|cm|mm|pt|pc|\%))|0$/;
MochiKit.Visual.Morph=function(_6ac,_6ad){
var cls=arguments.callee;
if(!(this instanceof cls)){
return new cls(_6ac,_6ad);
}
this.__init__(_6ac,_6ad);
};
MochiKit.Visual.Morph.prototype=new MochiKit.Visual.Base();
MochiKit.Base.update(MochiKit.Visual.Morph.prototype,{__class__:MochiKit.Visual.Morph,__init__:function(_6af,_6b0){
this.element=MochiKit.DOM.getElement(_6af);
this.start(_6b0);
},setup:function(){
var b=MochiKit.Base;
var _6b2=this.options.style;
this.styleStart={};
this.styleEnd={};
this.units={};
var _6b3,unit;
for(var s in _6b2){
_6b3=_6b2[s];
s=b.camelize(s);
if(MochiKit.Visual.CSS_LENGTH.test(_6b3)){
var _6b6=_6b3.match(/^([\+\-]?[0-9\.]+)(.*)$/);
_6b3=parseFloat(_6b6[1]);
unit=(_6b6.length==3)?_6b6[2]:null;
this.styleEnd[s]=_6b3;
this.units[s]=unit;
_6b3=MochiKit.Style.getStyle(this.element,s);
_6b6=_6b3.match(/^([\+\-]?[0-9\.]+)(.*)$/);
_6b3=parseFloat(_6b6[1]);
this.styleStart[s]=_6b3;
}else{
if(/[Cc]olor$/.test(s)){
var c=MochiKit.Color.Color;
_6b3=c.fromString(_6b3);
if(_6b3){
this.units[s]="color";
this.styleEnd[s]=_6b3.toHexString();
_6b3=MochiKit.Style.getStyle(this.element,s);
this.styleStart[s]=c.fromString(_6b3).toHexString();
this.styleStart[s]=b.map(b.bind(function(i){
return parseInt(this.styleStart[s].slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
this.styleEnd[s]=b.map(b.bind(function(i){
return parseInt(this.styleEnd[s].slice(i*2+1,i*2+3),16);
},this),[0,1,2]);
}
}else{
this.element.style[s]=_6b3;
}
}
}
},update:function(_6ba){
var _6bb;
for(var s in this.styleStart){
if(this.units[s]=="color"){
var m="#";
var _6be=this.styleStart[s];
var end=this.styleEnd[s];
MochiKit.Base.map(MochiKit.Base.bind(function(i){
m+=MochiKit.Color.toColorPart(Math.round(_6be[i]+(end[i]-_6be[i])*_6ba));
},this),[0,1,2]);
this.element.style[s]=m;
}else{
_6bb=this.styleStart[s]+Math.round((this.styleEnd[s]-this.styleStart[s])*_6ba*1000)/1000+this.units[s];
this.element.style[s]=_6bb;
}
}
}});
MochiKit.Visual.fade=function(_6c1,_6c2){
var s=MochiKit.Style;
var _6c4=s.getStyle(_6c1,"opacity");
_6c2=MochiKit.Base.update({from:s.getStyle(_6c1,"opacity")||1,to:0,afterFinishInternal:function(_6c5){
if(_6c5.options.to!==0){
return;
}
s.hideElement(_6c5.element);
s.setStyle(_6c5.element,{"opacity":_6c4});
}},_6c2);
return new MochiKit.Visual.Opacity(_6c1,_6c2);
};
MochiKit.Visual.appear=function(_6c6,_6c7){
var s=MochiKit.Style;
var v=MochiKit.Visual;
_6c7=MochiKit.Base.update({from:(s.getStyle(_6c6,"display")=="none"?0:s.getStyle(_6c6,"opacity")||0),to:1,afterFinishInternal:function(_6ca){
v.forceRerendering(_6ca.element);
},beforeSetupInternal:function(_6cb){
s.setStyle(_6cb.element,{"opacity":_6cb.options.from});
s.showElement(_6cb.element);
}},_6c7);
return new v.Opacity(_6c6,_6c7);
};
MochiKit.Visual.puff=function(_6cc,_6cd){
var s=MochiKit.Style;
var v=MochiKit.Visual;
_6cc=MochiKit.DOM.getElement(_6cc);
var _6d0=MochiKit.Style.getElementDimensions(_6cc,true);
var _6d1={position:s.getStyle(_6cc,"position"),top:_6cc.style.top,left:_6cc.style.left,width:_6cc.style.width,height:_6cc.style.height,opacity:s.getStyle(_6cc,"opacity")};
_6cd=MochiKit.Base.update({beforeSetupInternal:function(_6d2){
MochiKit.Position.absolutize(_6d2.effects[0].element);
},afterFinishInternal:function(_6d3){
s.hideElement(_6d3.effects[0].element);
s.setStyle(_6d3.effects[0].element,_6d1);
},scaleContent:true,scaleFromCenter:true},_6cd);
return new v.Parallel([new v.Scale(_6cc,200,{sync:true,scaleFromCenter:_6cd.scaleFromCenter,scaleMode:{originalHeight:_6d0.h,originalWidth:_6d0.w},scaleContent:_6cd.scaleContent,restoreAfterFinish:true}),new v.Opacity(_6cc,{sync:true,to:0})],_6cd);
};
MochiKit.Visual.blindUp=function(_6d4,_6d5){
var d=MochiKit.DOM;
_6d4=d.getElement(_6d4);
var _6d7=MochiKit.Style.getElementDimensions(_6d4,true);
var _6d8=d.makeClipping(_6d4);
_6d5=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleMode:{originalHeight:_6d7.h,originalWidth:_6d7.w},restoreAfterFinish:true,afterFinishInternal:function(_6d9){
MochiKit.Style.hideElement(_6d9.element);
d.undoClipping(_6d9.element,_6d8);
}},_6d5);
return new MochiKit.Visual.Scale(_6d4,0,_6d5);
};
MochiKit.Visual.blindDown=function(_6da,_6db){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_6da=d.getElement(_6da);
var _6de=s.getElementDimensions(_6da,true);
var _6df;
_6db=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleFrom:0,scaleMode:{originalHeight:_6de.h,originalWidth:_6de.w},restoreAfterFinish:true,afterSetupInternal:function(_6e0){
_6df=d.makeClipping(_6e0.element);
s.setStyle(_6e0.element,{height:"0px"});
s.showElement(_6e0.element);
},afterFinishInternal:function(_6e1){
d.undoClipping(_6e1.element,_6df);
}},_6db);
return new MochiKit.Visual.Scale(_6da,100,_6db);
};
MochiKit.Visual.switchOff=function(_6e2,_6e3){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_6e2=d.getElement(_6e2);
var _6e6=s.getElementDimensions(_6e2,true);
var _6e7=s.getStyle(_6e2,"opacity");
var _6e8;
_6e3=MochiKit.Base.update({duration:0.7,restoreAfterFinish:true,beforeSetupInternal:function(_6e9){
d.makePositioned(_6e2);
_6e8=d.makeClipping(_6e2);
},afterFinishInternal:function(_6ea){
s.hideElement(_6e2);
d.undoClipping(_6e2,_6e8);
d.undoPositioned(_6e2);
s.setStyle(_6e2,{"opacity":_6e7});
}},_6e3);
var v=MochiKit.Visual;
return new v.Sequence([new v.appear(_6e2,{sync:true,duration:0.57*_6e3.duration,from:0,transition:v.Transitions.flicker}),new v.Scale(_6e2,1,{sync:true,duration:0.43*_6e3.duration,scaleFromCenter:true,scaleX:false,scaleMode:{originalHeight:_6e6.h,originalWidth:_6e6.w},scaleContent:false,restoreAfterFinish:true})],_6e3);
};
MochiKit.Visual.dropOut=function(_6ec,_6ed){
var d=MochiKit.DOM;
var s=MochiKit.Style;
_6ec=d.getElement(_6ec);
var _6f0={top:s.getStyle(_6ec,"top"),left:s.getStyle(_6ec,"left"),opacity:s.getStyle(_6ec,"opacity")};
_6ed=MochiKit.Base.update({duration:0.5,distance:100,beforeSetupInternal:function(_6f1){
d.makePositioned(_6f1.effects[0].element);
},afterFinishInternal:function(_6f2){
s.hideElement(_6f2.effects[0].element);
d.undoPositioned(_6f2.effects[0].element);
s.setStyle(_6f2.effects[0].element,_6f0);
}},_6ed);
var v=MochiKit.Visual;
return new v.Parallel([new v.Move(_6ec,{x:0,y:_6ed.distance,sync:true}),new v.Opacity(_6ec,{sync:true,to:0})],_6ed);
};
MochiKit.Visual.shake=function(_6f4,_6f5){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_6f4=d.getElement(_6f4);
var _6f9={top:s.getStyle(_6f4,"top"),left:s.getStyle(_6f4,"left")};
_6f5=MochiKit.Base.update({duration:0.5,afterFinishInternal:function(_6fa){
d.undoPositioned(_6f4);
s.setStyle(_6f4,_6f9);
}},_6f5);
return new v.Sequence([new v.Move(_6f4,{sync:true,duration:0.1*_6f5.duration,x:20,y:0}),new v.Move(_6f4,{sync:true,duration:0.2*_6f5.duration,x:-40,y:0}),new v.Move(_6f4,{sync:true,duration:0.2*_6f5.duration,x:40,y:0}),new v.Move(_6f4,{sync:true,duration:0.2*_6f5.duration,x:-40,y:0}),new v.Move(_6f4,{sync:true,duration:0.2*_6f5.duration,x:40,y:0}),new v.Move(_6f4,{sync:true,duration:0.1*_6f5.duration,x:-20,y:0})],_6f5);
};
MochiKit.Visual.slideDown=function(_6fb,_6fc){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
_6fb=d.getElement(_6fb);
if(!_6fb.firstChild){
throw new Error("MochiKit.Visual.slideDown must be used on a element with a child");
}
d.removeEmptyTextNodes(_6fb);
var _700=s.getStyle(_6fb.firstChild,"bottom")||0;
var _701=s.getElementDimensions(_6fb,true);
var _702;
_6fc=b.update({scaleContent:false,scaleX:false,scaleFrom:0,scaleMode:{originalHeight:_701.h,originalWidth:_701.w},restoreAfterFinish:true,afterSetupInternal:function(_703){
d.makePositioned(_703.element);
d.makePositioned(_703.element.firstChild);
if(/Opera/.test(navigator.userAgent)){
s.setStyle(_703.element,{top:""});
}
_702=d.makeClipping(_703.element);
s.setStyle(_703.element,{height:"0px"});
s.showElement(_703.element);
},afterUpdateInternal:function(_704){
var _705=s.getElementDimensions(_704.element,true);
s.setStyle(_704.element.firstChild,{bottom:(_704.dims[0]-_705.h)+"px"});
},afterFinishInternal:function(_706){
d.undoClipping(_706.element,_702);
if(/MSIE/.test(navigator.userAgent)){
d.undoPositioned(_706.element);
d.undoPositioned(_706.element.firstChild);
}else{
d.undoPositioned(_706.element.firstChild);
d.undoPositioned(_706.element);
}
s.setStyle(_706.element.firstChild,{bottom:_700});
}},_6fc);
return new MochiKit.Visual.Scale(_6fb,100,_6fc);
};
MochiKit.Visual.slideUp=function(_707,_708){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var s=MochiKit.Style;
_707=d.getElement(_707);
if(!_707.firstChild){
throw new Error("MochiKit.Visual.slideUp must be used on a element with a child");
}
d.removeEmptyTextNodes(_707);
var _70c=s.getStyle(_707.firstChild,"bottom");
var _70d=s.getElementDimensions(_707,true);
var _70e;
_708=b.update({scaleContent:false,scaleX:false,scaleMode:{originalHeight:_70d.h,originalWidth:_70d.w},scaleFrom:100,restoreAfterFinish:true,beforeStartInternal:function(_70f){
d.makePositioned(_70f.element);
d.makePositioned(_70f.element.firstChild);
if(/Opera/.test(navigator.userAgent)){
s.setStyle(_70f.element,{top:""});
}
_70e=d.makeClipping(_70f.element);
s.showElement(_70f.element);
},afterUpdateInternal:function(_710){
var _711=s.getElementDimensions(_710.element,true);
s.setStyle(_710.element.firstChild,{bottom:(_710.dims[0]-_711.h)+"px"});
},afterFinishInternal:function(_712){
s.hideElement(_712.element);
d.undoClipping(_712.element,_70e);
d.undoPositioned(_712.element.firstChild);
d.undoPositioned(_712.element);
s.setStyle(_712.element.firstChild,{bottom:_70c});
}},_708);
return new MochiKit.Visual.Scale(_707,0,_708);
};
MochiKit.Visual.squish=function(_713,_714){
var d=MochiKit.DOM;
var b=MochiKit.Base;
var _717=MochiKit.Style.getElementDimensions(_713,true);
var _718;
_714=b.update({restoreAfterFinish:true,scaleMode:{originalHeight:_717.w,originalWidth:_717.h},beforeSetupInternal:function(_719){
_718=d.makeClipping(_719.element);
},afterFinishInternal:function(_71a){
MochiKit.Style.hideElement(_71a.element);
d.undoClipping(_71a.element,_718);
}},_714);
return new MochiKit.Visual.Scale(_713,/Opera/.test(navigator.userAgent)?1:0,_714);
};
MochiKit.Visual.grow=function(_71b,_71c){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_71b=d.getElement(_71b);
_71c=MochiKit.Base.update({direction:"center",moveTransition:v.Transitions.sinoidal,scaleTransition:v.Transitions.sinoidal,opacityTransition:v.Transitions.full,scaleContent:true,scaleFromCenter:false},_71c);
var _720={top:_71b.style.top,left:_71b.style.left,height:_71b.style.height,width:_71b.style.width,opacity:s.getStyle(_71b,"opacity")};
var dims=s.getElementDimensions(_71b,true);
var _722,_723;
var _724,_725;
switch(_71c.direction){
case "top-left":
_722=_723=_724=_725=0;
break;
case "top-right":
_722=dims.w;
_723=_725=0;
_724=-dims.w;
break;
case "bottom-left":
_722=_724=0;
_723=dims.h;
_725=-dims.h;
break;
case "bottom-right":
_722=dims.w;
_723=dims.h;
_724=-dims.w;
_725=-dims.h;
break;
case "center":
_722=dims.w/2;
_723=dims.h/2;
_724=-dims.w/2;
_725=-dims.h/2;
break;
}
var _726=MochiKit.Base.update({beforeSetupInternal:function(_727){
s.setStyle(_727.effects[0].element,{height:"0px"});
s.showElement(_727.effects[0].element);
},afterFinishInternal:function(_728){
d.undoClipping(_728.effects[0].element);
d.undoPositioned(_728.effects[0].element);
s.setStyle(_728.effects[0].element,_720);
}},_71c);
return new v.Move(_71b,{x:_722,y:_723,duration:0.01,beforeSetupInternal:function(_729){
s.hideElement(_729.element);
d.makeClipping(_729.element);
d.makePositioned(_729.element);
},afterFinishInternal:function(_72a){
new v.Parallel([new v.Opacity(_72a.element,{sync:true,to:1,from:0,transition:_71c.opacityTransition}),new v.Move(_72a.element,{x:_724,y:_725,sync:true,transition:_71c.moveTransition}),new v.Scale(_72a.element,100,{scaleMode:{originalHeight:dims.h,originalWidth:dims.w},sync:true,scaleFrom:/Opera/.test(navigator.userAgent)?1:0,transition:_71c.scaleTransition,scaleContent:_71c.scaleContent,scaleFromCenter:_71c.scaleFromCenter,restoreAfterFinish:true})],_726);
}});
};
MochiKit.Visual.shrink=function(_72b,_72c){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_72b=d.getElement(_72b);
_72c=MochiKit.Base.update({direction:"center",moveTransition:v.Transitions.sinoidal,scaleTransition:v.Transitions.sinoidal,opacityTransition:v.Transitions.none,scaleContent:true,scaleFromCenter:false},_72c);
var _730={top:_72b.style.top,left:_72b.style.left,height:_72b.style.height,width:_72b.style.width,opacity:s.getStyle(_72b,"opacity")};
var dims=s.getElementDimensions(_72b,true);
var _732,_733;
switch(_72c.direction){
case "top-left":
_732=_733=0;
break;
case "top-right":
_732=dims.w;
_733=0;
break;
case "bottom-left":
_732=0;
_733=dims.h;
break;
case "bottom-right":
_732=dims.w;
_733=dims.h;
break;
case "center":
_732=dims.w/2;
_733=dims.h/2;
break;
}
var _734;
var _735=MochiKit.Base.update({beforeStartInternal:function(_736){
_734=d.makePositioned(_736.effects[0].element);
d.makeClipping(_736.effects[0].element);
},afterFinishInternal:function(_737){
s.hideElement(_737.effects[0].element);
d.undoClipping(_737.effects[0].element,_734);
d.undoPositioned(_737.effects[0].element);
s.setStyle(_737.effects[0].element,_730);
}},_72c);
return new v.Parallel([new v.Opacity(_72b,{sync:true,to:0,from:1,transition:_72c.opacityTransition}),new v.Scale(_72b,/Opera/.test(navigator.userAgent)?1:0,{scaleMode:{originalHeight:dims.h,originalWidth:dims.w},sync:true,transition:_72c.scaleTransition,scaleContent:_72c.scaleContent,scaleFromCenter:_72c.scaleFromCenter,restoreAfterFinish:true}),new v.Move(_72b,{x:_732,y:_733,sync:true,transition:_72c.moveTransition})],_735);
};
MochiKit.Visual.pulsate=function(_738,_739){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var b=MochiKit.Base;
var _73d=MochiKit.Style.getStyle(_738,"opacity");
_739=b.update({duration:3,from:0,afterFinishInternal:function(_73e){
MochiKit.Style.setStyle(_73e.element,{"opacity":_73d});
}},_739);
var _73f=_739.transition||v.Transitions.sinoidal;
_739.transition=function(pos){
return _73f(1-v.Transitions.pulse(pos,_739.pulses));
};
return new v.Opacity(_738,_739);
};
MochiKit.Visual.fold=function(_741,_742){
var d=MochiKit.DOM;
var v=MochiKit.Visual;
var s=MochiKit.Style;
_741=d.getElement(_741);
var _746=s.getElementDimensions(_741,true);
var _747={top:_741.style.top,left:_741.style.left,width:_741.style.width,height:_741.style.height};
var _748=d.makeClipping(_741);
_742=MochiKit.Base.update({scaleContent:false,scaleX:false,scaleMode:{originalHeight:_746.h,originalWidth:_746.w},afterFinishInternal:function(_749){
new v.Scale(_741,1,{scaleContent:false,scaleY:false,scaleMode:{originalHeight:_746.h,originalWidth:_746.w},afterFinishInternal:function(_74a){
s.hideElement(_74a.element);
d.undoClipping(_74a.element,_748);
s.setStyle(_74a.element,_747);
}});
}},_742);
return new v.Scale(_741,5,_742);
};
MochiKit.Visual.Color=MochiKit.Color.Color;
MochiKit.Visual.getElementsComputedStyle=MochiKit.DOM.computedStyle;
MochiKit.Visual.__new__=function(){
var m=MochiKit.Base;
m.nameFunctions(this);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
};
MochiKit.Visual.EXPORT=["roundElement","roundClass","tagifyText","multiple","toggle","Parallel","Sequence","Opacity","Move","Scale","Highlight","ScrollTo","Morph","fade","appear","puff","blindUp","blindDown","switchOff","dropOut","shake","slideDown","slideUp","squish","grow","shrink","pulsate","fold"];
MochiKit.Visual.EXPORT_OK=["Base","PAIRS"];
MochiKit.Visual.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Visual);
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.MochiKit)=="undefined"){
MochiKit.MochiKit={};
}
MochiKit.MochiKit.NAME="MochiKit.MochiKit";
MochiKit.MochiKit.VERSION="1.4";
MochiKit.MochiKit.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.MochiKit.toString=function(){
return this.__repr__();
};
MochiKit.MochiKit.SUBMODULES=["Base","Iter","Logging","DateTime","Format","Async","DOM","Selector","Style","LoggingPane","Color","Signal","Position","Visual"];
if(typeof (JSAN)!="undefined"||typeof (dojo)!="undefined"){
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.MochiKit");
(function(lst){
for(var i=0;i<lst.length;i++){
dojo.require("MochiKit."+lst[i]);
}
})(MochiKit.MochiKit.SUBMODULES);
}
if(typeof (JSAN)!="undefined"){
(function(lst){
for(var i=0;i<lst.length;i++){
JSAN.use("MochiKit."+lst[i],[]);
}
})(MochiKit.MochiKit.SUBMODULES);
}
(function(){
var _750=MochiKit.Base.extend;
var self=MochiKit.MochiKit;
var _752=self.SUBMODULES;
var _753=[];
var _754=[];
var _755={};
var i,k,m,all;
for(i=0;i<_752.length;i++){
m=MochiKit[_752[i]];
_750(_753,m.EXPORT);
_750(_754,m.EXPORT_OK);
for(k in m.EXPORT_TAGS){
_755[k]=_750(_755[k],m.EXPORT_TAGS[k]);
}
all=m.EXPORT_TAGS[":all"];
if(!all){
all=_750(null,m.EXPORT,m.EXPORT_OK);
}
var j;
for(j=0;j<all.length;j++){
k=all[j];
self[k]=m[k];
}
}
self.EXPORT=_753;
self.EXPORT_OK=_754;
self.EXPORT_TAGS=_755;
}());
}else{
if(typeof (MochiKit.__compat__)=="undefined"){
MochiKit.__compat__=true;
}
(function(){
if(typeof (document)=="undefined"){
return;
}
var _75b=document.getElementsByTagName("script");
var _75c="http://www.w3.org/1999/xhtml";
var _75d="http://www.w3.org/2000/svg";
var _75e="http://www.w3.org/1999/xlink";
var _75f="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
var base=null;
var _761=null;
var _762={};
var i;
var src;
for(i=0;i<_75b.length;i++){
src=null;
switch(_75b[i].namespaceURI){
case _75d:
src=_75b[i].getAttributeNS(_75e,"href");
break;
default:
src=_75b[i].getAttribute("src");
break;
}
if(!src){
continue;
}
_762[src]=true;
if(src.match(/MochiKit.js(\?.*)?$/)){
base=src.substring(0,src.lastIndexOf("MochiKit.js"));
_761=_75b[i];
}
}
if(base===null){
return;
}
var _765=MochiKit.MochiKit.SUBMODULES;
for(var i=0;i<_765.length;i++){
if(MochiKit[_765[i]]){
continue;
}
var uri=base+_765[i]+".js";
if(uri in _762){
continue;
}
if(_761.namespaceURI==_75d||_761.namespaceURI==_75f){
var s=document.createElementNS(_761.namespaceURI,"script");
s.setAttribute("id","MochiKit_"+base+_765[i]);
if(_761.namespaceURI==_75d){
s.setAttributeNS(_75e,"href",uri);
}else{
s.setAttribute("src",uri);
}
s.setAttribute("type","application/x-javascript");
_761.parentNode.appendChild(s);
}else{
document.write("<"+_761.nodeName+" src=\""+uri+"\" type=\"text/javascript\"></script>");
}
}
})();
}


