this.mochikit=this.mochikit||{},this.mochikit.async=function(t){"use strict";function n(t){return new k((n,e)=>{let i=t.length-1,r=[];for(let s of t)s.tap(t=>{--i;r.push(t);0===i&&n(r)}),tapCatch(e)})}function e(t,n){return function(...e){return t.call(this,...e).catch(n)}}function i(t,n){return function(...e){return t.call(this,...e).then(n)}}function r(t,n){if("function"!=typeof t)throw new Error("Evaluating strings and bogus functions are not supported.");setTimeout(t,n)}function s(t){t.catch(()=>{})}function o(t,n){t.then(e=>{let i=e;for(let r of n)i=r(i,t,e,n);return i})}function u(t){setTimeout(t,0)}function h(t,n){return setTimeout(n=>t.resolve(n),n),t}function c(t,n){return setTimeout(n=>t.reject(n),n),t}function f(t,n,e,i){t.then(r=>n(r,t)?e(r,t):i(r,t))}function a(t,n){fetch(t,n).then(t=>t.arrayBuffer())}function l(t,n){fetch(t,n).then(t=>t.blob())}function d(t,n){fetch(t,n).then(t=>t.formData())}function m(t,n){fetch(t,n).then(t=>t.json())}function p(t,n){fetch(t,n).then(t=>t.text())}function g(t){return"[object Promise]"===Object.prototype.toString.call(t)}function v(t){return"object"==typeof t&&"function"==typeof t.then}function y(t){return g(t)||v(t)}function w(t){return new Promise((n,e)=>{t.then(t=>{n(t);return t})})}function _(t){return(new k).reject(t)}function E(t){return(new k).resolve(t)}function b(t,n,{async:async=!0,user:user,password:password},{done:done,error:error,progress:progress,orsc:orsc}){let e=new XMLHttpRequest;return e.open(t,n,async,user,password),done&&e.addEventListener("load",done),error&&e.addEventListener("error",error),progress&&e.addEventListener("progress",progress),orsc&&e.addEventListener("readystatechange",orsc),e.send(),e}function T(t,n){return t.then(e=>{n(e,t);return e})}function C(t,n){return t.finally(e=>{n(e,t);return e})}function j(t){return new Promise(n=>{t.finally(n)})}let M=0;class k{constructor(t,n){this.id=++M,this.chain=[],this.__error_handlers__=[],this.silentlyCancelled=!1,this.value=void 0,this.canceller=n,this.state=0,"function"==typeof t&&this.fire(t)}fire(t){function n(t){i.reject(t)}function e(t){i.resolve(t)}let i=this;try{t(e,n)}catch(t){n(t)}return this}cancel(){if(this.isSettled())throw new Error("Cannot cancel a settled promise.");return this.canceller?this.canceller(this,this.value):this.silentlyCancelled=!0,this}clearChain(){return this.chain=[],this}isEmpty(){return 0===this.chain.length}isResolved(){return 2===this.state}isRejected(){return 1===this.state}isSettled(){return this.isRejected()||this.isResolved()}reject(t){this.value=t,this.state=1;let n=t;for(let t of this.__error_handlers__)n=t(n);if(!this.anyFor(1))throw t instanceof Error?t.message=`Uncaught Deferred: ${t.message}`:t=new Error(t),t;this.fireCallbacks()}anyFor(t){for(let[,n]of this.chain)if(n===t)return!0;return!1}then(t,n){return"function"==typeof t&&this.addCallback(t,2),"function"==typeof n&&this.addCallback(t,1),this}catch(t){return this.then(null,t)}finally(t){return"function"==typeof t&&this.addCallback(t,3),this}flip(){let t=[];for(let[n,e]of this.chain)1===e?t.push([n,2]):2===e?t.push([n,1]):t.push([n,e]);return this.chain=t,this}addCallback(t,n){if(2!==n&&1!==n&&3!==n)throw new Error("The provided state is not a valid state.");return this.state===n?this.fireCallback(t):this.chain.push([t,n]),this}fireCallbacks(){for(let[t,n]of this.chain)this.correctState(n)&&this.fireCallback(t);return this}correctState(t){return 1===t&&this.isRejected()||2===t&&this.isResolved()||3===t&&this.isSettled()}fireCallback(t){return this.value=t(this.value),this}resolve(t){this.value=t,this.state=2,this.fireCallbacks()}rejectAfter(t,n){return this.actionAfter("reject",t,n)}resolveAfter(t,n){return this.actionAfter("resolve",t,n)}actionAfter(t,n,e){let i=this,r=1===t?"reject":"resolve";setTimeout(function(t){i[r](void 0===e?t:e)},n)}forEach(t){this.then(function(n){let e;if(n&&"number"==typeof(e=n.length)&&isFinite(e))for(let i=0;i<e;++i)t(n[i],i,n);return n})}callbacksFor(t){if(2!==t&&1!==t&&3!==t)throw new Error("The provided state is not a valid state.");let n=[];for(let[e,i]of this.chain)i===t&&n.push(e);return n}clone(){let t=new k(null,this.canceller);return t.chain=this.chain,t.state=this.state,t.__error_handlers__=this.__error_handlers__,t.id=this.id,t.silentlyCancelled=this.silentlyCancelled,t}toPromise(){let t=this;return new Promise(function(n,e){t.tap(n).tapCatch(e)})}tapFinally(t){return this.finally(function(n){return t(n),n})}tap(t){return this.then(function(n){return t(n),n})}tapCatch(t){return 1===this.state?t(this.value):this.__error_handlers__.push(t),this}catchSilent(t){return this.catch(function(){})}}class S{constructor(){this.promises=[]}add(...t){for(let n of t){if(!(n instanceof k))throw new TypeError("Expected a Deferred.");this.promises.push(n)}return this}fire(t){for(let n of this.promises)n.fire(t);return this}succeedAfter(t){for(let n of this.promises)h(n,t);return this}failAfter(t){for(let n of this.promises)c(n,t)}allRejected(){return this.promises.every(t=>t.isRejected())}allResolved(){return this.promises.every(t=>t.isResolved())}allSettled(){return this.promises.every(t=>t.isSettled())}succeedAfterWith(t,n){for(let e of this.promises)setTimeout(()=>e.resolve(n),t);return this}failAfterWith(t,n){for(let e of this.promises)setTimeout(()=>e.reject(n),t);return this}[Symbol.iterator](){return this.promises[Symbol.iterator]()}flip(){for(let t of this.promises)t.flip();return this}first(){return this.promises[0]||null}last(){return this.promises[this.size()-1]||null}isEmpty(){return 0!==this.size()}isNotEmpty(){return!this.isEmpty()}__repr__(){return`DeferredList(${this.size()})`}size(){return this.promises.length}}class R{constructor(t,n){this.time=Date.now(),this.event=t,this.emitter=n}}class D{constructor(){this.messages=[],this.handlers=[],this.collecting=!0,this.onerror=null}on(t,n){return this.handlers.push([t,n]),this}off(t,n){return this.handlers=this.handlers.filter(([e,i])=>i!==n&&e!==t),this}has(t){for(let[n]of this.handlers)if(n===t)return!0;return!1}emitWithGuard(t,n){for(let[e,i]of this.handlers)if(t===e)try{i(this.createMessage(t))}catch(e){n(e),this.onerror&&this.onerror(e,t,i)}return this}emit(t){return this.emitWithGuard(t,t=>{throw t})}createMessage(t){let n=new R(t,this);return this.addMessage(n),this}addMessage(t){return this.collecting&&this.messages.push(t),this}hasHandler(t){for(let[,n]of this.handlers)if(n===t)return!0;return!1}whenEmitted(t){let n=this;return new Promise((e,i)=>{n.on(t,e)})}whenFailed(t){let n=this;return new Promise((e,i)=>{let r=!1;n.emitWithGuard(t,t=>{r=!0,i(t)})})}emitDisposing(t,n){return n?this.emitWithGuard(t,n):this.emit(t),this.dispose(t),this}dispose(t){let n=this.handlers;return this.handlers.forEach(([e],i)=>{e===t&&n.splice(i,1)}),this}removeMessages(t){return this.messages=this.messages.filter(({event:event})=>event!==t),this}anyMessages(){return 0!==this.messages.length}clearMessages(){return this.messages=[],this}isCollecting(){return this.collecting}clearHandlers(){return this.handlers=[],this}anyHandlers(){return 0!==this.handlers.length}pop(){return this.handlers.pop(),this}concat(...t){return this.handlers.concat(...t),this}conjoin(t){let n;for(let e of Object.keys(t))n=t[e],this.on(e,n);return this}conjoinMap(t){let n;for(let e of t.keys())n=t.get(e),this.on(e,n);return this}onArray(t,n){for(let e of n)this.on(t,e);return this}keys(){return this.mapIndex(0)}values(){return this.mapIndex(1)}pairs(){return this.handlers}mapIndex(t){return t=+t,this.handlers.map(n=>n[t])}once(t,n){let e=this;return this.on(t,i=>{e.off(t,n);n(i)})}toObject(){let t={};for(let[n,e]of this.handlers)t[n]=e;return t}emitAfter(t,n){let e=this;return setTimeout(()=>{e.emit(t)},n),this}emitTimes(t,n){for(let e=0;e<n;++e)this.emit(t);return this}emitUntil(t,n,e){for(let i=0;i<e&&n(t,i,e);++i)this.emit(t);return this}messagesAt(t){return this.filterMessages(n=>n.time===t)}messagesBefore(t){return this.filterMessages(n=>n.time<t)}messagesAfter(t){return this.filterMessages(n=>n.time>t)}messagesFor(t){return this.filterMessages(n=>n.event===t)}messagesNotFor(t){return this.filterMessages(n=>n.event!==t)}messagesMatching(t){return this.filterMessages(n=>t.event===n.event&&t.time===n.time)}messagesNotMatching(t){return this.filterMessages(n=>t.event!==n.event&&n.time!==t.time)}messagesMap(){let t,n=new Map;for(let e of this.messages)(t=n.get(e.event))?t.add(e):(n.set(e.event,new WeakSet),n.get(e.event).add(e));return n}pipe(t){for(let[n,e]of this.handlers)t.on(n,e);return t.messages=this.messages,t}filterMessages(t){let n=[];for(let e of this.messages)t(e,n,this)&&n.push(e);return n}}return t.__repr__="[MochiKit.Async]",t.all=n,t.asyncCatch=e,t.asyncThen=i,t.callLater=r,t.catchSilent=s,t.chain=o,t.defer=u,t.Deferred=k,t.DeferredList=S,t.double=f,t.failAfter=c,t.getArrayBuffer=a,t.getBlob=l,t.getForm=d,t.getJSON=m,t.getText=p,t.isAsync=y,t.isPromise=g,t.isThenable=v,t.Message=R,t.MessageEmitter=D,t.prevent=w,t.reject=_,t.resolve=E,t.simpleXHR=b,t.succeedAfter=h,t.tap=T,t.tapFinally=C,t.whenSettled=j,t.PENDING=0,t.REJECTED=1,t.RESOLVED=2,t.SETTLED=3,t}({});
